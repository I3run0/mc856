{"2021.1.15":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.2","Programming Language :: Python :: 3.3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: IronPython","Programming Language :: Python :: Implementation :: Jython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/pukkandan/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":"","project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Homepage":"https://github.com/pukkandan/yt-dlp"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2021.1.15/","requires_dist":null,"requires_python":">=2.6","summary":"Command-line program to download videos from YouTube.com and many other other video platforms.","version":"2021.1.15","yanked":true,"yanked_reason":"pre-production"},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"cfef8f2b29f8cac16d3785ea6a12b18023c5ddddb63f69075b0b77e544bd82ac","md5":"cbcd882e58a4e10548203eb22c9bc599","sha256":"0bce7bbbabb3bd5f1837eae7715cf46f1f4b7b93532fde4d5d8f3045c9456681"},"downloads":-1,"filename":"yt_dlp-2021.1.15-py2.py3-none-any.whl","has_sig":false,"md5_digest":"cbcd882e58a4e10548203eb22c9bc599","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.6","size":1937635,"upload_time":"2021-01-15T18:36:24","upload_time_iso_8601":"2021-01-15T18:36:24.326402Z","url":"https://files.pythonhosted.org/packages/cf/ef/8f2b29f8cac16d3785ea6a12b18023c5ddddb63f69075b0b77e544bd82ac/yt_dlp-2021.1.15-py2.py3-none-any.whl","yanked":true,"yanked_reason":"pre-production"},{"comment_text":"","digests":{"blake2b_256":"b16574a0a8bb50a890b05a843685d6c1c08db3c75948b1467da8a64bfc6f65c8","md5":"31d040823fa17b1c21d2fbc4a1d528e4","sha256":"d27eaaced6c0235e6e006c84d54ad3bc72cbb212f6447d8c98bb130af74a9b9f"},"downloads":-1,"filename":"yt-dlp-2021.1.15.tar.gz","has_sig":false,"md5_digest":"31d040823fa17b1c21d2fbc4a1d528e4","packagetype":"sdist","python_version":"source","requires_python":">=2.6","size":1558745,"upload_time":"2021-01-15T18:36:26","upload_time_iso_8601":"2021-01-15T18:36:26.089592Z","url":"https://files.pythonhosted.org/packages/b1/65/74a0a8bb50a890b05a843685d6c1c08db3c75948b1467da8a64bfc6f65c8/yt-dlp-2021.1.15.tar.gz","yanked":true,"yanked_reason":"pre-production"}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2021.1.15.post1":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.2","Programming Language :: Python :: 3.3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: IronPython","Programming Language :: Python :: Implementation :: Jython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/pukkandan/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":"","project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Homepage":"https://github.com/pukkandan/yt-dlp"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2021.1.15.post1/","requires_dist":null,"requires_python":">=2.6","summary":"Command-line program to download videos from YouTube.com and many other other video platforms.","version":"2021.1.15.post1","yanked":true,"yanked_reason":"pre-production"},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"2eca958035cebfebb96a36d79122f35ed4e9d8427e7377ee94f337e7213eab3a","md5":"b9e54d8e3e37a8c269be2b030bd2c9dc","sha256":"064cb23389b1bd255960914a889e09421da4a56abc252fc79b4ab0df4255aba1"},"downloads":-1,"filename":"yt_dlp-2021.1.15.post1-py2.py3-none-any.whl","has_sig":false,"md5_digest":"b9e54d8e3e37a8c269be2b030bd2c9dc","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.6","size":1937866,"upload_time":"2021-01-15T18:58:23","upload_time_iso_8601":"2021-01-15T18:58:23.035170Z","url":"https://files.pythonhosted.org/packages/2e/ca/958035cebfebb96a36d79122f35ed4e9d8427e7377ee94f337e7213eab3a/yt_dlp-2021.1.15.post1-py2.py3-none-any.whl","yanked":true,"yanked_reason":"pre-production"},{"comment_text":"","digests":{"blake2b_256":"881fde20213b3c99c31073804e8c4d7588bb5f151e7383599eb726edacaed055","md5":"a00ae3f3ed8a28b316432e9e2f6ae60c","sha256":"29eca2e304660d9e5d8e181e9ea9455b92a3fc55ff43da4d66c9b7db005d61d7"},"downloads":-1,"filename":"yt-dlp-2021.1.15.post1.tar.gz","has_sig":false,"md5_digest":"a00ae3f3ed8a28b316432e9e2f6ae60c","packagetype":"sdist","python_version":"source","requires_python":">=2.6","size":1559046,"upload_time":"2021-01-15T18:58:24","upload_time_iso_8601":"2021-01-15T18:58:24.198811Z","url":"https://files.pythonhosted.org/packages/88/1f/de20213b3c99c31073804e8c4d7588bb5f151e7383599eb726edacaed055/yt-dlp-2021.1.15.post1.tar.gz","yanked":true,"yanked_reason":"pre-production"}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2021.1.16":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.2","Programming Language :: Python :: 3.3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: IronPython","Programming Language :: Python :: Implementation :: Jython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/pukkandan/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":"","project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/pukkandan/yt-dlp#yt-dlp","Homepage":"https://github.com/pukkandan/yt-dlp","Source":"https://github.com/pukkandan/yt-dlp","Tracker":"https://github.com/pukkandan/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2021.1.16/","requires_dist":null,"requires_python":">=2.6","summary":"Command-line program to download videos from YouTube.com and many other other video platforms.","version":"2021.1.16","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"60147ea67df839a6536c29d80abbe3a37c0417e25d0b9ade7beacd151b108983","md5":"b3215ed784b3a4aedf166eed07930ade","sha256":"3bc8bb4ab5b789aacdd831877d3228d5fa9cb4f75ae86054fdf3ffe6aab82d25"},"downloads":-1,"filename":"yt_dlp-2021.1.16-py2.py3-none-any.whl","has_sig":false,"md5_digest":"b3215ed784b3a4aedf166eed07930ade","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.6","size":1941468,"upload_time":"2021-01-16T18:57:39","upload_time_iso_8601":"2021-01-16T18:57:39.016653Z","url":"https://files.pythonhosted.org/packages/60/14/7ea67df839a6536c29d80abbe3a37c0417e25d0b9ade7beacd151b108983/yt_dlp-2021.1.16-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"99e89cec790859e281db8e386b12296abf43dbe386d32653f4576b70df991040","md5":"cd42f4e2f6be77534ba35f6208816fe2","sha256":"3152d422d43587a8196633992100952f0a8d59ff52bfd4c1b52642316ed31fbf"},"downloads":-1,"filename":"yt-dlp-2021.1.16.tar.gz","has_sig":false,"md5_digest":"cd42f4e2f6be77534ba35f6208816fe2","packagetype":"sdist","python_version":"source","requires_python":">=2.6","size":1563660,"upload_time":"2021-01-16T18:57:40","upload_time_iso_8601":"2021-01-16T18:57:40.554402Z","url":"https://files.pythonhosted.org/packages/99/e8/9cec790859e281db8e386b12296abf43dbe386d32653f4576b70df991040/yt-dlp-2021.1.16.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2021.1.20":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.2","Programming Language :: Python :: 3.3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: IronPython","Programming Language :: Python :: Implementation :: Jython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/pukkandan/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":"","project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/pukkandan/yt-dlp#yt-dlp","Homepage":"https://github.com/pukkandan/yt-dlp","Source":"https://github.com/pukkandan/yt-dlp","Tracker":"https://github.com/pukkandan/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2021.1.20/","requires_dist":null,"requires_python":">=2.6","summary":"Command-line program to download videos from YouTube.com and many other other video platforms.","version":"2021.1.20","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"3302c1516c9a5be691a91c421dc538b5f3abdd98bc067a3ebdb5062db771c848","md5":"63366fdd71dbae14c3705933fb9a56ac","sha256":"8c49c0670c9c4788aa58e5e8a1fa739c9425c4f5597aa063dfa531ca79013165"},"downloads":-1,"filename":"yt_dlp-2021.1.20-py2.py3-none-any.whl","has_sig":false,"md5_digest":"63366fdd71dbae14c3705933fb9a56ac","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.6","size":1944821,"upload_time":"2021-01-20T21:26:54","upload_time_iso_8601":"2021-01-20T21:26:54.340758Z","url":"https://files.pythonhosted.org/packages/33/02/c1516c9a5be691a91c421dc538b5f3abdd98bc067a3ebdb5062db771c848/yt_dlp-2021.1.20-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"08091ff1fa19afde68100bfd719867d1d628946ed4c0eea3cf4455ac13a80ced","md5":"191d8d09625635477d690354084bb55f","sha256":"92295e89f937cc6ddb04a28f3f647fbeb7ddcc108abe3d7666ad0214c49ec164"},"downloads":-1,"filename":"yt-dlp-2021.1.20.tar.gz","has_sig":false,"md5_digest":"191d8d09625635477d690354084bb55f","packagetype":"sdist","python_version":"source","requires_python":">=2.6","size":1567314,"upload_time":"2021-01-20T21:26:55","upload_time_iso_8601":"2021-01-20T21:26:55.927386Z","url":"https://files.pythonhosted.org/packages/08/09/1ff1fa19afde68100bfd719867d1d628946ed4c0eea3cf4455ac13a80ced/yt-dlp-2021.1.20.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2021.1.24":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.2","Programming Language :: Python :: 3.3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: IronPython","Programming Language :: Python :: Implementation :: Jython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/pukkandan/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":"","project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/pukkandan/yt-dlp#yt-dlp","Homepage":"https://github.com/pukkandan/yt-dlp","Source":"https://github.com/pukkandan/yt-dlp","Tracker":"https://github.com/pukkandan/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2021.1.24/","requires_dist":null,"requires_python":">=2.6","summary":"Command-line program to download videos from YouTube.com and many other other video platforms.","version":"2021.1.24","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"b7bb3b2152e34685a20d04b5f3c88ec74653a0fb89455e86c72e0373e12dc7fe","md5":"e18840fcd43eb2325c8cee104e10d49d","sha256":"c7a6dd53e20e00d461baf1910fc52d3e0278526a32c1c50379b14ce074d891f5"},"downloads":-1,"filename":"yt_dlp-2021.1.24-py2.py3-none-any.whl","has_sig":false,"md5_digest":"e18840fcd43eb2325c8cee104e10d49d","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.6","size":1956192,"upload_time":"2021-01-24T16:04:28","upload_time_iso_8601":"2021-01-24T16:04:28.700947Z","url":"https://files.pythonhosted.org/packages/b7/bb/3b2152e34685a20d04b5f3c88ec74653a0fb89455e86c72e0373e12dc7fe/yt_dlp-2021.1.24-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"2262ee30a62f069c6d53be00daf14e32ab665c53e0882094c7d26d9ac106e338","md5":"5a0d096a2a038bf80f3a055777a4e7bb","sha256":"8ad974705bf0d291e49f3700e0575fc0f479df84acb07b0fab78b8b27e706972"},"downloads":-1,"filename":"yt-dlp-2021.1.24.tar.gz","has_sig":false,"md5_digest":"5a0d096a2a038bf80f3a055777a4e7bb","packagetype":"sdist","python_version":"source","requires_python":">=2.6","size":1576484,"upload_time":"2021-01-24T16:04:29","upload_time_iso_8601":"2021-01-24T16:04:29.913609Z","url":"https://files.pythonhosted.org/packages/22/62/ee30a62f069c6d53be00daf14e32ab665c53e0882094c7d26d9ac106e338/yt-dlp-2021.1.24.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2021.1.24.post1":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.2","Programming Language :: Python :: 3.3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: IronPython","Programming Language :: Python :: Implementation :: Jython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/pukkandan/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":"","project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/pukkandan/yt-dlp#yt-dlp","Homepage":"https://github.com/pukkandan/yt-dlp","Source":"https://github.com/pukkandan/yt-dlp","Tracker":"https://github.com/pukkandan/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2021.1.24.post1/","requires_dist":null,"requires_python":">=2.6","summary":"Command-line program to download videos from YouTube.com and many other other video platforms.","version":"2021.1.24.post1","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"a4ce0278a98cf77cb2a54ea99d4061e004c01ff1b2965da17a70c8929cb2bf37","md5":"3c132a491ac410a1baa12abd56f725be","sha256":"fddf7ad778814582ba9c90cf5679c9279049be99bad139240a1c0dfa3793a950"},"downloads":-1,"filename":"yt_dlp-2021.1.24.post1-py2.py3-none-any.whl","has_sig":false,"md5_digest":"3c132a491ac410a1baa12abd56f725be","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.6","size":1956374,"upload_time":"2021-01-24T20:12:08","upload_time_iso_8601":"2021-01-24T20:12:08.538164Z","url":"https://files.pythonhosted.org/packages/a4/ce/0278a98cf77cb2a54ea99d4061e004c01ff1b2965da17a70c8929cb2bf37/yt_dlp-2021.1.24.post1-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"e8a5b22012f2fe04ef23764f54a6d4b3393b3f12668a1e0195513e3ca01e39c4","md5":"d1767e418693ef34b0f5c75775c4e73c","sha256":"cfa4ca18d8f86cf5c29e820b0280a8199daa50e541e0f92fc5d2844fac538b1a"},"downloads":-1,"filename":"yt-dlp-2021.1.24.post1.tar.gz","has_sig":false,"md5_digest":"d1767e418693ef34b0f5c75775c4e73c","packagetype":"sdist","python_version":"source","requires_python":">=2.6","size":1576753,"upload_time":"2021-01-24T20:12:09","upload_time_iso_8601":"2021-01-24T20:12:09.990082Z","url":"https://files.pythonhosted.org/packages/e8/a5/b22012f2fe04ef23764f54a6d4b3393b3f12668a1e0195513e3ca01e39c4/yt-dlp-2021.1.24.post1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2021.1.29":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.2","Programming Language :: Python :: 3.3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: IronPython","Programming Language :: Python :: Implementation :: Jython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/pukkandan/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":"","project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/pukkandan/yt-dlp#yt-dlp","Homepage":"https://github.com/pukkandan/yt-dlp","Source":"https://github.com/pukkandan/yt-dlp","Tracker":"https://github.com/pukkandan/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2021.1.29/","requires_dist":["mutagen"],"requires_python":">=2.6","summary":"Command-line program to download videos from YouTube.com and many other other video platforms.","version":"2021.1.29","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"1eaaa27b83e4c51f848e225d27b84c63b1efd34ae2ed9194a216f26cacc4bb15","md5":"431628bc41db7a1a6d383d08aa8ab795","sha256":"83d7d437b966fabd10283d7f7c4af86e01e0a9c80013227c965b8f20e543d5b5"},"downloads":-1,"filename":"yt_dlp-2021.1.29-py2.py3-none-any.whl","has_sig":false,"md5_digest":"431628bc41db7a1a6d383d08aa8ab795","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.6","size":1967162,"upload_time":"2021-01-29T17:58:51","upload_time_iso_8601":"2021-01-29T17:58:51.184451Z","url":"https://files.pythonhosted.org/packages/1e/aa/a27b83e4c51f848e225d27b84c63b1efd34ae2ed9194a216f26cacc4bb15/yt_dlp-2021.1.29-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"5057d6138640e8033f08e3e34ab24efac468b5ff211e5bc47f3bfcbf4fd50c53","md5":"3ac75230bb314a1731d15090c5a4c399","sha256":"7bcef94451fb9f5534169716aaf1286d509ea96fad0ce8e92ed74e5621219071"},"downloads":-1,"filename":"yt-dlp-2021.1.29.tar.gz","has_sig":false,"md5_digest":"3ac75230bb314a1731d15090c5a4c399","packagetype":"sdist","python_version":"source","requires_python":">=2.6","size":1587675,"upload_time":"2021-01-29T17:58:52","upload_time_iso_8601":"2021-01-29T17:58:52.734456Z","url":"https://files.pythonhosted.org/packages/50/57/d6138640e8033f08e3e34ab24efac468b5ff211e5bc47f3bfcbf4fd50c53/yt-dlp-2021.1.29.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2021.10.10":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":"","project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://yt-dlp.readthedocs.io","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2021.10.10/","requires_dist":["mutagen","pycryptodomex","websockets"],"requires_python":">=3.6","summary":"Command-line program to download videos from YouTube.com and many other other video platforms.","version":"2021.10.10","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"1c2568fb7bfda1c95501461a20ab1ba24c20e20f372743686abed63b816f2a2f","md5":"0b8b4d43c2af7a8ccb4250536f9cf137","sha256":"6dbf58013226b5400b77188dcd75038685a42f505d143d531156045f96af4440"},"downloads":-1,"filename":"yt_dlp-2021.10.10-py2.py3-none-any.whl","has_sig":false,"md5_digest":"0b8b4d43c2af7a8ccb4250536f9cf137","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.6","size":2221285,"upload_time":"2021-10-10T04:03:32","upload_time_iso_8601":"2021-10-10T04:03:32.241515Z","url":"https://files.pythonhosted.org/packages/1c/25/68fb7bfda1c95501461a20ab1ba24c20e20f372743686abed63b816f2a2f/yt_dlp-2021.10.10-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"83c330c12eab2c20dcb8609be38d235a21990228446f0dea2a1d5afc8b1a5d9a","md5":"6d3cc563b08732faf9547784327b663f","sha256":"cc96211e8e55ebbb48d2e6609c0d0942507eb5471b2ce74e38f7b95f8d70a4e7"},"downloads":-1,"filename":"yt-dlp-2021.10.10.tar.gz","has_sig":false,"md5_digest":"6d3cc563b08732faf9547784327b663f","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":1913112,"upload_time":"2021-10-10T04:03:34","upload_time_iso_8601":"2021-10-10T04:03:34.508646Z","url":"https://files.pythonhosted.org/packages/83/c3/30c12eab2c20dcb8609be38d235a21990228446f0dea2a1d5afc8b1a5d9a/yt-dlp-2021.10.10.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2021.10.22":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":"","project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://yt-dlp.readthedocs.io","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2021.10.22/","requires_dist":["mutagen","pycryptodomex","websockets"],"requires_python":">=3.6","summary":"Command-line program to download videos from YouTube.com and many other other video platforms.","version":"2021.10.22","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"30462a24215f57e1c44d3dee7ec217b8975f5b69a14af062e6cb10551131bba3","md5":"383759bee32e8bdf45a4184245614b53","sha256":"4900fdfffa3de0b09a74f3d7fe98e4d5e21f3ce74db0c106c942614f2ebc3368"},"downloads":-1,"filename":"yt_dlp-2021.10.22-py2.py3-none-any.whl","has_sig":false,"md5_digest":"383759bee32e8bdf45a4184245614b53","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.6","size":2318245,"upload_time":"2021-10-22T20:47:36","upload_time_iso_8601":"2021-10-22T20:47:36.644137Z","url":"https://files.pythonhosted.org/packages/30/46/2a24215f57e1c44d3dee7ec217b8975f5b69a14af062e6cb10551131bba3/yt_dlp-2021.10.22-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"970b1008dffd196cf6a1f143005b566397f71fb1e767c8e788ea230ae35457b7","md5":"578176d33f5c4e47c148b04593946403","sha256":"a24b9666bd2234149e4da8c4f16bb8e5f746c29428d12ee04fc1c11b5247a307"},"downloads":-1,"filename":"yt-dlp-2021.10.22.tar.gz","has_sig":false,"md5_digest":"578176d33f5c4e47c148b04593946403","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":2010916,"upload_time":"2021-10-22T20:47:38","upload_time_iso_8601":"2021-10-22T20:47:38.593223Z","url":"https://files.pythonhosted.org/packages/97/0b/1008dffd196cf6a1f143005b566397f71fb1e767c8e788ea230ae35457b7/yt-dlp-2021.10.22.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2021.10.9":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":"","project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://yt-dlp.readthedocs.io","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2021.10.9/","requires_dist":["mutagen","pycryptodomex","websockets"],"requires_python":">=3.6","summary":"Command-line program to download videos from YouTube.com and many other other video platforms.","version":"2021.10.9","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"cb2891cc509cd8d61e4f3b57d733afe281c17fd406dcabbd411c3ada9fab8981","md5":"87ecd99596cf16723f27d482397ba91b","sha256":"07fde3b6067335a46f8f67a92ed620cceaaf49203c832d212b8e04d7638b1f2b"},"downloads":-1,"filename":"yt_dlp-2021.10.9-py2.py3-none-any.whl","has_sig":false,"md5_digest":"87ecd99596cf16723f27d482397ba91b","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.6","size":2221643,"upload_time":"2021-10-09T19:11:40","upload_time_iso_8601":"2021-10-09T19:11:40.770365Z","url":"https://files.pythonhosted.org/packages/cb/28/91cc509cd8d61e4f3b57d733afe281c17fd406dcabbd411c3ada9fab8981/yt_dlp-2021.10.9-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"ee8c559a72b790e20660dd71bf8d7e638cb811d7df41c11f335b17d358546126","md5":"d3dc388124f951fa837e74fc909ff13d","sha256":"dc6c290ac208b2feda5c6760c20883d9c8128da37630a72894a63b08cf411f29"},"downloads":-1,"filename":"yt-dlp-2021.10.9.tar.gz","has_sig":false,"md5_digest":"d3dc388124f951fa837e74fc909ff13d","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":1913450,"upload_time":"2021-10-09T19:11:42","upload_time_iso_8601":"2021-10-09T19:11:42.906985Z","url":"https://files.pythonhosted.org/packages/ee/8c/559a72b790e20660dd71bf8d7e638cb811d7df41c11f335b17d358546126/yt-dlp-2021.10.9.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2021.11.10":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":"","project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://yt-dlp.readthedocs.io","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2021.11.10/","requires_dist":["mutagen","pycryptodomex","websockets"],"requires_python":">=3.6","summary":"A youtube-dl fork with additional features and patches","version":"2021.11.10","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"da118e4900067663742e0c74155d53c020efd1e42fcc14ff2410c01df9cd08df","md5":"dee3fcf90a71ec49f9b30669a9e2eeae","sha256":"f879ca9559faf9ee5a086c6a87c42357b0bdc923225aeb9e0ce96355b62e7326"},"downloads":-1,"filename":"yt_dlp-2021.11.10-py2.py3-none-any.whl","has_sig":false,"md5_digest":"dee3fcf90a71ec49f9b30669a9e2eeae","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.6","size":2350894,"upload_time":"2021-11-10T01:14:52","upload_time_iso_8601":"2021-11-10T01:14:52.597021Z","url":"https://files.pythonhosted.org/packages/da/11/8e4900067663742e0c74155d53c020efd1e42fcc14ff2410c01df9cd08df/yt_dlp-2021.11.10-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"2e2070e3868bdd6113adc9e39ed57d74831b8b98cc98716c67b247f08c2997b1","md5":"2b53ec83121940f4be25112ef6153ff9","sha256":"0fed1cf4a73812b1f2059861b998be21f79319a11a83e1b9ae58bd61c109bf85"},"downloads":-1,"filename":"yt-dlp-2021.11.10.tar.gz","has_sig":false,"md5_digest":"2b53ec83121940f4be25112ef6153ff9","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":2042143,"upload_time":"2021-11-10T01:14:54","upload_time_iso_8601":"2021-11-10T01:14:54.983395Z","url":"https://files.pythonhosted.org/packages/2e/20/70e3868bdd6113adc9e39ed57d74831b8b98cc98716c67b247f08c2997b1/yt-dlp-2021.11.10.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2021.11.10.1":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":"","project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://yt-dlp.readthedocs.io","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2021.11.10.1/","requires_dist":["mutagen","pycryptodomex","websockets"],"requires_python":">=3.6","summary":"A youtube-dl fork with additional features and patches","version":"2021.11.10.1","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"5e2a3cbe2e29926784d8718eb2f92357d7e22caf393f24e19287746076ffc9f2","md5":"d3d51cd15f867cd88b277794312dfd07","sha256":"9c3d85fdeeac3d61cfc85fd72d55fe6b63fcf1d19d05e2841cf2e544922ed157"},"downloads":-1,"filename":"yt_dlp-2021.11.10.1-py2.py3-none-any.whl","has_sig":false,"md5_digest":"d3d51cd15f867cd88b277794312dfd07","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.6","size":2350949,"upload_time":"2021-11-10T01:47:31","upload_time_iso_8601":"2021-11-10T01:47:31.697324Z","url":"https://files.pythonhosted.org/packages/5e/2a/3cbe2e29926784d8718eb2f92357d7e22caf393f24e19287746076ffc9f2/yt_dlp-2021.11.10.1-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"76de7eda54327dae4d7e917e02a1e49c4fd343e59a7ce4ae259df96f2cc7b4ea","md5":"4d29dde27ed0adf03baea71d01d85534","sha256":"f0ad6ae2e2838b608df2fd125f2a777a7ad832d3e757ee6d4583b84b21e44388"},"downloads":-1,"filename":"yt-dlp-2021.11.10.1.tar.gz","has_sig":false,"md5_digest":"4d29dde27ed0adf03baea71d01d85534","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":2042241,"upload_time":"2021-11-10T01:47:33","upload_time_iso_8601":"2021-11-10T01:47:33.605631Z","url":"https://files.pythonhosted.org/packages/76/de/7eda54327dae4d7e917e02a1e49c4fd343e59a7ce4ae259df96f2cc7b4ea/yt-dlp-2021.11.10.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2021.12.1":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":"","project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://yt-dlp.readthedocs.io","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2021.12.1/","requires_dist":["mutagen","pycryptodomex","websockets"],"requires_python":">=3.6","summary":"A youtube-dl fork with additional features and patches","version":"2021.12.1","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"0fccc31d3561b536752c779c4a7c4a12809ab2f50af082b6927fc6cf871bb9e7","md5":"17b2448fa7a82378e3b2563552f4e9cf","sha256":"78bca71906c40a69dcdd9b5a07b736c73579e1b166ebe70c9f93cdcd03e1c757"},"downloads":-1,"filename":"yt_dlp-2021.12.1-py2.py3-none-any.whl","has_sig":false,"md5_digest":"17b2448fa7a82378e3b2563552f4e9cf","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.6","size":2376105,"upload_time":"2021-12-01T00:23:50","upload_time_iso_8601":"2021-12-01T00:23:50.268453Z","url":"https://files.pythonhosted.org/packages/0f/cc/c31d3561b536752c779c4a7c4a12809ab2f50af082b6927fc6cf871bb9e7/yt_dlp-2021.12.1-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"93889de761e0eeb671c821fd5ffcf2c8fa552286da5ced0cfffba2005733f818","md5":"be71c0d002e2b8ed22a8b1f5038716d6","sha256":"58da5b96d4834fe8130c960b9dfd670cd2d0e53b650cd92e5c4381724151b80f"},"downloads":-1,"filename":"yt-dlp-2021.12.1.tar.gz","has_sig":false,"md5_digest":"be71c0d002e2b8ed22a8b1f5038716d6","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":2064958,"upload_time":"2021-12-01T00:23:52","upload_time_iso_8601":"2021-12-01T00:23:52.283556Z","url":"https://files.pythonhosted.org/packages/93/88/9de761e0eeb671c821fd5ffcf2c8fa552286da5ced0cfffba2005733f818/yt-dlp-2021.12.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2021.12.25":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":"","project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://yt-dlp.readthedocs.io","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2021.12.25/","requires_dist":["mutagen","pycryptodomex","websockets"],"requires_python":">=3.6","summary":"A youtube-dl fork with additional features and patches","version":"2021.12.25","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"0132cd84b1907fb1d3697687eb6ff32e2f49f034e627d7fba00e11e750d4e239","md5":"8ac1b499fb976ee465060d4c1a8a0d3f","sha256":"293db3eaace20de8e1113291450373df4083b8418cf6f121c57a5f6448d36ca8"},"downloads":-1,"filename":"yt_dlp-2021.12.25-py2.py3-none-any.whl","has_sig":false,"md5_digest":"8ac1b499fb976ee465060d4c1a8a0d3f","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.6","size":2406357,"upload_time":"2021-12-25T00:34:34","upload_time_iso_8601":"2021-12-25T00:34:34.718674Z","url":"https://files.pythonhosted.org/packages/01/32/cd84b1907fb1d3697687eb6ff32e2f49f034e627d7fba00e11e750d4e239/yt_dlp-2021.12.25-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"cf8d55cd397fcba29bbf7fce474d9a6caeeba842a868d274baface65117317d9","md5":"cb74a7709946c900d8fdaa027bab0313","sha256":"87c13517c55510cfaca8617260de376029035dbc2f8715a7426ba5652e8fe212"},"downloads":-1,"filename":"yt-dlp-2021.12.25.tar.gz","has_sig":false,"md5_digest":"cb74a7709946c900d8fdaa027bab0313","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":2096136,"upload_time":"2021-12-25T00:34:36","upload_time_iso_8601":"2021-12-25T00:34:36.694711Z","url":"https://files.pythonhosted.org/packages/cf/8d/55cd397fcba29bbf7fce474d9a6caeeba842a868d274baface65117317d9/yt-dlp-2021.12.25.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2021.12.27":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":"","project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://yt-dlp.readthedocs.io","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2021.12.27/","requires_dist":["mutagen","pycryptodomex","websockets"],"requires_python":">=3.6","summary":"A youtube-dl fork with additional features and patches","version":"2021.12.27","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"277e5bf52a334a0638639b57b7699e6a3adaaaa8e7bd6f7ad33e62a9e2be7bb7","md5":"0be0a41a32dfc7a6c6531f44a4e8f394","sha256":"bb46898a175d149c9c6bb2846056590d297aa4eafad8487c3e1315d2c6090896"},"downloads":-1,"filename":"yt_dlp-2021.12.27-py2.py3-none-any.whl","has_sig":false,"md5_digest":"0be0a41a32dfc7a6c6531f44a4e8f394","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.6","size":2412959,"upload_time":"2021-12-27T02:31:00","upload_time_iso_8601":"2021-12-27T02:31:00.840710Z","url":"https://files.pythonhosted.org/packages/27/7e/5bf52a334a0638639b57b7699e6a3adaaaa8e7bd6f7ad33e62a9e2be7bb7/yt_dlp-2021.12.27-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"e0c51748e553776f00057fb4b0f648eb22b7e0d58a3c062d2d4a6b8aba72fb4e","md5":"c5732039a5d427d73fe91b9a8790b239","sha256":"2244df3759751487e796b23b67216bee98e70832a3a43c2526b0b0e0bbfbcb5b"},"downloads":-1,"filename":"yt-dlp-2021.12.27.tar.gz","has_sig":false,"md5_digest":"c5732039a5d427d73fe91b9a8790b239","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":2102852,"upload_time":"2021-12-27T02:31:02","upload_time_iso_8601":"2021-12-27T02:31:02.775003Z","url":"https://files.pythonhosted.org/packages/e0/c5/1748e553776f00057fb4b0f648eb22b7e0d58a3c062d2d4a6b8aba72fb4e/yt-dlp-2021.12.27.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2021.2.15":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.2","Programming Language :: Python :: 3.3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: IronPython","Programming Language :: Python :: Implementation :: Jython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/pukkandan/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":"","project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/pukkandan/yt-dlp#yt-dlp","Homepage":"https://github.com/pukkandan/yt-dlp","Source":"https://github.com/pukkandan/yt-dlp","Tracker":"https://github.com/pukkandan/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2021.2.15/","requires_dist":["mutagen","pycryptodome"],"requires_python":">=2.6","summary":"Command-line program to download videos from YouTube.com and many other other video platforms.","version":"2021.2.15","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"d22418295f74025d665816180a9a7a2e9f0d7c3cea908181fef469084c91a080","md5":"02c8873262d3ba0e87aab0e3deb120b9","sha256":"e8d814afd980fe1f53d2cbf1112ee78428e496c0de11e043d5545b5649bd8896"},"downloads":-1,"filename":"yt_dlp-2021.2.15-py2.py3-none-any.whl","has_sig":false,"md5_digest":"02c8873262d3ba0e87aab0e3deb120b9","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.6","size":1973514,"upload_time":"2021-02-15T22:50:44","upload_time_iso_8601":"2021-02-15T22:50:44.270237Z","url":"https://files.pythonhosted.org/packages/d2/24/18295f74025d665816180a9a7a2e9f0d7c3cea908181fef469084c91a080/yt_dlp-2021.2.15-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"85cca8117ee6a86df0d689c8148f644c4087a4afa1047ed8143d34a951c7c6c5","md5":"7bbe718a0f25ac7eb49416e5ecdb3877","sha256":"23d639fb42abe52ef0b8b04b38cfb00586cd3bc35cbee9184a0418041c99e8d7"},"downloads":-1,"filename":"yt-dlp-2021.2.15.tar.gz","has_sig":false,"md5_digest":"7bbe718a0f25ac7eb49416e5ecdb3877","packagetype":"sdist","python_version":"source","requires_python":">=2.6","size":1589363,"upload_time":"2021-02-15T22:50:46","upload_time_iso_8601":"2021-02-15T22:50:46.050373Z","url":"https://files.pythonhosted.org/packages/85/cc/a8117ee6a86df0d689c8148f644c4087a4afa1047ed8143d34a951c7c6c5/yt-dlp-2021.2.15.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2021.2.19":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.2","Programming Language :: Python :: 3.3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: IronPython","Programming Language :: Python :: Implementation :: Jython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/pukkandan/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":"","project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/pukkandan/yt-dlp#yt-dlp","Homepage":"https://github.com/pukkandan/yt-dlp","Source":"https://github.com/pukkandan/yt-dlp","Tracker":"https://github.com/pukkandan/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2021.2.19/","requires_dist":["mutagen","pycryptodome"],"requires_python":">=2.6","summary":"Command-line program to download videos from YouTube.com and many other other video platforms.","version":"2021.2.19","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"581ab014e3cf3e648a04c084b3b0109ec25a2416be4a8874ecdebf606e153afe","md5":"c38582e5aaabdf7b6cdf3eff810eed10","sha256":"5989b044fcb3de2fcee83405c092f3a7b700c3ffe69d0e14bb92dc2446f266ea"},"downloads":-1,"filename":"yt_dlp-2021.2.19-py2.py3-none-any.whl","has_sig":false,"md5_digest":"c38582e5aaabdf7b6cdf3eff810eed10","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.6","size":1982120,"upload_time":"2021-02-19T21:47:23","upload_time_iso_8601":"2021-02-19T21:47:23.918484Z","url":"https://files.pythonhosted.org/packages/58/1a/b014e3cf3e648a04c084b3b0109ec25a2416be4a8874ecdebf606e153afe/yt_dlp-2021.2.19-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"a044744bc82bbc208e327cb89756da6e400a89a03380e5848e38b14a51cb57ea","md5":"5fcc33fae2a41e39c1d170cefe9ac747","sha256":"c7ad4e5e2301419b1f790fa00da90740cd3fe0d46e88bd88333fe980b2170599"},"downloads":-1,"filename":"yt-dlp-2021.2.19.tar.gz","has_sig":false,"md5_digest":"5fcc33fae2a41e39c1d170cefe9ac747","packagetype":"sdist","python_version":"source","requires_python":">=2.6","size":1595883,"upload_time":"2021-02-19T21:47:25","upload_time_iso_8601":"2021-02-19T21:47:25.491342Z","url":"https://files.pythonhosted.org/packages/a0/44/744bc82bbc208e327cb89756da6e400a89a03380e5848e38b14a51cb57ea/yt-dlp-2021.2.19.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2021.2.24":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.2","Programming Language :: Python :: 3.3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: IronPython","Programming Language :: Python :: Implementation :: Jython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":"","project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://yt-dlp.readthedocs.io","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2021.2.24/","requires_dist":["mutagen","pycryptodome"],"requires_python":">=2.6","summary":"Command-line program to download videos from YouTube.com and many other other video platforms.","version":"2021.2.24","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"75f00fec660b472732881496c8f9fc0a91fb9f9820f46f140d5601d1d733657e","md5":"85ee62ce5f3ebb6bc868d581ce1c0ea6","sha256":"af74480d21e7b455d6accc100c62209f86f389d738808538e19a03b39ee5d4bc"},"downloads":-1,"filename":"yt_dlp-2021.2.24-py2.py3-none-any.whl","has_sig":false,"md5_digest":"85ee62ce5f3ebb6bc868d581ce1c0ea6","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.6","size":1978775,"upload_time":"2021-02-24T21:13:22","upload_time_iso_8601":"2021-02-24T21:13:22.808246Z","url":"https://files.pythonhosted.org/packages/75/f0/0fec660b472732881496c8f9fc0a91fb9f9820f46f140d5601d1d733657e/yt_dlp-2021.2.24-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"942be6afa4a88276808321960b52777780ddd7d4e6a2e2783df210ad34523089","md5":"f891c60b82c374246b91c7417d6b958c","sha256":"fbe22dd0b2b372d62717ee3082d00dead2ec67fb5ff66061786cbcde8f79727b"},"downloads":-1,"filename":"yt-dlp-2021.2.24.tar.gz","has_sig":false,"md5_digest":"f891c60b82c374246b91c7417d6b958c","packagetype":"sdist","python_version":"source","requires_python":">=2.6","size":1596592,"upload_time":"2021-02-24T21:13:24","upload_time_iso_8601":"2021-02-24T21:13:24.230572Z","url":"https://files.pythonhosted.org/packages/94/2b/e6afa4a88276808321960b52777780ddd7d4e6a2e2783df210ad34523089/yt-dlp-2021.2.24.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2021.2.4":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.2","Programming Language :: Python :: 3.3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: IronPython","Programming Language :: Python :: Implementation :: Jython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/pukkandan/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":"","project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/pukkandan/yt-dlp#yt-dlp","Homepage":"https://github.com/pukkandan/yt-dlp","Source":"https://github.com/pukkandan/yt-dlp","Tracker":"https://github.com/pukkandan/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2021.2.4/","requires_dist":["mutagen"],"requires_python":">=2.6","summary":"Command-line program to download videos from YouTube.com and many other other video platforms.","version":"2021.2.4","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"0c1842fa21a0eb8c09adf99732e2ccd0a15c2ff01c04e2fc1b653aec78933286","md5":"5466b38a25624ba53b8368d5e758d210","sha256":"9333b327ef93dce1a12b6165c18e0be820d43d34d4317c73564ae23a4e8e49d4"},"downloads":-1,"filename":"yt_dlp-2021.2.4-py2.py3-none-any.whl","has_sig":false,"md5_digest":"5466b38a25624ba53b8368d5e758d210","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.6","size":1966149,"upload_time":"2021-02-04T23:24:34","upload_time_iso_8601":"2021-02-04T23:24:34.818672Z","url":"https://files.pythonhosted.org/packages/0c/18/42fa21a0eb8c09adf99732e2ccd0a15c2ff01c04e2fc1b653aec78933286/yt_dlp-2021.2.4-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f7f5e82467d24151eac1c9da185bd91e214e3e075fd26b1781e939d049593cb9","md5":"30f51022b0ab75a813298f469ac2a1cc","sha256":"c6aa0be4c7a0dbec93b45788635c4261c063bc219057a97c3b20938fa7077ba0"},"downloads":-1,"filename":"yt-dlp-2021.2.4.tar.gz","has_sig":false,"md5_digest":"30f51022b0ab75a813298f469ac2a1cc","packagetype":"sdist","python_version":"source","requires_python":">=2.6","size":1581752,"upload_time":"2021-02-04T23:24:36","upload_time_iso_8601":"2021-02-04T23:24:36.107328Z","url":"https://files.pythonhosted.org/packages/f7/f5/e82467d24151eac1c9da185bd91e214e3e075fd26b1781e939d049593cb9/yt-dlp-2021.2.4.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2021.2.9":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.2","Programming Language :: Python :: 3.3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: IronPython","Programming Language :: Python :: Implementation :: Jython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/pukkandan/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":"","project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/pukkandan/yt-dlp#yt-dlp","Homepage":"https://github.com/pukkandan/yt-dlp","Source":"https://github.com/pukkandan/yt-dlp","Tracker":"https://github.com/pukkandan/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2021.2.9/","requires_dist":["mutagen","Crypto"],"requires_python":">=2.6","summary":"Command-line program to download videos from YouTube.com and many other other video platforms.","version":"2021.2.9","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"5b4f58b730af53eb9f4326728a903a70c284ef18829af0cdbf2e93fa0213bf04","md5":"0b1d075b2849bb0e4bf1729a91227ed1","sha256":"c37bcffa3956bceb5561550ad668367a2d17dc7027e334b89846b7edd82256d0"},"downloads":-1,"filename":"yt_dlp-2021.2.9-py2.py3-none-any.whl","has_sig":false,"md5_digest":"0b1d075b2849bb0e4bf1729a91227ed1","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.6","size":1967571,"upload_time":"2021-02-09T20:01:08","upload_time_iso_8601":"2021-02-09T20:01:08.732868Z","url":"https://files.pythonhosted.org/packages/5b/4f/58b730af53eb9f4326728a903a70c284ef18829af0cdbf2e93fa0213bf04/yt_dlp-2021.2.9-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"5962ee7e98511a39420c06f994b966340ea8aeb6b0d33f6e8564304b2a199a93","md5":"38455d0fc3d03c18c2fbd7d01dd38a2d","sha256":"3d40d2661d90c23b6965a605b9d8875d3c48681af5408fbe91be510482e3e782"},"downloads":-1,"filename":"yt-dlp-2021.2.9.tar.gz","has_sig":false,"md5_digest":"38455d0fc3d03c18c2fbd7d01dd38a2d","packagetype":"sdist","python_version":"source","requires_python":">=2.6","size":1583404,"upload_time":"2021-02-09T20:01:10","upload_time_iso_8601":"2021-02-09T20:01:10.009536Z","url":"https://files.pythonhosted.org/packages/59/62/ee7e98511a39420c06f994b966340ea8aeb6b0d33f6e8564304b2a199a93/yt-dlp-2021.2.9.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2021.3.1":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.2","Programming Language :: Python :: 3.3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: IronPython","Programming Language :: Python :: Implementation :: Jython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":"","project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://yt-dlp.readthedocs.io","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2021.3.1/","requires_dist":["mutagen","pycryptodome"],"requires_python":">=2.6","summary":"Command-line program to download videos from YouTube.com and many other other video platforms.","version":"2021.3.1","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"8e7a7487913e10e1e0dfa1035ede318dd2d37e20347745eb8f8adaa6b346d041","md5":"abc8bbb16fc3e8b63cfdb2baeca8a002","sha256":"529a0ccb9d1a3a0abdea043d411e59a3c033cb87ae304986589dd3e931a5d7c8"},"downloads":-1,"filename":"yt_dlp-2021.3.1-py2.py3-none-any.whl","has_sig":false,"md5_digest":"abc8bbb16fc3e8b63cfdb2baeca8a002","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.6","size":1969869,"upload_time":"2021-03-01T00:11:37","upload_time_iso_8601":"2021-03-01T00:11:37.674314Z","url":"https://files.pythonhosted.org/packages/8e/7a/7487913e10e1e0dfa1035ede318dd2d37e20347745eb8f8adaa6b346d041/yt_dlp-2021.3.1-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"59c3e636c7cfd895c38e2c1f2f21d81f2d0c24a64778c4ed27b88ce963faf82b","md5":"56561db12ba81d43187a4babfb379584","sha256":"3755d90dd7e047f62966e30ed51167d66515c758fab65c4bc9067b2d26b59348"},"downloads":-1,"filename":"yt-dlp-2021.3.1.tar.gz","has_sig":false,"md5_digest":"56561db12ba81d43187a4babfb379584","packagetype":"sdist","python_version":"source","requires_python":">=2.6","size":1589560,"upload_time":"2021-03-01T00:11:39","upload_time_iso_8601":"2021-03-01T00:11:39.271222Z","url":"https://files.pythonhosted.org/packages/59/c3/e636c7cfd895c38e2c1f2f21d81f2d0c24a64778c4ed27b88ce963faf82b/yt-dlp-2021.3.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2021.3.15":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.2","Programming Language :: Python :: 3.3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: IronPython","Programming Language :: Python :: Implementation :: Jython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":"","project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://yt-dlp.readthedocs.io","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2021.3.15/","requires_dist":["mutagen","pycryptodome"],"requires_python":">=2.6","summary":"Command-line program to download videos from YouTube.com and many other other video platforms.","version":"2021.3.15","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"e6988a8af68ca3b3c6a2758cc97b8d6b341064778dd9fe61cac453da43f11103","md5":"083c5105c7d22fea543b1d49a6056b9f","sha256":"44550df017796d404b485750e70843870d577b0fdee667b6ec7e67a53e915bea"},"downloads":-1,"filename":"yt_dlp-2021.3.15-py2.py3-none-any.whl","has_sig":false,"md5_digest":"083c5105c7d22fea543b1d49a6056b9f","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.6","size":2000176,"upload_time":"2021-03-15T00:28:21","upload_time_iso_8601":"2021-03-15T00:28:21.934375Z","url":"https://files.pythonhosted.org/packages/e6/98/8a8af68ca3b3c6a2758cc97b8d6b341064778dd9fe61cac453da43f11103/yt_dlp-2021.3.15-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"7a64329774c3e3a445a32d2170b69e53969fdb4ff2daadb3075f162d8c9091e0","md5":"b6d96173ab366d4d0cc38f272c03074c","sha256":"0b6c54256cdaf89b59d7339819b2ec9b9df76ff43dcb99b75fce5ec5e682dbba"},"downloads":-1,"filename":"yt-dlp-2021.3.15.tar.gz","has_sig":false,"md5_digest":"b6d96173ab366d4d0cc38f272c03074c","packagetype":"sdist","python_version":"source","requires_python":">=2.6","size":1652716,"upload_time":"2021-03-15T00:28:23","upload_time_iso_8601":"2021-03-15T00:28:23.434409Z","url":"https://files.pythonhosted.org/packages/7a/64/329774c3e3a445a32d2170b69e53969fdb4ff2daadb3075f162d8c9091e0/yt-dlp-2021.3.15.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2021.3.21":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.2","Programming Language :: Python :: 3.3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: IronPython","Programming Language :: Python :: Implementation :: Jython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":"","project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://yt-dlp.readthedocs.io","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2021.3.21/","requires_dist":["mutagen","pycryptodome"],"requires_python":">=2.6","summary":"Command-line program to download videos from YouTube.com and many other other video platforms.","version":"2021.3.21","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"0cfb10a8456f6fb8ec805367f881ac59faac94c67d9463cbc3e3f5e839417e97","md5":"d668774d4251ccbc15dd24511bc491f2","sha256":"e2051e9e772eac107ada084067ed859cd49e8704c7fa4bd5ecfbfdcd1f40cab6"},"downloads":-1,"filename":"yt_dlp-2021.3.21-py2.py3-none-any.whl","has_sig":false,"md5_digest":"d668774d4251ccbc15dd24511bc491f2","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.6","size":2007890,"upload_time":"2021-03-21T21:28:17","upload_time_iso_8601":"2021-03-21T21:28:17.752169Z","url":"https://files.pythonhosted.org/packages/0c/fb/10a8456f6fb8ec805367f881ac59faac94c67d9463cbc3e3f5e839417e97/yt_dlp-2021.3.21-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"4bf74088eaba56aceb39cb853b4a4749f56877bd0c6b739e0aeb6fb3303dc674","md5":"569c4dce62e6493eef71c6777483aafb","sha256":"80087a146a93ecd804ce4629785da8f87535397aae2cf548e94f3197bf1b1295"},"downloads":-1,"filename":"yt-dlp-2021.3.21.tar.gz","has_sig":false,"md5_digest":"569c4dce62e6493eef71c6777483aafb","packagetype":"sdist","python_version":"source","requires_python":">=2.6","size":1661376,"upload_time":"2021-03-21T21:28:19","upload_time_iso_8601":"2021-03-21T21:28:19.537276Z","url":"https://files.pythonhosted.org/packages/4b/f7/4088eaba56aceb39cb853b4a4749f56877bd0c6b739e0aeb6fb3303dc674/yt-dlp-2021.3.21.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2021.3.24":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.2","Programming Language :: Python :: 3.3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: IronPython","Programming Language :: Python :: Implementation :: Jython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":"","project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://yt-dlp.readthedocs.io","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2021.3.24/","requires_dist":["mutagen","pycryptodome"],"requires_python":">=2.6","summary":"Command-line program to download videos from YouTube.com and many other other video platforms.","version":"2021.3.24","yanked":true,"yanked_reason":"mistake in merger"},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"dab5464cc450e441f919bf63ab05ad4de03407f8d52e5c4f92fd6fb4bbecd0bf","md5":"dbd752061ba74fc769ee700b9912a503","sha256":"cdcc614abff1e753667594a8d637b34ddfe57e7194d514b54347c00784286a9d"},"downloads":-1,"filename":"yt_dlp-2021.3.24-py2.py3-none-any.whl","has_sig":false,"md5_digest":"dbd752061ba74fc769ee700b9912a503","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.6","size":2010175,"upload_time":"2021-03-24T22:51:48","upload_time_iso_8601":"2021-03-24T22:51:48.007392Z","url":"https://files.pythonhosted.org/packages/da/b5/464cc450e441f919bf63ab05ad4de03407f8d52e5c4f92fd6fb4bbecd0bf/yt_dlp-2021.3.24-py2.py3-none-any.whl","yanked":true,"yanked_reason":"mistake in merger"},{"comment_text":"","digests":{"blake2b_256":"9e4d1a890256848026ed450be94a1c5204f655af70340b1b7b79ebe2cb1debf3","md5":"bc0b331fc7f811e40e7b17c210f32301","sha256":"e25102bf829e4fc3e4545684cd45c62c1b6d8bf2bef3cf3b80fdae29a92f389f"},"downloads":-1,"filename":"yt-dlp-2021.3.24.tar.gz","has_sig":false,"md5_digest":"bc0b331fc7f811e40e7b17c210f32301","packagetype":"sdist","python_version":"source","requires_python":">=2.6","size":1664196,"upload_time":"2021-03-24T22:51:49","upload_time_iso_8601":"2021-03-24T22:51:49.748317Z","url":"https://files.pythonhosted.org/packages/9e/4d/1a890256848026ed450be94a1c5204f655af70340b1b7b79ebe2cb1debf3/yt-dlp-2021.3.24.tar.gz","yanked":true,"yanked_reason":"mistake in merger"}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2021.3.24.1":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.2","Programming Language :: Python :: 3.3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: IronPython","Programming Language :: Python :: Implementation :: Jython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":"","project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://yt-dlp.readthedocs.io","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2021.3.24.1/","requires_dist":["mutagen","pycryptodome"],"requires_python":">=2.6","summary":"Command-line program to download videos from YouTube.com and many other other video platforms.","version":"2021.3.24.1","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"6958761c0accb17b05b022171c23e62e238c1128fca52980cd78920ceafd63b0","md5":"b72fa1daea2cd00a25a2c88cf93416b5","sha256":"b61818c7537a7675af0550a206e268b8546ca9d441c86da213a554935c89bb08"},"downloads":-1,"filename":"yt_dlp-2021.3.24.1-py2.py3-none-any.whl","has_sig":false,"md5_digest":"b72fa1daea2cd00a25a2c88cf93416b5","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.6","size":2010068,"upload_time":"2021-03-24T23:08:12","upload_time_iso_8601":"2021-03-24T23:08:12.117605Z","url":"https://files.pythonhosted.org/packages/69/58/761c0accb17b05b022171c23e62e238c1128fca52980cd78920ceafd63b0/yt_dlp-2021.3.24.1-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"433485e08ada95c16b1cb9459a02f8eb040cdcb56d16a3bb9abd7d2e44d5dd23","md5":"bfa76e76f8894531bcfee7fd3d35da9d","sha256":"7e03a7e33f4494062914d1a1c87643cd2a1ed9e47bbe55def2300c5189169d84"},"downloads":-1,"filename":"yt-dlp-2021.3.24.1.tar.gz","has_sig":false,"md5_digest":"bfa76e76f8894531bcfee7fd3d35da9d","packagetype":"sdist","python_version":"source","requires_python":">=2.6","size":1663994,"upload_time":"2021-03-24T23:08:13","upload_time_iso_8601":"2021-03-24T23:08:13.590968Z","url":"https://files.pythonhosted.org/packages/43/34/85e08ada95c16b1cb9459a02f8eb040cdcb56d16a3bb9abd7d2e44d5dd23/yt-dlp-2021.3.24.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2021.3.3":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.2","Programming Language :: Python :: 3.3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: IronPython","Programming Language :: Python :: Implementation :: Jython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":"","project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://yt-dlp.readthedocs.io","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2021.3.3/","requires_dist":["mutagen","pycryptodome"],"requires_python":">=2.6","summary":"Command-line program to download videos from YouTube.com and many other other video platforms.","version":"2021.3.3","yanked":true,"yanked_reason":"build bug"},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"a7222d18d819228369af75f4a7a0aea16862e3c792618ef88dd54eb5cfd05ca0","md5":"31d76a49afe257c7233a7f1a71e4d137","sha256":"7726ad056664ab3863bd6e57d35f1a09e9d33ff6fa4ae26dd9ec00b5bb67d0a5"},"downloads":-1,"filename":"yt_dlp-2021.3.3-py2.py3-none-any.whl","has_sig":false,"md5_digest":"31d76a49afe257c7233a7f1a71e4d137","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.6","size":1933103,"upload_time":"2021-03-03T10:56:09","upload_time_iso_8601":"2021-03-03T10:56:09.094180Z","url":"https://files.pythonhosted.org/packages/a7/22/2d18d819228369af75f4a7a0aea16862e3c792618ef88dd54eb5cfd05ca0/yt_dlp-2021.3.3-py2.py3-none-any.whl","yanked":true,"yanked_reason":"build bug"},{"comment_text":"","digests":{"blake2b_256":"e468eedad7bfd5669ddf09ee27cf2c2f08af18c8e0d3d63bd796273ce66a59e8","md5":"a85b483fb55f63a9f1019017f40635a7","sha256":"3bdccbb94d79cd3112b7150cc29328051b3e44ffb8e45a0f33cf014ccb785ced"},"downloads":-1,"filename":"yt-dlp-2021.3.3.tar.gz","has_sig":false,"md5_digest":"a85b483fb55f63a9f1019017f40635a7","packagetype":"sdist","python_version":"source","requires_python":">=2.6","size":1588911,"upload_time":"2021-03-03T10:56:10","upload_time_iso_8601":"2021-03-03T10:56:10.739261Z","url":"https://files.pythonhosted.org/packages/e4/68/eedad7bfd5669ddf09ee27cf2c2f08af18c8e0d3d63bd796273ce66a59e8/yt-dlp-2021.3.3.tar.gz","yanked":true,"yanked_reason":"build bug"}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2021.3.3.1":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.2","Programming Language :: Python :: 3.3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: IronPython","Programming Language :: Python :: Implementation :: Jython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":"","project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://yt-dlp.readthedocs.io","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2021.3.3.1/","requires_dist":["mutagen","pycryptodome"],"requires_python":">=2.6","summary":"Command-line program to download videos from YouTube.com and many other other video platforms.","version":"2021.3.3.1","yanked":true,"yanked_reason":"build bug"},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"f430604c05fe58dd4ab8f27095cdeaefcb77082f6629b9a0220f126c7877999a","md5":"44873146df985c4c23b0ac941eeabe61","sha256":"2e4931215399a5f6e5bbbfeb50ae8290fe9d141843756113a10bce79ab35fb1e"},"downloads":-1,"filename":"yt_dlp-2021.3.3.1-py2.py3-none-any.whl","has_sig":false,"md5_digest":"44873146df985c4c23b0ac941eeabe61","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.6","size":1933132,"upload_time":"2021-03-03T11:00:30","upload_time_iso_8601":"2021-03-03T11:00:30.766908Z","url":"https://files.pythonhosted.org/packages/f4/30/604c05fe58dd4ab8f27095cdeaefcb77082f6629b9a0220f126c7877999a/yt_dlp-2021.3.3.1-py2.py3-none-any.whl","yanked":true,"yanked_reason":"build bug"},{"comment_text":"","digests":{"blake2b_256":"1601b41270ae4fcd21db2915144b82f49fcc1de62fbb08cf1cec5affb5b3a45b","md5":"d2a231f460d06168cc276fbf93d5eca0","sha256":"34c570c802f180482e530c2dc668da8d306ace8658194697dedd9b4e43e51ee7"},"downloads":-1,"filename":"yt-dlp-2021.3.3.1.tar.gz","has_sig":false,"md5_digest":"d2a231f460d06168cc276fbf93d5eca0","packagetype":"sdist","python_version":"source","requires_python":">=2.6","size":1588955,"upload_time":"2021-03-03T11:00:32","upload_time_iso_8601":"2021-03-03T11:00:32.271736Z","url":"https://files.pythonhosted.org/packages/16/01/b41270ae4fcd21db2915144b82f49fcc1de62fbb08cf1cec5affb5b3a45b/yt-dlp-2021.3.3.1.tar.gz","yanked":true,"yanked_reason":"build bug"}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2021.3.3.2":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.2","Programming Language :: Python :: 3.3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: IronPython","Programming Language :: Python :: Implementation :: Jython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":"","project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://yt-dlp.readthedocs.io","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2021.3.3.2/","requires_dist":["mutagen","pycryptodome"],"requires_python":">=2.6","summary":"Command-line program to download videos from YouTube.com and many other other video platforms.","version":"2021.3.3.2","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"9c3a4e1a855da4015d44af4abfc8f4de4ae98fd487d5f7069a77626fb8137352","md5":"2a7dfb955ec7bf9b47a949b735df3fbe","sha256":"93717ff42519aeca9f06c5826ae3f6f68e716b6683a1e06801c6c71adddc6b38"},"downloads":-1,"filename":"yt_dlp-2021.3.3.2-py2.py3-none-any.whl","has_sig":false,"md5_digest":"2a7dfb955ec7bf9b47a949b735df3fbe","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.6","size":1985986,"upload_time":"2021-03-03T11:07:14","upload_time_iso_8601":"2021-03-03T11:07:14.260585Z","url":"https://files.pythonhosted.org/packages/9c/3a/4e1a855da4015d44af4abfc8f4de4ae98fd487d5f7069a77626fb8137352/yt_dlp-2021.3.3.2-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"755f2a7a8f590e96e2fc46622a391ec03edc073d73092d3bf9f6a10b674799ac","md5":"20357dcec108712cba9126813c1f9c08","sha256":"e1614e5d41a6f85711326f465fcab0a582e83fe40593639302ca2779063c987e"},"downloads":-1,"filename":"yt-dlp-2021.3.3.2.tar.gz","has_sig":false,"md5_digest":"20357dcec108712cba9126813c1f9c08","packagetype":"sdist","python_version":"source","requires_python":">=2.6","size":1637726,"upload_time":"2021-03-03T11:07:16","upload_time_iso_8601":"2021-03-03T11:07:16.147350Z","url":"https://files.pythonhosted.org/packages/75/5f/2a7a8f590e96e2fc46622a391ec03edc073d73092d3bf9f6a10b674799ac/yt-dlp-2021.3.3.2.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2021.3.7":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.2","Programming Language :: Python :: 3.3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: IronPython","Programming Language :: Python :: Implementation :: Jython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":"","project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://yt-dlp.readthedocs.io","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2021.3.7/","requires_dist":["mutagen","pycryptodome"],"requires_python":">=2.6","summary":"Command-line program to download videos from YouTube.com and many other other video platforms.","version":"2021.3.7","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"fa0c615a0838fa11bab6fb4c21f1e136d3cd42f197957d21b457bce8689932d5","md5":"0b505f57ae7561f0a2fa8a781632b68e","sha256":"f246228f3c450aedc7e05b01833af75158dc77ec5ae19a2a66cac32ebf8004b7"},"downloads":-1,"filename":"yt_dlp-2021.3.7-py2.py3-none-any.whl","has_sig":false,"md5_digest":"0b505f57ae7561f0a2fa8a781632b68e","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.6","size":1987736,"upload_time":"2021-03-07T18:38:41","upload_time_iso_8601":"2021-03-07T18:38:41.970249Z","url":"https://files.pythonhosted.org/packages/fa/0c/615a0838fa11bab6fb4c21f1e136d3cd42f197957d21b457bce8689932d5/yt_dlp-2021.3.7-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"b0571e460ecd566b5cfc2a6034c398ce950ed604ffb46f68f84e7543e85387f4","md5":"3219d6b9651470b33d4f264f743b2a73","sha256":"6da01294a9461663648b32a55ef36436a5b65266a245fb9277a81cb799fe7712"},"downloads":-1,"filename":"yt-dlp-2021.3.7.tar.gz","has_sig":false,"md5_digest":"3219d6b9651470b33d4f264f743b2a73","packagetype":"sdist","python_version":"source","requires_python":">=2.6","size":1640125,"upload_time":"2021-03-07T18:38:43","upload_time_iso_8601":"2021-03-07T18:38:43.279260Z","url":"https://files.pythonhosted.org/packages/b0/57/1e460ecd566b5cfc2a6034c398ce950ed604ffb46f68f84e7543e85387f4/yt-dlp-2021.3.7.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2021.4.11":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.2","Programming Language :: Python :: 3.3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: IronPython","Programming Language :: Python :: Implementation :: Jython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":"","project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://yt-dlp.readthedocs.io","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2021.4.11/","requires_dist":["mutagen","pycryptodome"],"requires_python":">=2.6","summary":"Command-line program to download videos from YouTube.com and many other other video platforms.","version":"2021.4.11","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"43070b026f8898eafb011de63c8ead73f9f8c46c08ecbee19f3cdb5c9cb7b4f2","md5":"396ef8ec55c96dfed2eccd7cfcd0cd06","sha256":"2c03bda7936eb1fc5777abce9d199dc8fb9000c7f3b1624f70913c89ce0d42d9"},"downloads":-1,"filename":"yt_dlp-2021.4.11-py2.py3-none-any.whl","has_sig":false,"md5_digest":"396ef8ec55c96dfed2eccd7cfcd0cd06","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.6","size":2035865,"upload_time":"2021-04-11T21:53:08","upload_time_iso_8601":"2021-04-11T21:53:08.936928Z","url":"https://files.pythonhosted.org/packages/43/07/0b026f8898eafb011de63c8ead73f9f8c46c08ecbee19f3cdb5c9cb7b4f2/yt_dlp-2021.4.11-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f5a14519b39f6e19dea5e12238f31539aa01597b48cb80a138be555e61be3877","md5":"aadb3e1c3e98ab2805c29ed5d7596bbe","sha256":"702163b33bd187012e449b2b65b73bd406a17c44a80805f16271991d171539ab"},"downloads":-1,"filename":"yt-dlp-2021.4.11.tar.gz","has_sig":false,"md5_digest":"aadb3e1c3e98ab2805c29ed5d7596bbe","packagetype":"sdist","python_version":"source","requires_python":">=2.6","size":1688055,"upload_time":"2021-04-11T21:53:10","upload_time_iso_8601":"2021-04-11T21:53:10.514152Z","url":"https://files.pythonhosted.org/packages/f5/a1/4519b39f6e19dea5e12238f31539aa01597b48cb80a138be555e61be3877/yt-dlp-2021.4.11.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2021.4.22":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.2","Programming Language :: Python :: 3.3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: IronPython","Programming Language :: Python :: Implementation :: Jython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":"","project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://yt-dlp.readthedocs.io","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2021.4.22/","requires_dist":["mutagen","pycryptodome"],"requires_python":">=2.6","summary":"Command-line program to download videos from YouTube.com and many other other video platforms.","version":"2021.4.22","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"e068417825207c006986b2ce66fee622d635cebaf3d1920e8c8655bac6051cff","md5":"a196d69fbb90c4c0bae6df9401c782cf","sha256":"bc403f20d119a0e078bc04f261ab05381a9767ef78a025a6fad6a4868a82a337"},"downloads":-1,"filename":"yt_dlp-2021.4.22-py2.py3-none-any.whl","has_sig":false,"md5_digest":"a196d69fbb90c4c0bae6df9401c782cf","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.6","size":2045635,"upload_time":"2021-04-22T11:59:07","upload_time_iso_8601":"2021-04-22T11:59:07.790776Z","url":"https://files.pythonhosted.org/packages/e0/68/417825207c006986b2ce66fee622d635cebaf3d1920e8c8655bac6051cff/yt_dlp-2021.4.22-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"52d2019f4d877c08b51d9e157d3574c0eb5771e715741e80e477314131e97a54","md5":"87f69b5f6b36e9b75158ef75d3d72a05","sha256":"7cc08a1843f7b6511d8c8fc73a6e53f3ac78a781f48431d12f898c1af0af9560"},"downloads":-1,"filename":"yt-dlp-2021.4.22.tar.gz","has_sig":false,"md5_digest":"87f69b5f6b36e9b75158ef75d3d72a05","packagetype":"sdist","python_version":"source","requires_python":">=2.6","size":1700869,"upload_time":"2021-04-22T11:59:10","upload_time_iso_8601":"2021-04-22T11:59:10.270856Z","url":"https://files.pythonhosted.org/packages/52/d2/019f4d877c08b51d9e157d3574c0eb5771e715741e80e477314131e97a54/yt-dlp-2021.4.22.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2021.4.3":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.2","Programming Language :: Python :: 3.3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: IronPython","Programming Language :: Python :: Implementation :: Jython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":"","project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://yt-dlp.readthedocs.io","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2021.4.3/","requires_dist":["mutagen","pycryptodome"],"requires_python":">=2.6","summary":"Command-line program to download videos from YouTube.com and many other other video platforms.","version":"2021.4.3","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"9849eb37afb53b1ac561fc66c56eab7286e5236e3a4dfcf8973dd3ff5d1fdfc2","md5":"6faa1d35bffe61ea197a9531e6c02992","sha256":"5a22106802c7b53dbc4e372857b78a8b1aa4e418edb9b95948057c3025fabfeb"},"downloads":-1,"filename":"yt_dlp-2021.4.3-py2.py3-none-any.whl","has_sig":false,"md5_digest":"6faa1d35bffe61ea197a9531e6c02992","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.6","size":2016675,"upload_time":"2021-04-03T22:27:20","upload_time_iso_8601":"2021-04-03T22:27:20.291089Z","url":"https://files.pythonhosted.org/packages/98/49/eb37afb53b1ac561fc66c56eab7286e5236e3a4dfcf8973dd3ff5d1fdfc2/yt_dlp-2021.4.3-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"16a9b3a69dceebbecb62e283b52b3078ebbe53cd08ebd5b01f391f82c68f002d","md5":"f5d4fc20049c08e118f4100c9a45f727","sha256":"cd092b50cfe23a731bcbfdaffa1e5577fac8628a079cc45f3782132532047eb2"},"downloads":-1,"filename":"yt-dlp-2021.4.3.tar.gz","has_sig":false,"md5_digest":"f5d4fc20049c08e118f4100c9a45f727","packagetype":"sdist","python_version":"source","requires_python":">=2.6","size":1670062,"upload_time":"2021-04-03T22:27:22","upload_time_iso_8601":"2021-04-03T22:27:22.332269Z","url":"https://files.pythonhosted.org/packages/16/a9/b3a69dceebbecb62e283b52b3078ebbe53cd08ebd5b01f391f82c68f002d/yt-dlp-2021.4.3.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2021.5.11":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.2","Programming Language :: Python :: 3.3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: IronPython","Programming Language :: Python :: Implementation :: Jython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":"","project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://yt-dlp.readthedocs.io","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2021.5.11/","requires_dist":["mutagen","pycryptodome"],"requires_python":">=2.6","summary":"Command-line program to download videos from YouTube.com and many other other video platforms.","version":"2021.5.11","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"f46ef43ce5f4efa34e86b0ae059572d1fc7876f1158de025808d85675634281f","md5":"c36d6988b738f14baa6caaf993031ddc","sha256":"0257a9df9d1eeb83d01038179b2a0b1abb7f588265043ae6b55f2b37fccb7532"},"downloads":-1,"filename":"yt_dlp-2021.5.11-py2.py3-none-any.whl","has_sig":false,"md5_digest":"c36d6988b738f14baa6caaf993031ddc","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.6","size":2063654,"upload_time":"2021-05-11T08:07:45","upload_time_iso_8601":"2021-05-11T08:07:45.250790Z","url":"https://files.pythonhosted.org/packages/f4/6e/f43ce5f4efa34e86b0ae059572d1fc7876f1158de025808d85675634281f/yt_dlp-2021.5.11-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c718db80ea62ca0d36d8e66cb7e334d2c1576cb9ff09eb86fe7c0c4ce680a6e2","md5":"a54fc4f0220b0b57fc48f06877fc8cf3","sha256":"9bbaac7a496f83821056d3545204adc7cd0153e04775b6491b430f48b1fc32df"},"downloads":-1,"filename":"yt-dlp-2021.5.11.tar.gz","has_sig":false,"md5_digest":"a54fc4f0220b0b57fc48f06877fc8cf3","packagetype":"sdist","python_version":"source","requires_python":">=2.6","size":1725277,"upload_time":"2021-05-11T08:07:46","upload_time_iso_8601":"2021-05-11T08:07:46.969946Z","url":"https://files.pythonhosted.org/packages/c7/18/db80ea62ca0d36d8e66cb7e334d2c1576cb9ff09eb86fe7c0c4ce680a6e2/yt-dlp-2021.5.11.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2021.5.20":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.2","Programming Language :: Python :: 3.3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: IronPython","Programming Language :: Python :: Implementation :: Jython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":"","project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://yt-dlp.readthedocs.io","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2021.5.20/","requires_dist":["mutagen","pycryptodome"],"requires_python":">=2.6","summary":"Command-line program to download videos from YouTube.com and many other other video platforms.","version":"2021.5.20","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"87b74c3b5be763ea24ab88ce5b3bfec04c55274385fa5b1d076b1a9fdcb1cd49","md5":"77bcadeb02e2ca8bfb37680499b885d4","sha256":"49da8997f22fca103faf5e20dffc28ba90c6c4be88c9ca3ad11b3d644f33e5ed"},"downloads":-1,"filename":"yt_dlp-2021.5.20-py2.py3-none-any.whl","has_sig":false,"md5_digest":"77bcadeb02e2ca8bfb37680499b885d4","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.6","size":2071870,"upload_time":"2021-05-20T13:52:40","upload_time_iso_8601":"2021-05-20T13:52:40.681569Z","url":"https://files.pythonhosted.org/packages/87/b7/4c3b5be763ea24ab88ce5b3bfec04c55274385fa5b1d076b1a9fdcb1cd49/yt_dlp-2021.5.20-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"6732bc225bf22c77cde18d137afecf52c1e48ace30e68af14ba7a1768123b303","md5":"168a84e6cc2d3a037aa9c92d4411cdef","sha256":"4e0af8000c490bec014481b6391080afbf9b19e1af0433b967295e8420ab43d9"},"downloads":-1,"filename":"yt-dlp-2021.5.20.tar.gz","has_sig":false,"md5_digest":"168a84e6cc2d3a037aa9c92d4411cdef","packagetype":"sdist","python_version":"source","requires_python":">=2.6","size":1733374,"upload_time":"2021-05-20T13:52:42","upload_time_iso_8601":"2021-05-20T13:52:42.252113Z","url":"https://files.pythonhosted.org/packages/67/32/bc225bf22c77cde18d137afecf52c1e48ace30e68af14ba7a1768123b303/yt-dlp-2021.5.20.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2021.6.1":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.2","Programming Language :: Python :: 3.3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: IronPython","Programming Language :: Python :: Implementation :: Jython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":"","project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://yt-dlp.readthedocs.io","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2021.6.1/","requires_dist":["mutagen","pycryptodome"],"requires_python":">=2.6","summary":"Command-line program to download videos from YouTube.com and many other other video platforms.","version":"2021.6.1","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"fb645d4733ec46966c3eab438bad8c10a973a2aaef05e8d0560bf862c0cc0578","md5":"75e283d5c7ed92c679e5e788bd5c0718","sha256":"9a5201b2cb4546fe9f428fa8c9d5c2cd2a28edcb499b68e1f6bfd9af6e582958"},"downloads":-1,"filename":"yt_dlp-2021.6.1-py2.py3-none-any.whl","has_sig":false,"md5_digest":"75e283d5c7ed92c679e5e788bd5c0718","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.6","size":2085645,"upload_time":"2021-06-01T15:06:19","upload_time_iso_8601":"2021-06-01T15:06:19.133677Z","url":"https://files.pythonhosted.org/packages/fb/64/5d4733ec46966c3eab438bad8c10a973a2aaef05e8d0560bf862c0cc0578/yt_dlp-2021.6.1-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"2a9f56242412e21a6d4f4fb742b57a4adda873c93b51d2ded2b7fd8a88b78155","md5":"98daaa33ec08a7b55d3205f1789b941f","sha256":"0c7c59aed3ef4a61f3ecb3a4cbb27219a3f0a01c7dfbae7987e35b01cf160a15"},"downloads":-1,"filename":"yt-dlp-2021.6.1.tar.gz","has_sig":false,"md5_digest":"98daaa33ec08a7b55d3205f1789b941f","packagetype":"sdist","python_version":"source","requires_python":">=2.6","size":1750791,"upload_time":"2021-06-01T15:06:20","upload_time_iso_8601":"2021-06-01T15:06:20.717762Z","url":"https://files.pythonhosted.org/packages/2a/9f/56242412e21a6d4f4fb742b57a4adda873c93b51d2ded2b7fd8a88b78155/yt-dlp-2021.6.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2021.6.23":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":"","project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://yt-dlp.readthedocs.io","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2021.6.23/","requires_dist":["mutagen","pycryptodome","websockets"],"requires_python":">=3.6","summary":"Command-line program to download videos from YouTube.com and many other other video platforms.","version":"2021.6.23","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"24d45dbc4cd4ea4456dda5ae50448d476a39eedf9b2c5a02c8b144ef356f5851","md5":"46fe0bdab772d040aba981b3231c920d","sha256":"67fd61c1de4b511abb3a6f39ed1c0ec94f5b0a5d2819fdf5a24efebd2b982c3c"},"downloads":-1,"filename":"yt_dlp-2021.6.23-py2.py3-none-any.whl","has_sig":false,"md5_digest":"46fe0bdab772d040aba981b3231c920d","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.6","size":2086003,"upload_time":"2021-06-23T02:06:21","upload_time_iso_8601":"2021-06-23T02:06:21.416158Z","url":"https://files.pythonhosted.org/packages/24/d4/5dbc4cd4ea4456dda5ae50448d476a39eedf9b2c5a02c8b144ef356f5851/yt_dlp-2021.6.23-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f499bdedd64059aa9e1afc132521962389b3ee80453b8612a7ce8c6fd1ed36d5","md5":"c10dd020a5b1078518807e10ace46d0e","sha256":"30d7d90ae164444e8b49b238c31cbdc778f77314a2d332858464be25b1652df6"},"downloads":-1,"filename":"yt-dlp-2021.6.23.tar.gz","has_sig":false,"md5_digest":"c10dd020a5b1078518807e10ace46d0e","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":1757613,"upload_time":"2021-06-23T02:06:22","upload_time_iso_8601":"2021-06-23T02:06:22.979620Z","url":"https://files.pythonhosted.org/packages/f4/99/bdedd64059aa9e1afc132521962389b3ee80453b8612a7ce8c6fd1ed36d5/yt-dlp-2021.6.23.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2021.6.8":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":"","project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://yt-dlp.readthedocs.io","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2021.6.8/","requires_dist":["mutagen","pycryptodome"],"requires_python":">=3.6","summary":"Command-line program to download videos from YouTube.com and many other other video platforms.","version":"2021.6.8","yanked":true,"yanked_reason":"Bug in output template"},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"15515de4ca1557667b3e32e6e11912312727e02f3dbdb360a7b971542a3f41d7","md5":"8611062a16644ade09a0ee4b012f07c7","sha256":"902f87f57f1e057d568a776217c72d413db3f85d749bf15dd0481e16f389fa15"},"downloads":-1,"filename":"yt_dlp-2021.6.8-py2.py3-none-any.whl","has_sig":false,"md5_digest":"8611062a16644ade09a0ee4b012f07c7","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.6","size":2081935,"upload_time":"2021-06-08T20:36:02","upload_time_iso_8601":"2021-06-08T20:36:02.930447Z","url":"https://files.pythonhosted.org/packages/15/51/5de4ca1557667b3e32e6e11912312727e02f3dbdb360a7b971542a3f41d7/yt_dlp-2021.6.8-py2.py3-none-any.whl","yanked":true,"yanked_reason":"Bug in output template"},{"comment_text":"","digests":{"blake2b_256":"59974cea58d8a41bfe19d24ab7218df22b2f112ff5d8ffd1a09d75c365b2a9e4","md5":"79b04439813a37150b0789ae5d89d90a","sha256":"cac5bd66fd585cba2279321fa97e1f6cd5881352a6772dc38c42f5f4e409345e"},"downloads":-1,"filename":"yt-dlp-2021.6.8.tar.gz","has_sig":false,"md5_digest":"79b04439813a37150b0789ae5d89d90a","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":1750930,"upload_time":"2021-06-08T20:36:09","upload_time_iso_8601":"2021-06-08T20:36:09.510242Z","url":"https://files.pythonhosted.org/packages/59/97/4cea58d8a41bfe19d24ab7218df22b2f112ff5d8ffd1a09d75c365b2a9e4/yt-dlp-2021.6.8.tar.gz","yanked":true,"yanked_reason":"Bug in output template"}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2021.6.9":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":"","project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://yt-dlp.readthedocs.io","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2021.6.9/","requires_dist":["mutagen","pycryptodome"],"requires_python":">=3.6","summary":"Command-line program to download videos from YouTube.com and many other other video platforms.","version":"2021.6.9","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"549bfef86e4dcd55de8eb8e8ca34722dbefde4f5af1b0287feb40dd561b4526a","md5":"6d3e069eda15bbdf26af33edfb36c12d","sha256":"168b4fdee214194e76d840f02b3e3aa1c61a2c4505314f613e2f0bf6d18de517"},"downloads":-1,"filename":"yt_dlp-2021.6.9-py2.py3-none-any.whl","has_sig":false,"md5_digest":"6d3e069eda15bbdf26af33edfb36c12d","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.6","size":2082035,"upload_time":"2021-06-09T19:55:59","upload_time_iso_8601":"2021-06-09T19:55:59.112381Z","url":"https://files.pythonhosted.org/packages/54/9b/fef86e4dcd55de8eb8e8ca34722dbefde4f5af1b0287feb40dd561b4526a/yt_dlp-2021.6.9-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"b64b62ffd84c0a83ac966679d4c49482f75bbad5703baca5b1999ddc18d2ac39","md5":"d0ff26321212ff80b3ee536ef44a4797","sha256":"bfceb039a7a88cd6da91a3ec79a172c0d577b7110e7f1d7645f99ac6164be478"},"downloads":-1,"filename":"yt-dlp-2021.6.9.tar.gz","has_sig":false,"md5_digest":"d0ff26321212ff80b3ee536ef44a4797","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":1751452,"upload_time":"2021-06-09T19:56:00","upload_time_iso_8601":"2021-06-09T19:56:00.946288Z","url":"https://files.pythonhosted.org/packages/b6/4b/62ffd84c0a83ac966679d4c49482f75bbad5703baca5b1999ddc18d2ac39/yt-dlp-2021.6.9.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2021.7.21":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":"","project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://yt-dlp.readthedocs.io","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2021.7.21/","requires_dist":["mutagen","pycryptodome","websockets"],"requires_python":">=3.6","summary":"Command-line program to download videos from YouTube.com and many other other video platforms.","version":"2021.7.21","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"81210945b5ae8488a9d80e29deabf9b1dccc5ccc71e0ba15a47eb83f572c2a13","md5":"5acd30f3692f482b55ef5bd485db18d4","sha256":"20dba9e31ff5bbeaf003cbe63d6defa0e2221112b7ff889efdddf391ee1ba3b5"},"downloads":-1,"filename":"yt_dlp-2021.7.21-py2.py3-none-any.whl","has_sig":false,"md5_digest":"5acd30f3692f482b55ef5bd485db18d4","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.6","size":2096632,"upload_time":"2021-07-21T21:07:10","upload_time_iso_8601":"2021-07-21T21:07:10.141533Z","url":"https://files.pythonhosted.org/packages/81/21/0945b5ae8488a9d80e29deabf9b1dccc5ccc71e0ba15a47eb83f572c2a13/yt_dlp-2021.7.21-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"58d6daf2be425ba8d7eb8371b50436ba0bbc2e5e12107f8a5c1a61e69aad3af6","md5":"c4d3918274f9e8132e01feec8edc0547","sha256":"ff6b3c6d606cdd9227193338e679aa04bed36e107f206707b58edbc8c5a88b65"},"downloads":-1,"filename":"yt-dlp-2021.7.21.tar.gz","has_sig":false,"md5_digest":"c4d3918274f9e8132e01feec8edc0547","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":1771540,"upload_time":"2021-07-21T21:07:11","upload_time_iso_8601":"2021-07-21T21:07:11.780972Z","url":"https://files.pythonhosted.org/packages/58/d6/daf2be425ba8d7eb8371b50436ba0bbc2e5e12107f8a5c1a61e69aad3af6/yt-dlp-2021.7.21.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2021.7.24":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":"","project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://yt-dlp.readthedocs.io","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2021.7.24/","requires_dist":["mutagen","pycryptodome","websockets"],"requires_python":">=3.6","summary":"Command-line program to download videos from YouTube.com and many other other video platforms.","version":"2021.7.24","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"c26de86f652635ae0ede9b8d3d25227cd8fe227499623ecd3e7cc8064889e92e","md5":"aac4771218b0b37cb8f24c5f7d29fa1b","sha256":"770c890d05a1cbb83e3c7150ed076a9a30dfeffcdd95ca8d004dce31840221f9"},"downloads":-1,"filename":"yt_dlp-2021.7.24-py2.py3-none-any.whl","has_sig":false,"md5_digest":"aac4771218b0b37cb8f24c5f7d29fa1b","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.6","size":2097258,"upload_time":"2021-07-24T01:36:29","upload_time_iso_8601":"2021-07-24T01:36:29.756201Z","url":"https://files.pythonhosted.org/packages/c2/6d/e86f652635ae0ede9b8d3d25227cd8fe227499623ecd3e7cc8064889e92e/yt_dlp-2021.7.24-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"bd52cf28f80b455419c63bac921c62249014667257c45e0949a6fe385fe99661","md5":"c8d74b2ed9645f1d04449e628581a955","sha256":"d75a0a14c169bb3553ae356683acf111cc91a0c430204db96740237d42da7375"},"downloads":-1,"filename":"yt-dlp-2021.7.24.tar.gz","has_sig":false,"md5_digest":"c8d74b2ed9645f1d04449e628581a955","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":1772482,"upload_time":"2021-07-24T01:36:31","upload_time_iso_8601":"2021-07-24T01:36:31.692644Z","url":"https://files.pythonhosted.org/packages/bd/52/cf28f80b455419c63bac921c62249014667257c45e0949a6fe385fe99661/yt-dlp-2021.7.24.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2021.7.7":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":"","project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://yt-dlp.readthedocs.io","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2021.7.7/","requires_dist":["mutagen","pycryptodome","websockets"],"requires_python":">=3.6","summary":"Command-line program to download videos from YouTube.com and many other other video platforms.","version":"2021.7.7","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"7233e50fa9e40d51cf206da6c68d586a0110c4324c5e3505098df6bd7f4d8f27","md5":"b1573e816cadfc81a4f1680a4c30bcb4","sha256":"2a73026f955d616ea6dbb59fe0aa696a52638485e9cc8e2b0d937495573bce09"},"downloads":-1,"filename":"yt_dlp-2021.7.7-py2.py3-none-any.whl","has_sig":false,"md5_digest":"b1573e816cadfc81a4f1680a4c30bcb4","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.6","size":2097296,"upload_time":"2021-07-07T00:08:04","upload_time_iso_8601":"2021-07-07T00:08:04.280171Z","url":"https://files.pythonhosted.org/packages/72/33/e50fa9e40d51cf206da6c68d586a0110c4324c5e3505098df6bd7f4d8f27/yt_dlp-2021.7.7-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"5e2a3e5fed8594aa7fc37ee0caa602d0a558e5cb3b5fce774148082d8b38d8fe","md5":"6e2911e008967ffccf776054c7218515","sha256":"ffe535d750dee1d0a8a91daa534a47f0ff7b9e738144c19d7e65ea77f472f8a2"},"downloads":-1,"filename":"yt-dlp-2021.7.7.tar.gz","has_sig":false,"md5_digest":"6e2911e008967ffccf776054c7218515","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":1769813,"upload_time":"2021-07-07T00:08:06","upload_time_iso_8601":"2021-07-07T00:08:06.213848Z","url":"https://files.pythonhosted.org/packages/5e/2a/3e5fed8594aa7fc37ee0caa602d0a558e5cb3b5fce774148082d8b38d8fe/yt-dlp-2021.7.7.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2021.8.10":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":"","project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://yt-dlp.readthedocs.io","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2021.8.10/","requires_dist":["mutagen","pycryptodome","websockets"],"requires_python":">=3.6","summary":"Command-line program to download videos from YouTube.com and many other other video platforms.","version":"2021.8.10","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"ee72836432d93dfb518dfe9e930d5e0da354f27ceaa3280157e89d0cadec7c52","md5":"570338b36571e2406e40e5ef15020525","sha256":"7c12ead6df0744c87b7d78e1cf4678f9e1c6e6cd1517af9b9cec3af4f2aca69a"},"downloads":-1,"filename":"yt_dlp-2021.8.10-py2.py3-none-any.whl","has_sig":false,"md5_digest":"570338b36571e2406e40e5ef15020525","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.6","size":2117815,"upload_time":"2021-08-10T14:44:37","upload_time_iso_8601":"2021-08-10T14:44:37.496090Z","url":"https://files.pythonhosted.org/packages/ee/72/836432d93dfb518dfe9e930d5e0da354f27ceaa3280157e89d0cadec7c52/yt_dlp-2021.8.10-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"ee59d763a51fa975639946c327ffbf85e109dbaa87f8aa5cae54a4ee5d09593c","md5":"c0783cc8bef951689094d71d17b12f6b","sha256":"8da1bf4dc4641d37d137443c4783109ee8393caad5e0d270d9d1d534e8f25240"},"downloads":-1,"filename":"yt-dlp-2021.8.10.tar.gz","has_sig":false,"md5_digest":"c0783cc8bef951689094d71d17b12f6b","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":1807968,"upload_time":"2021-08-10T14:44:39","upload_time_iso_8601":"2021-08-10T14:44:39.647628Z","url":"https://files.pythonhosted.org/packages/ee/59/d763a51fa975639946c327ffbf85e109dbaa87f8aa5cae54a4ee5d09593c/yt-dlp-2021.8.10.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2021.8.2":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":"","project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://yt-dlp.readthedocs.io","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2021.8.2/","requires_dist":["mutagen","pycryptodome","websockets"],"requires_python":">=3.6","summary":"Command-line program to download videos from YouTube.com and many other other video platforms.","version":"2021.8.2","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"30704ccf6eea4425025a3a83a6b1cc633bcdc708b83e227e3423409302540a4c","md5":"b72578228c53767a31502f1eb10cc39e","sha256":"44a075c3a4736766cbc0c1f1794a81f3c3df0e85641c346dc98deb2a63169e71"},"downloads":-1,"filename":"yt_dlp-2021.8.2-py2.py3-none-any.whl","has_sig":false,"md5_digest":"b72578228c53767a31502f1eb10cc39e","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.6","size":2103827,"upload_time":"2021-08-02T05:09:36","upload_time_iso_8601":"2021-08-02T05:09:36.141431Z","url":"https://files.pythonhosted.org/packages/30/70/4ccf6eea4425025a3a83a6b1cc633bcdc708b83e227e3423409302540a4c/yt_dlp-2021.8.2-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"47eec2c869327c744886226e825c09138f06e7a42041ca186c8adbd93f0ad7c7","md5":"7a74360e4f40375b16429d8c8101f074","sha256":"e2f7b8a011d34e8930eadce58f4c5af3b7f7818388922652cf1c7154bbb26ebc"},"downloads":-1,"filename":"yt-dlp-2021.8.2.tar.gz","has_sig":false,"md5_digest":"7a74360e4f40375b16429d8c8101f074","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":1790956,"upload_time":"2021-08-02T05:09:38","upload_time_iso_8601":"2021-08-02T05:09:38.246808Z","url":"https://files.pythonhosted.org/packages/47/ee/c2c869327c744886226e825c09138f06e7a42041ca186c8adbd93f0ad7c7/yt-dlp-2021.8.2.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2021.9.1":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":"","project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://yt-dlp.readthedocs.io","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2021.9.1/","requires_dist":["mutagen","pycryptodome","websockets"],"requires_python":">=3.6","summary":"Command-line program to download videos from YouTube.com and many other other video platforms.","version":"2021.9.1","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"31c5c8553be3c91e1c38092888bdd6a188aa240f4f64274665a74695834ed48a","md5":"aff770bcd8d3da385e04c4924b1dea80","sha256":"f957920bceaba0256ab95a45be6ca87bdd3669efdac8aded27a798a78dff9353"},"downloads":-1,"filename":"yt_dlp-2021.9.1-py2.py3-none-any.whl","has_sig":false,"md5_digest":"aff770bcd8d3da385e04c4924b1dea80","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.6","size":2154687,"upload_time":"2021-09-01T23:03:41","upload_time_iso_8601":"2021-09-01T23:03:41.284491Z","url":"https://files.pythonhosted.org/packages/31/c5/c8553be3c91e1c38092888bdd6a188aa240f4f64274665a74695834ed48a/yt_dlp-2021.9.1-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"d07a40aa2c5e8b25e4c0ee8e00963507acc104f68d03b540e6a3686f331b3bec","md5":"339dd5b3cca8932e15ab4697038b7357","sha256":"efefbec227a014aaecb7b3c5d4e1649de474802058598a9c0281ee020e0d1cb6"},"downloads":-1,"filename":"yt-dlp-2021.9.1.tar.gz","has_sig":false,"md5_digest":"339dd5b3cca8932e15ab4697038b7357","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":1846252,"upload_time":"2021-09-01T23:03:43","upload_time_iso_8601":"2021-09-01T23:03:43.283547Z","url":"https://files.pythonhosted.org/packages/d0/7a/40aa2c5e8b25e4c0ee8e00963507acc104f68d03b540e6a3686f331b3bec/yt-dlp-2021.9.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2021.9.2":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":"","project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://yt-dlp.readthedocs.io","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2021.9.2/","requires_dist":["mutagen","pycryptodome","websockets"],"requires_python":">=3.6","summary":"Command-line program to download videos from YouTube.com and many other other video platforms.","version":"2021.9.2","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"a04d311118a8c32f779fb83a809e7720ada1df0ad3d7136605eca82d155b3ea0","md5":"dae8810ba2c8bd467597e38d7352751d","sha256":"c97716a715261657345176ab8190a19efa51db0e5b174a6629956548750245e1"},"downloads":-1,"filename":"yt_dlp-2021.9.2-py2.py3-none-any.whl","has_sig":false,"md5_digest":"dae8810ba2c8bd467597e38d7352751d","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.6","size":2154689,"upload_time":"2021-09-02T00:02:58","upload_time_iso_8601":"2021-09-02T00:02:58.784751Z","url":"https://files.pythonhosted.org/packages/a0/4d/311118a8c32f779fb83a809e7720ada1df0ad3d7136605eca82d155b3ea0/yt_dlp-2021.9.2-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"104b7ac9cced452f67f3d75ea460eb07c8dd377b8cc60337b6ae465e38f6b2d7","md5":"de3f4a2eab04bee5c2b145a843033099","sha256":"ca7e77cdb055ba2683df5b0807aab1c1e120cbe02c8f35d9d3293d94dbdaea63"},"downloads":-1,"filename":"yt-dlp-2021.9.2.tar.gz","has_sig":false,"md5_digest":"de3f4a2eab04bee5c2b145a843033099","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":1846258,"upload_time":"2021-09-02T00:03:00","upload_time_iso_8601":"2021-09-02T00:03:00.974702Z","url":"https://files.pythonhosted.org/packages/10/4b/7ac9cced452f67f3d75ea460eb07c8dd377b8cc60337b6ae465e38f6b2d7/yt-dlp-2021.9.2.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2021.9.25":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":"","project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://yt-dlp.readthedocs.io","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2021.9.25/","requires_dist":["mutagen","pycryptodome","websockets"],"requires_python":">=3.6","summary":"Command-line program to download videos from YouTube.com and many other other video platforms.","version":"2021.9.25","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"b4f28dd2b783afeb64ff8b030564edf760a486c0d205a5f0145d276706872fc6","md5":"f43146f32f51f335e029c72368d60a3d","sha256":"8abefec5bf7d08e50b34f90b76d4a8c23e27cd90bda4bca934d5bcf2ceba7f4d"},"downloads":-1,"filename":"yt_dlp-2021.9.25-py2.py3-none-any.whl","has_sig":false,"md5_digest":"f43146f32f51f335e029c72368d60a3d","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.6","size":2202349,"upload_time":"2021-09-25T01:00:17","upload_time_iso_8601":"2021-09-25T01:00:17.109417Z","url":"https://files.pythonhosted.org/packages/b4/f2/8dd2b783afeb64ff8b030564edf760a486c0d205a5f0145d276706872fc6/yt_dlp-2021.9.25-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"ad2a19788cdbce56ea05600068bf342f91c91fd5acc6c6486e16d498b0ec533a","md5":"4583fbe2940fcdf61addadd1b6d8db85","sha256":"e7b8dd0ee9498abbd80eb38d9753696d6ca3d02f64980322ab3bf39ba1bc31ee"},"downloads":-1,"filename":"yt-dlp-2021.9.25.tar.gz","has_sig":false,"md5_digest":"4583fbe2940fcdf61addadd1b6d8db85","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":1890559,"upload_time":"2021-09-25T01:00:19","upload_time_iso_8601":"2021-09-25T01:00:19.435824Z","url":"https://files.pythonhosted.org/packages/ad/2a/19788cdbce56ea05600068bf342f91c91fd5acc6c6486e16d498b0ec533a/yt-dlp-2021.9.25.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2022.1.21":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":"","project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://yt-dlp.readthedocs.io","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2022.1.21/","requires_dist":["mutagen","pycryptodomex","websockets"],"requires_python":">=3.6","summary":"A youtube-dl fork with additional features and patches","version":"2022.1.21","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"8e107b43c0a779d4c6331088d64af7e4a2da27b47817f558e97ebbadfc41869f","md5":"8aaf328113e0f73235d4a622f6df21a2","sha256":"182903b78a4645edd504dcd9f2603f76f9fdaf8bd279fd45d01992f7637b6d8a"},"downloads":-1,"filename":"yt_dlp-2022.1.21-py2.py3-none-any.whl","has_sig":false,"md5_digest":"8aaf328113e0f73235d4a622f6df21a2","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.6","size":2475930,"upload_time":"2022-01-21T11:57:30","upload_time_iso_8601":"2022-01-21T11:57:30.240197Z","url":"https://files.pythonhosted.org/packages/8e/10/7b43c0a779d4c6331088d64af7e4a2da27b47817f558e97ebbadfc41869f/yt_dlp-2022.1.21-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"e359d367213d96c63c98c9f23140da8ec6f610a48cd9cfe2a740d0b17df120e6","md5":"e453800f7c8225cb84af7b64d5c5f24b","sha256":"220ec407389b5ea72e25dfc11c30e543489b90075c55311d5255e2045db8a9e2"},"downloads":-1,"filename":"yt-dlp-2022.1.21.tar.gz","has_sig":false,"md5_digest":"e453800f7c8225cb84af7b64d5c5f24b","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":2160713,"upload_time":"2022-01-21T11:57:32","upload_time_iso_8601":"2022-01-21T11:57:32.905094Z","url":"https://files.pythonhosted.org/packages/e3/59/d367213d96c63c98c9f23140da8ec6f610a48cd9cfe2a740d0b17df120e6/yt-dlp-2022.1.21.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2022.10.4":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2022.10.4/","requires_dist":["mutagen","pycryptodomex","websockets","certifi","brotlicffi ; platform_python_implementation != \"CPython\"","brotli ; platform_python_implementation == \"CPython\""],"requires_python":">=3.7","summary":"A youtube-dl fork with additional features and patches","version":"2022.10.4","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"2b8c6382d335662361fe06bea1ca96a189982cc050c2f9946dcd320b8c26a833","md5":"b8d70d325ffff4c90e5d3d3278ed948c","sha256":"cc21d91048b275bda7018bdc3103374882261ccf29720206d61b10e168c8b719"},"downloads":-1,"filename":"yt_dlp-2022.10.4-py2.py3-none-any.whl","has_sig":false,"md5_digest":"b8d70d325ffff4c90e5d3d3278ed948c","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.7","size":2726452,"upload_time":"2022-10-04T04:52:27","upload_time_iso_8601":"2022-10-04T04:52:27.531395Z","url":"https://files.pythonhosted.org/packages/2b/8c/6382d335662361fe06bea1ca96a189982cc050c2f9946dcd320b8c26a833/yt_dlp-2022.10.4-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"77e8b5fd86e2756e2be93c64e90123c0ff31780616f499d97156150327025877","md5":"8eb7be7c84fde014b17eed5d720f9bad","sha256":"1772a2e6f32b971b4d026deae3044f576b8052035255ca340f345cfe90d38d38"},"downloads":-1,"filename":"yt-dlp-2022.10.4.tar.gz","has_sig":false,"md5_digest":"8eb7be7c84fde014b17eed5d720f9bad","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":2427017,"upload_time":"2022-10-04T04:52:29","upload_time_iso_8601":"2022-10-04T04:52:29.796180Z","url":"https://files.pythonhosted.org/packages/77/e8/b5fd86e2756e2be93c64e90123c0ff31780616f499d97156150327025877/yt-dlp-2022.10.4.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-46121"],"details":"### Impact\nThe Generic Extractor in yt-dlp is vulnerable to an attacker setting an arbitrary proxy for a request to an arbitrary url, allowing the attacker to MITM the request made from yt-dlp's HTTP session. This could lead to cookie exfiltration in some cases.\n\n<details>\n\nTo pass extra control data between extractors (such as headers like `Referer`), yt-dlp employs a concept of \"url smuggling\". This works by adding this extra data as json to the url fragment (\"smuggling\") that is then passed on to an extractor. The receiving extractor then \"unsmuggles\" the data from the input url. This functionality is intended to be internal only.\n\nCurrently, the Generic extractor supports receiving an arbitrary dictionary of HTTP headers in a smuggled url, of which it extracts and adds them to the initial request it makes to such url. This is useful when a url sent to the Generic extractor needs a `Referer` header sent with it, for example.\n\nAdditionally, yt-dlp has internal headers to set a proxy for a request: `Ytdl-request-proxy` and `Ytdl-socks-proxy`. While these are deprecated, internally `Ytdl-request-proxy` is still used for `--geo-verification-proxy`.\n\nHowever, it is possible for a maliciously crafted site include these smuggled options in a url which then the Generic extractor extracts and redirects to itself.  This allows a malicious website to **set an arbitrary proxy for an arbitrary url that the Generic extractor will request.**\n\nThis could allow for the following, but not limited too:\n- An attacker can MITM a request it asks yt-dlp to make to **any** website.\n   - If a user has loaded cookies into yt-dlp for the target site, which are not marked as [secure](https://en.wikipedia.org/wiki/Secure_cookie), they could be exfiltrated by the attacker.\n   - Fortunately most sites are HTTPS and should be setting cookies as secure.\n- An attacker can set cookies for an arbitrary site.\n\nAn example malicious webpage:\n```html\n<!DOCTYPE html>\n<cinerama.embedPlayer('t','{{ target_site }}#__youtubedl_smuggle=%7B%22http_headers%22:%7B%22Ytdl-request-proxy%22:%22{{ proxy url }}%22%7D,%22fake%22:%22.smil/manifest%22%7D')\n```\n\nWhere `{{ target_site }}` is the URL Generic extractor will request and `{{ proxy url }}` is the proxy to proxy the request for this url through.\n\n</details>\n\n### Patches\n- We have removed the ability to smuggle `http_headers` to the Generic extractor, as well as other extractors that use the same pattern.\n\n### Workarounds\n- Disable Generic extractor (`--ies default,-generic`), or only pass trusted sites with trusted content.\n- Take caution when using `--no-check-certificate`.\n\n### References\n- <https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-3ch3-jhc6-5r8x>\n- <https://nvd.nist.gov/vuln/detail/CVE-2023-46121>\n- <https://github.com/yt-dlp/yt-dlp/releases/tag/2023.11.14>\n- <https://github.com/yt-dlp/yt-dlp/commit/f04b5bedad7b281bee9814686bba1762bae092eb>\n","fixed_in":["2023.11.14"],"id":"GHSA-3ch3-jhc6-5r8x","link":"https://osv.dev/vulnerability/GHSA-3ch3-jhc6-5r8x","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2022.11.11":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2022.11.11/","requires_dist":["mutagen","pycryptodomex","websockets","certifi","brotlicffi ; platform_python_implementation != \"CPython\"","brotli ; platform_python_implementation == \"CPython\""],"requires_python":">=3.7","summary":"A youtube-dl fork with additional features and patches","version":"2022.11.11","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"b67a4f1067904adad79b5f3ba8c81f879975b56515764cb42e241cf3528cb017","md5":"5c1eeb6dd5fc232568093af150d39a1e","sha256":"8bb7bd9ab2e6ecf4db7627e9151ce00572ae7ee24dedc78f611e7467b0ccd7d9"},"downloads":-1,"filename":"yt_dlp-2022.11.11-py2.py3-none-any.whl","has_sig":false,"md5_digest":"5c1eeb6dd5fc232568093af150d39a1e","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.7","size":2774161,"upload_time":"2022-11-11T10:40:55","upload_time_iso_8601":"2022-11-11T10:40:55.956366Z","url":"https://files.pythonhosted.org/packages/b6/7a/4f1067904adad79b5f3ba8c81f879975b56515764cb42e241cf3528cb017/yt_dlp-2022.11.11-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"5c5e8bb969d9063324267de01d1bdf5daba2f96659a13e0b443bb86b45d72a24","md5":"42eae2c64aeda3e54678e33e13979474","sha256":"f6b962023c17a77151476f0f6ed71be87d017629ba5d9994528bc548521191b6"},"downloads":-1,"filename":"yt-dlp-2022.11.11.tar.gz","has_sig":false,"md5_digest":"42eae2c64aeda3e54678e33e13979474","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":2470530,"upload_time":"2022-11-11T10:40:59","upload_time_iso_8601":"2022-11-11T10:40:59.233565Z","url":"https://files.pythonhosted.org/packages/5c/5e/8bb969d9063324267de01d1bdf5daba2f96659a13e0b443bb86b45d72a24/yt-dlp-2022.11.11.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-46121"],"details":"### Impact\nThe Generic Extractor in yt-dlp is vulnerable to an attacker setting an arbitrary proxy for a request to an arbitrary url, allowing the attacker to MITM the request made from yt-dlp's HTTP session. This could lead to cookie exfiltration in some cases.\n\n<details>\n\nTo pass extra control data between extractors (such as headers like `Referer`), yt-dlp employs a concept of \"url smuggling\". This works by adding this extra data as json to the url fragment (\"smuggling\") that is then passed on to an extractor. The receiving extractor then \"unsmuggles\" the data from the input url. This functionality is intended to be internal only.\n\nCurrently, the Generic extractor supports receiving an arbitrary dictionary of HTTP headers in a smuggled url, of which it extracts and adds them to the initial request it makes to such url. This is useful when a url sent to the Generic extractor needs a `Referer` header sent with it, for example.\n\nAdditionally, yt-dlp has internal headers to set a proxy for a request: `Ytdl-request-proxy` and `Ytdl-socks-proxy`. While these are deprecated, internally `Ytdl-request-proxy` is still used for `--geo-verification-proxy`.\n\nHowever, it is possible for a maliciously crafted site include these smuggled options in a url which then the Generic extractor extracts and redirects to itself.  This allows a malicious website to **set an arbitrary proxy for an arbitrary url that the Generic extractor will request.**\n\nThis could allow for the following, but not limited too:\n- An attacker can MITM a request it asks yt-dlp to make to **any** website.\n   - If a user has loaded cookies into yt-dlp for the target site, which are not marked as [secure](https://en.wikipedia.org/wiki/Secure_cookie), they could be exfiltrated by the attacker.\n   - Fortunately most sites are HTTPS and should be setting cookies as secure.\n- An attacker can set cookies for an arbitrary site.\n\nAn example malicious webpage:\n```html\n<!DOCTYPE html>\n<cinerama.embedPlayer('t','{{ target_site }}#__youtubedl_smuggle=%7B%22http_headers%22:%7B%22Ytdl-request-proxy%22:%22{{ proxy url }}%22%7D,%22fake%22:%22.smil/manifest%22%7D')\n```\n\nWhere `{{ target_site }}` is the URL Generic extractor will request and `{{ proxy url }}` is the proxy to proxy the request for this url through.\n\n</details>\n\n### Patches\n- We have removed the ability to smuggle `http_headers` to the Generic extractor, as well as other extractors that use the same pattern.\n\n### Workarounds\n- Disable Generic extractor (`--ies default,-generic`), or only pass trusted sites with trusted content.\n- Take caution when using `--no-check-certificate`.\n\n### References\n- <https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-3ch3-jhc6-5r8x>\n- <https://nvd.nist.gov/vuln/detail/CVE-2023-46121>\n- <https://github.com/yt-dlp/yt-dlp/releases/tag/2023.11.14>\n- <https://github.com/yt-dlp/yt-dlp/commit/f04b5bedad7b281bee9814686bba1762bae092eb>\n","fixed_in":["2023.11.14"],"id":"GHSA-3ch3-jhc6-5r8x","link":"https://osv.dev/vulnerability/GHSA-3ch3-jhc6-5r8x","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2022.2.3":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":"","project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://yt-dlp.readthedocs.io","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2022.2.3/","requires_dist":["mutagen","pycryptodomex","websockets"],"requires_python":">=3.6","summary":"A youtube-dl fork with additional features and patches","version":"2022.2.3","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"4ecd558678b244783f8eb20b32cad97fa2cf7ed9caac1da8316da826d037ea4f","md5":"079086cfe4018f9134e061f3c6f46d33","sha256":"49f61e8584f7efa69245e06de2f34e2019b0992af8204b16ede8dee3bd531d2b"},"downloads":-1,"filename":"yt_dlp-2022.2.3-py2.py3-none-any.whl","has_sig":false,"md5_digest":"079086cfe4018f9134e061f3c6f46d33","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.6","size":2492427,"upload_time":"2022-02-03T17:52:14","upload_time_iso_8601":"2022-02-03T17:52:14.006222Z","url":"https://files.pythonhosted.org/packages/4e/cd/558678b244783f8eb20b32cad97fa2cf7ed9caac1da8316da826d037ea4f/yt_dlp-2022.2.3-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"d86fe7f7918b29bb3a4da8d1f548a8a3c5e8446acb02fb4bcb1254a225a9c407","md5":"21683564c0979e0e7e12b418c3c7bfbb","sha256":"955dd1814abd178baff2383d1542efee48adfc9de9e2f5c86784b09cd6f5a262"},"downloads":-1,"filename":"yt-dlp-2022.2.3.tar.gz","has_sig":false,"md5_digest":"21683564c0979e0e7e12b418c3c7bfbb","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":2177760,"upload_time":"2022-02-03T17:52:16","upload_time_iso_8601":"2022-02-03T17:52:16.520842Z","url":"https://files.pythonhosted.org/packages/d8/6f/e7f7918b29bb3a4da8d1f548a8a3c5e8446acb02fb4bcb1254a225a9c407/yt-dlp-2022.2.3.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2022.2.4":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":"","project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://yt-dlp.readthedocs.io","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2022.2.4/","requires_dist":["mutagen","pycryptodomex","websockets"],"requires_python":">=3.6","summary":"A youtube-dl fork with additional features and patches","version":"2022.2.4","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"1c291e5b637c0dfdabfa75cd5eb5763903b836ebb29d4576c73f56315c137620","md5":"35c8742e12776b8bf6802974e3d31fbb","sha256":"b0051920e066379acba6e253adba8bc1592e2ad1b7923df3a56793a4774b0cee"},"downloads":-1,"filename":"yt_dlp-2022.2.4-py2.py3-none-any.whl","has_sig":false,"md5_digest":"35c8742e12776b8bf6802974e3d31fbb","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.6","size":2493171,"upload_time":"2022-02-04T06:39:35","upload_time_iso_8601":"2022-02-04T06:39:35.045761Z","url":"https://files.pythonhosted.org/packages/1c/29/1e5b637c0dfdabfa75cd5eb5763903b836ebb29d4576c73f56315c137620/yt_dlp-2022.2.4-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"5ce0e5bae3e87ee6da0f7507f3b58c5e9ffc1500de0742886ccc72c1a56740f2","md5":"dc533d8d5d7fe2fc2c50cb18109d99c9","sha256":"81b50ed7cf9cfcc042d8f5a1ad2d1cd7b13c48b36c07faf1880696eac0a7ddb5"},"downloads":-1,"filename":"yt-dlp-2022.2.4.tar.gz","has_sig":false,"md5_digest":"dc533d8d5d7fe2fc2c50cb18109d99c9","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":2178642,"upload_time":"2022-02-04T06:39:37","upload_time_iso_8601":"2022-02-04T06:39:37.350276Z","url":"https://files.pythonhosted.org/packages/5c/e0/e5bae3e87ee6da0f7507f3b58c5e9ffc1500de0742886ccc72c1a56740f2/yt-dlp-2022.2.4.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2022.3.8":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://yt-dlp.readthedocs.io","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2022.3.8/","requires_dist":["mutagen","pycryptodomex","websockets","brotlicffi ; platform_python_implementation != \"CPython\"","brotli ; platform_python_implementation == \"CPython\""],"requires_python":">=3.6","summary":"A youtube-dl fork with additional features and patches","version":"2022.3.8","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"f3dabdf7feee2cf8c28b34b90ef110cdee9cc64b58a2c1ebbe7691384d7a21d5","md5":"91aff3cd400cc17bf11588e9dffa1142","sha256":"f8e006cef6e7f51e1020b3be58ce3279f8024c8bf7a02c8622690e50fc02afb4"},"downloads":-1,"filename":"yt_dlp-2022.3.8-py2.py3-none-any.whl","has_sig":false,"md5_digest":"91aff3cd400cc17bf11588e9dffa1142","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.6","size":2536893,"upload_time":"2022-03-08T19:57:34","upload_time_iso_8601":"2022-03-08T19:57:34.009165Z","url":"https://files.pythonhosted.org/packages/f3/da/bdf7feee2cf8c28b34b90ef110cdee9cc64b58a2c1ebbe7691384d7a21d5/yt_dlp-2022.3.8-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"820835e4d27cc239141fc2a114fa655174b176411ebed71ae035c6b58832f47d","md5":"757ba4a6c3f68b1f0e3c65e59ad148bc","sha256":"09fdd865a40143b61fe0896565e881e5c80848a338c1d51481530f8ddb01fc0b"},"downloads":-1,"filename":"yt-dlp-2022.3.8.tar.gz","has_sig":false,"md5_digest":"757ba4a6c3f68b1f0e3c65e59ad148bc","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":2220453,"upload_time":"2022-03-08T19:57:36","upload_time_iso_8601":"2022-03-08T19:57:36.957881Z","url":"https://files.pythonhosted.org/packages/82/08/35e4d27cc239141fc2a114fa655174b176411ebed71ae035c6b58832f47d/yt-dlp-2022.3.8.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2022.3.8.1":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://yt-dlp.readthedocs.io","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2022.3.8.1/","requires_dist":["mutagen","pycryptodomex","websockets","brotlicffi ; platform_python_implementation != \"CPython\"","brotli ; platform_python_implementation == \"CPython\""],"requires_python":">=3.6","summary":"A youtube-dl fork with additional features and patches","version":"2022.3.8.1","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"20a625595a058820512b8edfd549cfc83745b745044330a321abe2f176fcf02a","md5":"32cfa1ce464d66697fce12df4036b210","sha256":"5dcdc9c5fbdb5188c75cdaf32283de6c5a096dd139549e3cd89817e1f255ce41"},"downloads":-1,"filename":"yt_dlp-2022.3.8.1-py2.py3-none-any.whl","has_sig":false,"md5_digest":"32cfa1ce464d66697fce12df4036b210","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.6","size":2537283,"upload_time":"2022-03-08T20:23:54","upload_time_iso_8601":"2022-03-08T20:23:54.167328Z","url":"https://files.pythonhosted.org/packages/20/a6/25595a058820512b8edfd549cfc83745b745044330a321abe2f176fcf02a/yt_dlp-2022.3.8.1-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f082b4dc507e050a24d1c1a15af4e9ebe01fc17f36e2de4d2ee857afd31b21c4","md5":"63d0f3a5117aea0c44d9aec7c4729a96","sha256":"edb4ac8a9a9bd124790ca38931a04c729967a1f710c9d5a19e6b089bb83a7224"},"downloads":-1,"filename":"yt-dlp-2022.3.8.1.tar.gz","has_sig":false,"md5_digest":"63d0f3a5117aea0c44d9aec7c4729a96","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":2220785,"upload_time":"2022-03-08T20:23:56","upload_time_iso_8601":"2022-03-08T20:23:56.579576Z","url":"https://files.pythonhosted.org/packages/f0/82/b4dc507e050a24d1c1a15af4e9ebe01fc17f36e2de4d2ee857afd31b21c4/yt-dlp-2022.3.8.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2022.3.8.2":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://yt-dlp.readthedocs.io","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2022.3.8.2/","requires_dist":["mutagen","pycryptodomex","websockets","brotlicffi ; platform_python_implementation != \"CPython\"","brotli ; platform_python_implementation == \"CPython\""],"requires_python":">=3.6","summary":"A youtube-dl fork with additional features and patches","version":"2022.3.8.2","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"c0613a08dc08c0c60498a0136a7eec1a098f08be79f75bf35fdd0a15a1bace70","md5":"f41495a62e97a3f79741d0e81fc4c4d7","sha256":"05179f0f2c34f06910003bb9f80af68ff798b072ca0f826c0e6704a3fbd5b306"},"downloads":-1,"filename":"yt_dlp-2022.3.8.2-py3-none-any.whl","has_sig":false,"md5_digest":"f41495a62e97a3f79741d0e81fc4c4d7","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":2566575,"upload_time":"2022-03-09T01:44:07","upload_time_iso_8601":"2022-03-09T01:44:07.031666Z","url":"https://files.pythonhosted.org/packages/c0/61/3a08dc08c0c60498a0136a7eec1a098f08be79f75bf35fdd0a15a1bace70/yt_dlp-2022.3.8.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"1ba9781ef55dd51d331e3d8ca60723853f13e75be5b8713870c015b3c4283326","md5":"c0473e6d66a214e5a03626c32c6052cd","sha256":"68546578c18e6ce87450b53769d5d5b7f5a23e5209784976db6c7ccbf7954b21"},"downloads":-1,"filename":"yt-dlp-2022.3.8.2.tar.gz","has_sig":false,"md5_digest":"c0473e6d66a214e5a03626c32c6052cd","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":2454754,"upload_time":"2022-03-09T01:44:13","upload_time_iso_8601":"2022-03-09T01:44:13.733519Z","url":"https://files.pythonhosted.org/packages/1b/a9/781ef55dd51d331e3d8ca60723853f13e75be5b8713870c015b3c4283326/yt-dlp-2022.3.8.2.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2022.4.8":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://yt-dlp.readthedocs.io","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2022.4.8/","requires_dist":["mutagen","pycryptodomex","websockets","certifi","brotlicffi ; platform_python_implementation != \"CPython\"","brotli ; platform_python_implementation == \"CPython\""],"requires_python":">=3.6","summary":"A youtube-dl fork with additional features and patches","version":"2022.4.8","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"6e77efb8398b88e51b5d81ec5fefe1c3ea69e775a6f8fef06654be840d22b433","md5":"bbdedb66f6ba20e51964ddc94123b0d6","sha256":"6edefe326b1e1478fdbe627a66203e5248a6b0dd50c101e682cf700ab70cdf72"},"downloads":-1,"filename":"yt_dlp-2022.4.8-py2.py3-none-any.whl","has_sig":false,"md5_digest":"bbdedb66f6ba20e51964ddc94123b0d6","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.6","size":2575767,"upload_time":"2022-04-08T09:57:27","upload_time_iso_8601":"2022-04-08T09:57:27.193172Z","url":"https://files.pythonhosted.org/packages/6e/77/efb8398b88e51b5d81ec5fefe1c3ea69e775a6f8fef06654be840d22b433/yt_dlp-2022.4.8-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"40dd5a359d561d708edbfe5269c583fd91fd9493a2fce0b77644ffb69219436b","md5":"ebd3c35146e68dc90655076d51445c24","sha256":"8758d016509d4574b90fbde975aa70adaef71ed5e7a195141588f6d6945205ba"},"downloads":-1,"filename":"yt-dlp-2022.4.8.tar.gz","has_sig":false,"md5_digest":"ebd3c35146e68dc90655076d51445c24","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":2257195,"upload_time":"2022-04-08T09:57:29","upload_time_iso_8601":"2022-04-08T09:57:29.227268Z","url":"https://files.pythonhosted.org/packages/40/dd/5a359d561d708edbfe5269c583fd91fd9493a2fce0b77644ffb69219436b/yt-dlp-2022.4.8.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2022.5.18":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2022.5.18/","requires_dist":["mutagen","pycryptodomex","websockets","certifi","brotlicffi ; platform_python_implementation != \"CPython\"","brotli ; platform_python_implementation == \"CPython\""],"requires_python":">=3.6","summary":"A youtube-dl fork with additional features and patches","version":"2022.5.18","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"9abf1bc7e3096ddc2c398b3d04176530a9c02efe08546d9730c9eef0b07a0a43","md5":"9d7ab59dd6f6453dad4d0bd82a331ca1","sha256":"deec1009442312c1e2ee5298966842194d0e950b433f0d4fc844ef464b9c32a7"},"downloads":-1,"filename":"yt_dlp-2022.5.18-py2.py3-none-any.whl","has_sig":false,"md5_digest":"9d7ab59dd6f6453dad4d0bd82a331ca1","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.6","size":2578583,"upload_time":"2022-05-18T03:37:52","upload_time_iso_8601":"2022-05-18T03:37:52.059385Z","url":"https://files.pythonhosted.org/packages/9a/bf/1bc7e3096ddc2c398b3d04176530a9c02efe08546d9730c9eef0b07a0a43/yt_dlp-2022.5.18-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"0660c4146cecfe7f480fc3cb1a8608ba123b7c1e0b74813db77b8f04fd7a7280","md5":"933d759d7cb340298c3609f7ffe7654d","sha256":"3a7b59d2fb4b39ce8ba8e0b9c5a37fe20e5624f46a2346b4ae66ab1320e35134"},"downloads":-1,"filename":"yt-dlp-2022.5.18.tar.gz","has_sig":false,"md5_digest":"933d759d7cb340298c3609f7ffe7654d","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":2277146,"upload_time":"2022-05-18T03:37:54","upload_time_iso_8601":"2022-05-18T03:37:54.578373Z","url":"https://files.pythonhosted.org/packages/06/60/c4146cecfe7f480fc3cb1a8608ba123b7c1e0b74813db77b8f04fd7a7280/yt-dlp-2022.5.18.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2022.6.22":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2022.6.22/","requires_dist":["mutagen","pycryptodomex","websockets","certifi","brotlicffi ; platform_python_implementation != \"CPython\"","brotli ; platform_python_implementation == \"CPython\""],"requires_python":">=3.6","summary":"A youtube-dl fork with additional features and patches","version":"2022.6.22","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"7161d1f46b30e7a67e5b6581a27f54d4585a723555630e607192e51bd93e06ea","md5":"6781fc4a9bf2c395d7e4ba61030fe0b7","sha256":"0665e8039449f56dbd032b2354ac4c155761147013130227fbc54505431e9ae1"},"downloads":-1,"filename":"yt_dlp-2022.6.22-py2.py3-none-any.whl","has_sig":false,"md5_digest":"6781fc4a9bf2c395d7e4ba61030fe0b7","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.6","size":2614910,"upload_time":"2022-06-22T00:59:56","upload_time_iso_8601":"2022-06-22T00:59:56.057168Z","url":"https://files.pythonhosted.org/packages/71/61/d1f46b30e7a67e5b6581a27f54d4585a723555630e607192e51bd93e06ea/yt_dlp-2022.6.22-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"ff6105b29c179972c77de54e78a08d72fd2a52f15476360c7d030797c0cbb5b0","md5":"82f00d684a755ce82f8351d344576862","sha256":"c90dd7f224d7d55e7217d7ff1c07b0ca3c58392e62ce40304e24618d724dd3e1"},"downloads":-1,"filename":"yt-dlp-2022.6.22.tar.gz","has_sig":false,"md5_digest":"82f00d684a755ce82f8351d344576862","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":2314780,"upload_time":"2022-06-22T00:59:58","upload_time_iso_8601":"2022-06-22T00:59:58.282799Z","url":"https://files.pythonhosted.org/packages/ff/61/05b29c179972c77de54e78a08d72fd2a52f15476360c7d030797c0cbb5b0/yt-dlp-2022.6.22.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2022.6.22.1":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2022.6.22.1/","requires_dist":["mutagen","pycryptodomex","websockets","certifi","brotlicffi ; platform_python_implementation != \"CPython\"","brotli ; platform_python_implementation == \"CPython\""],"requires_python":">=3.6","summary":"A youtube-dl fork with additional features and patches","version":"2022.6.22.1","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"06d83d1cc7f8e7471558869addcad78f73cc8a3bc3a462e8f5b5b7d748113506","md5":"94534458a4ccb256af9aae89fd0dee8a","sha256":"3f2899b9082b50c890ce10beda4493fbbc016f4d73b924dfc26be670e5cae9fa"},"downloads":-1,"filename":"yt_dlp-2022.6.22.1-py2.py3-none-any.whl","has_sig":false,"md5_digest":"94534458a4ccb256af9aae89fd0dee8a","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.6","size":2614965,"upload_time":"2022-06-22T01:16:17","upload_time_iso_8601":"2022-06-22T01:16:17.238033Z","url":"https://files.pythonhosted.org/packages/06/d8/3d1cc7f8e7471558869addcad78f73cc8a3bc3a462e8f5b5b7d748113506/yt_dlp-2022.6.22.1-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"4d63c2280d3cc56c6545e348cbfb589a698e211d967c666b4682adfd880318dc","md5":"0884d52e0431a9c95c312861a02fdc74","sha256":"ee401a9dcc7e9285b14f13229c3dcefdf387e597f4f4f773dab326aafe3b830c"},"downloads":-1,"filename":"yt-dlp-2022.6.22.1.tar.gz","has_sig":false,"md5_digest":"0884d52e0431a9c95c312861a02fdc74","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":2314891,"upload_time":"2022-06-22T01:16:19","upload_time_iso_8601":"2022-06-22T01:16:19.326266Z","url":"https://files.pythonhosted.org/packages/4d/63/c2280d3cc56c6545e348cbfb589a698e211d967c666b4682adfd880318dc/yt-dlp-2022.6.22.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2022.6.29":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2022.6.29/","requires_dist":["mutagen","pycryptodomex","websockets","certifi","brotlicffi ; platform_python_implementation != \"CPython\"","brotli ; platform_python_implementation == \"CPython\""],"requires_python":">=3.6","summary":"A youtube-dl fork with additional features and patches","version":"2022.6.29","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"aaa01fa912cd0f611af8ba9524faa5b79b18ee9a74d65ff8c94609ea2530b07e","md5":"0cfd26aeb4937e398e50f7d49bf7be4d","sha256":"a688f5cbc4a824456983774ccdd4a12befd379f6c92e25074fa85e7b8ce31704"},"downloads":-1,"filename":"yt_dlp-2022.6.29-py2.py3-none-any.whl","has_sig":false,"md5_digest":"0cfd26aeb4937e398e50f7d49bf7be4d","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.6","size":2622520,"upload_time":"2022-06-29T01:43:46","upload_time_iso_8601":"2022-06-29T01:43:46.441730Z","url":"https://files.pythonhosted.org/packages/aa/a0/1fa912cd0f611af8ba9524faa5b79b18ee9a74d65ff8c94609ea2530b07e/yt_dlp-2022.6.29-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"827fe70942522978a962c8c16f0b13053b2fdf4ff63863103c36f9bbd29a30df","md5":"3e84fd3b98523e474c92e2772b56e5f7","sha256":"5fbfac72fd035d11bc2693e5d1cd6933b1bc0712f742f5082a261703810bb5c9"},"downloads":-1,"filename":"yt-dlp-2022.6.29.tar.gz","has_sig":false,"md5_digest":"3e84fd3b98523e474c92e2772b56e5f7","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":2321677,"upload_time":"2022-06-29T01:43:49","upload_time_iso_8601":"2022-06-29T01:43:49.211096Z","url":"https://files.pythonhosted.org/packages/82/7f/e70942522978a962c8c16f0b13053b2fdf4ff63863103c36f9bbd29a30df/yt-dlp-2022.6.29.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2022.7.17":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2022.7.17/","requires_dist":["mutagen","pycryptodomex","websockets","certifi","brotlicffi ; platform_python_implementation != \"CPython\"","brotli ; platform_python_implementation == \"CPython\""],"requires_python":">=3.6","summary":"A youtube-dl fork with additional features and patches","version":"2022.7.17","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"07516dddfec77c7f46df2a28e4cb44d40b99adc695865c02edeabc34c2259b1c","md5":"9552fd726350749a466f7b27477d6517","sha256":"258f29e7e2453f4484fb0a3e0d21cc035b073487189f18350bea03e708ff909c"},"downloads":-1,"filename":"yt_dlp-2022.7.17-py2.py3-none-any.whl","has_sig":false,"md5_digest":"9552fd726350749a466f7b27477d6517","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.6","size":2652809,"upload_time":"2022-07-17T23:50:21","upload_time_iso_8601":"2022-07-17T23:50:21.410511Z","url":"https://files.pythonhosted.org/packages/07/51/6dddfec77c7f46df2a28e4cb44d40b99adc695865c02edeabc34c2259b1c/yt_dlp-2022.7.17-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"6f11cde98ca464de0d8210b4b01792d512168db193ed8cc6300164ec40b52efe","md5":"ed049daa902dcb05e3784774c5edb21d","sha256":"e587663e8e1f4e1d20d22d78554368e9ca759454c9b0ebad06c50fec1c9c5939"},"downloads":-1,"filename":"yt-dlp-2022.7.17.tar.gz","has_sig":false,"md5_digest":"ed049daa902dcb05e3784774c5edb21d","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":2348933,"upload_time":"2022-07-17T23:50:24","upload_time_iso_8601":"2022-07-17T23:50:24.137207Z","url":"https://files.pythonhosted.org/packages/6f/11/cde98ca464de0d8210b4b01792d512168db193ed8cc6300164ec40b52efe/yt-dlp-2022.7.17.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2022.7.18":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2022.7.18/","requires_dist":["mutagen","pycryptodomex","websockets","certifi","brotlicffi ; platform_python_implementation != \"CPython\"","brotli ; platform_python_implementation == \"CPython\""],"requires_python":">=3.6","summary":"A youtube-dl fork with additional features and patches","version":"2022.7.18","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"1f13b1f7b4e44b11584a5f077af87895961b57911217a629efb8d3a9efd2a491","md5":"5bb5fb13f35caf623ffca9277c623c85","sha256":"d7d1f81d230756f094b4d9ee59b37b2c13b2e63ff5fb72cda53625edb072cdae"},"downloads":-1,"filename":"yt_dlp-2022.7.18-py2.py3-none-any.whl","has_sig":false,"md5_digest":"5bb5fb13f35caf623ffca9277c623c85","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.6","size":2652810,"upload_time":"2022-07-18T00:05:51","upload_time_iso_8601":"2022-07-18T00:05:51.228218Z","url":"https://files.pythonhosted.org/packages/1f/13/b1f7b4e44b11584a5f077af87895961b57911217a629efb8d3a9efd2a491/yt_dlp-2022.7.18-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"1505d9c74834b34ed3a42918ff047d6045f9aaa358f2b46ee5c1a45b4a23e368","md5":"35e2c81a6c1c1e00fd9dc2a750694785","sha256":"0e7b81fc6ac8d1b7d3fffa79f9044ca4163784422582c9a3593305da2a69ec02"},"downloads":-1,"filename":"yt-dlp-2022.7.18.tar.gz","has_sig":false,"md5_digest":"35e2c81a6c1c1e00fd9dc2a750694785","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":2348854,"upload_time":"2022-07-18T00:05:53","upload_time_iso_8601":"2022-07-18T00:05:53.730643Z","url":"https://files.pythonhosted.org/packages/15/05/d9c74834b34ed3a42918ff047d6045f9aaa358f2b46ee5c1a45b4a23e368/yt-dlp-2022.7.18.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2022.8.14":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2022.8.14/","requires_dist":["mutagen","pycryptodomex","websockets","certifi","brotlicffi ; platform_python_implementation != \"CPython\"","brotli ; platform_python_implementation == \"CPython\""],"requires_python":">=3.7","summary":"A youtube-dl fork with additional features and patches","version":"2022.8.14","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"a70d0267f5efa1982d37a261913e3a556035baf68687af2e0af47f5b25b0d619","md5":"26980d5f484f6fd8c118dead94ae3703","sha256":"b84f94a01b0a743c14607cc27840b5a09daba16005372cce747455d8ca2f25fd"},"downloads":-1,"filename":"yt_dlp-2022.8.14-py2.py3-none-any.whl","has_sig":false,"md5_digest":"26980d5f484f6fd8c118dead94ae3703","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.7","size":2686716,"upload_time":"2022-08-14T22:20:33","upload_time_iso_8601":"2022-08-14T22:20:33.967506Z","url":"https://files.pythonhosted.org/packages/a7/0d/0267f5efa1982d37a261913e3a556035baf68687af2e0af47f5b25b0d619/yt_dlp-2022.8.14-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"0005fc7d6be0bd5641a756f7d63a15fa81453b7189e4a5a7212834bd2bd98c20","md5":"a85255981fd5871463e9ecb15d1c936d","sha256":"9a2ceb76a4cc48aa80127eff8a853d9c8b7efe8be121c2123dcbfd3d06bc945f"},"downloads":-1,"filename":"yt-dlp-2022.8.14.tar.gz","has_sig":false,"md5_digest":"a85255981fd5871463e9ecb15d1c936d","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":2368444,"upload_time":"2022-08-14T22:20:37","upload_time_iso_8601":"2022-08-14T22:20:37.166675Z","url":"https://files.pythonhosted.org/packages/00/05/fc7d6be0bd5641a756f7d63a15fa81453b7189e4a5a7212834bd2bd98c20/yt-dlp-2022.8.14.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2022.8.19":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2022.8.19/","requires_dist":["mutagen","pycryptodomex","websockets","certifi","brotlicffi ; platform_python_implementation != \"CPython\"","brotli ; platform_python_implementation == \"CPython\""],"requires_python":">=3.7","summary":"A youtube-dl fork with additional features and patches","version":"2022.8.19","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"5063e9f87d3d4a6cce462847a195eb8588b4bcb8e7fdc91bd3e9406fd302a687","md5":"253b51813937505260c2dfcb8cf8109f","sha256":"a01d3c7187683ec17db33ecd3b506436c7e94c5693002f059f76d32fb437083e"},"downloads":-1,"filename":"yt_dlp-2022.8.19-py2.py3-none-any.whl","has_sig":false,"md5_digest":"253b51813937505260c2dfcb8cf8109f","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.7","size":2676560,"upload_time":"2022-08-19T00:13:06","upload_time_iso_8601":"2022-08-19T00:13:06.566803Z","url":"https://files.pythonhosted.org/packages/50/63/e9f87d3d4a6cce462847a195eb8588b4bcb8e7fdc91bd3e9406fd302a687/yt_dlp-2022.8.19-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"be7e2db5256371519d978e0c4b768157cfeaa08271986786107a0680d6382e41","md5":"b5a75dbd9fdae88b14a42fcec36ba9b0","sha256":"cc290ac8a1fec626841765fed12f7a1ebdfe01791ae5c5f3794edfce35d81843"},"downloads":-1,"filename":"yt-dlp-2022.8.19.tar.gz","has_sig":false,"md5_digest":"b5a75dbd9fdae88b14a42fcec36ba9b0","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":2373949,"upload_time":"2022-08-19T00:13:09","upload_time_iso_8601":"2022-08-19T00:13:09.247025Z","url":"https://files.pythonhosted.org/packages/be/7e/2db5256371519d978e0c4b768157cfeaa08271986786107a0680d6382e41/yt-dlp-2022.8.19.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2022.8.8":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2022.8.8/","requires_dist":["mutagen","pycryptodomex","websockets","certifi","brotlicffi ; platform_python_implementation != \"CPython\"","brotli ; platform_python_implementation == \"CPython\""],"requires_python":">=3.7","summary":"A youtube-dl fork with additional features and patches","version":"2022.8.8","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"404569ae1666152e6eb442c3796be81cfe8bd75cec15e343ac9306db22efc23b","md5":"7dc1540e36dc8f567de13502b7aa2ece","sha256":"3ce32a1d3e444365fc7d733dbc057808346abb2d137101f06e5cccdc69f42651"},"downloads":-1,"filename":"yt_dlp-2022.8.8-py2.py3-none-any.whl","has_sig":false,"md5_digest":"7dc1540e36dc8f567de13502b7aa2ece","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.7","size":2664248,"upload_time":"2022-08-08T22:17:18","upload_time_iso_8601":"2022-08-08T22:17:18.419555Z","url":"https://files.pythonhosted.org/packages/40/45/69ae1666152e6eb442c3796be81cfe8bd75cec15e343ac9306db22efc23b/yt_dlp-2022.8.8-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"89a96abf9c2e99d30826a99ffa2b965bd567e9abd170e7685e4457895bc4b148","md5":"d9b2bd5c02bec97b38ed25d13808330c","sha256":"15cab6126e12af11134213806e6a5cf97d1c6221e148aa2618ddd42939a30a8d"},"downloads":-1,"filename":"yt-dlp-2022.8.8.tar.gz","has_sig":false,"md5_digest":"d9b2bd5c02bec97b38ed25d13808330c","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":2361172,"upload_time":"2022-08-08T22:17:21","upload_time_iso_8601":"2022-08-08T22:17:21.022567Z","url":"https://files.pythonhosted.org/packages/89/a9/6abf9c2e99d30826a99ffa2b965bd567e9abd170e7685e4457895bc4b148/yt-dlp-2022.8.8.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2022.9.1":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2022.9.1/","requires_dist":["mutagen","pycryptodomex","websockets","certifi","brotlicffi ; platform_python_implementation != \"CPython\"","brotli ; platform_python_implementation == \"CPython\""],"requires_python":">=3.7","summary":"A youtube-dl fork with additional features and patches","version":"2022.9.1","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"10a56e8b3a3f9caa535543f342254ee15e711cb26e974b54f998e90e17e1fe09","md5":"6ec29e78b8c1c7f1612e15bd0bfd4889","sha256":"af3721ecb286a95272008add3b9bebde4f370fb3bdd1bb6402727af9e2e3aa2b"},"downloads":-1,"filename":"yt_dlp-2022.9.1-py2.py3-none-any.whl","has_sig":false,"md5_digest":"6ec29e78b8c1c7f1612e15bd0bfd4889","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.7","size":2691458,"upload_time":"2022-09-01T11:28:04","upload_time_iso_8601":"2022-09-01T11:28:04.884267Z","url":"https://files.pythonhosted.org/packages/10/a5/6e8b3a3f9caa535543f342254ee15e711cb26e974b54f998e90e17e1fe09/yt_dlp-2022.9.1-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f8efcdf55266ace06a9451e94a594dd57202910f86b24adfc5f5af4c66331322","md5":"bb99b20a542e04dfcc6fe32b4f9b3026","sha256":"bc74ee255790043e458197aaf25c6c104fefc9fcda4458f652619447ab4ae0d7"},"downloads":-1,"filename":"yt-dlp-2022.9.1.tar.gz","has_sig":false,"md5_digest":"bb99b20a542e04dfcc6fe32b4f9b3026","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":2387756,"upload_time":"2022-09-01T11:28:07","upload_time_iso_8601":"2022-09-01T11:28:07.520992Z","url":"https://files.pythonhosted.org/packages/f8/ef/cdf55266ace06a9451e94a594dd57202910f86b24adfc5f5af4c66331322/yt-dlp-2022.9.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2023.1.2":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2023.1.2/","requires_dist":["mutagen","pycryptodomex","websockets","certifi","brotlicffi ; platform_python_implementation != \"CPython\"","brotli ; platform_python_implementation == \"CPython\""],"requires_python":">=3.7","summary":"A youtube-dl fork with additional features and patches","version":"2023.1.2","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"4f822cf81d524309261c7d27ed15498eb9413d4d44100f270929de1784ec5db4","md5":"aeb9086c4c585358495484ad7f4b7b37","sha256":"37040bb0cda9f10168954eaf89f3d6e187106af81c11fded3c22ec0311194cd6"},"downloads":-1,"filename":"yt_dlp-2023.1.2-py2.py3-none-any.whl","has_sig":false,"md5_digest":"aeb9086c4c585358495484ad7f4b7b37","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.7","size":2824984,"upload_time":"2023-01-02T14:46:42","upload_time_iso_8601":"2023-01-02T14:46:42.757526Z","url":"https://files.pythonhosted.org/packages/4f/82/2cf81d524309261c7d27ed15498eb9413d4d44100f270929de1784ec5db4/yt_dlp-2023.1.2-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c98d5701194ffbfecc8af3e0f0af31febc6414e48c0f118958eabfa9ce800abb","md5":"b2e4c8409331020af559000f8ed46b2f","sha256":"b8d7bbb5c1595f718855a31f34d8a0276a7086f5d3f542c021a8ded8b26d36ae"},"downloads":-1,"filename":"yt-dlp-2023.1.2.tar.gz","has_sig":false,"md5_digest":"b2e4c8409331020af559000f8ed46b2f","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":2524384,"upload_time":"2023-01-02T14:46:44","upload_time_iso_8601":"2023-01-02T14:46:44.932607Z","url":"https://files.pythonhosted.org/packages/c9/8d/5701194ffbfecc8af3e0f0af31febc6414e48c0f118958eabfa9ce800abb/yt-dlp-2023.1.2.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-46121"],"details":"### Impact\nThe Generic Extractor in yt-dlp is vulnerable to an attacker setting an arbitrary proxy for a request to an arbitrary url, allowing the attacker to MITM the request made from yt-dlp's HTTP session. This could lead to cookie exfiltration in some cases.\n\n<details>\n\nTo pass extra control data between extractors (such as headers like `Referer`), yt-dlp employs a concept of \"url smuggling\". This works by adding this extra data as json to the url fragment (\"smuggling\") that is then passed on to an extractor. The receiving extractor then \"unsmuggles\" the data from the input url. This functionality is intended to be internal only.\n\nCurrently, the Generic extractor supports receiving an arbitrary dictionary of HTTP headers in a smuggled url, of which it extracts and adds them to the initial request it makes to such url. This is useful when a url sent to the Generic extractor needs a `Referer` header sent with it, for example.\n\nAdditionally, yt-dlp has internal headers to set a proxy for a request: `Ytdl-request-proxy` and `Ytdl-socks-proxy`. While these are deprecated, internally `Ytdl-request-proxy` is still used for `--geo-verification-proxy`.\n\nHowever, it is possible for a maliciously crafted site include these smuggled options in a url which then the Generic extractor extracts and redirects to itself.  This allows a malicious website to **set an arbitrary proxy for an arbitrary url that the Generic extractor will request.**\n\nThis could allow for the following, but not limited too:\n- An attacker can MITM a request it asks yt-dlp to make to **any** website.\n   - If a user has loaded cookies into yt-dlp for the target site, which are not marked as [secure](https://en.wikipedia.org/wiki/Secure_cookie), they could be exfiltrated by the attacker.\n   - Fortunately most sites are HTTPS and should be setting cookies as secure.\n- An attacker can set cookies for an arbitrary site.\n\nAn example malicious webpage:\n```html\n<!DOCTYPE html>\n<cinerama.embedPlayer('t','{{ target_site }}#__youtubedl_smuggle=%7B%22http_headers%22:%7B%22Ytdl-request-proxy%22:%22{{ proxy url }}%22%7D,%22fake%22:%22.smil/manifest%22%7D')\n```\n\nWhere `{{ target_site }}` is the URL Generic extractor will request and `{{ proxy url }}` is the proxy to proxy the request for this url through.\n\n</details>\n\n### Patches\n- We have removed the ability to smuggle `http_headers` to the Generic extractor, as well as other extractors that use the same pattern.\n\n### Workarounds\n- Disable Generic extractor (`--ies default,-generic`), or only pass trusted sites with trusted content.\n- Take caution when using `--no-check-certificate`.\n\n### References\n- <https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-3ch3-jhc6-5r8x>\n- <https://nvd.nist.gov/vuln/detail/CVE-2023-46121>\n- <https://github.com/yt-dlp/yt-dlp/releases/tag/2023.11.14>\n- <https://github.com/yt-dlp/yt-dlp/commit/f04b5bedad7b281bee9814686bba1762bae092eb>\n","fixed_in":["2023.11.14"],"id":"GHSA-3ch3-jhc6-5r8x","link":"https://osv.dev/vulnerability/GHSA-3ch3-jhc6-5r8x","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2023.1.6":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2023.1.6/","requires_dist":["mutagen","pycryptodomex","websockets","certifi","brotlicffi ; platform_python_implementation != \"CPython\"","brotli ; platform_python_implementation == \"CPython\""],"requires_python":">=3.7","summary":"A youtube-dl fork with additional features and patches","version":"2023.1.6","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"a749b49e0ae6fdc959235ecb89a3a5be77dd050493dc30845f89482fb83e38b4","md5":"080d07af48372313ec404cb8993d2d85","sha256":"bcac3231e2022cad128a83f69948c845b364b2a85fde53415378f7c199808849"},"downloads":-1,"filename":"yt_dlp-2023.1.6-py2.py3-none-any.whl","has_sig":false,"md5_digest":"080d07af48372313ec404cb8993d2d85","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.7","size":2829848,"upload_time":"2023-01-06T21:23:54","upload_time_iso_8601":"2023-01-06T21:23:54.894591Z","url":"https://files.pythonhosted.org/packages/a7/49/b49e0ae6fdc959235ecb89a3a5be77dd050493dc30845f89482fb83e38b4/yt_dlp-2023.1.6-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"31054ad72bb6abca733af67eaf60c1c3a3dfb753ab423b904a137504ee60d44a","md5":"8c1718deccaebb8321186d5b0111e962","sha256":"3a783a36751ced16368f40b3ba865ab39b30689ed8056f1ee2346aa3839a0b0f"},"downloads":-1,"filename":"yt-dlp-2023.1.6.tar.gz","has_sig":false,"md5_digest":"8c1718deccaebb8321186d5b0111e962","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":2529382,"upload_time":"2023-01-06T21:23:57","upload_time_iso_8601":"2023-01-06T21:23:57.161888Z","url":"https://files.pythonhosted.org/packages/31/05/4ad72bb6abca733af67eaf60c1c3a3dfb753ab423b904a137504ee60d44a/yt-dlp-2023.1.6.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-46121"],"details":"### Impact\nThe Generic Extractor in yt-dlp is vulnerable to an attacker setting an arbitrary proxy for a request to an arbitrary url, allowing the attacker to MITM the request made from yt-dlp's HTTP session. This could lead to cookie exfiltration in some cases.\n\n<details>\n\nTo pass extra control data between extractors (such as headers like `Referer`), yt-dlp employs a concept of \"url smuggling\". This works by adding this extra data as json to the url fragment (\"smuggling\") that is then passed on to an extractor. The receiving extractor then \"unsmuggles\" the data from the input url. This functionality is intended to be internal only.\n\nCurrently, the Generic extractor supports receiving an arbitrary dictionary of HTTP headers in a smuggled url, of which it extracts and adds them to the initial request it makes to such url. This is useful when a url sent to the Generic extractor needs a `Referer` header sent with it, for example.\n\nAdditionally, yt-dlp has internal headers to set a proxy for a request: `Ytdl-request-proxy` and `Ytdl-socks-proxy`. While these are deprecated, internally `Ytdl-request-proxy` is still used for `--geo-verification-proxy`.\n\nHowever, it is possible for a maliciously crafted site include these smuggled options in a url which then the Generic extractor extracts and redirects to itself.  This allows a malicious website to **set an arbitrary proxy for an arbitrary url that the Generic extractor will request.**\n\nThis could allow for the following, but not limited too:\n- An attacker can MITM a request it asks yt-dlp to make to **any** website.\n   - If a user has loaded cookies into yt-dlp for the target site, which are not marked as [secure](https://en.wikipedia.org/wiki/Secure_cookie), they could be exfiltrated by the attacker.\n   - Fortunately most sites are HTTPS and should be setting cookies as secure.\n- An attacker can set cookies for an arbitrary site.\n\nAn example malicious webpage:\n```html\n<!DOCTYPE html>\n<cinerama.embedPlayer('t','{{ target_site }}#__youtubedl_smuggle=%7B%22http_headers%22:%7B%22Ytdl-request-proxy%22:%22{{ proxy url }}%22%7D,%22fake%22:%22.smil/manifest%22%7D')\n```\n\nWhere `{{ target_site }}` is the URL Generic extractor will request and `{{ proxy url }}` is the proxy to proxy the request for this url through.\n\n</details>\n\n### Patches\n- We have removed the ability to smuggle `http_headers` to the Generic extractor, as well as other extractors that use the same pattern.\n\n### Workarounds\n- Disable Generic extractor (`--ies default,-generic`), or only pass trusted sites with trusted content.\n- Take caution when using `--no-check-certificate`.\n\n### References\n- <https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-3ch3-jhc6-5r8x>\n- <https://nvd.nist.gov/vuln/detail/CVE-2023-46121>\n- <https://github.com/yt-dlp/yt-dlp/releases/tag/2023.11.14>\n- <https://github.com/yt-dlp/yt-dlp/commit/f04b5bedad7b281bee9814686bba1762bae092eb>\n","fixed_in":["2023.11.14"],"id":"GHSA-3ch3-jhc6-5r8x","link":"https://osv.dev/vulnerability/GHSA-3ch3-jhc6-5r8x","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2023.10.13":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2023.10.13/","requires_dist":["mutagen","pycryptodomex","websockets","certifi","brotlicffi ; platform_python_implementation != \"CPython\"","brotli ; platform_python_implementation == \"CPython\""],"requires_python":">=3.7","summary":"A youtube-dl fork with additional features and patches","version":"2023.10.13","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"3fb075194851f0b86dd6c207d8e1cb5625b62ae5ec254edda42bc2cb86306ba7","md5":"7c15b03ef671d81363769035fd0e8800","sha256":"2b069f22675532eebacdfd6372b1825651a751fef848de9ae6efe6491b2dc38a"},"downloads":-1,"filename":"yt_dlp-2023.10.13-py2.py3-none-any.whl","has_sig":false,"md5_digest":"7c15b03ef671d81363769035fd0e8800","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.7","size":3077757,"upload_time":"2023-10-13T22:49:41","upload_time_iso_8601":"2023-10-13T22:49:41.857530Z","url":"https://files.pythonhosted.org/packages/3f/b0/75194851f0b86dd6c207d8e1cb5625b62ae5ec254edda42bc2cb86306ba7/yt_dlp-2023.10.13-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"db7f8bdf5c78fc01a71f1babcc813b972996144b46ee88394356f4a188686db5","md5":"1fb74fbd0c7d9cad01409ecc8b3e2d4d","sha256":"e026ea1c435ff36eef1215bc4c5bb8c479938b90054997ba99f63a4541fe63b4"},"downloads":-1,"filename":"yt-dlp-2023.10.13.tar.gz","has_sig":false,"md5_digest":"1fb74fbd0c7d9cad01409ecc8b3e2d4d","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":2808331,"upload_time":"2023-10-13T22:49:44","upload_time_iso_8601":"2023-10-13T22:49:44.271089Z","url":"https://files.pythonhosted.org/packages/db/7f/8bdf5c78fc01a71f1babcc813b972996144b46ee88394356f4a188686db5/yt-dlp-2023.10.13.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-46121"],"details":"### Impact\nThe Generic Extractor in yt-dlp is vulnerable to an attacker setting an arbitrary proxy for a request to an arbitrary url, allowing the attacker to MITM the request made from yt-dlp's HTTP session. This could lead to cookie exfiltration in some cases.\n\n<details>\n\nTo pass extra control data between extractors (such as headers like `Referer`), yt-dlp employs a concept of \"url smuggling\". This works by adding this extra data as json to the url fragment (\"smuggling\") that is then passed on to an extractor. The receiving extractor then \"unsmuggles\" the data from the input url. This functionality is intended to be internal only.\n\nCurrently, the Generic extractor supports receiving an arbitrary dictionary of HTTP headers in a smuggled url, of which it extracts and adds them to the initial request it makes to such url. This is useful when a url sent to the Generic extractor needs a `Referer` header sent with it, for example.\n\nAdditionally, yt-dlp has internal headers to set a proxy for a request: `Ytdl-request-proxy` and `Ytdl-socks-proxy`. While these are deprecated, internally `Ytdl-request-proxy` is still used for `--geo-verification-proxy`.\n\nHowever, it is possible for a maliciously crafted site include these smuggled options in a url which then the Generic extractor extracts and redirects to itself.  This allows a malicious website to **set an arbitrary proxy for an arbitrary url that the Generic extractor will request.**\n\nThis could allow for the following, but not limited too:\n- An attacker can MITM a request it asks yt-dlp to make to **any** website.\n   - If a user has loaded cookies into yt-dlp for the target site, which are not marked as [secure](https://en.wikipedia.org/wiki/Secure_cookie), they could be exfiltrated by the attacker.\n   - Fortunately most sites are HTTPS and should be setting cookies as secure.\n- An attacker can set cookies for an arbitrary site.\n\nAn example malicious webpage:\n```html\n<!DOCTYPE html>\n<cinerama.embedPlayer('t','{{ target_site }}#__youtubedl_smuggle=%7B%22http_headers%22:%7B%22Ytdl-request-proxy%22:%22{{ proxy url }}%22%7D,%22fake%22:%22.smil/manifest%22%7D')\n```\n\nWhere `{{ target_site }}` is the URL Generic extractor will request and `{{ proxy url }}` is the proxy to proxy the request for this url through.\n\n</details>\n\n### Patches\n- We have removed the ability to smuggle `http_headers` to the Generic extractor, as well as other extractors that use the same pattern.\n\n### Workarounds\n- Disable Generic extractor (`--ies default,-generic`), or only pass trusted sites with trusted content.\n- Take caution when using `--no-check-certificate`.\n\n### References\n- <https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-3ch3-jhc6-5r8x>\n- <https://nvd.nist.gov/vuln/detail/CVE-2023-46121>\n- <https://github.com/yt-dlp/yt-dlp/releases/tag/2023.11.14>\n- <https://github.com/yt-dlp/yt-dlp/commit/f04b5bedad7b281bee9814686bba1762bae092eb>\n","fixed_in":["2023.11.14"],"id":"GHSA-3ch3-jhc6-5r8x","link":"https://osv.dev/vulnerability/GHSA-3ch3-jhc6-5r8x","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2023.10.7":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2023.10.7/","requires_dist":["mutagen","pycryptodomex","websockets","certifi","brotlicffi ; platform_python_implementation != \"CPython\"","brotli ; platform_python_implementation == \"CPython\""],"requires_python":">=3.7","summary":"A youtube-dl fork with additional features and patches","version":"2023.10.7","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"9a249ba3bbcc12a059dbb484e16309926cf2676212efe9320dd35592322b5b97","md5":"8ade72727503050dac3e20e2da5c9dca","sha256":"5f5253aec0a7e18c991d7412ee293eee99f73249b360f4adb9a3f529b769d9d9"},"downloads":-1,"filename":"yt_dlp-2023.10.7-py2.py3-none-any.whl","has_sig":false,"md5_digest":"8ade72727503050dac3e20e2da5c9dca","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.7","size":3071359,"upload_time":"2023-10-07T01:48:48","upload_time_iso_8601":"2023-10-07T01:48:48.852406Z","url":"https://files.pythonhosted.org/packages/9a/24/9ba3bbcc12a059dbb484e16309926cf2676212efe9320dd35592322b5b97/yt_dlp-2023.10.7-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"cd891d289162b4ddc6282cbe97201707653d13afcdf39d23ac8d700aef22bd7a","md5":"f650d41afc36d802d87d4b7f7e644ba1","sha256":"fc86657a9b240cf65fef3ff627e4a0de335e725936fe70d4402c71dd97452f36"},"downloads":-1,"filename":"yt-dlp-2023.10.7.tar.gz","has_sig":false,"md5_digest":"f650d41afc36d802d87d4b7f7e644ba1","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":2802594,"upload_time":"2023-10-07T01:48:51","upload_time_iso_8601":"2023-10-07T01:48:51.358064Z","url":"https://files.pythonhosted.org/packages/cd/89/1d289162b4ddc6282cbe97201707653d13afcdf39d23ac8d700aef22bd7a/yt-dlp-2023.10.7.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-46121"],"details":"### Impact\nThe Generic Extractor in yt-dlp is vulnerable to an attacker setting an arbitrary proxy for a request to an arbitrary url, allowing the attacker to MITM the request made from yt-dlp's HTTP session. This could lead to cookie exfiltration in some cases.\n\n<details>\n\nTo pass extra control data between extractors (such as headers like `Referer`), yt-dlp employs a concept of \"url smuggling\". This works by adding this extra data as json to the url fragment (\"smuggling\") that is then passed on to an extractor. The receiving extractor then \"unsmuggles\" the data from the input url. This functionality is intended to be internal only.\n\nCurrently, the Generic extractor supports receiving an arbitrary dictionary of HTTP headers in a smuggled url, of which it extracts and adds them to the initial request it makes to such url. This is useful when a url sent to the Generic extractor needs a `Referer` header sent with it, for example.\n\nAdditionally, yt-dlp has internal headers to set a proxy for a request: `Ytdl-request-proxy` and `Ytdl-socks-proxy`. While these are deprecated, internally `Ytdl-request-proxy` is still used for `--geo-verification-proxy`.\n\nHowever, it is possible for a maliciously crafted site include these smuggled options in a url which then the Generic extractor extracts and redirects to itself.  This allows a malicious website to **set an arbitrary proxy for an arbitrary url that the Generic extractor will request.**\n\nThis could allow for the following, but not limited too:\n- An attacker can MITM a request it asks yt-dlp to make to **any** website.\n   - If a user has loaded cookies into yt-dlp for the target site, which are not marked as [secure](https://en.wikipedia.org/wiki/Secure_cookie), they could be exfiltrated by the attacker.\n   - Fortunately most sites are HTTPS and should be setting cookies as secure.\n- An attacker can set cookies for an arbitrary site.\n\nAn example malicious webpage:\n```html\n<!DOCTYPE html>\n<cinerama.embedPlayer('t','{{ target_site }}#__youtubedl_smuggle=%7B%22http_headers%22:%7B%22Ytdl-request-proxy%22:%22{{ proxy url }}%22%7D,%22fake%22:%22.smil/manifest%22%7D')\n```\n\nWhere `{{ target_site }}` is the URL Generic extractor will request and `{{ proxy url }}` is the proxy to proxy the request for this url through.\n\n</details>\n\n### Patches\n- We have removed the ability to smuggle `http_headers` to the Generic extractor, as well as other extractors that use the same pattern.\n\n### Workarounds\n- Disable Generic extractor (`--ies default,-generic`), or only pass trusted sites with trusted content.\n- Take caution when using `--no-check-certificate`.\n\n### References\n- <https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-3ch3-jhc6-5r8x>\n- <https://nvd.nist.gov/vuln/detail/CVE-2023-46121>\n- <https://github.com/yt-dlp/yt-dlp/releases/tag/2023.11.14>\n- <https://github.com/yt-dlp/yt-dlp/commit/f04b5bedad7b281bee9814686bba1762bae092eb>\n","fixed_in":["2023.11.14"],"id":"GHSA-3ch3-jhc6-5r8x","link":"https://osv.dev/vulnerability/GHSA-3ch3-jhc6-5r8x","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2023.11.13.232715.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2023.11.13.232715.dev0/","requires_dist":["mutagen","pycryptodomex","websockets","certifi","requests <3,>=2.31.0","urllib3 <3,>=1.26.17","brotlicffi ; implementation_name != \"cpython\"","brotli ; implementation_name == \"cpython\"","secretstorage ; sys_platform == \"linux\" and (implementation_name != \"pypy\" or implementation_version >= \"7.3.10\")"],"requires_python":">=3.7","summary":"A youtube-dl fork with additional features and patches","version":"2023.11.13.232715.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"1d5d7f942697349baf6127498eb25b203299666b603b142061b4efe0518bf02b","md5":"8dc759950c1b6154c0ed2609812593e3","sha256":"203b1784e4107740ddecabcb1f9686298d8a10ef38b303404c345bae4296282f"},"downloads":-1,"filename":"yt_dlp-2023.11.13.232715.dev0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"8dc759950c1b6154c0ed2609812593e3","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.7","size":3097665,"upload_time":"2023-11-13T23:42:36","upload_time_iso_8601":"2023-11-13T23:42:36.900531Z","url":"https://files.pythonhosted.org/packages/1d/5d/7f942697349baf6127498eb25b203299666b603b142061b4efe0518bf02b/yt_dlp-2023.11.13.232715.dev0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"bf212cccedf945733da2614670f0e001567085b7f41131a831ed1b4d10d4375b","md5":"3fa2d33005f774f31b85220712c24cfd","sha256":"4557ad6bbf29481538267b081802a0a441c6fad687621fa99777d5686372a0b8"},"downloads":-1,"filename":"yt-dlp-2023.11.13.232715.dev0.tar.gz","has_sig":false,"md5_digest":"3fa2d33005f774f31b85220712c24cfd","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":2828445,"upload_time":"2023-11-13T23:42:43","upload_time_iso_8601":"2023-11-13T23:42:43.756632Z","url":"https://files.pythonhosted.org/packages/bf/21/2cccedf945733da2614670f0e001567085b7f41131a831ed1b4d10d4375b/yt-dlp-2023.11.13.232715.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-46121"],"details":"### Impact\nThe Generic Extractor in yt-dlp is vulnerable to an attacker setting an arbitrary proxy for a request to an arbitrary url, allowing the attacker to MITM the request made from yt-dlp's HTTP session. This could lead to cookie exfiltration in some cases.\n\n<details>\n\nTo pass extra control data between extractors (such as headers like `Referer`), yt-dlp employs a concept of \"url smuggling\". This works by adding this extra data as json to the url fragment (\"smuggling\") that is then passed on to an extractor. The receiving extractor then \"unsmuggles\" the data from the input url. This functionality is intended to be internal only.\n\nCurrently, the Generic extractor supports receiving an arbitrary dictionary of HTTP headers in a smuggled url, of which it extracts and adds them to the initial request it makes to such url. This is useful when a url sent to the Generic extractor needs a `Referer` header sent with it, for example.\n\nAdditionally, yt-dlp has internal headers to set a proxy for a request: `Ytdl-request-proxy` and `Ytdl-socks-proxy`. While these are deprecated, internally `Ytdl-request-proxy` is still used for `--geo-verification-proxy`.\n\nHowever, it is possible for a maliciously crafted site include these smuggled options in a url which then the Generic extractor extracts and redirects to itself.  This allows a malicious website to **set an arbitrary proxy for an arbitrary url that the Generic extractor will request.**\n\nThis could allow for the following, but not limited too:\n- An attacker can MITM a request it asks yt-dlp to make to **any** website.\n   - If a user has loaded cookies into yt-dlp for the target site, which are not marked as [secure](https://en.wikipedia.org/wiki/Secure_cookie), they could be exfiltrated by the attacker.\n   - Fortunately most sites are HTTPS and should be setting cookies as secure.\n- An attacker can set cookies for an arbitrary site.\n\nAn example malicious webpage:\n```html\n<!DOCTYPE html>\n<cinerama.embedPlayer('t','{{ target_site }}#__youtubedl_smuggle=%7B%22http_headers%22:%7B%22Ytdl-request-proxy%22:%22{{ proxy url }}%22%7D,%22fake%22:%22.smil/manifest%22%7D')\n```\n\nWhere `{{ target_site }}` is the URL Generic extractor will request and `{{ proxy url }}` is the proxy to proxy the request for this url through.\n\n</details>\n\n### Patches\n- We have removed the ability to smuggle `http_headers` to the Generic extractor, as well as other extractors that use the same pattern.\n\n### Workarounds\n- Disable Generic extractor (`--ies default,-generic`), or only pass trusted sites with trusted content.\n- Take caution when using `--no-check-certificate`.\n\n### References\n- <https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-3ch3-jhc6-5r8x>\n- <https://nvd.nist.gov/vuln/detail/CVE-2023-46121>\n- <https://github.com/yt-dlp/yt-dlp/releases/tag/2023.11.14>\n- <https://github.com/yt-dlp/yt-dlp/commit/f04b5bedad7b281bee9814686bba1762bae092eb>\n","fixed_in":["2023.11.14"],"id":"GHSA-3ch3-jhc6-5r8x","link":"https://osv.dev/vulnerability/GHSA-3ch3-jhc6-5r8x","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2023.11.13.5826.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2023.11.13.5826.dev0/","requires_dist":["mutagen","pycryptodomex","websockets","certifi","requests <3,>=2.31.0","urllib3 <3,>=1.26.17","brotlicffi ; implementation_name != \"cpython\"","brotli ; implementation_name == \"cpython\"","secretstorage ; sys_platform == \"linux\" and (implementation_name != \"pypy\" or implementation_version >= \"7.3.10\")"],"requires_python":">=3.7","summary":"A youtube-dl fork with additional features and patches","version":"2023.11.13.5826.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"86bfba76cfe53443e106d09cbafc1c783f6896e0b2d1d2bfe39987d00f71ba19","md5":"42e02ec1039704b6689baaa36bdba4f2","sha256":"315385f90697e345a85f96ca5cf2e9683c639f2714ebf63d51830740cfadd906"},"downloads":-1,"filename":"yt_dlp-2023.11.13.5826.dev0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"42e02ec1039704b6689baaa36bdba4f2","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.7","size":3097610,"upload_time":"2023-11-13T01:15:06","upload_time_iso_8601":"2023-11-13T01:15:06.351022Z","url":"https://files.pythonhosted.org/packages/86/bf/ba76cfe53443e106d09cbafc1c783f6896e0b2d1d2bfe39987d00f71ba19/yt_dlp-2023.11.13.5826.dev0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"eedc3fb6aa5701224985247c1a251dbb92760717e941a9f4ed7bf6226af186cf","md5":"8c0cd46f17ca929fe2207363573c6177","sha256":"8c5894cc7d75868b650011cdb6c5b8b3f4f21c39c1c50801735a7fe48c5e4cd2"},"downloads":-1,"filename":"yt-dlp-2023.11.13.5826.dev0.tar.gz","has_sig":false,"md5_digest":"8c0cd46f17ca929fe2207363573c6177","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":2828447,"upload_time":"2023-11-13T01:15:10","upload_time_iso_8601":"2023-11-13T01:15:10.331421Z","url":"https://files.pythonhosted.org/packages/ee/dc/3fb6aa5701224985247c1a251dbb92760717e941a9f4ed7bf6226af186cf/yt-dlp-2023.11.13.5826.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-46121"],"details":"### Impact\nThe Generic Extractor in yt-dlp is vulnerable to an attacker setting an arbitrary proxy for a request to an arbitrary url, allowing the attacker to MITM the request made from yt-dlp's HTTP session. This could lead to cookie exfiltration in some cases.\n\n<details>\n\nTo pass extra control data between extractors (such as headers like `Referer`), yt-dlp employs a concept of \"url smuggling\". This works by adding this extra data as json to the url fragment (\"smuggling\") that is then passed on to an extractor. The receiving extractor then \"unsmuggles\" the data from the input url. This functionality is intended to be internal only.\n\nCurrently, the Generic extractor supports receiving an arbitrary dictionary of HTTP headers in a smuggled url, of which it extracts and adds them to the initial request it makes to such url. This is useful when a url sent to the Generic extractor needs a `Referer` header sent with it, for example.\n\nAdditionally, yt-dlp has internal headers to set a proxy for a request: `Ytdl-request-proxy` and `Ytdl-socks-proxy`. While these are deprecated, internally `Ytdl-request-proxy` is still used for `--geo-verification-proxy`.\n\nHowever, it is possible for a maliciously crafted site include these smuggled options in a url which then the Generic extractor extracts and redirects to itself.  This allows a malicious website to **set an arbitrary proxy for an arbitrary url that the Generic extractor will request.**\n\nThis could allow for the following, but not limited too:\n- An attacker can MITM a request it asks yt-dlp to make to **any** website.\n   - If a user has loaded cookies into yt-dlp for the target site, which are not marked as [secure](https://en.wikipedia.org/wiki/Secure_cookie), they could be exfiltrated by the attacker.\n   - Fortunately most sites are HTTPS and should be setting cookies as secure.\n- An attacker can set cookies for an arbitrary site.\n\nAn example malicious webpage:\n```html\n<!DOCTYPE html>\n<cinerama.embedPlayer('t','{{ target_site }}#__youtubedl_smuggle=%7B%22http_headers%22:%7B%22Ytdl-request-proxy%22:%22{{ proxy url }}%22%7D,%22fake%22:%22.smil/manifest%22%7D')\n```\n\nWhere `{{ target_site }}` is the URL Generic extractor will request and `{{ proxy url }}` is the proxy to proxy the request for this url through.\n\n</details>\n\n### Patches\n- We have removed the ability to smuggle `http_headers` to the Generic extractor, as well as other extractors that use the same pattern.\n\n### Workarounds\n- Disable Generic extractor (`--ies default,-generic`), or only pass trusted sites with trusted content.\n- Take caution when using `--no-check-certificate`.\n\n### References\n- <https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-3ch3-jhc6-5r8x>\n- <https://nvd.nist.gov/vuln/detail/CVE-2023-46121>\n- <https://github.com/yt-dlp/yt-dlp/releases/tag/2023.11.14>\n- <https://github.com/yt-dlp/yt-dlp/commit/f04b5bedad7b281bee9814686bba1762bae092eb>\n","fixed_in":["2023.11.14"],"id":"GHSA-3ch3-jhc6-5r8x","link":"https://osv.dev/vulnerability/GHSA-3ch3-jhc6-5r8x","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2023.11.14":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2023.11.14/","requires_dist":["mutagen","pycryptodomex","websockets","certifi","requests <3,>=2.31.0","urllib3 <3,>=1.26.17","brotlicffi ; implementation_name != \"cpython\"","brotli ; implementation_name == \"cpython\"","secretstorage ; sys_platform == \"linux\" and (implementation_name != \"pypy\" or implementation_version >= \"7.3.10\")"],"requires_python":">=3.7","summary":"A youtube-dl fork with additional features and patches","version":"2023.11.14","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"a24e9e74355f7bbbcabbfa2c131c67c73949bfd56ac029d1dafee28f1c427566","md5":"336c920d81d1b63b4dfab6083e5f3651","sha256":"2871b53d6183856cddaf654926e7555669f3af5a5b88776f01036b80bcbc296e"},"downloads":-1,"filename":"yt_dlp-2023.11.14-py2.py3-none-any.whl","has_sig":false,"md5_digest":"336c920d81d1b63b4dfab6083e5f3651","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.7","size":3097573,"upload_time":"2023-11-14T22:25:18","upload_time_iso_8601":"2023-11-14T22:25:18.422320Z","url":"https://files.pythonhosted.org/packages/a2/4e/9e74355f7bbbcabbfa2c131c67c73949bfd56ac029d1dafee28f1c427566/yt_dlp-2023.11.14-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"35e79f5bfd3c4ac3032eeae0b64678eb27e80b29ac070757445f2c9b2212799e","md5":"215a130a59e2b3469710f0b955462162","sha256":"b3c25353ba106922d870a5a59e4d6a2eb85783ebd17e29ec435bc3e1764de8be"},"downloads":-1,"filename":"yt-dlp-2023.11.14.tar.gz","has_sig":false,"md5_digest":"215a130a59e2b3469710f0b955462162","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":2828767,"upload_time":"2023-11-14T22:25:21","upload_time_iso_8601":"2023-11-14T22:25:21.685923Z","url":"https://files.pythonhosted.org/packages/35/e7/9f5bfd3c4ac3032eeae0b64678eb27e80b29ac070757445f2c9b2212799e/yt-dlp-2023.11.14.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2023.11.15.232826.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2023.11.15.232826.dev0/","requires_dist":["mutagen","pycryptodomex","websockets","certifi","requests <3,>=2.31.0","urllib3 <3,>=1.26.17","brotlicffi ; implementation_name != \"cpython\"","brotli ; implementation_name == \"cpython\"","secretstorage ; sys_platform == \"linux\" and (implementation_name != \"pypy\" or implementation_version >= \"7.3.10\")"],"requires_python":">=3.7","summary":"A youtube-dl fork with additional features and patches","version":"2023.11.15.232826.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"8bc3e5d506df8643815b19f035e487c2642a55056b88cbe5f29102d88e673d93","md5":"6d82a793ff75ecd80a3291aa06170dcb","sha256":"227d9e161b74ae3efc39fe74dff1dee5ea3a1eaa482326ebe39ec22b0c79c1d4"},"downloads":-1,"filename":"yt_dlp-2023.11.15.232826.dev0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"6d82a793ff75ecd80a3291aa06170dcb","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.7","size":3098671,"upload_time":"2023-11-15T23:46:32","upload_time_iso_8601":"2023-11-15T23:46:32.177317Z","url":"https://files.pythonhosted.org/packages/8b/c3/e5d506df8643815b19f035e487c2642a55056b88cbe5f29102d88e673d93/yt_dlp-2023.11.15.232826.dev0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f1d4dda5fc1856d65d9a9c55b5e6b2b29d4c958e936db27cde485c6452870897","md5":"99af5464a3816d9c994655675bf30beb","sha256":"a4fb93f48a841ba7664f657b931b160338240fff1191142aca46e23256c7543b"},"downloads":-1,"filename":"yt-dlp-2023.11.15.232826.dev0.tar.gz","has_sig":false,"md5_digest":"99af5464a3816d9c994655675bf30beb","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":2832321,"upload_time":"2023-11-15T23:46:35","upload_time_iso_8601":"2023-11-15T23:46:35.438348Z","url":"https://files.pythonhosted.org/packages/f1/d4/dda5fc1856d65d9a9c55b5e6b2b29d4c958e936db27cde485c6452870897/yt-dlp-2023.11.15.232826.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2023.11.16":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2023.11.16/","requires_dist":["mutagen","pycryptodomex","websockets","certifi","requests <3,>=2.31.0","urllib3 <3,>=1.26.17","brotlicffi ; implementation_name != \"cpython\"","brotli ; implementation_name == \"cpython\""],"requires_python":">=3.7","summary":"A youtube-dl fork with additional features and patches","version":"2023.11.16","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"315ad9b0a47a3aacf650b8ffc750bb5d296c24b2cc674f4c2a975895f49d4f0a","md5":"a58570c3eb544c579ee01e9a012b42c4","sha256":"0322ba85aa4afdb75f8641ed550e5958964daff034aeb477abb15031fd9a51ed"},"downloads":-1,"filename":"yt_dlp-2023.11.16-py2.py3-none-any.whl","has_sig":false,"md5_digest":"a58570c3eb544c579ee01e9a012b42c4","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.7","size":3098294,"upload_time":"2023-11-16T00:17:32","upload_time_iso_8601":"2023-11-16T00:17:32.370484Z","url":"https://files.pythonhosted.org/packages/31/5a/d9b0a47a3aacf650b8ffc750bb5d296c24b2cc674f4c2a975895f49d4f0a/yt_dlp-2023.11.16-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"93f08d894dd24447945269d123f6a061520103fb790211c6846418c6ee1065ff","md5":"97d79d183892d48f66d8821f8c242f34","sha256":"f0ccdaf12e08b15902601a4671c7ab12906d7b11de3ae75fa6506811c24ec5da"},"downloads":-1,"filename":"yt-dlp-2023.11.16.tar.gz","has_sig":false,"md5_digest":"97d79d183892d48f66d8821f8c242f34","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":2831652,"upload_time":"2023-11-16T00:17:35","upload_time_iso_8601":"2023-11-16T00:17:35.416332Z","url":"https://files.pythonhosted.org/packages/93/f0/8d894dd24447945269d123f6a061520103fb790211c6846418c6ee1065ff/yt-dlp-2023.11.16.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2023.11.16.232727.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2023.11.16.232727.dev0/","requires_dist":["mutagen","pycryptodomex","websockets","certifi","requests <3,>=2.31.0","urllib3 <3,>=1.26.17","brotlicffi ; implementation_name != \"cpython\"","brotli ; implementation_name == \"cpython\""],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2023.11.16.232727.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"95446fce6a3d2f5aff6c0fcf8c5417c265009657cb27c0e28913925b3cff8ca8","md5":"cd6156d0071aec915bcd78440e48ecec","sha256":"d40e51dbe418fe9cfe40c3c0e426e1bc56a1bfba7bce528f6c465512f16e8de5"},"downloads":-1,"filename":"yt_dlp-2023.11.16.232727.dev0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"cd6156d0071aec915bcd78440e48ecec","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":3103297,"upload_time":"2023-11-16T23:43:30","upload_time_iso_8601":"2023-11-16T23:43:30.628745Z","url":"https://files.pythonhosted.org/packages/95/44/6fce6a3d2f5aff6c0fcf8c5417c265009657cb27c0e28913925b3cff8ca8/yt_dlp-2023.11.16.232727.dev0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"b9edf8679baa5a9a6d645a062317fddb0ae4399a026b7a59cff4e3eb54379d11","md5":"d605f40fe3f0e110c7fad00fbb3a0a75","sha256":"2cd08f831f63195bd4f74f86cd83fa9c19dd3ec78429c0027a38006bdd611068"},"downloads":-1,"filename":"yt-dlp-2023.11.16.232727.dev0.tar.gz","has_sig":false,"md5_digest":"d605f40fe3f0e110c7fad00fbb3a0a75","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2836903,"upload_time":"2023-11-16T23:43:34","upload_time_iso_8601":"2023-11-16T23:43:34.069711Z","url":"https://files.pythonhosted.org/packages/b9/ed/f8679baa5a9a6d645a062317fddb0ae4399a026b7a59cff4e3eb54379d11/yt-dlp-2023.11.16.232727.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2023.11.18.232705.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2023.11.18.232705.dev0/","requires_dist":["mutagen","pycryptodomex","websockets","certifi","requests <3,>=2.31.0","urllib3 <3,>=1.26.17","brotlicffi ; implementation_name != \"cpython\"","brotli ; implementation_name == \"cpython\""],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2023.11.18.232705.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"dce35da2ae8d0e83941ffb7dfa6b1b402bb0ab0dbc5f6087b953bbdeaa498160","md5":"b27754a96a27b73b2a1fc392db9a3cbf","sha256":"7946b4fee6d80458e2fadd2fa8666faa016fd8458f047db5f96caa5b58b6b7ed"},"downloads":-1,"filename":"yt_dlp-2023.11.18.232705.dev0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"b27754a96a27b73b2a1fc392db9a3cbf","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":3108074,"upload_time":"2023-11-18T23:42:43","upload_time_iso_8601":"2023-11-18T23:42:43.369484Z","url":"https://files.pythonhosted.org/packages/dc/e3/5da2ae8d0e83941ffb7dfa6b1b402bb0ab0dbc5f6087b953bbdeaa498160/yt_dlp-2023.11.18.232705.dev0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"7abe73799e96c1c0420dd209be584a66d4652cdacda73535e69ba9d9e52b518b","md5":"f56d1e6339264ebd5575e2e89f476f01","sha256":"cc4dcf53cc5c12a60eee1366120d2116c2e776dbb09ce0985c341ff67f79a43c"},"downloads":-1,"filename":"yt-dlp-2023.11.18.232705.dev0.tar.gz","has_sig":false,"md5_digest":"f56d1e6339264ebd5575e2e89f476f01","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2840312,"upload_time":"2023-11-18T23:42:49","upload_time_iso_8601":"2023-11-18T23:42:49.693555Z","url":"https://files.pythonhosted.org/packages/7a/be/73799e96c1c0420dd209be584a66d4652cdacda73535e69ba9d9e52b518b/yt-dlp-2023.11.18.232705.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2023.11.19.232719.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2023.11.19.232719.dev0/","requires_dist":["mutagen","pycryptodomex","websockets","certifi","requests <3,>=2.31.0","urllib3 <3,>=1.26.17","brotlicffi ; implementation_name != \"cpython\"","brotli ; implementation_name == \"cpython\""],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2023.11.19.232719.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"da45de83bc43040f06ed346bc07996cd7ec7ba1f06057db6806b4fb61bf55971","md5":"ba03e5748ef384ef0bcbb9d1e8e53ceb","sha256":"d8e450d8938a075bfeee2f6f9db91af6f0e5614a0e27a20a67f5133394ff2345"},"downloads":-1,"filename":"yt_dlp-2023.11.19.232719.dev0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"ba03e5748ef384ef0bcbb9d1e8e53ceb","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":3112546,"upload_time":"2023-11-19T23:42:56","upload_time_iso_8601":"2023-11-19T23:42:56.636105Z","url":"https://files.pythonhosted.org/packages/da/45/de83bc43040f06ed346bc07996cd7ec7ba1f06057db6806b4fb61bf55971/yt_dlp-2023.11.19.232719.dev0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c4a33fb753b364a63cee89d85ff1ae9c43919760d370eea9cee903a68ec1fd86","md5":"a9ce030169da9572a6149ae3d1551a27","sha256":"94a971f5496674a9d3e26fe80e485f5d339be61de8a2ec97e0747dcdf83340db"},"downloads":-1,"filename":"yt-dlp-2023.11.19.232719.dev0.tar.gz","has_sig":false,"md5_digest":"a9ce030169da9572a6149ae3d1551a27","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2845132,"upload_time":"2023-11-19T23:42:59","upload_time_iso_8601":"2023-11-19T23:42:59.805812Z","url":"https://files.pythonhosted.org/packages/c4/a3/3fb753b364a63cee89d85ff1ae9c43919760d370eea9cee903a68ec1fd86/yt-dlp-2023.11.19.232719.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2023.11.20.232729.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2023.11.20.232729.dev0/","requires_dist":["mutagen","pycryptodomex","websockets","certifi","requests <3,>=2.31.0","urllib3 <3,>=1.26.17","websockets >=12.0","brotlicffi ; implementation_name != \"cpython\"","brotli ; implementation_name == \"cpython\""],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2023.11.20.232729.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"40c7476ae81cc76f630cc6002f466f03139c55fe86ea108445b98373235544de","md5":"bc15132562411df81d3cf151d7eeef84","sha256":"36016bca6eb9160de6e1f5fd634f228a66e563a5331f46d5e803525f9cbeb48f"},"downloads":-1,"filename":"yt_dlp-2023.11.20.232729.dev0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"bc15132562411df81d3cf151d7eeef84","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":3118421,"upload_time":"2023-11-20T23:42:58","upload_time_iso_8601":"2023-11-20T23:42:58.837947Z","url":"https://files.pythonhosted.org/packages/40/c7/476ae81cc76f630cc6002f466f03139c55fe86ea108445b98373235544de/yt_dlp-2023.11.20.232729.dev0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"31ae640b184256b2152cdf1917898504b982e2133d8f601861d1d8fb2fe6df1f","md5":"c847f4865defc73ad0ef5ce452146488","sha256":"7572801c24c8a9f4cb8c41509271573e164af3d4b87667d270fcfc5df24827e2"},"downloads":-1,"filename":"yt-dlp-2023.11.20.232729.dev0.tar.gz","has_sig":false,"md5_digest":"c847f4865defc73ad0ef5ce452146488","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2853135,"upload_time":"2023-11-20T23:43:03","upload_time_iso_8601":"2023-11-20T23:43:03.026072Z","url":"https://files.pythonhosted.org/packages/31/ae/640b184256b2152cdf1917898504b982e2133d8f601861d1d8fb2fe6df1f/yt-dlp-2023.11.20.232729.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2023.11.26.232703.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2023.11.26.232703.dev0/","requires_dist":["mutagen","pycryptodomex","websockets","certifi","requests <3,>=2.31.0","urllib3 <3,>=1.26.17","websockets >=12.0","brotlicffi ; implementation_name != \"cpython\"","brotli ; implementation_name == \"cpython\""],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2023.11.26.232703.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"bf4afb38353cec91ed30e58edf95166db6b5b5ca4283debefe848aa9745bb1ef","md5":"16c7c7af8b26c9d2b90910f3fed86264","sha256":"75ab3c21cba839ed9bffa9d68d875d8a5ab7ab567a4478c7ccd578c5c817bb67"},"downloads":-1,"filename":"yt_dlp-2023.11.26.232703.dev0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"16c7c7af8b26c9d2b90910f3fed86264","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":2972138,"upload_time":"2023-11-26T23:33:41","upload_time_iso_8601":"2023-11-26T23:33:41.748938Z","url":"https://files.pythonhosted.org/packages/bf/4a/fb38353cec91ed30e58edf95166db6b5b5ca4283debefe848aa9745bb1ef/yt_dlp-2023.11.26.232703.dev0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"423830e2df13b0e1d1bcf26a583640dcc09f01166733564690d32c7d4499daad","md5":"0468038ce49018951a96260b1b1799df","sha256":"e0a81af22f5ff72666ab6b03d80a0aa480328e396b808d0d69cf62af16e4a14b"},"downloads":-1,"filename":"yt-dlp-2023.11.26.232703.dev0.tar.gz","has_sig":false,"md5_digest":"0468038ce49018951a96260b1b1799df","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2757650,"upload_time":"2023-11-26T23:33:45","upload_time_iso_8601":"2023-11-26T23:33:45.803052Z","url":"https://files.pythonhosted.org/packages/42/38/30e2df13b0e1d1bcf26a583640dcc09f01166733564690d32c7d4499daad/yt-dlp-2023.11.26.232703.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2023.11.28.232715.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2023.11.28.232715.dev0/","requires_dist":["mutagen","pycryptodomex","websockets","certifi","requests <3,>=2.31.0","urllib3 <3,>=1.26.17","websockets >=12.0","brotlicffi ; implementation_name != \"cpython\"","brotli ; implementation_name == \"cpython\""],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2023.11.28.232715.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"bb88674b7982b3f87a976f5bc7738189630e9cd764bd0628779635d6cd4093f1","md5":"16facc7f919e50e72ba4635bf3b5e6f7","sha256":"cea891f31f5f8c88d7f80036197adc71010ddac39c2ca7c8d25621da46cbf216"},"downloads":-1,"filename":"yt_dlp-2023.11.28.232715.dev0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"16facc7f919e50e72ba4635bf3b5e6f7","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":2972177,"upload_time":"2023-11-28T23:33:43","upload_time_iso_8601":"2023-11-28T23:33:43.472288Z","url":"https://files.pythonhosted.org/packages/bb/88/674b7982b3f87a976f5bc7738189630e9cd764bd0628779635d6cd4093f1/yt_dlp-2023.11.28.232715.dev0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"cced044be7958c8e00b6834e95dd01968a890e4bc9bff3a1e11756201a1f1eaa","md5":"1b8535e184afdbffeb14eb9697d3e082","sha256":"66706cc38082df4375b2a6980d3754938668051df847c517d4a7a5265b0c26df"},"downloads":-1,"filename":"yt-dlp-2023.11.28.232715.dev0.tar.gz","has_sig":false,"md5_digest":"1b8535e184afdbffeb14eb9697d3e082","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2757750,"upload_time":"2023-11-28T23:33:47","upload_time_iso_8601":"2023-11-28T23:33:47.116282Z","url":"https://files.pythonhosted.org/packages/cc/ed/044be7958c8e00b6834e95dd01968a890e4bc9bff3a1e11756201a1f1eaa/yt-dlp-2023.11.28.232715.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2023.11.29.232714.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2023.11.29.232714.dev0/","requires_dist":["mutagen","pycryptodomex","websockets","certifi","requests <3,>=2.31.0","urllib3 <3,>=1.26.17","websockets >=12.0","brotlicffi ; implementation_name != \"cpython\"","brotli ; implementation_name == \"cpython\""],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2023.11.29.232714.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"852c6371f6ade08cb1ae27afcea62123dc74a8b0f696592e7159d34295c41ed3","md5":"06d7b0398c7d7f7aa11820ab42e774fc","sha256":"8fcfa4d6e9619ddd3dd4e506748c10be7d715166b2f4c9aa9bd0bef5fcc597e5"},"downloads":-1,"filename":"yt_dlp-2023.11.29.232714.dev0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"06d7b0398c7d7f7aa11820ab42e774fc","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":2972250,"upload_time":"2023-11-29T23:33:43","upload_time_iso_8601":"2023-11-29T23:33:43.551303Z","url":"https://files.pythonhosted.org/packages/85/2c/6371f6ade08cb1ae27afcea62123dc74a8b0f696592e7159d34295c41ed3/yt_dlp-2023.11.29.232714.dev0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"e589e3ef0820cecb5f9f340bcfb3f8e78affbf43b4fa470764c1fa9b8268cd2e","md5":"94c01175d12380bc583cd0f0f09ed880","sha256":"5d261e67d10c35d57d06f72f88267f75ee76209f197491fbb1b2160b8f89d8f8"},"downloads":-1,"filename":"yt-dlp-2023.11.29.232714.dev0.tar.gz","has_sig":false,"md5_digest":"94c01175d12380bc583cd0f0f09ed880","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2757736,"upload_time":"2023-11-29T23:33:47","upload_time_iso_8601":"2023-11-29T23:33:47.034552Z","url":"https://files.pythonhosted.org/packages/e5/89/e3ef0820cecb5f9f340bcfb3f8e78affbf43b4fa470764c1fa9b8268cd2e/yt-dlp-2023.11.29.232714.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2023.12.12.232727.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2023.12.12.232727.dev0/","requires_dist":["mutagen","pycryptodomex","websockets","certifi","requests <3,>=2.31.0","urllib3 <3,>=1.26.17","websockets >=12.0","brotlicffi ; implementation_name != \"cpython\"","brotli ; implementation_name == \"cpython\""],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2023.12.12.232727.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"f5653d24c765b674f21feac0e0111ca6aa3bf90ac25328f673e79fab7bb60114","md5":"249ec3220073a4f0c6810c656e204412","sha256":"ab839e00641e45d4c131d1ca552b54bed7b7059ccb53eadc0650e8223c65c64e"},"downloads":-1,"filename":"yt_dlp-2023.12.12.232727.dev0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"249ec3220073a4f0c6810c656e204412","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":2975517,"upload_time":"2023-12-12T23:34:53","upload_time_iso_8601":"2023-12-12T23:34:53.140500Z","url":"https://files.pythonhosted.org/packages/f5/65/3d24c765b674f21feac0e0111ca6aa3bf90ac25328f673e79fab7bb60114/yt_dlp-2023.12.12.232727.dev0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"df519c2b90ab5a80603e3e77478c6251de61fec45f3a60426e4d59acc8daa914","md5":"e915ab6aa2192b71ad7d58f565d3b1dd","sha256":"73a1dac573e66862567c0adb3e54e5a45381f4b606ae25ba42d0b7b4a719973d"},"downloads":-1,"filename":"yt-dlp-2023.12.12.232727.dev0.tar.gz","has_sig":false,"md5_digest":"e915ab6aa2192b71ad7d58f565d3b1dd","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2760369,"upload_time":"2023-12-12T23:34:57","upload_time_iso_8601":"2023-12-12T23:34:57.116108Z","url":"https://files.pythonhosted.org/packages/df/51/9c2b90ab5a80603e3e77478c6251de61fec45f3a60426e4d59acc8daa914/yt-dlp-2023.12.12.232727.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2023.12.13.232710.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2023.12.13.232710.dev0/","requires_dist":["mutagen","pycryptodomex","websockets","certifi","requests <3,>=2.31.0","urllib3 <3,>=1.26.17","websockets >=12.0","brotlicffi ; implementation_name != \"cpython\"","brotli ; implementation_name == \"cpython\""],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2023.12.13.232710.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"0dbb97ac41ae4d33de2d6d79d4ab80db30eb858532303bf139c38f15ec153b7c","md5":"ab788743813b0fc769fe9be6f1529827","sha256":"2eb717073a787e5cbad45bed79388b42fee88e3da77acfe079e35a8c6344b378"},"downloads":-1,"filename":"yt_dlp-2023.12.13.232710.dev0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"ab788743813b0fc769fe9be6f1529827","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":2975511,"upload_time":"2023-12-13T23:38:30","upload_time_iso_8601":"2023-12-13T23:38:30.290643Z","url":"https://files.pythonhosted.org/packages/0d/bb/97ac41ae4d33de2d6d79d4ab80db30eb858532303bf139c38f15ec153b7c/yt_dlp-2023.12.13.232710.dev0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"cd1ea709bc784faac7d13c35b7cfc44e5d335b6daa46c9570a7a5b991c79e3d3","md5":"f01f63e14df2008850b175b67734bbc8","sha256":"b08e6d2fd135ea48b34e4195daf602e92a807bde46411770dd8ba714f154c379"},"downloads":-1,"filename":"yt-dlp-2023.12.13.232710.dev0.tar.gz","has_sig":false,"md5_digest":"f01f63e14df2008850b175b67734bbc8","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2760373,"upload_time":"2023-12-13T23:38:34","upload_time_iso_8601":"2023-12-13T23:38:34.355087Z","url":"https://files.pythonhosted.org/packages/cd/1e/a709bc784faac7d13c35b7cfc44e5d335b6daa46c9570a7a5b991c79e3d3/yt-dlp-2023.12.13.232710.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2023.12.17.232710.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2023.12.17.232710.dev0/","requires_dist":["mutagen","pycryptodomex","websockets","certifi","requests <3,>=2.31.0","urllib3 <3,>=1.26.17","websockets >=12.0","brotlicffi ; implementation_name != \"cpython\"","brotli ; implementation_name == \"cpython\""],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2023.12.17.232710.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"3f1cbae6db4767f24d3a1250c6300effbbc74d7eb11185f436115f50936bd735","md5":"60bac24947adf8abb5e6ab43a1a99804","sha256":"1354b2cde92b5980d883b080df4aa169700f5b555730b1cc8492f208480c8a1d"},"downloads":-1,"filename":"yt_dlp-2023.12.17.232710.dev0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"60bac24947adf8abb5e6ab43a1a99804","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":2976354,"upload_time":"2023-12-17T23:33:52","upload_time_iso_8601":"2023-12-17T23:33:52.729955Z","url":"https://files.pythonhosted.org/packages/3f/1c/bae6db4767f24d3a1250c6300effbbc74d7eb11185f436115f50936bd735/yt_dlp-2023.12.17.232710.dev0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"8a921fe8d11e4f76546f77c17ae22914794af4d22d04a39fc9aff5e602ecaf51","md5":"76ee328cb1149da38b4205fcfff04807","sha256":"5bd872c408a9f7f45c47f53d2fba4bd3a36af14697e69c0d0bc6df8226cb577b"},"downloads":-1,"filename":"yt-dlp-2023.12.17.232710.dev0.tar.gz","has_sig":false,"md5_digest":"76ee328cb1149da38b4205fcfff04807","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2760884,"upload_time":"2023-12-17T23:33:56","upload_time_iso_8601":"2023-12-17T23:33:56.774425Z","url":"https://files.pythonhosted.org/packages/8a/92/1fe8d11e4f76546f77c17ae22914794af4d22d04a39fc9aff5e602ecaf51/yt-dlp-2023.12.17.232710.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2023.12.18.232711.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2023.12.18.232711.dev0/","requires_dist":["mutagen","pycryptodomex","websockets","certifi","requests <3,>=2.31.0","urllib3 <3,>=1.26.17","websockets >=12.0","brotlicffi ; implementation_name != \"cpython\"","brotli ; implementation_name == \"cpython\""],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2023.12.18.232711.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"6a8faaf45031e0b1dfaca45b1c743e59f77c752df83d1e7ad866e3e012d78ebe","md5":"18e5832874d9b2ee2914d3a0e8f543d7","sha256":"d88edf0096568e4fec8212f03e237a783962c560c048cd54fcdd40060f114701"},"downloads":-1,"filename":"yt_dlp-2023.12.18.232711.dev0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"18e5832874d9b2ee2914d3a0e8f543d7","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":2979402,"upload_time":"2023-12-18T23:34:06","upload_time_iso_8601":"2023-12-18T23:34:06.777244Z","url":"https://files.pythonhosted.org/packages/6a/8f/aaf45031e0b1dfaca45b1c743e59f77c752df83d1e7ad866e3e012d78ebe/yt_dlp-2023.12.18.232711.dev0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"79934b01089747ab1915babc7b25cfd094e7ae7c6fbefd54d556edf1c2a11ec9","md5":"73ebe3d13230c0fb2ea24a66c33d97c4","sha256":"cc4dc9fabeb0d215a313f652468e7f86d4093cddb38791f1ab5f2758de2f51a6"},"downloads":-1,"filename":"yt-dlp-2023.12.18.232711.dev0.tar.gz","has_sig":false,"md5_digest":"73ebe3d13230c0fb2ea24a66c33d97c4","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2762865,"upload_time":"2023-12-18T23:34:10","upload_time_iso_8601":"2023-12-18T23:34:10.691915Z","url":"https://files.pythonhosted.org/packages/79/93/4b01089747ab1915babc7b25cfd094e7ae7c6fbefd54d556edf1c2a11ec9/yt-dlp-2023.12.18.232711.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2023.12.19.232701.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2023.12.19.232701.dev0/","requires_dist":["mutagen","pycryptodomex","websockets","certifi","requests <3,>=2.31.0","urllib3 <3,>=1.26.17","websockets >=12.0","brotlicffi ; implementation_name != \"cpython\"","brotli ; implementation_name == \"cpython\""],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2023.12.19.232701.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"21c51f37ba85ccd163bc1f5ff368fb68a39345d0444f3d6be3f50fbb1d380f13","md5":"b1c16d137aa5a680769701eeba814880","sha256":"5418b2446dad5f9d833ca819b8ca131237f27ee10c8be274486556837689b033"},"downloads":-1,"filename":"yt_dlp-2023.12.19.232701.dev0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"b1c16d137aa5a680769701eeba814880","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":2981591,"upload_time":"2023-12-19T23:33:55","upload_time_iso_8601":"2023-12-19T23:33:55.463110Z","url":"https://files.pythonhosted.org/packages/21/c5/1f37ba85ccd163bc1f5ff368fb68a39345d0444f3d6be3f50fbb1d380f13/yt_dlp-2023.12.19.232701.dev0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"cab7baebcba9da64e34e64149c91870f06f0306866aff3e7f5c04500627526fd","md5":"efdd0e77db98b2aa148baaa955503cf9","sha256":"aa426975bdc14f5f89bb42597b14d029325b73805d4fe0e8ae7cf383a848ba4a"},"downloads":-1,"filename":"yt-dlp-2023.12.19.232701.dev0.tar.gz","has_sig":false,"md5_digest":"efdd0e77db98b2aa148baaa955503cf9","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2764589,"upload_time":"2023-12-19T23:33:59","upload_time_iso_8601":"2023-12-19T23:33:59.773887Z","url":"https://files.pythonhosted.org/packages/ca/b7/baebcba9da64e34e64149c91870f06f0306866aff3e7f5c04500627526fd/yt-dlp-2023.12.19.232701.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2023.12.20.232717.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2023.12.20.232717.dev0/","requires_dist":["mutagen","pycryptodomex","websockets","certifi","requests <3,>=2.31.0","urllib3 <3,>=1.26.17","websockets >=12.0","brotlicffi ; implementation_name != \"cpython\"","brotli ; implementation_name == \"cpython\""],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2023.12.20.232717.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"d98f3b7025774ff91c96f07ed842c67acde1a639d3b452243a9cdd40a5759843","md5":"e0b571f37fe677fa7e0ff60aa9442fc5","sha256":"248145ac83af8d928fac56093b93ffca3e094d6b81200ad8f4faeb7fdd2639b7"},"downloads":-1,"filename":"yt_dlp-2023.12.20.232717.dev0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"e0b571f37fe677fa7e0ff60aa9442fc5","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":2981596,"upload_time":"2023-12-20T23:34:03","upload_time_iso_8601":"2023-12-20T23:34:03.409479Z","url":"https://files.pythonhosted.org/packages/d9/8f/3b7025774ff91c96f07ed842c67acde1a639d3b452243a9cdd40a5759843/yt_dlp-2023.12.20.232717.dev0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"91c96d828e87c2ac3c115614441b1a0c425b30e5f8fcaf452500ac09ac9632ca","md5":"e6d0e934804c8a0b209a8231cbf144d5","sha256":"92d6568444321eb1d6415ffd4763cc6344523d02071b66a459784460e9e45619"},"downloads":-1,"filename":"yt-dlp-2023.12.20.232717.dev0.tar.gz","has_sig":false,"md5_digest":"e6d0e934804c8a0b209a8231cbf144d5","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2764709,"upload_time":"2023-12-20T23:34:06","upload_time_iso_8601":"2023-12-20T23:34:06.516772Z","url":"https://files.pythonhosted.org/packages/91/c9/6d828e87c2ac3c115614441b1a0c425b30e5f8fcaf452500ac09ac9632ca/yt-dlp-2023.12.20.232717.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2023.12.21.232720.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2023.12.21.232720.dev0/","requires_dist":["mutagen","pycryptodomex","websockets","certifi","requests <3,>=2.31.0","urllib3 <3,>=1.26.17","websockets >=12.0","brotlicffi ; implementation_name != \"cpython\"","brotli ; implementation_name == \"cpython\""],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2023.12.21.232720.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"8903a0cb671904fec2e914d30db4f798a35e02fb746fc93b341ca7b50df54bae","md5":"d0bf3b56ef026fc459426b69f460ff3a","sha256":"efc568790e967fbda6df688e1855e960bc90fa051237aef1858a1476f7040a5c"},"downloads":-1,"filename":"yt_dlp-2023.12.21.232720.dev0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"d0bf3b56ef026fc459426b69f460ff3a","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":2981710,"upload_time":"2023-12-21T23:34:03","upload_time_iso_8601":"2023-12-21T23:34:03.086742Z","url":"https://files.pythonhosted.org/packages/89/03/a0cb671904fec2e914d30db4f798a35e02fb746fc93b341ca7b50df54bae/yt_dlp-2023.12.21.232720.dev0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"993a4cc3e4e0dd9b9a2599e94c30a323967d3cc51baeccaaeeb077ba45fba656","md5":"d826f1a3e7430878424a67c450de9702","sha256":"0a083de08a91ea668971d70af178028f3f6c1ca4e61bb3aa1b9e60c4bcc43e56"},"downloads":-1,"filename":"yt-dlp-2023.12.21.232720.dev0.tar.gz","has_sig":false,"md5_digest":"d826f1a3e7430878424a67c450de9702","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2764834,"upload_time":"2023-12-21T23:34:07","upload_time_iso_8601":"2023-12-21T23:34:07.503572Z","url":"https://files.pythonhosted.org/packages/99/3a/4cc3e4e0dd9b9a2599e94c30a323967d3cc51baeccaaeeb077ba45fba656/yt-dlp-2023.12.21.232720.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2023.12.22.232735.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2023.12.22.232735.dev0/","requires_dist":["mutagen","pycryptodomex","websockets","certifi","requests <3,>=2.31.0","urllib3 <3,>=1.26.17","websockets >=12.0","brotlicffi ; implementation_name != \"cpython\"","brotli ; implementation_name == \"cpython\""],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2023.12.22.232735.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"c515356fc826bd4e93b4c0d88c86ea99877162c8112fbf24430e731d15d33b2b","md5":"b320fe90aa4c7a4d457035a58831ad56","sha256":"b700c7bc1703b1d7dd0d28d75fe4d8829b83614209fd290f51b2335189429454"},"downloads":-1,"filename":"yt_dlp-2023.12.22.232735.dev0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"b320fe90aa4c7a4d457035a58831ad56","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":2983512,"upload_time":"2023-12-22T23:34:37","upload_time_iso_8601":"2023-12-22T23:34:37.071522Z","url":"https://files.pythonhosted.org/packages/c5/15/356fc826bd4e93b4c0d88c86ea99877162c8112fbf24430e731d15d33b2b/yt_dlp-2023.12.22.232735.dev0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"32befc55e429e0465007c7fcff1e50aa5e88a61c9214ae83965ebc817a714c22","md5":"26c8bdd08c1ca36eedb21bf3460c991d","sha256":"ef7e57fdbc5e5ba1f7de6faae690da7e0d251e126c22d868a0c5fcb383142839"},"downloads":-1,"filename":"yt-dlp-2023.12.22.232735.dev0.tar.gz","has_sig":false,"md5_digest":"26c8bdd08c1ca36eedb21bf3460c991d","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2766029,"upload_time":"2023-12-22T23:34:42","upload_time_iso_8601":"2023-12-22T23:34:42.162767Z","url":"https://files.pythonhosted.org/packages/32/be/fc55e429e0465007c7fcff1e50aa5e88a61c9214ae83965ebc817a714c22/yt-dlp-2023.12.22.232735.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2023.12.24.232657.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2023.12.24.232657.dev0/","requires_dist":["mutagen","pycryptodomex","websockets","certifi","requests <3,>=2.31.0","urllib3 <3,>=1.26.17","websockets >=12.0","brotlicffi ; implementation_name != \"cpython\"","brotli ; implementation_name == \"cpython\""],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2023.12.24.232657.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"54fe6394a40d9d1fb2aa4df8d132f5c5636b95ee1da414030a655d47696f6d5f","md5":"ea5b7d2c587928eded89f01ff95728a4","sha256":"5e4ef9ee1a794a8669f43d4cf0e8813be530736c48910ee5f5944e1b1601129e"},"downloads":-1,"filename":"yt_dlp-2023.12.24.232657.dev0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"ea5b7d2c587928eded89f01ff95728a4","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":2984410,"upload_time":"2023-12-24T23:33:27","upload_time_iso_8601":"2023-12-24T23:33:27.754207Z","url":"https://files.pythonhosted.org/packages/54/fe/6394a40d9d1fb2aa4df8d132f5c5636b95ee1da414030a655d47696f6d5f/yt_dlp-2023.12.24.232657.dev0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"9e4b108d78a03b2fdcc59aa5d096680b71cb628739b2d5f30eee8dc6c722e6cf","md5":"17056842565a20e09598421c9e2e8dc8","sha256":"29072d445280467ac7a7964ab072bdf6b408a77b03ef358a4beb19afba750176"},"downloads":-1,"filename":"yt-dlp-2023.12.24.232657.dev0.tar.gz","has_sig":false,"md5_digest":"17056842565a20e09598421c9e2e8dc8","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2767035,"upload_time":"2023-12-24T23:33:31","upload_time_iso_8601":"2023-12-24T23:33:31.868874Z","url":"https://files.pythonhosted.org/packages/9e/4b/108d78a03b2fdcc59aa5d096680b71cb628739b2d5f30eee8dc6c722e6cf/yt-dlp-2023.12.24.232657.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2023.12.26.232752.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2023.12.26.232752.dev0/","requires_dist":["mutagen","pycryptodomex","websockets","certifi","requests <3,>=2.31.0","urllib3 <3,>=1.26.17","websockets >=12.0","brotlicffi ; implementation_name != \"cpython\"","brotli ; implementation_name == \"cpython\""],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2023.12.26.232752.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"d36ac9bf0d6b8fb93c45977557058adb5f3cff24629242fbb04fab1b13fb0d48","md5":"b79cd32527bbf6772fac17b5d724d940","sha256":"f235e501fd3d83fd0783bdd81e4f2173854813933669b769a72d3c311530542e"},"downloads":-1,"filename":"yt_dlp-2023.12.26.232752.dev0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"b79cd32527bbf6772fac17b5d724d940","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":2989264,"upload_time":"2023-12-26T23:34:28","upload_time_iso_8601":"2023-12-26T23:34:28.974670Z","url":"https://files.pythonhosted.org/packages/d3/6a/c9bf0d6b8fb93c45977557058adb5f3cff24629242fbb04fab1b13fb0d48/yt_dlp-2023.12.26.232752.dev0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"538aa22a1b472f35a473dc85e321e173a57339bef34d2211fef180fe748f67aa","md5":"def40c1326401c5c928e0cfb040c2d7c","sha256":"98b8d18e36331fcc9a1c3f552b66f12f9cfde86cce2397136a93d6226dcf318b"},"downloads":-1,"filename":"yt-dlp-2023.12.26.232752.dev0.tar.gz","has_sig":false,"md5_digest":"def40c1326401c5c928e0cfb040c2d7c","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2771904,"upload_time":"2023-12-26T23:34:31","upload_time_iso_8601":"2023-12-26T23:34:31.538165Z","url":"https://files.pythonhosted.org/packages/53/8a/a22a1b472f35a473dc85e321e173a57339bef34d2211fef180fe748f67aa/yt-dlp-2023.12.26.232752.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2023.12.30":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2023.12.30/","requires_dist":["mutagen","pycryptodomex","certifi","requests <3,>=2.31.0","urllib3 <3,>=1.26.17","websockets >=12.0","brotlicffi ; implementation_name != \"cpython\"","brotli ; implementation_name == \"cpython\""],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2023.12.30","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"d669da2592056798716027215f561f2e9eeb3384d48b6b6a5a918916dbad1c98","md5":"b5c624bc8aaa56a6f22b9ffb35af099c","sha256":"c00d9a71d64472ad441bcaa1ec0c3797d6e60c9f934f270096a96fe51657e7b3"},"downloads":-1,"filename":"yt_dlp-2023.12.30-py2.py3-none-any.whl","has_sig":false,"md5_digest":"b5c624bc8aaa56a6f22b9ffb35af099c","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":2987116,"upload_time":"2023-12-30T21:51:38","upload_time_iso_8601":"2023-12-30T21:51:38.334181Z","url":"https://files.pythonhosted.org/packages/d6/69/da2592056798716027215f561f2e9eeb3384d48b6b6a5a918916dbad1c98/yt_dlp-2023.12.30-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"a9a7d8536993aed7569c5221f532e3ba01b09d5bdc893df3ef4e5b05d01582c4","md5":"4ef3eee6daa8016a65f1a8c84e01fbec","sha256":"a11862e57721b0a0f0883dfeb5a4d79ba213a2d4c45e1880e9fd70f8e6570c38"},"downloads":-1,"filename":"yt-dlp-2023.12.30.tar.gz","has_sig":false,"md5_digest":"4ef3eee6daa8016a65f1a8c84e01fbec","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2769859,"upload_time":"2023-12-30T21:51:42","upload_time_iso_8601":"2023-12-30T21:51:42.971009Z","url":"https://files.pythonhosted.org/packages/a9/a7/d8536993aed7569c5221f532e3ba01b09d5bdc893df3ef4e5b05d01582c4/yt-dlp-2023.12.30.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2023.12.30.232719.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2023.12.30.232719.dev0/","requires_dist":["mutagen","pycryptodomex","certifi","requests <3,>=2.31.0","urllib3 <3,>=1.26.17","websockets >=12.0","brotlicffi ; implementation_name != \"cpython\"","brotli ; implementation_name == \"cpython\""],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2023.12.30.232719.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"ba1890e6ee6afaba4577ce70671ad2defa463546e42bf7242ee518b3dc773664","md5":"1695b11f368e0d9609ac5d856ad5e045","sha256":"51935fb2bb63629d923870fab7af8c47aa615cda14e19cfb409cbb0fb58a256b"},"downloads":-1,"filename":"yt_dlp-2023.12.30.232719.dev0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"1695b11f368e0d9609ac5d856ad5e045","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":2987453,"upload_time":"2023-12-30T23:35:45","upload_time_iso_8601":"2023-12-30T23:35:45.894722Z","url":"https://files.pythonhosted.org/packages/ba/18/90e6ee6afaba4577ce70671ad2defa463546e42bf7242ee518b3dc773664/yt_dlp-2023.12.30.232719.dev0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f4bd2b0019a0b180ee2ba2d75531b258dba7bb8fe514157850f9d9375ec96447","md5":"7b61f727aea35326c500aac78d602347","sha256":"8b2a31bdc152154880c5cb918205dbff46a19efbfb4be9e66eaca64306ed3138"},"downloads":-1,"filename":"yt-dlp-2023.12.30.232719.dev0.tar.gz","has_sig":false,"md5_digest":"7b61f727aea35326c500aac78d602347","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2773787,"upload_time":"2023-12-30T23:35:50","upload_time_iso_8601":"2023-12-30T23:35:50.184063Z","url":"https://files.pythonhosted.org/packages/f4/bd/2b0019a0b180ee2ba2d75531b258dba7bb8fe514157850f9d9375ec96447/yt-dlp-2023.12.30.232719.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2023.12.31.232713.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2023.12.31.232713.dev0/","requires_dist":["mutagen","pycryptodomex","certifi","requests <3,>=2.31.0","urllib3 <3,>=1.26.17","websockets >=12.0","brotlicffi ; implementation_name != \"cpython\"","brotli ; implementation_name == \"cpython\""],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2023.12.31.232713.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"24e231bd5cf05d4f9d7e95247f94d5f3d418b5be2f2b15b75d2b830cd3969194","md5":"9319c9afd10e53830d744e3bd67e95fe","sha256":"9d3004284f48da267428c761dfab100e6133e6164d63468db140f0ab9f8a8fe7"},"downloads":-1,"filename":"yt_dlp-2023.12.31.232713.dev0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"9319c9afd10e53830d744e3bd67e95fe","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":2987476,"upload_time":"2023-12-31T23:36:19","upload_time_iso_8601":"2023-12-31T23:36:19.643607Z","url":"https://files.pythonhosted.org/packages/24/e2/31bd5cf05d4f9d7e95247f94d5f3d418b5be2f2b15b75d2b830cd3969194/yt_dlp-2023.12.31.232713.dev0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c02129010c16126c4ebd095c1f88d0b1323357a65bc8c6eaf5c60c0b8e3ffd0e","md5":"631f8f740cc4d55dd23337824d7a7fd3","sha256":"91a68111049c03524a0c3a3039efbdea68219cd5efa9a1950fd5bf8c0199525b"},"downloads":-1,"filename":"yt-dlp-2023.12.31.232713.dev0.tar.gz","has_sig":false,"md5_digest":"631f8f740cc4d55dd23337824d7a7fd3","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2773727,"upload_time":"2023-12-31T23:36:23","upload_time_iso_8601":"2023-12-31T23:36:23.229754Z","url":"https://files.pythonhosted.org/packages/c0/21/29010c16126c4ebd095c1f88d0b1323357a65bc8c6eaf5c60c0b8e3ffd0e/yt-dlp-2023.12.31.232713.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2023.12.5.232702.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2023.12.5.232702.dev0/","requires_dist":["mutagen","pycryptodomex","websockets","certifi","requests <3,>=2.31.0","urllib3 <3,>=1.26.17","websockets >=12.0","brotlicffi ; implementation_name != \"cpython\"","brotli ; implementation_name == \"cpython\""],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2023.12.5.232702.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"409bac01fbd6b1bddef36690da84be32302d971c1110dafddf13578d6975737b","md5":"543cb05332a50833ef08b5bb3053b883","sha256":"366e556c4fa6b203502fa884dc4ca21d5c9ee2e3b9d272984cb98b3849bf661a"},"downloads":-1,"filename":"yt_dlp-2023.12.5.232702.dev0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"543cb05332a50833ef08b5bb3053b883","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":2972286,"upload_time":"2023-12-05T23:37:17","upload_time_iso_8601":"2023-12-05T23:37:17.993901Z","url":"https://files.pythonhosted.org/packages/40/9b/ac01fbd6b1bddef36690da84be32302d971c1110dafddf13578d6975737b/yt_dlp-2023.12.5.232702.dev0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"96a278d42c24aa18e20fc0d33da68b8c9f1772eb4320584063f98ecda13a788b","md5":"0273b0448b7b23d3574fa6ca8cfa6beb","sha256":"a4bfca7d93ce7e30acc1a5e2c6a0dc4c6bbd2a2d571ed9ff05eb38708a6e3280"},"downloads":-1,"filename":"yt-dlp-2023.12.5.232702.dev0.tar.gz","has_sig":false,"md5_digest":"0273b0448b7b23d3574fa6ca8cfa6beb","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2757818,"upload_time":"2023-12-05T23:37:21","upload_time_iso_8601":"2023-12-05T23:37:21.390729Z","url":"https://files.pythonhosted.org/packages/96/a2/78d42c24aa18e20fc0d33da68b8c9f1772eb4320584063f98ecda13a788b/yt-dlp-2023.12.5.232702.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2023.12.6.232721.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2023.12.6.232721.dev0/","requires_dist":["mutagen","pycryptodomex","websockets","certifi","requests <3,>=2.31.0","urllib3 <3,>=1.26.17","websockets >=12.0","brotlicffi ; implementation_name != \"cpython\"","brotli ; implementation_name == \"cpython\""],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2023.12.6.232721.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"2c83f0ae59c3e3a24fde24f5a51006de3b12a15e0aebea2bea21db9006113718","md5":"bf128513fc2e74b54341a4e5291991f9","sha256":"877ac8270435d644b34f9c6b450424e88a5f16f213da984788b50b185f2bf9d7"},"downloads":-1,"filename":"yt_dlp-2023.12.6.232721.dev0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"bf128513fc2e74b54341a4e5291991f9","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":2973227,"upload_time":"2023-12-06T23:34:39","upload_time_iso_8601":"2023-12-06T23:34:39.168168Z","url":"https://files.pythonhosted.org/packages/2c/83/f0ae59c3e3a24fde24f5a51006de3b12a15e0aebea2bea21db9006113718/yt_dlp-2023.12.6.232721.dev0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"96ef4adc7c291bb0abf0a41cc2b8f5413720b186995fe2ff2cbbdab8d90cbbf9","md5":"ebe8ca1c5f443825aeae27e8ab40b690","sha256":"a5d8ad6a1927d23e9563c5ba65a496e72dc8078bc2d0c6cde5f45bf48dd32cdd"},"downloads":-1,"filename":"yt-dlp-2023.12.6.232721.dev0.tar.gz","has_sig":false,"md5_digest":"ebe8ca1c5f443825aeae27e8ab40b690","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2758409,"upload_time":"2023-12-06T23:34:43","upload_time_iso_8601":"2023-12-06T23:34:43.446654Z","url":"https://files.pythonhosted.org/packages/96/ef/4adc7c291bb0abf0a41cc2b8f5413720b186995fe2ff2cbbdab8d90cbbf9/yt-dlp-2023.12.6.232721.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2023.2.17":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2023.2.17/","requires_dist":["mutagen","pycryptodomex","websockets","certifi","brotlicffi ; platform_python_implementation != \"CPython\"","brotli ; platform_python_implementation == \"CPython\""],"requires_python":">=3.7","summary":"A youtube-dl fork with additional features and patches","version":"2023.2.17","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"0df96816d1f3f7c0f5a807f7ddc7480d2fa0d6b6e066002653d3a676501512f2","md5":"62ae8c5e20d62c5686af5c340395a19f","sha256":"3b2df037c80922f0f83f63ee2f9253496b4a8668c0fe8d2a836ba9040f853b07"},"downloads":-1,"filename":"yt_dlp-2023.2.17-py2.py3-none-any.whl","has_sig":false,"md5_digest":"62ae8c5e20d62c5686af5c340395a19f","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.7","size":2871294,"upload_time":"2023-02-17T12:33:53","upload_time_iso_8601":"2023-02-17T12:33:53.869180Z","url":"https://files.pythonhosted.org/packages/0d/f9/6816d1f3f7c0f5a807f7ddc7480d2fa0d6b6e066002653d3a676501512f2/yt_dlp-2023.2.17-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"3070578521a22783112ae3dc01e33b23429151edeecb585c7b1ed58feee7fef3","md5":"ef76cd10d5a2eb5e285806727754edff","sha256":"9af92de5effc193bdb51216d9ebf28874d96180d202fae752b0d9f2a63380f3a"},"downloads":-1,"filename":"yt-dlp-2023.2.17.tar.gz","has_sig":false,"md5_digest":"ef76cd10d5a2eb5e285806727754edff","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":2571278,"upload_time":"2023-02-17T12:33:56","upload_time_iso_8601":"2023-02-17T12:33:56.343977Z","url":"https://files.pythonhosted.org/packages/30/70/578521a22783112ae3dc01e33b23429151edeecb585c7b1ed58feee7fef3/yt-dlp-2023.2.17.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-46121"],"details":"### Impact\nThe Generic Extractor in yt-dlp is vulnerable to an attacker setting an arbitrary proxy for a request to an arbitrary url, allowing the attacker to MITM the request made from yt-dlp's HTTP session. This could lead to cookie exfiltration in some cases.\n\n<details>\n\nTo pass extra control data between extractors (such as headers like `Referer`), yt-dlp employs a concept of \"url smuggling\". This works by adding this extra data as json to the url fragment (\"smuggling\") that is then passed on to an extractor. The receiving extractor then \"unsmuggles\" the data from the input url. This functionality is intended to be internal only.\n\nCurrently, the Generic extractor supports receiving an arbitrary dictionary of HTTP headers in a smuggled url, of which it extracts and adds them to the initial request it makes to such url. This is useful when a url sent to the Generic extractor needs a `Referer` header sent with it, for example.\n\nAdditionally, yt-dlp has internal headers to set a proxy for a request: `Ytdl-request-proxy` and `Ytdl-socks-proxy`. While these are deprecated, internally `Ytdl-request-proxy` is still used for `--geo-verification-proxy`.\n\nHowever, it is possible for a maliciously crafted site include these smuggled options in a url which then the Generic extractor extracts and redirects to itself.  This allows a malicious website to **set an arbitrary proxy for an arbitrary url that the Generic extractor will request.**\n\nThis could allow for the following, but not limited too:\n- An attacker can MITM a request it asks yt-dlp to make to **any** website.\n   - If a user has loaded cookies into yt-dlp for the target site, which are not marked as [secure](https://en.wikipedia.org/wiki/Secure_cookie), they could be exfiltrated by the attacker.\n   - Fortunately most sites are HTTPS and should be setting cookies as secure.\n- An attacker can set cookies for an arbitrary site.\n\nAn example malicious webpage:\n```html\n<!DOCTYPE html>\n<cinerama.embedPlayer('t','{{ target_site }}#__youtubedl_smuggle=%7B%22http_headers%22:%7B%22Ytdl-request-proxy%22:%22{{ proxy url }}%22%7D,%22fake%22:%22.smil/manifest%22%7D')\n```\n\nWhere `{{ target_site }}` is the URL Generic extractor will request and `{{ proxy url }}` is the proxy to proxy the request for this url through.\n\n</details>\n\n### Patches\n- We have removed the ability to smuggle `http_headers` to the Generic extractor, as well as other extractors that use the same pattern.\n\n### Workarounds\n- Disable Generic extractor (`--ies default,-generic`), or only pass trusted sites with trusted content.\n- Take caution when using `--no-check-certificate`.\n\n### References\n- <https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-3ch3-jhc6-5r8x>\n- <https://nvd.nist.gov/vuln/detail/CVE-2023-46121>\n- <https://github.com/yt-dlp/yt-dlp/releases/tag/2023.11.14>\n- <https://github.com/yt-dlp/yt-dlp/commit/f04b5bedad7b281bee9814686bba1762bae092eb>\n","fixed_in":["2023.11.14"],"id":"GHSA-3ch3-jhc6-5r8x","link":"https://osv.dev/vulnerability/GHSA-3ch3-jhc6-5r8x","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2023.3.3":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2023.3.3/","requires_dist":["mutagen","pycryptodomex","websockets","certifi","brotlicffi ; platform_python_implementation != \"CPython\"","brotli ; platform_python_implementation == \"CPython\""],"requires_python":">=3.7","summary":"A youtube-dl fork with additional features and patches","version":"2023.3.3","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"75450d147a4347bf336a67b8732d701ef5a23dfc2bb361b938ca3c6374b6ee29","md5":"a379a29e29fb94d4201dee3f61b16845","sha256":"b1ae1a0571e3f1d14b893a0983fcd66faa5f896997fc6262ce00a5a880e9e6ae"},"downloads":-1,"filename":"yt_dlp-2023.3.3-py2.py3-none-any.whl","has_sig":false,"md5_digest":"a379a29e29fb94d4201dee3f61b16845","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.7","size":2779479,"upload_time":"2023-03-03T21:42:20","upload_time_iso_8601":"2023-03-03T21:42:20.821575Z","url":"https://files.pythonhosted.org/packages/75/45/0d147a4347bf336a67b8732d701ef5a23dfc2bb361b938ca3c6374b6ee29/yt_dlp-2023.3.3-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"6dac34d360e618ece3aac72982671a99aa7f8d10ebd8aafc60010876a0c650cd","md5":"0e8e888d32df2f46f89b9fb3ad4ad966","sha256":"77fd35ed8f59b580cff5161b13dd77ee9925619a73553b7c03eb2b0adea71fb7"},"downloads":-1,"filename":"yt-dlp-2023.3.3.tar.gz","has_sig":false,"md5_digest":"0e8e888d32df2f46f89b9fb3ad4ad966","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":2487221,"upload_time":"2023-03-03T21:42:23","upload_time_iso_8601":"2023-03-03T21:42:23.619611Z","url":"https://files.pythonhosted.org/packages/6d/ac/34d360e618ece3aac72982671a99aa7f8d10ebd8aafc60010876a0c650cd/yt-dlp-2023.3.3.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-46121"],"details":"### Impact\nThe Generic Extractor in yt-dlp is vulnerable to an attacker setting an arbitrary proxy for a request to an arbitrary url, allowing the attacker to MITM the request made from yt-dlp's HTTP session. This could lead to cookie exfiltration in some cases.\n\n<details>\n\nTo pass extra control data between extractors (such as headers like `Referer`), yt-dlp employs a concept of \"url smuggling\". This works by adding this extra data as json to the url fragment (\"smuggling\") that is then passed on to an extractor. The receiving extractor then \"unsmuggles\" the data from the input url. This functionality is intended to be internal only.\n\nCurrently, the Generic extractor supports receiving an arbitrary dictionary of HTTP headers in a smuggled url, of which it extracts and adds them to the initial request it makes to such url. This is useful when a url sent to the Generic extractor needs a `Referer` header sent with it, for example.\n\nAdditionally, yt-dlp has internal headers to set a proxy for a request: `Ytdl-request-proxy` and `Ytdl-socks-proxy`. While these are deprecated, internally `Ytdl-request-proxy` is still used for `--geo-verification-proxy`.\n\nHowever, it is possible for a maliciously crafted site include these smuggled options in a url which then the Generic extractor extracts and redirects to itself.  This allows a malicious website to **set an arbitrary proxy for an arbitrary url that the Generic extractor will request.**\n\nThis could allow for the following, but not limited too:\n- An attacker can MITM a request it asks yt-dlp to make to **any** website.\n   - If a user has loaded cookies into yt-dlp for the target site, which are not marked as [secure](https://en.wikipedia.org/wiki/Secure_cookie), they could be exfiltrated by the attacker.\n   - Fortunately most sites are HTTPS and should be setting cookies as secure.\n- An attacker can set cookies for an arbitrary site.\n\nAn example malicious webpage:\n```html\n<!DOCTYPE html>\n<cinerama.embedPlayer('t','{{ target_site }}#__youtubedl_smuggle=%7B%22http_headers%22:%7B%22Ytdl-request-proxy%22:%22{{ proxy url }}%22%7D,%22fake%22:%22.smil/manifest%22%7D')\n```\n\nWhere `{{ target_site }}` is the URL Generic extractor will request and `{{ proxy url }}` is the proxy to proxy the request for this url through.\n\n</details>\n\n### Patches\n- We have removed the ability to smuggle `http_headers` to the Generic extractor, as well as other extractors that use the same pattern.\n\n### Workarounds\n- Disable Generic extractor (`--ies default,-generic`), or only pass trusted sites with trusted content.\n- Take caution when using `--no-check-certificate`.\n\n### References\n- <https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-3ch3-jhc6-5r8x>\n- <https://nvd.nist.gov/vuln/detail/CVE-2023-46121>\n- <https://github.com/yt-dlp/yt-dlp/releases/tag/2023.11.14>\n- <https://github.com/yt-dlp/yt-dlp/commit/f04b5bedad7b281bee9814686bba1762bae092eb>\n","fixed_in":["2023.11.14"],"id":"GHSA-3ch3-jhc6-5r8x","link":"https://osv.dev/vulnerability/GHSA-3ch3-jhc6-5r8x","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2023.3.4":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2023.3.4/","requires_dist":["mutagen","pycryptodomex","websockets","certifi","brotlicffi ; platform_python_implementation != \"CPython\"","brotli ; platform_python_implementation == \"CPython\""],"requires_python":">=3.7","summary":"A youtube-dl fork with additional features and patches","version":"2023.3.4","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"a7df498c57f641e9993376cf52489047158e6d660e8bab06b72c470ad5cce2bd","md5":"f4b02961ff640c70b383a95736419ab2","sha256":"40ca421407ce07c8fd700854fd978d58526ec6fff3468caa34ff1c7333b8dc34"},"downloads":-1,"filename":"yt_dlp-2023.3.4-py2.py3-none-any.whl","has_sig":false,"md5_digest":"f4b02961ff640c70b383a95736419ab2","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.7","size":2883792,"upload_time":"2023-03-04T22:25:40","upload_time_iso_8601":"2023-03-04T22:25:40.393596Z","url":"https://files.pythonhosted.org/packages/a7/df/498c57f641e9993376cf52489047158e6d660e8bab06b72c470ad5cce2bd/yt_dlp-2023.3.4-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"e84a1e01f24fcb49191626e2b17d00e13a093315d03a9da09fccb1c75913e420","md5":"bca9382f46a5ddbe5fd1a1fedbfb62a8","sha256":"265d5da97a76c15d7d9a4088a67b78acd5dcf6f8cfd8257c52f581ff996ff515"},"downloads":-1,"filename":"yt-dlp-2023.3.4.tar.gz","has_sig":false,"md5_digest":"bca9382f46a5ddbe5fd1a1fedbfb62a8","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":2587373,"upload_time":"2023-03-04T22:25:43","upload_time_iso_8601":"2023-03-04T22:25:43.291505Z","url":"https://files.pythonhosted.org/packages/e8/4a/1e01f24fcb49191626e2b17d00e13a093315d03a9da09fccb1c75913e420/yt-dlp-2023.3.4.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-46121"],"details":"### Impact\nThe Generic Extractor in yt-dlp is vulnerable to an attacker setting an arbitrary proxy for a request to an arbitrary url, allowing the attacker to MITM the request made from yt-dlp's HTTP session. This could lead to cookie exfiltration in some cases.\n\n<details>\n\nTo pass extra control data between extractors (such as headers like `Referer`), yt-dlp employs a concept of \"url smuggling\". This works by adding this extra data as json to the url fragment (\"smuggling\") that is then passed on to an extractor. The receiving extractor then \"unsmuggles\" the data from the input url. This functionality is intended to be internal only.\n\nCurrently, the Generic extractor supports receiving an arbitrary dictionary of HTTP headers in a smuggled url, of which it extracts and adds them to the initial request it makes to such url. This is useful when a url sent to the Generic extractor needs a `Referer` header sent with it, for example.\n\nAdditionally, yt-dlp has internal headers to set a proxy for a request: `Ytdl-request-proxy` and `Ytdl-socks-proxy`. While these are deprecated, internally `Ytdl-request-proxy` is still used for `--geo-verification-proxy`.\n\nHowever, it is possible for a maliciously crafted site include these smuggled options in a url which then the Generic extractor extracts and redirects to itself.  This allows a malicious website to **set an arbitrary proxy for an arbitrary url that the Generic extractor will request.**\n\nThis could allow for the following, but not limited too:\n- An attacker can MITM a request it asks yt-dlp to make to **any** website.\n   - If a user has loaded cookies into yt-dlp for the target site, which are not marked as [secure](https://en.wikipedia.org/wiki/Secure_cookie), they could be exfiltrated by the attacker.\n   - Fortunately most sites are HTTPS and should be setting cookies as secure.\n- An attacker can set cookies for an arbitrary site.\n\nAn example malicious webpage:\n```html\n<!DOCTYPE html>\n<cinerama.embedPlayer('t','{{ target_site }}#__youtubedl_smuggle=%7B%22http_headers%22:%7B%22Ytdl-request-proxy%22:%22{{ proxy url }}%22%7D,%22fake%22:%22.smil/manifest%22%7D')\n```\n\nWhere `{{ target_site }}` is the URL Generic extractor will request and `{{ proxy url }}` is the proxy to proxy the request for this url through.\n\n</details>\n\n### Patches\n- We have removed the ability to smuggle `http_headers` to the Generic extractor, as well as other extractors that use the same pattern.\n\n### Workarounds\n- Disable Generic extractor (`--ies default,-generic`), or only pass trusted sites with trusted content.\n- Take caution when using `--no-check-certificate`.\n\n### References\n- <https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-3ch3-jhc6-5r8x>\n- <https://nvd.nist.gov/vuln/detail/CVE-2023-46121>\n- <https://github.com/yt-dlp/yt-dlp/releases/tag/2023.11.14>\n- <https://github.com/yt-dlp/yt-dlp/commit/f04b5bedad7b281bee9814686bba1762bae092eb>\n","fixed_in":["2023.11.14"],"id":"GHSA-3ch3-jhc6-5r8x","link":"https://osv.dev/vulnerability/GHSA-3ch3-jhc6-5r8x","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2023.6.21":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2023.6.21/","requires_dist":["mutagen","pycryptodomex","websockets","certifi","brotlicffi ; platform_python_implementation != \"CPython\"","brotli ; platform_python_implementation == \"CPython\""],"requires_python":">=3.7","summary":"A youtube-dl fork with additional features and patches","version":"2023.6.21","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"452702df242aba3ccb6b02457c4063113add4c7b06af46f1cd5bc75b9856656f","md5":"94ebf95b345769fad090d7b21136431c","sha256":"e4117b1ee07878c7dade2a64e6102fb7840fa1e3f19365cca42ce291754f35cf"},"downloads":-1,"filename":"yt_dlp-2023.6.21-py2.py3-none-any.whl","has_sig":false,"md5_digest":"94ebf95b345769fad090d7b21136431c","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.7","size":2989359,"upload_time":"2023-06-21T04:10:08","upload_time_iso_8601":"2023-06-21T04:10:08.627077Z","url":"https://files.pythonhosted.org/packages/45/27/02df242aba3ccb6b02457c4063113add4c7b06af46f1cd5bc75b9856656f/yt_dlp-2023.6.21-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"369a13eee74e6a621ab42d2b8c7fd7daf6e943af1a8269aa966718fae177a64b","md5":"d1b5dee9cb106eeff77d391de1bb043f","sha256":"56c35d1ad3ecfb828c3b89ffe07b235b354eddd82e1a31ddc3d16eb8c3e71e8e"},"downloads":-1,"filename":"yt-dlp-2023.6.21.tar.gz","has_sig":false,"md5_digest":"d1b5dee9cb106eeff77d391de1bb043f","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":2689165,"upload_time":"2023-06-21T04:10:11","upload_time_iso_8601":"2023-06-21T04:10:11.815489Z","url":"https://files.pythonhosted.org/packages/36/9a/13eee74e6a621ab42d2b8c7fd7daf6e943af1a8269aa966718fae177a64b/yt-dlp-2023.6.21.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-46121"],"details":"### Impact\nThe Generic Extractor in yt-dlp is vulnerable to an attacker setting an arbitrary proxy for a request to an arbitrary url, allowing the attacker to MITM the request made from yt-dlp's HTTP session. This could lead to cookie exfiltration in some cases.\n\n<details>\n\nTo pass extra control data between extractors (such as headers like `Referer`), yt-dlp employs a concept of \"url smuggling\". This works by adding this extra data as json to the url fragment (\"smuggling\") that is then passed on to an extractor. The receiving extractor then \"unsmuggles\" the data from the input url. This functionality is intended to be internal only.\n\nCurrently, the Generic extractor supports receiving an arbitrary dictionary of HTTP headers in a smuggled url, of which it extracts and adds them to the initial request it makes to such url. This is useful when a url sent to the Generic extractor needs a `Referer` header sent with it, for example.\n\nAdditionally, yt-dlp has internal headers to set a proxy for a request: `Ytdl-request-proxy` and `Ytdl-socks-proxy`. While these are deprecated, internally `Ytdl-request-proxy` is still used for `--geo-verification-proxy`.\n\nHowever, it is possible for a maliciously crafted site include these smuggled options in a url which then the Generic extractor extracts and redirects to itself.  This allows a malicious website to **set an arbitrary proxy for an arbitrary url that the Generic extractor will request.**\n\nThis could allow for the following, but not limited too:\n- An attacker can MITM a request it asks yt-dlp to make to **any** website.\n   - If a user has loaded cookies into yt-dlp for the target site, which are not marked as [secure](https://en.wikipedia.org/wiki/Secure_cookie), they could be exfiltrated by the attacker.\n   - Fortunately most sites are HTTPS and should be setting cookies as secure.\n- An attacker can set cookies for an arbitrary site.\n\nAn example malicious webpage:\n```html\n<!DOCTYPE html>\n<cinerama.embedPlayer('t','{{ target_site }}#__youtubedl_smuggle=%7B%22http_headers%22:%7B%22Ytdl-request-proxy%22:%22{{ proxy url }}%22%7D,%22fake%22:%22.smil/manifest%22%7D')\n```\n\nWhere `{{ target_site }}` is the URL Generic extractor will request and `{{ proxy url }}` is the proxy to proxy the request for this url through.\n\n</details>\n\n### Patches\n- We have removed the ability to smuggle `http_headers` to the Generic extractor, as well as other extractors that use the same pattern.\n\n### Workarounds\n- Disable Generic extractor (`--ies default,-generic`), or only pass trusted sites with trusted content.\n- Take caution when using `--no-check-certificate`.\n\n### References\n- <https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-3ch3-jhc6-5r8x>\n- <https://nvd.nist.gov/vuln/detail/CVE-2023-46121>\n- <https://github.com/yt-dlp/yt-dlp/releases/tag/2023.11.14>\n- <https://github.com/yt-dlp/yt-dlp/commit/f04b5bedad7b281bee9814686bba1762bae092eb>\n","fixed_in":["2023.11.14"],"id":"GHSA-3ch3-jhc6-5r8x","link":"https://osv.dev/vulnerability/GHSA-3ch3-jhc6-5r8x","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2023.6.22":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2023.6.22/","requires_dist":["mutagen","pycryptodomex","websockets","certifi","brotlicffi ; platform_python_implementation != \"CPython\"","brotli ; platform_python_implementation == \"CPython\""],"requires_python":">=3.7","summary":"A youtube-dl fork with additional features and patches","version":"2023.6.22","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"659b21628ca5bcf40f58c33f0fbb4927a1bb91e12f3c33a3cf8e29e03f6bc1d1","md5":"c78a869ce8d7294bee25a15a14aaee67","sha256":"c559885322f7f492c1e7fc8f5a59e2a72e47719b59575599cf8b0e69ea70d0a8"},"downloads":-1,"filename":"yt_dlp-2023.6.22-py2.py3-none-any.whl","has_sig":false,"md5_digest":"c78a869ce8d7294bee25a15a14aaee67","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.7","size":2992409,"upload_time":"2023-06-22T08:17:45","upload_time_iso_8601":"2023-06-22T08:17:45.706295Z","url":"https://files.pythonhosted.org/packages/65/9b/21628ca5bcf40f58c33f0fbb4927a1bb91e12f3c33a3cf8e29e03f6bc1d1/yt_dlp-2023.6.22-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"5786b5fb11442d96a7a438ec6ad27d04c546f4f7e64c3d551259f886adeddb8e","md5":"761296e9d3b29cf6349c50c5e3305ec6","sha256":"ed6a8b8e0ad08a4540d4afa0fd08a7f980022c79b9081bd9e63ddc00aeeee5a8"},"downloads":-1,"filename":"yt-dlp-2023.6.22.tar.gz","has_sig":false,"md5_digest":"761296e9d3b29cf6349c50c5e3305ec6","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":2706110,"upload_time":"2023-06-22T08:17:48","upload_time_iso_8601":"2023-06-22T08:17:48.761312Z","url":"https://files.pythonhosted.org/packages/57/86/b5fb11442d96a7a438ec6ad27d04c546f4f7e64c3d551259f886adeddb8e/yt-dlp-2023.6.22.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-35934"],"details":"### Impact\nDuring file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\n\nThis vulnerable behavior is present in all versions of [youtube-dl](https://github.com/ytdl-org/youtube-dl), [youtube-dlc](https://github.com/blackjack4494/yt-dlc) and [yt-dlp](https://github.com/yt-dlp/yt-dlp) released since 2015.01.25. All native and external downloaders are affected, except for `curl` and `httpie` (httpie version 3.1.0 or later).\n\nAt the file download stage, all cookies are passed by yt-dlp to the file downloader as a `Cookie` header, thereby losing their scope. This also occurs in yt-dlp's info JSON output, which may be used by external tools. As a result, the downloader or external tool may indiscriminately send cookies with requests to domains or paths for which the cookies are not scoped.\n\nAn example of a potential attack scenario exploiting this vulnerability:\n1. an attacker has crafted a malicious website with an embedded URL designed to be detected by yt-dlp as a video download. This embedded URL has the domain of a trusted site that the user has loaded cookies for, and conducts an [unvalidated redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) to a target URL.\n2. yt-dlp extracts this URL and calculates a `Cookie` header based on its domain for the file downloader to make its request(s) with.\n3. the download URL redirects to a server controlled by the attacker, to which yt-dlp forwards the user's sensitive cookie information.\n\n### Patches\nyt-dlp version 2023.07.06 fixes this issue by doing the following:\n\n- Remove the `Cookie` header upon HTTP redirects\n- Have native downloaders calculate their own `Cookie` header from the cookiejar\n- Utilize external downloaders' built-in support for cookies instead of passing them as header arguments\n- If the external downloader does not have proper cookie support, then disable HTTP redirection (`axel` only)\n- Process cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\n- Store cookies in a separate `cookies` field of the info dict instead of `http_headers` so as not to lose their scope\n\nPatches for youtube-dl are expected and we will update this advisory when they are merged.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.07.06 as soon as possible.\n\nFor users who are not able to upgrade:\n\n - Avoid using cookies and user authentication methods (`--cookies`, `--cookies-from-browser`, `--username`, `--password`, `--netrc`). While extractors may set custom cookies, these usually do not contain sensitive information.\n - Avoid using `--load-info-json`\n\nOr, if authentication is a must:\n\n- Verify the integrity of download links from unknown sources in browser (including redirects) before passing them to yt-dlp\n- Use `curl` as external downloader, since it is not impacted (`--downloader curl`)\n- Avoid fragmented formats such as HLS/m3u8, DASH/mpd and ISM (use `-f \"(bv*+ba/b)[protocol~='^https?$']\"`)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj\n- https://nvd.nist.gov/vuln/detail/CVE-2023-35934\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.07.06\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.07.06.185519\n- https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\n- https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\n- https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07","fixed_in":["2023.7.06"],"id":"GHSA-v8mc-9377-rwjj","link":"https://osv.dev/vulnerability/GHSA-v8mc-9377-rwjj","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-46121"],"details":"### Impact\nThe Generic Extractor in yt-dlp is vulnerable to an attacker setting an arbitrary proxy for a request to an arbitrary url, allowing the attacker to MITM the request made from yt-dlp's HTTP session. This could lead to cookie exfiltration in some cases.\n\n<details>\n\nTo pass extra control data between extractors (such as headers like `Referer`), yt-dlp employs a concept of \"url smuggling\". This works by adding this extra data as json to the url fragment (\"smuggling\") that is then passed on to an extractor. The receiving extractor then \"unsmuggles\" the data from the input url. This functionality is intended to be internal only.\n\nCurrently, the Generic extractor supports receiving an arbitrary dictionary of HTTP headers in a smuggled url, of which it extracts and adds them to the initial request it makes to such url. This is useful when a url sent to the Generic extractor needs a `Referer` header sent with it, for example.\n\nAdditionally, yt-dlp has internal headers to set a proxy for a request: `Ytdl-request-proxy` and `Ytdl-socks-proxy`. While these are deprecated, internally `Ytdl-request-proxy` is still used for `--geo-verification-proxy`.\n\nHowever, it is possible for a maliciously crafted site include these smuggled options in a url which then the Generic extractor extracts and redirects to itself.  This allows a malicious website to **set an arbitrary proxy for an arbitrary url that the Generic extractor will request.**\n\nThis could allow for the following, but not limited too:\n- An attacker can MITM a request it asks yt-dlp to make to **any** website.\n   - If a user has loaded cookies into yt-dlp for the target site, which are not marked as [secure](https://en.wikipedia.org/wiki/Secure_cookie), they could be exfiltrated by the attacker.\n   - Fortunately most sites are HTTPS and should be setting cookies as secure.\n- An attacker can set cookies for an arbitrary site.\n\nAn example malicious webpage:\n```html\n<!DOCTYPE html>\n<cinerama.embedPlayer('t','{{ target_site }}#__youtubedl_smuggle=%7B%22http_headers%22:%7B%22Ytdl-request-proxy%22:%22{{ proxy url }}%22%7D,%22fake%22:%22.smil/manifest%22%7D')\n```\n\nWhere `{{ target_site }}` is the URL Generic extractor will request and `{{ proxy url }}` is the proxy to proxy the request for this url through.\n\n</details>\n\n### Patches\n- We have removed the ability to smuggle `http_headers` to the Generic extractor, as well as other extractors that use the same pattern.\n\n### Workarounds\n- Disable Generic extractor (`--ies default,-generic`), or only pass trusted sites with trusted content.\n- Take caution when using `--no-check-certificate`.\n\n### References\n- <https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-3ch3-jhc6-5r8x>\n- <https://nvd.nist.gov/vuln/detail/CVE-2023-46121>\n- <https://github.com/yt-dlp/yt-dlp/releases/tag/2023.11.14>\n- <https://github.com/yt-dlp/yt-dlp/commit/f04b5bedad7b281bee9814686bba1762bae092eb>\n","fixed_in":["2023.11.14"],"id":"GHSA-3ch3-jhc6-5r8x","link":"https://osv.dev/vulnerability/GHSA-3ch3-jhc6-5r8x","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2023.7.6":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2023.7.6/","requires_dist":["mutagen","pycryptodomex","websockets","certifi","brotlicffi ; platform_python_implementation != \"CPython\"","brotli ; platform_python_implementation == \"CPython\""],"requires_python":">=3.7","summary":"A youtube-dl fork with additional features and patches","version":"2023.7.6","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"5cdaef08140cea3392288a8f6cd60f6f12510a4c5776eead53e90151f139af19","md5":"56a1abb6759b6ef4f5f79733573c9149","sha256":"b33b3f68751f33dd8290f1f61f7a011679b3b512aa223df3bff496688bc0bd19"},"downloads":-1,"filename":"yt_dlp-2023.7.6-py2.py3-none-any.whl","has_sig":false,"md5_digest":"56a1abb6759b6ef4f5f79733573c9149","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.7","size":3001994,"upload_time":"2023-07-06T19:04:21","upload_time_iso_8601":"2023-07-06T19:04:21.917384Z","url":"https://files.pythonhosted.org/packages/5c/da/ef08140cea3392288a8f6cd60f6f12510a4c5776eead53e90151f139af19/yt_dlp-2023.7.6-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"dbc5e08a7aa42c962d34201151fa6b825fed7fbb998a1b612f37c7eb93a7e764","md5":"372ce1158fb35d6aeaf61e1a2ffdf0d3","sha256":"cb58373869c8ccb5034746f91cfccd6d25ea697090dfd6f93e9034d51eb4aed2"},"downloads":-1,"filename":"yt-dlp-2023.7.6.tar.gz","has_sig":false,"md5_digest":"372ce1158fb35d6aeaf61e1a2ffdf0d3","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":2717310,"upload_time":"2023-07-06T19:04:25","upload_time_iso_8601":"2023-07-06T19:04:25.734942Z","url":"https://files.pythonhosted.org/packages/db/c5/e08a7aa42c962d34201151fa6b825fed7fbb998a1b612f37c7eb93a7e764/yt-dlp-2023.7.6.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-40581"],"details":"### Impact\n[`yt-dlp`](https://github.com/yt-dlp/yt-dlp) allows the user to provide shell commands to be executed at various stages in its download process through the `--exec` flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the `%q` conversion, which is intended to quote/escape these values so they can be safely passed to the shell.\n\nHowever, the escaping used for `cmd` (the shell used by Python's `subprocess` on Windows) did not properly escape special characters, which can allow for remote code execution if `--exec` is used directly with maliciously crafted remote data. This vulnerability only impacts `yt-dlp` on Windows, and the vulnerability is present regardless of whether `yt-dlp` is run from `cmd` or from `PowerShell`.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```shell\n> yt-dlp https://youtu.be/Jo66yyCpHcQ --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ\n[youtube] Jo66yyCpHcQ: Downloading webpage\n[youtube] Jo66yyCpHcQ: Downloading ios player API JSON\n[youtube] Jo66yyCpHcQ: Downloading android player API JSON\n[youtube] Jo66yyCpHcQ: Downloading m3u8 information\n[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4\n[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s\n[download] Destination: ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm\n[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s\n[Merger] Merging formats into \"＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].mkv\"\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)\nDeleting original file ＂&echo(&echo(pwned&rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)\n[Exec] Executing command: echo \"\\\"&echo(&echo(pwned&rem(\"\n\"\\\"\n\npwned\n```\n\n### Patches\nyt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.\n`\\n` will be replaced by `\\r`, as no way of escaping it has been found.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg\n- https://nvd.nist.gov/vuln/detail/CVE-2023-40581\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24\n- https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044\n- https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e","fixed_in":["2023.09.24"],"id":"GHSA-42h4-v29r-42qg","link":"https://osv.dev/vulnerability/GHSA-42h4-v29r-42qg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-46121"],"details":"### Impact\nThe Generic Extractor in yt-dlp is vulnerable to an attacker setting an arbitrary proxy for a request to an arbitrary url, allowing the attacker to MITM the request made from yt-dlp's HTTP session. This could lead to cookie exfiltration in some cases.\n\n<details>\n\nTo pass extra control data between extractors (such as headers like `Referer`), yt-dlp employs a concept of \"url smuggling\". This works by adding this extra data as json to the url fragment (\"smuggling\") that is then passed on to an extractor. The receiving extractor then \"unsmuggles\" the data from the input url. This functionality is intended to be internal only.\n\nCurrently, the Generic extractor supports receiving an arbitrary dictionary of HTTP headers in a smuggled url, of which it extracts and adds them to the initial request it makes to such url. This is useful when a url sent to the Generic extractor needs a `Referer` header sent with it, for example.\n\nAdditionally, yt-dlp has internal headers to set a proxy for a request: `Ytdl-request-proxy` and `Ytdl-socks-proxy`. While these are deprecated, internally `Ytdl-request-proxy` is still used for `--geo-verification-proxy`.\n\nHowever, it is possible for a maliciously crafted site include these smuggled options in a url which then the Generic extractor extracts and redirects to itself.  This allows a malicious website to **set an arbitrary proxy for an arbitrary url that the Generic extractor will request.**\n\nThis could allow for the following, but not limited too:\n- An attacker can MITM a request it asks yt-dlp to make to **any** website.\n   - If a user has loaded cookies into yt-dlp for the target site, which are not marked as [secure](https://en.wikipedia.org/wiki/Secure_cookie), they could be exfiltrated by the attacker.\n   - Fortunately most sites are HTTPS and should be setting cookies as secure.\n- An attacker can set cookies for an arbitrary site.\n\nAn example malicious webpage:\n```html\n<!DOCTYPE html>\n<cinerama.embedPlayer('t','{{ target_site }}#__youtubedl_smuggle=%7B%22http_headers%22:%7B%22Ytdl-request-proxy%22:%22{{ proxy url }}%22%7D,%22fake%22:%22.smil/manifest%22%7D')\n```\n\nWhere `{{ target_site }}` is the URL Generic extractor will request and `{{ proxy url }}` is the proxy to proxy the request for this url through.\n\n</details>\n\n### Patches\n- We have removed the ability to smuggle `http_headers` to the Generic extractor, as well as other extractors that use the same pattern.\n\n### Workarounds\n- Disable Generic extractor (`--ies default,-generic`), or only pass trusted sites with trusted content.\n- Take caution when using `--no-check-certificate`.\n\n### References\n- <https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-3ch3-jhc6-5r8x>\n- <https://nvd.nist.gov/vuln/detail/CVE-2023-46121>\n- <https://github.com/yt-dlp/yt-dlp/releases/tag/2023.11.14>\n- <https://github.com/yt-dlp/yt-dlp/commit/f04b5bedad7b281bee9814686bba1762bae092eb>\n","fixed_in":["2023.11.14"],"id":"GHSA-3ch3-jhc6-5r8x","link":"https://osv.dev/vulnerability/GHSA-3ch3-jhc6-5r8x","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null}]},"2023.9.24":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2023.9.24/","requires_dist":["mutagen","pycryptodomex","websockets","certifi","brotlicffi ; platform_python_implementation != \"CPython\"","brotli ; platform_python_implementation == \"CPython\""],"requires_python":">=3.7","summary":"A youtube-dl fork with additional features and patches","version":"2023.9.24","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"70b494e72fd0e1541ab50f8efe224ead550a367da3df1b8aa733bd2d9bde9aed","md5":"27bcd804dd1be5b87f2e70dcf3ca6644","sha256":"61792482647faac6207b1795b52d73714803414d8c090cd9721dfe8b16b12605"},"downloads":-1,"filename":"yt_dlp-2023.9.24-py2.py3-none-any.whl","has_sig":false,"md5_digest":"27bcd804dd1be5b87f2e70dcf3ca6644","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.7","size":3067243,"upload_time":"2023-09-24T00:58:36","upload_time_iso_8601":"2023-09-24T00:58:36.937645Z","url":"https://files.pythonhosted.org/packages/70/b4/94e72fd0e1541ab50f8efe224ead550a367da3df1b8aa733bd2d9bde9aed/yt_dlp-2023.9.24-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"662d14a4e2d2b0a5a03d781cc1603c07d9f89c36ae4e1ba22e74e084d3d08201","md5":"9e49e623db00c836bca11efa36803bdd","sha256":"cfcfb5ffc12013b6ae4b8c7a283a7e462988f1b49283de291de8bfbe053b8073"},"downloads":-1,"filename":"yt-dlp-2023.9.24.tar.gz","has_sig":false,"md5_digest":"9e49e623db00c836bca11efa36803bdd","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":2789049,"upload_time":"2023-09-24T00:58:39","upload_time_iso_8601":"2023-09-24T00:58:39.656962Z","url":"https://files.pythonhosted.org/packages/66/2d/14a4e2d2b0a5a03d781cc1603c07d9f89c36ae4e1ba22e74e084d3d08201/yt-dlp-2023.9.24.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-46121"],"details":"### Impact\nThe Generic Extractor in yt-dlp is vulnerable to an attacker setting an arbitrary proxy for a request to an arbitrary url, allowing the attacker to MITM the request made from yt-dlp's HTTP session. This could lead to cookie exfiltration in some cases.\n\n<details>\n\nTo pass extra control data between extractors (such as headers like `Referer`), yt-dlp employs a concept of \"url smuggling\". This works by adding this extra data as json to the url fragment (\"smuggling\") that is then passed on to an extractor. The receiving extractor then \"unsmuggles\" the data from the input url. This functionality is intended to be internal only.\n\nCurrently, the Generic extractor supports receiving an arbitrary dictionary of HTTP headers in a smuggled url, of which it extracts and adds them to the initial request it makes to such url. This is useful when a url sent to the Generic extractor needs a `Referer` header sent with it, for example.\n\nAdditionally, yt-dlp has internal headers to set a proxy for a request: `Ytdl-request-proxy` and `Ytdl-socks-proxy`. While these are deprecated, internally `Ytdl-request-proxy` is still used for `--geo-verification-proxy`.\n\nHowever, it is possible for a maliciously crafted site include these smuggled options in a url which then the Generic extractor extracts and redirects to itself.  This allows a malicious website to **set an arbitrary proxy for an arbitrary url that the Generic extractor will request.**\n\nThis could allow for the following, but not limited too:\n- An attacker can MITM a request it asks yt-dlp to make to **any** website.\n   - If a user has loaded cookies into yt-dlp for the target site, which are not marked as [secure](https://en.wikipedia.org/wiki/Secure_cookie), they could be exfiltrated by the attacker.\n   - Fortunately most sites are HTTPS and should be setting cookies as secure.\n- An attacker can set cookies for an arbitrary site.\n\nAn example malicious webpage:\n```html\n<!DOCTYPE html>\n<cinerama.embedPlayer('t','{{ target_site }}#__youtubedl_smuggle=%7B%22http_headers%22:%7B%22Ytdl-request-proxy%22:%22{{ proxy url }}%22%7D,%22fake%22:%22.smil/manifest%22%7D')\n```\n\nWhere `{{ target_site }}` is the URL Generic extractor will request and `{{ proxy url }}` is the proxy to proxy the request for this url through.\n\n</details>\n\n### Patches\n- We have removed the ability to smuggle `http_headers` to the Generic extractor, as well as other extractors that use the same pattern.\n\n### Workarounds\n- Disable Generic extractor (`--ies default,-generic`), or only pass trusted sites with trusted content.\n- Take caution when using `--no-check-certificate`.\n\n### References\n- <https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-3ch3-jhc6-5r8x>\n- <https://nvd.nist.gov/vuln/detail/CVE-2023-46121>\n- <https://github.com/yt-dlp/yt-dlp/releases/tag/2023.11.14>\n- <https://github.com/yt-dlp/yt-dlp/commit/f04b5bedad7b281bee9814686bba1762bae092eb>\n","fixed_in":["2023.11.14"],"id":"GHSA-3ch3-jhc6-5r8x","link":"https://osv.dev/vulnerability/GHSA-3ch3-jhc6-5r8x","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.1.14.232710.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.1.14.232710.dev0/","requires_dist":["mutagen","pycryptodomex","certifi","requests <3,>=2.31.0","urllib3 <3,>=1.26.17","websockets >=12.0","brotlicffi ; implementation_name != \"cpython\"","brotli ; implementation_name == \"cpython\""],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2024.1.14.232710.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"ef645ffe5018f3f16613b16a86cd5ac31a065c3a8316cb6d146048b64b14c965","md5":"1f81e3b052d6440fa592b0f45252a04f","sha256":"1dacece2a64193ebd9fe7c322fe99318bfda5bc9df0ce37fd3dbcf027b7939d3"},"downloads":-1,"filename":"yt_dlp-2024.1.14.232710.dev0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"1f81e3b052d6440fa592b0f45252a04f","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":2988078,"upload_time":"2024-01-14T23:35:42","upload_time_iso_8601":"2024-01-14T23:35:42.661668Z","url":"https://files.pythonhosted.org/packages/ef/64/5ffe5018f3f16613b16a86cd5ac31a065c3a8316cb6d146048b64b14c965/yt_dlp-2024.1.14.232710.dev0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"40d257ca45a50aa19a54272da89791df4472a8021de7d668e86a2ebe9e061426","md5":"440a5493d54b26c2d0a2b9cd3005382d","sha256":"73ef58f1829b97630039acbff286951490314f79974071d992129924de435f8d"},"downloads":-1,"filename":"yt-dlp-2024.1.14.232710.dev0.tar.gz","has_sig":false,"md5_digest":"440a5493d54b26c2d0a2b9cd3005382d","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2775285,"upload_time":"2024-01-14T23:35:47","upload_time_iso_8601":"2024-01-14T23:35:47.307164Z","url":"https://files.pythonhosted.org/packages/40/d2/57ca45a50aa19a54272da89791df4472a8021de7d668e86a2ebe9e061426/yt-dlp-2024.1.14.232710.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.1.18.232658.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.1.18.232658.dev0/","requires_dist":["mutagen","pycryptodomex","certifi","requests <3,>=2.31.0","urllib3 <3,>=1.26.17","websockets >=12.0","brotlicffi ; implementation_name != \"cpython\"","brotli ; implementation_name == \"cpython\""],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2024.1.18.232658.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"7a70e53378ee319119c6d6e82ae0be11d424958c6e124fa83d447aa44ce85321","md5":"e796dc71d3484cace544d89ce093c9fe","sha256":"1ba6113839052f9924bebdebc97737cb88b03d9057d61a090e9022838dcd7a50"},"downloads":-1,"filename":"yt_dlp-2024.1.18.232658.dev0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"e796dc71d3484cace544d89ce093c9fe","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":2988500,"upload_time":"2024-01-18T23:35:55","upload_time_iso_8601":"2024-01-18T23:35:55.874581Z","url":"https://files.pythonhosted.org/packages/7a/70/e53378ee319119c6d6e82ae0be11d424958c6e124fa83d447aa44ce85321/yt_dlp-2024.1.18.232658.dev0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"2aa3ddd697dd4908fb8982768b7d5e18dd6610d27426ad1759fb9e473338093a","md5":"4696080d2480d224917bb292913344ae","sha256":"a86e5dfde98f5b7b2ef851e7cb3cf0a439349ae8b29eb27e0c1880530b6cae1e"},"downloads":-1,"filename":"yt-dlp-2024.1.18.232658.dev0.tar.gz","has_sig":false,"md5_digest":"4696080d2480d224917bb292913344ae","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2775789,"upload_time":"2024-01-18T23:35:59","upload_time_iso_8601":"2024-01-18T23:35:59.668703Z","url":"https://files.pythonhosted.org/packages/2a/a3/ddd697dd4908fb8982768b7d5e18dd6610d27426ad1759fb9e473338093a/yt-dlp-2024.1.18.232658.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.1.19.232708.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.1.19.232708.dev0/","requires_dist":["mutagen","pycryptodomex","certifi","requests <3,>=2.31.0","urllib3 <3,>=1.26.17","websockets >=12.0","brotlicffi ; implementation_name != \"cpython\"","brotli ; implementation_name == \"cpython\""],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2024.1.19.232708.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"12b779548a4d7803c02f3ab3ad44457b614f0fdd76e38ac6b130e23a3a0c3e26","md5":"8a136e88f2db2f694af84a5aeabe0752","sha256":"7a8b46c403f3d93369392793283ef22a9d88bf58e2eb3de471fe62e10ba8d989"},"downloads":-1,"filename":"yt_dlp-2024.1.19.232708.dev0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"8a136e88f2db2f694af84a5aeabe0752","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":3008226,"upload_time":"2024-01-19T23:35:44","upload_time_iso_8601":"2024-01-19T23:35:44.070342Z","url":"https://files.pythonhosted.org/packages/12/b7/79548a4d7803c02f3ab3ad44457b614f0fdd76e38ac6b130e23a3a0c3e26/yt_dlp-2024.1.19.232708.dev0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"8094cbbb21104275b95e21b5dcddcb8047ff4f67cb7a2df6cf302882fa55b36d","md5":"b9242bd4e61ac5b582622bc6a20f436b","sha256":"83209191a39cd9c1858a37bf898c22fa818bc49a994a56f7d72260a2d6ebfd87"},"downloads":-1,"filename":"yt-dlp-2024.1.19.232708.dev0.tar.gz","has_sig":false,"md5_digest":"b9242bd4e61ac5b582622bc6a20f436b","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2790537,"upload_time":"2024-01-19T23:35:48","upload_time_iso_8601":"2024-01-19T23:35:48.202977Z","url":"https://files.pythonhosted.org/packages/80/94/cbbb21104275b95e21b5dcddcb8047ff4f67cb7a2df6cf302882fa55b36d/yt-dlp-2024.1.19.232708.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.1.2.232714.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.1.2.232714.dev0/","requires_dist":["mutagen","pycryptodomex","certifi","requests <3,>=2.31.0","urllib3 <3,>=1.26.17","websockets >=12.0","brotlicffi ; implementation_name != \"cpython\"","brotli ; implementation_name == \"cpython\""],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2024.1.2.232714.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"85f48693f0c1bfe83b038a5b75698a1c4ae308152641f4b73a85efc42060ade9","md5":"17321a19832c79e8b9219ee17bb834c1","sha256":"fe7c2d206f9cc4ace87dfdae4249ca6f7b099f59982dad6f19e7cfff3fcc2628"},"downloads":-1,"filename":"yt_dlp-2024.1.2.232714.dev0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"17321a19832c79e8b9219ee17bb834c1","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":2987433,"upload_time":"2024-01-02T23:36:04","upload_time_iso_8601":"2024-01-02T23:36:04.533605Z","url":"https://files.pythonhosted.org/packages/85/f4/8693f0c1bfe83b038a5b75698a1c4ae308152641f4b73a85efc42060ade9/yt_dlp-2024.1.2.232714.dev0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"5b3ee2bdcc0385dcf6addcb7af7507ed58b3bcfe69fff45539eac82f6d994049","md5":"d3e6be45d9845307a72911dd8ea01783","sha256":"0f240a7a29e47be7f118974dabad03b894694d44442a62a5efd9f6ca471b1a53"},"downloads":-1,"filename":"yt-dlp-2024.1.2.232714.dev0.tar.gz","has_sig":false,"md5_digest":"d3e6be45d9845307a72911dd8ea01783","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2773743,"upload_time":"2024-01-02T23:36:08","upload_time_iso_8601":"2024-01-02T23:36:08.574975Z","url":"https://files.pythonhosted.org/packages/5b/3e/e2bdcc0385dcf6addcb7af7507ed58b3bcfe69fff45539eac82f6d994049/yt-dlp-2024.1.2.232714.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.1.20.232722.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.1.20.232722.dev0/","requires_dist":["mutagen","pycryptodomex","certifi","requests <3,>=2.31.0","urllib3 <3,>=1.26.17","websockets >=12.0","brotlicffi ; implementation_name != \"cpython\"","brotli ; implementation_name == \"cpython\""],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2024.1.20.232722.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"0fb6daf95014123b508660efd1914330382852242bc4898541e640c5f54051bf","md5":"b0a451cbf9bd67cf1e5f9851ad94292a","sha256":"939700119cc1479342ae1ab138a9fe5fe0c3ee2fe8ae2081b256768dc6579606"},"downloads":-1,"filename":"yt_dlp-2024.1.20.232722.dev0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"b0a451cbf9bd67cf1e5f9851ad94292a","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":3007632,"upload_time":"2024-01-20T23:35:46","upload_time_iso_8601":"2024-01-20T23:35:46.828734Z","url":"https://files.pythonhosted.org/packages/0f/b6/daf95014123b508660efd1914330382852242bc4898541e640c5f54051bf/yt_dlp-2024.1.20.232722.dev0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f635b1db1587d4d36248251d8616eb371d44ef0b481b49dc4c0448e3d459bda8","md5":"47f77d6cdf1eb1e5708d3708ea40f2b7","sha256":"db663b3315250ad1ead78188e0e89bbe0d660bb61f92e3f6aaf2b2a4fade133d"},"downloads":-1,"filename":"yt-dlp-2024.1.20.232722.dev0.tar.gz","has_sig":false,"md5_digest":"47f77d6cdf1eb1e5708d3708ea40f2b7","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2789550,"upload_time":"2024-01-20T23:35:50","upload_time_iso_8601":"2024-01-20T23:35:50.637285Z","url":"https://files.pythonhosted.org/packages/f6/35/b1db1587d4d36248251d8616eb371d44ef0b481b49dc4c0448e3d459bda8/yt-dlp-2024.1.20.232722.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.1.21.232719.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.1.21.232719.dev0/","requires_dist":["mutagen","pycryptodomex","certifi","requests <3,>=2.31.0","urllib3 <3,>=1.26.17","websockets >=12.0","brotlicffi ; implementation_name != \"cpython\"","brotli ; implementation_name == \"cpython\""],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2024.1.21.232719.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"bbb5fed3fbe84b8dcbf4c25d92e14a08658253a4bf6861e2140b322a0dc0f5c7","md5":"35a3c88c2c5a713d6d6c5d115e802a3c","sha256":"4dbc8e6bb5760b00694024971f2d8d0b2a284491348da88bdfa751c7576b478d"},"downloads":-1,"filename":"yt_dlp-2024.1.21.232719.dev0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"35a3c88c2c5a713d6d6c5d115e802a3c","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":3015398,"upload_time":"2024-01-21T23:36:01","upload_time_iso_8601":"2024-01-21T23:36:01.970690Z","url":"https://files.pythonhosted.org/packages/bb/b5/fed3fbe84b8dcbf4c25d92e14a08658253a4bf6861e2140b322a0dc0f5c7/yt_dlp-2024.1.21.232719.dev0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c6fa6bb3bb5b5a8be0182652be3fa3c53726cfce0dfc37725c65ae96e274bd61","md5":"2e3ef8f281ec70a443e2789064163498","sha256":"49276641cba492506d0d8782e9a23bea397bf97a5561d5f667783cc48397c5db"},"downloads":-1,"filename":"yt-dlp-2024.1.21.232719.dev0.tar.gz","has_sig":false,"md5_digest":"2e3ef8f281ec70a443e2789064163498","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2796143,"upload_time":"2024-01-21T23:36:06","upload_time_iso_8601":"2024-01-21T23:36:06.508133Z","url":"https://files.pythonhosted.org/packages/c6/fa/6bb3bb5b5a8be0182652be3fa3c53726cfce0dfc37725c65ae96e274bd61/yt-dlp-2024.1.21.232719.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.1.22.232713.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.1.22.232713.dev0/","requires_dist":["mutagen","pycryptodomex","certifi","requests <3,>=2.31.0","urllib3 <3,>=1.26.17","websockets >=12.0","brotlicffi ; implementation_name != \"cpython\"","brotli ; implementation_name == \"cpython\""],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2024.1.22.232713.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"d3c7f49f0c9988eefaa7c9db05eda7305e64cb8fb6df6207ca181d617a283b86","md5":"55d32c0d2c3f4ce62928cc6eca612cc9","sha256":"5e7a4f60facd706dc5790fc389dc935eb8f951d6ef8d9c285f983c8bcf5165b8"},"downloads":-1,"filename":"yt_dlp-2024.1.22.232713.dev0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"55d32c0d2c3f4ce62928cc6eca612cc9","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":3016914,"upload_time":"2024-01-22T23:35:53","upload_time_iso_8601":"2024-01-22T23:35:53.481725Z","url":"https://files.pythonhosted.org/packages/d3/c7/f49f0c9988eefaa7c9db05eda7305e64cb8fb6df6207ca181d617a283b86/yt_dlp-2024.1.22.232713.dev0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"66c7959de1b0066b90b5f08ba7eab8adc9e0e164918f4267ed79e73e91ea3acd","md5":"6f08f825aeb80263db37e1eff0c651fa","sha256":"0a4be1b2cb0827c07d3747ea2b39bb0ac260f3be5ed2e68198b5b379eefda487"},"downloads":-1,"filename":"yt-dlp-2024.1.22.232713.dev0.tar.gz","has_sig":false,"md5_digest":"6f08f825aeb80263db37e1eff0c651fa","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2797406,"upload_time":"2024-01-22T23:35:57","upload_time_iso_8601":"2024-01-22T23:35:57.635477Z","url":"https://files.pythonhosted.org/packages/66/c7/959de1b0066b90b5f08ba7eab8adc9e0e164918f4267ed79e73e91ea3acd/yt-dlp-2024.1.22.232713.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.1.23.232723.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.1.23.232723.dev0/","requires_dist":["mutagen","pycryptodomex","certifi","requests <3,>=2.31.0","urllib3 <3,>=1.26.17","websockets >=12.0","brotlicffi ; implementation_name != \"cpython\"","brotli ; implementation_name == \"cpython\""],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2024.1.23.232723.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"9dccbc7b58ac3ecdb91e6fb9b7cf955a82d810181f36de0855f136ad3446c56c","md5":"6aa3ab27837bea6202ee8332a8efd2bd","sha256":"edb72be8cc24566841d0e513c3f393ae2c1267a6b2a4cb1923727e4552cf74f3"},"downloads":-1,"filename":"yt_dlp-2024.1.23.232723.dev0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"6aa3ab27837bea6202ee8332a8efd2bd","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":3017000,"upload_time":"2024-01-23T23:36:55","upload_time_iso_8601":"2024-01-23T23:36:55.253847Z","url":"https://files.pythonhosted.org/packages/9d/cc/bc7b58ac3ecdb91e6fb9b7cf955a82d810181f36de0855f136ad3446c56c/yt_dlp-2024.1.23.232723.dev0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"a3ee369c47c6692623dc557593dd50413828d1a1dc2bc0aca9a035716d41a748","md5":"f082bcc2c8af33b283c76c20b93b71c4","sha256":"ebc3bf01bd754ddb3cbf459b028414c3937683efdde56804c5ea87097b2f122d"},"downloads":-1,"filename":"yt-dlp-2024.1.23.232723.dev0.tar.gz","has_sig":false,"md5_digest":"f082bcc2c8af33b283c76c20b93b71c4","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2797464,"upload_time":"2024-01-23T23:36:59","upload_time_iso_8601":"2024-01-23T23:36:59.338421Z","url":"https://files.pythonhosted.org/packages/a3/ee/369c47c6692623dc557593dd50413828d1a1dc2bc0aca9a035716d41a748/yt-dlp-2024.1.23.232723.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.1.28.232706.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.1.28.232706.dev0/","requires_dist":["mutagen","pycryptodomex","certifi","requests <3,>=2.31.0","urllib3 <3,>=1.26.17","websockets >=12.0","brotlicffi ; implementation_name != \"cpython\"","brotli ; implementation_name == \"cpython\""],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2024.1.28.232706.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"c6274c579c5b9afb7cfdbb1b5a38b6867e887b7527a4f6e0ca89fd8d9de7cfe6","md5":"667b6103e73f5b01d3be80ec35f4ffe0","sha256":"893e20cf2153d9ce4ae73c65c142d5c80f3a5fe191e7e1da5a32b393321ea12d"},"downloads":-1,"filename":"yt_dlp-2024.1.28.232706.dev0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"667b6103e73f5b01d3be80ec35f4ffe0","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":3026715,"upload_time":"2024-01-28T23:35:51","upload_time_iso_8601":"2024-01-28T23:35:51.500954Z","url":"https://files.pythonhosted.org/packages/c6/27/4c579c5b9afb7cfdbb1b5a38b6867e887b7527a4f6e0ca89fd8d9de7cfe6/yt_dlp-2024.1.28.232706.dev0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"4c69be98bdc143c011c6876c068e9d89d840ecf66838420c4ff54aabe2f7c5ce","md5":"3d1580a973935ff7c396acb8b689add0","sha256":"9b5623396ac090af718d093661f2079775063d1d7b07e9b321a758891afa76fd"},"downloads":-1,"filename":"yt-dlp-2024.1.28.232706.dev0.tar.gz","has_sig":false,"md5_digest":"3d1580a973935ff7c396acb8b689add0","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2804886,"upload_time":"2024-01-28T23:35:55","upload_time_iso_8601":"2024-01-28T23:35:55.778958Z","url":"https://files.pythonhosted.org/packages/4c/69/be98bdc143c011c6876c068e9d89d840ecf66838420c4ff54aabe2f7c5ce/yt-dlp-2024.1.28.232706.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.1.29.232706.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.1.29.232706.dev0/","requires_dist":["mutagen","pycryptodomex","certifi","requests <3,>=2.31.0","urllib3 <3,>=1.26.17","websockets >=12.0","brotlicffi ; implementation_name != \"cpython\"","brotli ; implementation_name == \"cpython\""],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2024.1.29.232706.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"313d948abeb80de12c7df46415a205fa417891256eac322655bd5809b069bf3f","md5":"ba633d647cadd2899e11aa062decbada","sha256":"0ca05051470b6abe705550817acd67ddcb455ecd5981498f525834efa1d452a0"},"downloads":-1,"filename":"yt_dlp-2024.1.29.232706.dev0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"ba633d647cadd2899e11aa062decbada","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":3030552,"upload_time":"2024-01-29T23:35:33","upload_time_iso_8601":"2024-01-29T23:35:33.792760Z","url":"https://files.pythonhosted.org/packages/31/3d/948abeb80de12c7df46415a205fa417891256eac322655bd5809b069bf3f/yt_dlp-2024.1.29.232706.dev0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"744e63e383d3428938d47f8100f42bcbb22fe9af9a7154a421f694e6f86f87cc","md5":"58178bd48363bee6e0cf193b087a8e65","sha256":"ecf4d5cf1c787da384c4a328b2e7c4f64b00e1f02434aaad7bd6261e7aaf90c4"},"downloads":-1,"filename":"yt-dlp-2024.1.29.232706.dev0.tar.gz","has_sig":false,"md5_digest":"58178bd48363bee6e0cf193b087a8e65","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2807609,"upload_time":"2024-01-29T23:35:46","upload_time_iso_8601":"2024-01-29T23:35:46.134361Z","url":"https://files.pythonhosted.org/packages/74/4e/63e383d3428938d47f8100f42bcbb22fe9af9a7154a421f694e6f86f87cc/yt-dlp-2024.1.29.232706.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.1.31.232703.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.1.31.232703.dev0/","requires_dist":["mutagen","pycryptodomex","certifi","requests <3,>=2.31.0","urllib3 <3,>=1.26.17","websockets >=12.0","brotlicffi ; implementation_name != \"cpython\"","brotli ; implementation_name == \"cpython\""],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2024.1.31.232703.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"09e4d5eeaa67b39609acf290cc3549d58b680c8f5fde846742c2c5ec7cd17b19","md5":"5633f447b65b47dea1a5d17a5d487ef7","sha256":"23cd513297d8af468db24225bddcd6278b183ae722f2b8b8c9c1faa14fbca526"},"downloads":-1,"filename":"yt_dlp-2024.1.31.232703.dev0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"5633f447b65b47dea1a5d17a5d487ef7","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":3036347,"upload_time":"2024-01-31T23:35:40","upload_time_iso_8601":"2024-01-31T23:35:40.252953Z","url":"https://files.pythonhosted.org/packages/09/e4/d5eeaa67b39609acf290cc3549d58b680c8f5fde846742c2c5ec7cd17b19/yt_dlp-2024.1.31.232703.dev0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"81832a41c6946036fcf0374686a4662c2259af8f49f0610031009b3e0dc36c8c","md5":"8dfc0c78688227b6401977c3e2dc393a","sha256":"410590881a14e26986125892e919b88534518200a610addad7314023ecf6296f"},"downloads":-1,"filename":"yt-dlp-2024.1.31.232703.dev0.tar.gz","has_sig":false,"md5_digest":"8dfc0c78688227b6401977c3e2dc393a","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2812809,"upload_time":"2024-01-31T23:35:45","upload_time_iso_8601":"2024-01-31T23:35:45.016965Z","url":"https://files.pythonhosted.org/packages/81/83/2a41c6946036fcf0374686a4662c2259af8f49f0610031009b3e0dc36c8c/yt-dlp-2024.1.31.232703.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.1.5.232702.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.1.5.232702.dev0/","requires_dist":["mutagen","pycryptodomex","certifi","requests <3,>=2.31.0","urllib3 <3,>=1.26.17","websockets >=12.0","brotlicffi ; implementation_name != \"cpython\"","brotli ; implementation_name == \"cpython\""],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2024.1.5.232702.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"ef1838176aa0074e10c1e59ebe099344f0e81a942f3fbaf8a4586c1b14b2c972","md5":"46cadb39c9f07b651493cfffee00ffba","sha256":"655876ec6b3caa8a7f222f3b3a50eaeb39ff2643702ca42d9c4502618885b74c"},"downloads":-1,"filename":"yt_dlp-2024.1.5.232702.dev0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"46cadb39c9f07b651493cfffee00ffba","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":2987915,"upload_time":"2024-01-05T23:35:43","upload_time_iso_8601":"2024-01-05T23:35:43.131785Z","url":"https://files.pythonhosted.org/packages/ef/18/38176aa0074e10c1e59ebe099344f0e81a942f3fbaf8a4586c1b14b2c972/yt_dlp-2024.1.5.232702.dev0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"0e804cb053232fa3951f8b3eec12156f44faeca3729523146c6a2051cd377612","md5":"968d942ca0ee38cc87b935d016b638b9","sha256":"038faea2ef76e62c25aa9b33963520c772c6c03f0f99898e4b64f0b39988c520"},"downloads":-1,"filename":"yt-dlp-2024.1.5.232702.dev0.tar.gz","has_sig":false,"md5_digest":"968d942ca0ee38cc87b935d016b638b9","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2774868,"upload_time":"2024-01-05T23:35:47","upload_time_iso_8601":"2024-01-05T23:35:47.860949Z","url":"https://files.pythonhosted.org/packages/0e/80/4cb053232fa3951f8b3eec12156f44faeca3729523146c6a2051cd377612/yt-dlp-2024.1.5.232702.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.1.8.232709.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.1.8.232709.dev0/","requires_dist":["mutagen","pycryptodomex","certifi","requests <3,>=2.31.0","urllib3 <3,>=1.26.17","websockets >=12.0","brotlicffi ; implementation_name != \"cpython\"","brotli ; implementation_name == \"cpython\""],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2024.1.8.232709.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"a9ce866ef19f547b401da4942b9326cf7927df90a3cd48d09b7a9b3fbdb15af2","md5":"3321cbf503d5f2eb94be03cca260122b","sha256":"abf90a48844f87265b6603c7588e33e015dc7165323e67a75333bd7a11b92ea0"},"downloads":-1,"filename":"yt_dlp-2024.1.8.232709.dev0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"3321cbf503d5f2eb94be03cca260122b","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":2987918,"upload_time":"2024-01-08T23:35:53","upload_time_iso_8601":"2024-01-08T23:35:53.340464Z","url":"https://files.pythonhosted.org/packages/a9/ce/866ef19f547b401da4942b9326cf7927df90a3cd48d09b7a9b3fbdb15af2/yt_dlp-2024.1.8.232709.dev0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"add604fea78ceed2ba65568fcb580e48c28c8c9e2d1227af4fe12c1bbdf65a8e","md5":"4eb77332bfcac198b660c52adb1c9709","sha256":"b0401730899b6dd3d49a29131b13393a06880fa8dcfa80875a89fe2c514415de"},"downloads":-1,"filename":"yt-dlp-2024.1.8.232709.dev0.tar.gz","has_sig":false,"md5_digest":"4eb77332bfcac198b660c52adb1c9709","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2774826,"upload_time":"2024-01-08T23:35:57","upload_time_iso_8601":"2024-01-08T23:35:57.272205Z","url":"https://files.pythonhosted.org/packages/ad/d6/04fea78ceed2ba65568fcb580e48c28c8c9e2d1227af4fe12c1bbdf65a8e/yt-dlp-2024.1.8.232709.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.1.9.232723.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.1.9.232723.dev0/","requires_dist":["mutagen","pycryptodomex","certifi","requests <3,>=2.31.0","urllib3 <3,>=1.26.17","websockets >=12.0","brotlicffi ; implementation_name != \"cpython\"","brotli ; implementation_name == \"cpython\""],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2024.1.9.232723.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"c7d053a0d2d21d4487681a436d7794cf305b00c7dfbe5a617e5734c8320ca495","md5":"0731122980f2a2f65b6a8ea6ab280752","sha256":"69bf459e8632144c1c735cda13e47f9cbdb93b3f81347e93fb5503443d7109d8"},"downloads":-1,"filename":"yt_dlp-2024.1.9.232723.dev0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"0731122980f2a2f65b6a8ea6ab280752","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":2988040,"upload_time":"2024-01-09T23:36:03","upload_time_iso_8601":"2024-01-09T23:36:03.881370Z","url":"https://files.pythonhosted.org/packages/c7/d0/53a0d2d21d4487681a436d7794cf305b00c7dfbe5a617e5734c8320ca495/yt_dlp-2024.1.9.232723.dev0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"ee77bc35ab34896bc88fd812ac7ba5afac94b8df7a0e82f30953aea8886e97c9","md5":"82a2750bc97c393a00b4b886b9526ed8","sha256":"22be8f4fd77681ecb2d45fb75d7fa83cf058860fb737a65425e03ca20887682a"},"downloads":-1,"filename":"yt-dlp-2024.1.9.232723.dev0.tar.gz","has_sig":false,"md5_digest":"82a2750bc97c393a00b4b886b9526ed8","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2775261,"upload_time":"2024-01-09T23:36:08","upload_time_iso_8601":"2024-01-09T23:36:08.603592Z","url":"https://files.pythonhosted.org/packages/ee/77/bc35ab34896bc88fd812ac7ba5afac94b8df7a0e82f30953aea8886e97c9/yt-dlp-2024.1.9.232723.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.10.1.232843.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.10.1.232843.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=13.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.7.2,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest-rerunfailures~=14.0; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.6.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.10.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.6.0; extra == \"static-analysis\"","pytest-rerunfailures~=14.0; extra == \"test\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.10.1.232843.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"9a9f26d263d97042a36b696b1d011a9169140002a312885574c7bb9f5f5c2d11","md5":"2abdda4d179b3edc143868465b7c3793","sha256":"c7c8876c87c9c22eca645289ff46282c5c24e97e36493aa19cf36bd4e1443c77"},"downloads":-1,"filename":"yt_dlp-2024.10.1.232843.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"2abdda4d179b3edc143868465b7c3793","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3149295,"upload_time":"2024-10-01T23:36:32","upload_time_iso_8601":"2024-10-01T23:36:32.593476Z","url":"https://files.pythonhosted.org/packages/9a/9f/26d263d97042a36b696b1d011a9169140002a312885574c7bb9f5f5c2d11/yt_dlp-2024.10.1.232843.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"b2744c16e1e271cfc391ee56ae9f77c54dd318e951b29a0252666c264841f3cb","md5":"35e4f23f40e60f902e2e6d6e12a2a2aa","sha256":"1b7efdec4670cce05be08ad9e83215679d57208fa704d450ace0c65f46a1b635"},"downloads":-1,"filename":"yt_dlp-2024.10.1.232843.dev0.tar.gz","has_sig":false,"md5_digest":"35e4f23f40e60f902e2e6d6e12a2a2aa","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2877586,"upload_time":"2024-10-01T23:36:34","upload_time_iso_8601":"2024-10-01T23:36:34.921855Z","url":"https://files.pythonhosted.org/packages/b2/74/4c16e1e271cfc391ee56ae9f77c54dd318e951b29a0252666c264841f3cb/yt_dlp-2024.10.1.232843.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.10.10.232848.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.10.10.232848.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=13.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.7.2,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest-rerunfailures~=14.0; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.6.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.10.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.6.0; extra == \"static-analysis\"","pytest-rerunfailures~=14.0; extra == \"test\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.10.10.232848.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"77bd4fab9f3153460e832755d39f4a050e44452b1dd987ac99ceb369123c4cc4","md5":"7ec96c102947f940192c41d894921ac6","sha256":"159be4a1ee0dbd1e9485e5b4a32149ff3c8c90aebf91da29ec6837525471c2e7"},"downloads":-1,"filename":"yt_dlp-2024.10.10.232848.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"7ec96c102947f940192c41d894921ac6","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3150043,"upload_time":"2024-10-10T23:39:45","upload_time_iso_8601":"2024-10-10T23:39:45.931163Z","url":"https://files.pythonhosted.org/packages/77/bd/4fab9f3153460e832755d39f4a050e44452b1dd987ac99ceb369123c4cc4/yt_dlp-2024.10.10.232848.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"fc679b8e9fb329d2c67a1654788dda6e32b55be0a8b8ad45c18dd10e95952366","md5":"9eea3ce12df7122abca4f1d275a3f890","sha256":"fdbd8f406c8b2c36ec20b39073ee40dca86d5cdd03b5c96905346debe4827141"},"downloads":-1,"filename":"yt_dlp-2024.10.10.232848.dev0.tar.gz","has_sig":false,"md5_digest":"9eea3ce12df7122abca4f1d275a3f890","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2878655,"upload_time":"2024-10-10T23:39:49","upload_time_iso_8601":"2024-10-10T23:39:49.001111Z","url":"https://files.pythonhosted.org/packages/fc/67/9b8e9fb329d2c67a1654788dda6e32b55be0a8b8ad45c18dd10e95952366/yt_dlp-2024.10.10.232848.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.10.11.232837.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.10.11.232837.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=13.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.7.2,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest-rerunfailures~=14.0; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.6.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.10.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.6.0; extra == \"static-analysis\"","pytest-rerunfailures~=14.0; extra == \"test\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.10.11.232837.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"a1c522df047f2b97dbfe6f7ea12301eb7cc2ef81af4e1ca0dfad163d01c39814","md5":"b269540290bdfd650e6487d30b2e7721","sha256":"820ff7706f561b3a9435fe6da94f920849f1eaa346c14bacd10afd5e5402ed7b"},"downloads":-1,"filename":"yt_dlp-2024.10.11.232837.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"b269540290bdfd650e6487d30b2e7721","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3150066,"upload_time":"2024-10-11T23:39:26","upload_time_iso_8601":"2024-10-11T23:39:26.199650Z","url":"https://files.pythonhosted.org/packages/a1/c5/22df047f2b97dbfe6f7ea12301eb7cc2ef81af4e1ca0dfad163d01c39814/yt_dlp-2024.10.11.232837.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"a766da93eace2121341efe23ff587ac7eaf5c1d450ec9a0197a8a8d3e4818275","md5":"812d64d18263a5e7c378e488765e1a15","sha256":"19b94cef17c78bcf38e6a1274d12e980d01ad7341f57948864c2215fa512cb09"},"downloads":-1,"filename":"yt_dlp-2024.10.11.232837.dev0.tar.gz","has_sig":false,"md5_digest":"812d64d18263a5e7c378e488765e1a15","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2878748,"upload_time":"2024-10-11T23:39:28","upload_time_iso_8601":"2024-10-11T23:39:28.276511Z","url":"https://files.pythonhosted.org/packages/a7/66/da93eace2121341efe23ff587ac7eaf5c1d450ec9a0197a8a8d3e4818275/yt_dlp-2024.10.11.232837.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.10.12.232856.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.10.12.232856.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=13.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.7.2,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest-rerunfailures~=14.0; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.6.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.10.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.6.0; extra == \"static-analysis\"","pytest-rerunfailures~=14.0; extra == \"test\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.10.12.232856.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"03779f3a5cf271c50e52c71bb29d374617dd09a62af663ce50e318a86f8e048e","md5":"7d5e6e7e32d762ecaea53d67b7e5c2b0","sha256":"8389465dbec3a4ec191553bbfb993dacf1ee438701caaeaf4d8e7ae81d9f0eab"},"downloads":-1,"filename":"yt_dlp-2024.10.12.232856.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"7d5e6e7e32d762ecaea53d67b7e5c2b0","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3150140,"upload_time":"2024-10-12T23:39:53","upload_time_iso_8601":"2024-10-12T23:39:53.319436Z","url":"https://files.pythonhosted.org/packages/03/77/9f3a5cf271c50e52c71bb29d374617dd09a62af663ce50e318a86f8e048e/yt_dlp-2024.10.12.232856.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"58ca71d7bf4f66118ca04ccd77ac9dd58aca66aa0999bd45a127fb66c7741694","md5":"74f43cd026358d392f7a9d707592be8b","sha256":"1cf0864f0edd2cfffa8d3f8cf830578bcedb5be45d226837b4361f76cf27abdd"},"downloads":-1,"filename":"yt_dlp-2024.10.12.232856.dev0.tar.gz","has_sig":false,"md5_digest":"74f43cd026358d392f7a9d707592be8b","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2878850,"upload_time":"2024-10-12T23:39:56","upload_time_iso_8601":"2024-10-12T23:39:56.045589Z","url":"https://files.pythonhosted.org/packages/58/ca/71d7bf4f66118ca04ccd77ac9dd58aca66aa0999bd45a127fb66c7741694/yt_dlp-2024.10.12.232856.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.10.13.232959.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.10.13.232959.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=13.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.7.2,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest-rerunfailures~=14.0; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.6.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.10.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.6.0; extra == \"static-analysis\"","pytest-rerunfailures~=14.0; extra == \"test\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.10.13.232959.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"1a5353b1c008e61f6114f12580ea4abbd8f6a16630a35d2b01262334d8666f25","md5":"38c36b41e10832abd71cc1bfd0b1f1c9","sha256":"078f6a8a8c2a69ad2ff76897ab9b5a3eaeb45ce98916a3ae2233c4399fe9fb5a"},"downloads":-1,"filename":"yt_dlp-2024.10.13.232959.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"38c36b41e10832abd71cc1bfd0b1f1c9","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3152160,"upload_time":"2024-10-13T23:41:18","upload_time_iso_8601":"2024-10-13T23:41:18.518236Z","url":"https://files.pythonhosted.org/packages/1a/53/53b1c008e61f6114f12580ea4abbd8f6a16630a35d2b01262334d8666f25/yt_dlp-2024.10.13.232959.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"58663d016835e9fa0f541272ac241d6e889fe23026ecb100a385c72fbb0e4c70","md5":"3466bf076df6ff273fe3dc1c0cdbf58b","sha256":"5a521743c490957a360fad63ef7ed8c059ff12e4be079a3affafcab0d83e8cc2"},"downloads":-1,"filename":"yt_dlp-2024.10.13.232959.dev0.tar.gz","has_sig":false,"md5_digest":"3466bf076df6ff273fe3dc1c0cdbf58b","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2881345,"upload_time":"2024-10-13T23:41:20","upload_time_iso_8601":"2024-10-13T23:41:20.917880Z","url":"https://files.pythonhosted.org/packages/58/66/3d016835e9fa0f541272ac241d6e889fe23026ecb100a385c72fbb0e4c70/yt_dlp-2024.10.13.232959.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.10.14.232841.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.10.14.232841.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=13.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.7.2,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest-rerunfailures~=14.0; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.6.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.10.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.6.0; extra == \"static-analysis\"","pytest-rerunfailures~=14.0; extra == \"test\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.10.14.232841.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"4157e7b84852398ebb7374a50c34b1d9fc648bedb7c432f0c571d059a38baad6","md5":"d40abe2f3c84c3a2015bbc1531f1f0f8","sha256":"b3f52642a43f6dd181e2b7d514abc879467398f6a87e4f9d47fd0eafebd5d677"},"downloads":-1,"filename":"yt_dlp-2024.10.14.232841.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"d40abe2f3c84c3a2015bbc1531f1f0f8","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3152272,"upload_time":"2024-10-14T23:39:31","upload_time_iso_8601":"2024-10-14T23:39:31.343621Z","url":"https://files.pythonhosted.org/packages/41/57/e7b84852398ebb7374a50c34b1d9fc648bedb7c432f0c571d059a38baad6/yt_dlp-2024.10.14.232841.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"9e344337f24ee7cdaa57ca6c650501882f11f23f5462e483d8a43758e61f2765","md5":"c2be26572946517038dff7516009baeb","sha256":"bf2257f533ea7fd266868e7e195dde78a3e2988b5ab0e94b3ef630237a692f4c"},"downloads":-1,"filename":"yt_dlp-2024.10.14.232841.dev0.tar.gz","has_sig":false,"md5_digest":"c2be26572946517038dff7516009baeb","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2881499,"upload_time":"2024-10-14T23:39:33","upload_time_iso_8601":"2024-10-14T23:39:33.882467Z","url":"https://files.pythonhosted.org/packages/9e/34/4337f24ee7cdaa57ca6c650501882f11f23f5462e483d8a43758e61f2765/yt_dlp-2024.10.14.232841.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.10.15.232919.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.10.15.232919.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=13.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.7.2,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest-rerunfailures~=14.0; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.6.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.10.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.6.0; extra == \"static-analysis\"","pytest-rerunfailures~=14.0; extra == \"test\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.10.15.232919.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"e4e597681f4854b893b29267b32c5c92be652d46efab72c574e3466794a37c1a","md5":"3c3007e2c625769594830ba0321fdbad","sha256":"edd4261ddc793166d605a1b565e2e30cd9960f08b083629bf020b367c1780a3f"},"downloads":-1,"filename":"yt_dlp-2024.10.15.232919.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"3c3007e2c625769594830ba0321fdbad","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3152269,"upload_time":"2024-10-15T23:40:36","upload_time_iso_8601":"2024-10-15T23:40:36.794029Z","url":"https://files.pythonhosted.org/packages/e4/e5/97681f4854b893b29267b32c5c92be652d46efab72c574e3466794a37c1a/yt_dlp-2024.10.15.232919.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"9758554441118babbc21864dfeac5f11fec5cd99310a216204e5b03aa3c35884","md5":"2a62398f4f411c8e0354d3a1ea0ce3ca","sha256":"b6f00f0f318f4cf013a6c6568509bdcaf2dd5b751a4511c69ee1990cdd9ee768"},"downloads":-1,"filename":"yt_dlp-2024.10.15.232919.dev0.tar.gz","has_sig":false,"md5_digest":"2a62398f4f411c8e0354d3a1ea0ce3ca","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2881542,"upload_time":"2024-10-15T23:40:40","upload_time_iso_8601":"2024-10-15T23:40:40.325163Z","url":"https://files.pythonhosted.org/packages/97/58/554441118babbc21864dfeac5f11fec5cd99310a216204e5b03aa3c35884/yt_dlp-2024.10.15.232919.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.10.16.232911.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.10.16.232911.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=13.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.7.2,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest-rerunfailures~=14.0; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.6.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.10.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.6.0; extra == \"static-analysis\"","pytest-rerunfailures~=14.0; extra == \"test\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.10.16.232911.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"d721b5793f06fb97344cf9d78ea15c7f6f3b0307e1a5a1f62b22179622eb4c76","md5":"ec0ab1afc065b7f772931b90cd39b9ba","sha256":"1240d47bd07f9ca6fa5d162b0cc98a64c67bfab6048cf9e1995ae664b64f7f7c"},"downloads":-1,"filename":"yt_dlp-2024.10.16.232911.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"ec0ab1afc065b7f772931b90cd39b9ba","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3152385,"upload_time":"2024-10-16T23:40:13","upload_time_iso_8601":"2024-10-16T23:40:13.493819Z","url":"https://files.pythonhosted.org/packages/d7/21/b5793f06fb97344cf9d78ea15c7f6f3b0307e1a5a1f62b22179622eb4c76/yt_dlp-2024.10.16.232911.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"0660296beac3a4f5416e5fc80ffcad3aeb5ea7534ad2b7c8dcd54767f171e0de","md5":"ff287425b4cb6ca2f5c3c0780ee68f4c","sha256":"04c96acb244e19e473ff7d864a22a0d5297f7fb276db72595a135be29f739210"},"downloads":-1,"filename":"yt_dlp-2024.10.16.232911.dev0.tar.gz","has_sig":false,"md5_digest":"ff287425b4cb6ca2f5c3c0780ee68f4c","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2881736,"upload_time":"2024-10-16T23:40:16","upload_time_iso_8601":"2024-10-16T23:40:16.032846Z","url":"https://files.pythonhosted.org/packages/06/60/296beac3a4f5416e5fc80ffcad3aeb5ea7534ad2b7c8dcd54767f171e0de/yt_dlp-2024.10.16.232911.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.10.19.232833.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.10.19.232833.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=13.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.7.2,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest-rerunfailures~=14.0; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.6.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.10.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.6.0; extra == \"static-analysis\"","pytest-rerunfailures~=14.0; extra == \"test\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.10.19.232833.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"5c34860a9920b77ccd35c242f658210d8c54283eb600fe50d42c32684ed36e61","md5":"af55c61a760918eba293cefd8fbb8abc","sha256":"97fe59b305fad39dce85cc2ae6e43c4470a05de73a6a70a08f025e71d74b2ef3"},"downloads":-1,"filename":"yt_dlp-2024.10.19.232833.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"af55c61a760918eba293cefd8fbb8abc","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3152858,"upload_time":"2024-10-19T23:39:28","upload_time_iso_8601":"2024-10-19T23:39:28.069637Z","url":"https://files.pythonhosted.org/packages/5c/34/860a9920b77ccd35c242f658210d8c54283eb600fe50d42c32684ed36e61/yt_dlp-2024.10.19.232833.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"94037e82fbe2a1dc5ee9ecd84da27691c9765705c8a4417f356185f5ddb65e08","md5":"384f1d20ec9d3b95db42ec047494d80d","sha256":"c9e7ce78ded05202cc9d177b76eb483739eec47b63d15e2e17892115d57ebcf4"},"downloads":-1,"filename":"yt_dlp-2024.10.19.232833.dev0.tar.gz","has_sig":false,"md5_digest":"384f1d20ec9d3b95db42ec047494d80d","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2882256,"upload_time":"2024-10-19T23:39:30","upload_time_iso_8601":"2024-10-19T23:39:30.500840Z","url":"https://files.pythonhosted.org/packages/94/03/7e82fbe2a1dc5ee9ecd84da27691c9765705c8a4417f356185f5ddb65e08/yt_dlp-2024.10.19.232833.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.10.20.232914.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.10.20.232914.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=13.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.7.2,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest-rerunfailures~=14.0; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.6.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.10.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.6.0; extra == \"static-analysis\"","pytest-rerunfailures~=14.0; extra == \"test\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.10.20.232914.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"0c748c2657b3c943f3eb2c252f01dff0a315b5977872b2782ebe364b18de569d","md5":"ab4ed07693008edc023bc680c7ea4066","sha256":"feaae056afa6d1394a6ce8cc9159e3ec45e10dadae02eefa32436b7982d85d51"},"downloads":-1,"filename":"yt_dlp-2024.10.20.232914.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"ab4ed07693008edc023bc680c7ea4066","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3154209,"upload_time":"2024-10-20T23:40:04","upload_time_iso_8601":"2024-10-20T23:40:04.886538Z","url":"https://files.pythonhosted.org/packages/0c/74/8c2657b3c943f3eb2c252f01dff0a315b5977872b2782ebe364b18de569d/yt_dlp-2024.10.20.232914.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"28b93cdfd07f88c6752441ea749cd68569d03b95748be6298641b016aefac2d6","md5":"57c18efee34f3f4b473d3aa0bff0ee0b","sha256":"d000fddd3152b1599e1ab52f25aac54acad8b21b8665e852bc3bbeae9c05bef0"},"downloads":-1,"filename":"yt_dlp-2024.10.20.232914.dev0.tar.gz","has_sig":false,"md5_digest":"57c18efee34f3f4b473d3aa0bff0ee0b","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2883843,"upload_time":"2024-10-20T23:40:07","upload_time_iso_8601":"2024-10-20T23:40:07.732339Z","url":"https://files.pythonhosted.org/packages/28/b9/3cdfd07f88c6752441ea749cd68569d03b95748be6298641b016aefac2d6/yt_dlp-2024.10.20.232914.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.10.22":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.13","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.10.22/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=13.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.7.2,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest-rerunfailures~=14.0; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.6.0; extra == \"dev\"","pyinstaller>=6.10.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.6.0; extra == \"static-analysis\"","pytest-rerunfailures~=14.0; extra == \"test\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.10.22","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"bb68548f9819b41d53561d4f3d39588111cf39993c066b6e5300b4ae118eb2e6","md5":"02afd5fc99cbb5350751be6ec0d5f6c3","sha256":"ba166602ebe22a220e4dc1ead45bf00eb469ed812b22f4fb8bb54734f9b02084"},"downloads":-1,"filename":"yt_dlp-2024.10.22-py3-none-any.whl","has_sig":false,"md5_digest":"02afd5fc99cbb5350751be6ec0d5f6c3","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3155189,"upload_time":"2024-10-22T05:14:37","upload_time_iso_8601":"2024-10-22T05:14:37.631403Z","url":"https://files.pythonhosted.org/packages/bb/68/548f9819b41d53561d4f3d39588111cf39993c066b6e5300b4ae118eb2e6/yt_dlp-2024.10.22-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"2f79acfe1c2bf64ed83e1b465e6550c0f5bc2214ea447a900b102f5ca6e4186e","md5":"79b65c743697d63cfc5d2fafbda853ea","sha256":"47b82a1fd22411b5c95ef2f0a1ae1af4e6dfd736ea99fdb2a0ea41445abc62ba"},"downloads":-1,"filename":"yt_dlp-2024.10.22.tar.gz","has_sig":false,"md5_digest":"79b65c743697d63cfc5d2fafbda853ea","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2885622,"upload_time":"2024-10-22T05:14:40","upload_time_iso_8601":"2024-10-22T05:14:40.575568Z","url":"https://files.pythonhosted.org/packages/2f/79/acfe1c2bf64ed83e1b465e6550c0f5bc2214ea447a900b102f5ca6e4186e/yt_dlp-2024.10.22.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.10.22.232922.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.13","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.10.22.232922.dev0/","requires_dist":["build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.7.2,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","brotli; implementation_name == \"cpython\" and extra == \"default\"","brotlicffi; implementation_name != \"cpython\" and extra == \"default\"","certifi; extra == \"default\"","mutagen; extra == \"default\"","pycryptodomex; extra == \"default\"","requests<3,>=2.32.2; extra == \"default\"","urllib3<3,>=1.26.17; extra == \"default\"","websockets>=13.0; extra == \"default\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest-rerunfailures~=14.0; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.6.0; extra == \"dev\"","pyinstaller>=6.10.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.6.0; extra == \"static-analysis\"","pytest-rerunfailures~=14.0; extra == \"test\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.10.22.232922.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"9734c462389ba33e8740b46c8c4c5232331a1dc3828d26d5e014154c6490b8e4","md5":"9061a2104d50a33e60590b21edae12c9","sha256":"f2e66058c8709f069aa45d50fb919290d9fc72079a2bdaefe5030b6d84f0c85a"},"downloads":-1,"filename":"yt_dlp-2024.10.22.232922.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"9061a2104d50a33e60590b21edae12c9","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3155393,"upload_time":"2024-10-22T23:35:17","upload_time_iso_8601":"2024-10-22T23:35:17.362103Z","url":"https://files.pythonhosted.org/packages/97/34/c462389ba33e8740b46c8c4c5232331a1dc3828d26d5e014154c6490b8e4/yt_dlp-2024.10.22.232922.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"bc57a90aeba53b3536df6148bf5c9662744b3c00ec31d1bbf98b564c030b5541","md5":"aa632a39e72d31911046a1c2a34ea07d","sha256":"aeac9ce5088bea588810bdd2409132125d1f0f7a3f854bae89c5742ea7509bce"},"downloads":-1,"filename":"yt_dlp-2024.10.22.232922.dev0.tar.gz","has_sig":false,"md5_digest":"aa632a39e72d31911046a1c2a34ea07d","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2886247,"upload_time":"2024-10-22T23:35:19","upload_time_iso_8601":"2024-10-22T23:35:19.547493Z","url":"https://files.pythonhosted.org/packages/bc/57/a90aeba53b3536df6148bf5c9662744b3c00ec31d1bbf98b564c030b5541/yt_dlp-2024.10.22.232922.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.10.22.51025.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.13","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.10.22.51025.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=13.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.7.2,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest-rerunfailures~=14.0; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.6.0; extra == \"dev\"","pyinstaller>=6.10.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.6.0; extra == \"static-analysis\"","pytest-rerunfailures~=14.0; extra == \"test\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.10.22.51025.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"89eebb8cecbf7da94b144b87cb78828524ff1bcc8a4752df8919626355bd7d00","md5":"538630f7af703339ddd462359d1d83c4","sha256":"ce02ce9d095cd03c24b9b725f25bff4b2818d96d96c796304e89633f53941268"},"downloads":-1,"filename":"yt_dlp-2024.10.22.51025.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"538630f7af703339ddd462359d1d83c4","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3155471,"upload_time":"2024-10-22T05:21:07","upload_time_iso_8601":"2024-10-22T05:21:07.447866Z","url":"https://files.pythonhosted.org/packages/89/ee/bb8cecbf7da94b144b87cb78828524ff1bcc8a4752df8919626355bd7d00/yt_dlp-2024.10.22.51025.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"3636dc6ab1b1f0a8a4899c64eff392b34e5259300522075cdbc44914af72875a","md5":"f03934c6ed68ca3897c627fb3185d6ae","sha256":"26f224d1c2154d21280ef0fb5bfd3be4f054f4e18b690ca8bc0befd3765fe022"},"downloads":-1,"filename":"yt_dlp-2024.10.22.51025.dev0.tar.gz","has_sig":false,"md5_digest":"f03934c6ed68ca3897c627fb3185d6ae","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2886161,"upload_time":"2024-10-22T05:21:08","upload_time_iso_8601":"2024-10-22T05:21:08.951654Z","url":"https://files.pythonhosted.org/packages/36/36/dc6ab1b1f0a8a4899c64eff392b34e5259300522075cdbc44914af72875a/yt_dlp-2024.10.22.51025.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.10.23.232902.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.13","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.10.23.232902.dev0/","requires_dist":["build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.7.2,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","brotli; implementation_name == \"cpython\" and extra == \"default\"","brotlicffi; implementation_name != \"cpython\" and extra == \"default\"","certifi; extra == \"default\"","mutagen; extra == \"default\"","pycryptodomex; extra == \"default\"","requests<3,>=2.32.2; extra == \"default\"","urllib3<3,>=1.26.17; extra == \"default\"","websockets>=13.0; extra == \"default\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest-rerunfailures~=14.0; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.7.0; extra == \"dev\"","pyinstaller>=6.10.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.7.0; extra == \"static-analysis\"","pytest-rerunfailures~=14.0; extra == \"test\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.9","summary":"A feature-rich command-line audio/video downloader","version":"2024.10.23.232902.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"be5fb58cafe3eb7d5e4491e16f171d1ee1efb6d722cf44394454de78dbb80d6f","md5":"d8ae7add073047b48c8cfd5ccc116df4","sha256":"d8e8be693a1a2a37e561f2cd2616819d18ccc02c3e320666287e0d669523e2a5"},"downloads":-1,"filename":"yt_dlp-2024.10.23.232902.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"d8ae7add073047b48c8cfd5ccc116df4","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.9","size":3155187,"upload_time":"2024-10-23T23:34:46","upload_time_iso_8601":"2024-10-23T23:34:46.057710Z","url":"https://files.pythonhosted.org/packages/be/5f/b58cafe3eb7d5e4491e16f171d1ee1efb6d722cf44394454de78dbb80d6f/yt_dlp-2024.10.23.232902.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"8b8f999068bc216ba2257239b6b2e7022a7df12fd273003e70e5eb8682168d34","md5":"3d492c9d134970d7b6184d341a481231","sha256":"d900e99e5c68cc4699a668af5288a52b41703f8316afb526b3dac4cd36764da7"},"downloads":-1,"filename":"yt_dlp-2024.10.23.232902.dev0.tar.gz","has_sig":false,"md5_digest":"3d492c9d134970d7b6184d341a481231","packagetype":"sdist","python_version":"source","requires_python":">=3.9","size":2887030,"upload_time":"2024-10-23T23:34:48","upload_time_iso_8601":"2024-10-23T23:34:48.143422Z","url":"https://files.pythonhosted.org/packages/8b/8f/999068bc216ba2257239b6b2e7022a7df12fd273003e70e5eb8682168d34/yt_dlp-2024.10.23.232902.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.10.24.232910.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.13","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.10.24.232910.dev0/","requires_dist":["build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.7.2,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","brotli; implementation_name == \"cpython\" and extra == \"default\"","brotlicffi; implementation_name != \"cpython\" and extra == \"default\"","certifi; extra == \"default\"","mutagen; extra == \"default\"","pycryptodomex; extra == \"default\"","requests<3,>=2.32.2; extra == \"default\"","urllib3<3,>=1.26.17; extra == \"default\"","websockets>=13.0; extra == \"default\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest-rerunfailures~=14.0; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.7.0; extra == \"dev\"","pyinstaller>=6.10.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.7.0; extra == \"static-analysis\"","pytest-rerunfailures~=14.0; extra == \"test\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.9","summary":"A feature-rich command-line audio/video downloader","version":"2024.10.24.232910.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"8fd0e0fd09712d6cca91d649a8a5cfcd68bfb5446203ee8b2ad0c494274f8a05","md5":"81d78f6fbb67895d4ee5d8ef7ea79955","sha256":"ca04794df602e7c9648e19481f16fe82ecec46af319dc88e6f1feb2429646d74"},"downloads":-1,"filename":"yt_dlp-2024.10.24.232910.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"81d78f6fbb67895d4ee5d8ef7ea79955","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.9","size":3155655,"upload_time":"2024-10-24T23:35:09","upload_time_iso_8601":"2024-10-24T23:35:09.430519Z","url":"https://files.pythonhosted.org/packages/8f/d0/e0fd09712d6cca91d649a8a5cfcd68bfb5446203ee8b2ad0c494274f8a05/yt_dlp-2024.10.24.232910.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"3fcdb757d34badb8be933154387280901bbfaae3722da6571956049c836b164c","md5":"77d2afa026ade94d02c237276f6170d2","sha256":"27a65d02da4917e827895c37f2576df3e2e06560654aae092fb7e711d08be394"},"downloads":-1,"filename":"yt_dlp-2024.10.24.232910.dev0.tar.gz","has_sig":false,"md5_digest":"77d2afa026ade94d02c237276f6170d2","packagetype":"sdist","python_version":"source","requires_python":">=3.9","size":2887594,"upload_time":"2024-10-24T23:35:12","upload_time_iso_8601":"2024-10-24T23:35:12.768101Z","url":"https://files.pythonhosted.org/packages/3f/cd/b757d34badb8be933154387280901bbfaae3722da6571956049c836b164c/yt_dlp-2024.10.24.232910.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.10.25.232902.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.13","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.10.25.232902.dev0/","requires_dist":["build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.7.2,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","brotli; implementation_name == \"cpython\" and extra == \"default\"","brotlicffi; implementation_name != \"cpython\" and extra == \"default\"","certifi; extra == \"default\"","mutagen; extra == \"default\"","pycryptodomex; extra == \"default\"","requests<3,>=2.32.2; extra == \"default\"","urllib3<3,>=1.26.17; extra == \"default\"","websockets>=13.0; extra == \"default\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest-rerunfailures~=14.0; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.7.0; extra == \"dev\"","pyinstaller>=6.10.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.7.0; extra == \"static-analysis\"","pytest-rerunfailures~=14.0; extra == \"test\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.9","summary":"A feature-rich command-line audio/video downloader","version":"2024.10.25.232902.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"6c6abd2b45e6fb8080f13f43e004626970647b0cc34293308d4e861945dc79a9","md5":"513cf38092fa243e8e85423f80678978","sha256":"cc8cc2cf699c62b73434381f0e6b8d2d20811c5674c81c488a046d0a3084cebd"},"downloads":-1,"filename":"yt_dlp-2024.10.25.232902.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"513cf38092fa243e8e85423f80678978","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.9","size":3155665,"upload_time":"2024-10-25T23:35:03","upload_time_iso_8601":"2024-10-25T23:35:03.349733Z","url":"https://files.pythonhosted.org/packages/6c/6a/bd2b45e6fb8080f13f43e004626970647b0cc34293308d4e861945dc79a9/yt_dlp-2024.10.25.232902.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"04dce046e90e40f29fc817ebd389ce81c348d8666d329c365755ff9d3538561b","md5":"9885421bfb42f116824a9e68d3581b93","sha256":"33e35918aae38d11a57b235c4a0dce15e66e562a9d1642cab160c536096fb323"},"downloads":-1,"filename":"yt_dlp-2024.10.25.232902.dev0.tar.gz","has_sig":false,"md5_digest":"9885421bfb42f116824a9e68d3581b93","packagetype":"sdist","python_version":"source","requires_python":">=3.9","size":2887727,"upload_time":"2024-10-25T23:35:05","upload_time_iso_8601":"2024-10-25T23:35:05.123852Z","url":"https://files.pythonhosted.org/packages/04/dc/e046e90e40f29fc817ebd389ce81c348d8666d329c365755ff9d3538561b/yt_dlp-2024.10.25.232902.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.10.26.232826.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.13","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.10.26.232826.dev0/","requires_dist":["build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.7.2,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","brotli; implementation_name == \"cpython\" and extra == \"default\"","brotlicffi; implementation_name != \"cpython\" and extra == \"default\"","certifi; extra == \"default\"","mutagen; extra == \"default\"","pycryptodomex; extra == \"default\"","requests<3,>=2.32.2; extra == \"default\"","urllib3<3,>=1.26.17; extra == \"default\"","websockets>=13.0; extra == \"default\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest-rerunfailures~=14.0; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.7.0; extra == \"dev\"","pyinstaller>=6.10.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.7.0; extra == \"static-analysis\"","pytest-rerunfailures~=14.0; extra == \"test\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.9","summary":"A feature-rich command-line audio/video downloader","version":"2024.10.26.232826.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"e7a1d75232de1f415c8260dc2635bc0f64c8b356b2c749005fdf774de2e545b3","md5":"f5de3c1e77e753021a59bb645fcf3f39","sha256":"59bb43dbaa44d1bce5d5aaca7b13eaa8dc1047506e239aff7d8b98fe426ef714"},"downloads":-1,"filename":"yt_dlp-2024.10.26.232826.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"f5de3c1e77e753021a59bb645fcf3f39","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.9","size":3156676,"upload_time":"2024-10-26T23:34:10","upload_time_iso_8601":"2024-10-26T23:34:10.139040Z","url":"https://files.pythonhosted.org/packages/e7/a1/d75232de1f415c8260dc2635bc0f64c8b356b2c749005fdf774de2e545b3/yt_dlp-2024.10.26.232826.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"bd65bf99580029ee50a2e2e4eed8baec627f29597c70cb619d6f55342f025524","md5":"6dbbede34e4e1c3d39dca88feb6b58dd","sha256":"77bdfb0b594dd3597a7cc36f922eb23349d08270425a7a073fb7e7e67f984b96"},"downloads":-1,"filename":"yt_dlp-2024.10.26.232826.dev0.tar.gz","has_sig":false,"md5_digest":"6dbbede34e4e1c3d39dca88feb6b58dd","packagetype":"sdist","python_version":"source","requires_python":">=3.9","size":2888762,"upload_time":"2024-10-26T23:34:12","upload_time_iso_8601":"2024-10-26T23:34:12.575760Z","url":"https://files.pythonhosted.org/packages/bd/65/bf99580029ee50a2e2e4eed8baec627f29597c70cb619d6f55342f025524/yt_dlp-2024.10.26.232826.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.10.27.232921.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.13","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.10.27.232921.dev0/","requires_dist":["build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.7.2,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","brotli; implementation_name == \"cpython\" and extra == \"default\"","brotlicffi; implementation_name != \"cpython\" and extra == \"default\"","certifi; extra == \"default\"","mutagen; extra == \"default\"","pycryptodomex; extra == \"default\"","requests<3,>=2.32.2; extra == \"default\"","urllib3<3,>=1.26.17; extra == \"default\"","websockets>=13.0; extra == \"default\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest-rerunfailures~=14.0; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.7.0; extra == \"dev\"","pyinstaller>=6.10.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.7.0; extra == \"static-analysis\"","pytest-rerunfailures~=14.0; extra == \"test\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.9","summary":"A feature-rich command-line audio/video downloader","version":"2024.10.27.232921.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"5ecc2df89f9ce96bdb89adc66e1bf84eb6ba09489f13ac6855c2a91243f7eb80","md5":"a71fe619af0c15de22a8882613581bec","sha256":"92fb71a822ce5bacafb48c7dafb471fff42ff963b711d6adce77a49ac70e74e1"},"downloads":-1,"filename":"yt_dlp-2024.10.27.232921.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"a71fe619af0c15de22a8882613581bec","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.9","size":3157213,"upload_time":"2024-10-27T23:35:18","upload_time_iso_8601":"2024-10-27T23:35:18.384169Z","url":"https://files.pythonhosted.org/packages/5e/cc/2df89f9ce96bdb89adc66e1bf84eb6ba09489f13ac6855c2a91243f7eb80/yt_dlp-2024.10.27.232921.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"1f20b603a076ff06e22cb67d85633f65cb7951311497bf251558bce9502cc9aa","md5":"4c11dd5b7fb9c4468872744793fc1aad","sha256":"4bcf5898058b83365245658fa5fd0a140cede01e35da0b975690a1740d3363dd"},"downloads":-1,"filename":"yt_dlp-2024.10.27.232921.dev0.tar.gz","has_sig":false,"md5_digest":"4c11dd5b7fb9c4468872744793fc1aad","packagetype":"sdist","python_version":"source","requires_python":">=3.9","size":2889600,"upload_time":"2024-10-27T23:35:20","upload_time_iso_8601":"2024-10-27T23:35:20.466383Z","url":"https://files.pythonhosted.org/packages/1f/20/b603a076ff06e22cb67d85633f65cb7951311497bf251558bce9502cc9aa/yt_dlp-2024.10.27.232921.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.10.28.232846.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.13","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.10.28.232846.dev0/","requires_dist":["build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.7.2,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","brotli; implementation_name == \"cpython\" and extra == \"default\"","brotlicffi; implementation_name != \"cpython\" and extra == \"default\"","certifi; extra == \"default\"","mutagen; extra == \"default\"","pycryptodomex; extra == \"default\"","requests<3,>=2.32.2; extra == \"default\"","urllib3<3,>=1.26.17; extra == \"default\"","websockets>=13.0; extra == \"default\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest-rerunfailures~=14.0; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.7.0; extra == \"dev\"","pyinstaller>=6.10.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.7.0; extra == \"static-analysis\"","pytest-rerunfailures~=14.0; extra == \"test\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.9","summary":"A feature-rich command-line audio/video downloader","version":"2024.10.28.232846.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"3bae53f6c41883801d80b46570afd4def27664613d650ef055233efeb974882c","md5":"3afd16c4f5960d50e3f5ccbe67b6e639","sha256":"219ebafe1fd4926e0083559b0750f83fecf53b53243cfeb1f71ffc04205b5a4f"},"downloads":-1,"filename":"yt_dlp-2024.10.28.232846.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"3afd16c4f5960d50e3f5ccbe67b6e639","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.9","size":3157252,"upload_time":"2024-10-28T23:34:42","upload_time_iso_8601":"2024-10-28T23:34:42.657692Z","url":"https://files.pythonhosted.org/packages/3b/ae/53f6c41883801d80b46570afd4def27664613d650ef055233efeb974882c/yt_dlp-2024.10.28.232846.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"ac544a87dd84513a0749dae01e872c5583abc7706b3647474e2089341ba2edef","md5":"a9216bffd0b77e910ea3eee616b134e6","sha256":"126e04edfe30c14593b9513b65f48ced8fc2cffe2f1b1f2405578d8a827f491e"},"downloads":-1,"filename":"yt_dlp-2024.10.28.232846.dev0.tar.gz","has_sig":false,"md5_digest":"a9216bffd0b77e910ea3eee616b134e6","packagetype":"sdist","python_version":"source","requires_python":">=3.9","size":2889676,"upload_time":"2024-10-28T23:34:44","upload_time_iso_8601":"2024-10-28T23:34:44.505738Z","url":"https://files.pythonhosted.org/packages/ac/54/4a87dd84513a0749dae01e872c5583abc7706b3647474e2089341ba2edef/yt_dlp-2024.10.28.232846.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.10.29.232854.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.13","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.10.29.232854.dev0/","requires_dist":["build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.7.2,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","brotli; implementation_name == \"cpython\" and extra == \"default\"","brotlicffi; implementation_name != \"cpython\" and extra == \"default\"","certifi; extra == \"default\"","mutagen; extra == \"default\"","pycryptodomex; extra == \"default\"","requests<3,>=2.32.2; extra == \"default\"","urllib3<3,>=1.26.17; extra == \"default\"","websockets>=13.0; extra == \"default\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest-rerunfailures~=14.0; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.7.0; extra == \"dev\"","pyinstaller>=6.10.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.7.0; extra == \"static-analysis\"","pytest-rerunfailures~=14.0; extra == \"test\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.9","summary":"A feature-rich command-line audio/video downloader","version":"2024.10.29.232854.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"defb33dd9a527d89d98c896f3fc904671a40e36385484b10f0eeaa5879e6e209","md5":"b7addd4a6395c16df4747e8bac9e024d","sha256":"715b263b686b7baa313f1dccd4c6f993cbea6f51b85c266a24ccf05a9755e5b6"},"downloads":-1,"filename":"yt_dlp-2024.10.29.232854.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"b7addd4a6395c16df4747e8bac9e024d","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.9","size":3157259,"upload_time":"2024-10-29T23:34:54","upload_time_iso_8601":"2024-10-29T23:34:54.899048Z","url":"https://files.pythonhosted.org/packages/de/fb/33dd9a527d89d98c896f3fc904671a40e36385484b10f0eeaa5879e6e209/yt_dlp-2024.10.29.232854.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"04a01246ef723638c26ebd179d1a3c1f5c5ba84b1fc6374cb5694e25fd6e8ad3","md5":"e41c7bd1c631188f2c0b1256d3a34ea4","sha256":"ee4427db33b42e10680f5e3913311f6f4ade70a882fb36285623d849de26409b"},"downloads":-1,"filename":"yt_dlp-2024.10.29.232854.dev0.tar.gz","has_sig":false,"md5_digest":"e41c7bd1c631188f2c0b1256d3a34ea4","packagetype":"sdist","python_version":"source","requires_python":">=3.9","size":2889741,"upload_time":"2024-10-29T23:34:57","upload_time_iso_8601":"2024-10-29T23:34:57.187705Z","url":"https://files.pythonhosted.org/packages/04/a0/1246ef723638c26ebd179d1a3c1f5c5ba84b1fc6374cb5694e25fd6e8ad3/yt_dlp-2024.10.29.232854.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.10.31.232951.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.13","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.10.31.232951.dev0/","requires_dist":["build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.7.2,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","brotli; implementation_name == \"cpython\" and extra == \"default\"","brotlicffi; implementation_name != \"cpython\" and extra == \"default\"","certifi; extra == \"default\"","mutagen; extra == \"default\"","pycryptodomex; extra == \"default\"","requests<3,>=2.32.2; extra == \"default\"","urllib3<3,>=1.26.17; extra == \"default\"","websockets>=13.0; extra == \"default\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest-rerunfailures~=14.0; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.7.0; extra == \"dev\"","pyinstaller>=6.10.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.7.0; extra == \"static-analysis\"","pytest-rerunfailures~=14.0; extra == \"test\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.9","summary":"A feature-rich command-line audio/video downloader","version":"2024.10.31.232951.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"065c915aeb20757a7af46ea4f04b2dc5dcb8413dd7125bc943b5aa74378a9498","md5":"4796450d57ce859bc85573d9d31ca288","sha256":"7d6446c0f6b3576cb80e6756d975e49390d6f398c1cc9d8b16dc23c2d55a0b78"},"downloads":-1,"filename":"yt_dlp-2024.10.31.232951.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"4796450d57ce859bc85573d9d31ca288","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.9","size":3157970,"upload_time":"2024-10-31T23:35:36","upload_time_iso_8601":"2024-10-31T23:35:36.368598Z","url":"https://files.pythonhosted.org/packages/06/5c/915aeb20757a7af46ea4f04b2dc5dcb8413dd7125bc943b5aa74378a9498/yt_dlp-2024.10.31.232951.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"93e893d23411ffdbe0512f0580d67981b591923b3782d68c0cbd95cd9b14a4d3","md5":"6952b919f63740cc5f41ea0f907f6bd7","sha256":"96214ea8ae5a55886bea872524a615eecf1909be9d8fa56d47ae6ccdf2b81b20"},"downloads":-1,"filename":"yt_dlp-2024.10.31.232951.dev0.tar.gz","has_sig":false,"md5_digest":"6952b919f63740cc5f41ea0f907f6bd7","packagetype":"sdist","python_version":"source","requires_python":">=3.9","size":2891152,"upload_time":"2024-10-31T23:35:38","upload_time_iso_8601":"2024-10-31T23:35:38.835048Z","url":"https://files.pythonhosted.org/packages/93/e8/93d23411ffdbe0512f0580d67981b591923b3782d68c0cbd95cd9b14a4d3/yt_dlp-2024.10.31.232951.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.10.7":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.10.7/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=13.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.7.2,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest-rerunfailures~=14.0; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.6.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.10.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.6.0; extra == \"static-analysis\"","pytest-rerunfailures~=14.0; extra == \"test\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.10.7","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"6e91ecb07d66110334cdb01e94b187577af3b041897090203c9957728825d46f","md5":"604fee8ca29816e2894de2e797614e80","sha256":"9e336ae663bfd7ad3ea1c02e722747388172719efc0fc39a807dace3073aa704"},"downloads":-1,"filename":"yt_dlp-2024.10.7-py3-none-any.whl","has_sig":false,"md5_digest":"604fee8ca29816e2894de2e797614e80","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3149082,"upload_time":"2024-10-07T23:51:53","upload_time_iso_8601":"2024-10-07T23:51:53.215299Z","url":"https://files.pythonhosted.org/packages/6e/91/ecb07d66110334cdb01e94b187577af3b041897090203c9957728825d46f/yt_dlp-2024.10.7-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"2eb108679efb4c1932dc6420deda8a89f03d7440d6462b7f61d339db2732a497","md5":"f7bc7a5ca31c2c9c98a366043bc34d64","sha256":"0baf1ab517c9748d7e337ced91c5543c36fc16246a9ebedac32ebf20c1998ceb"},"downloads":-1,"filename":"yt_dlp-2024.10.7.tar.gz","has_sig":false,"md5_digest":"f7bc7a5ca31c2c9c98a366043bc34d64","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2877443,"upload_time":"2024-10-07T23:51:55","upload_time_iso_8601":"2024-10-07T23:51:55.703773Z","url":"https://files.pythonhosted.org/packages/2e/b1/08679efb4c1932dc6420deda8a89f03d7440d6462b7f61d339db2732a497/yt_dlp-2024.10.7.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.10.7.232845.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.10.7.232845.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=13.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.7.2,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest-rerunfailures~=14.0; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.6.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.10.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.6.0; extra == \"static-analysis\"","pytest-rerunfailures~=14.0; extra == \"test\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.10.7.232845.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"1b80e58c31e1da4e1e710a054e6d326703d884b87e796d9b894aa60f9c0d5615","md5":"8426330b07801c8928f8b918e2b8dde4","sha256":"4694438bf79f5b3e1729652a7c06716f18e24a2f7d6fa1ed8dd1a4703131190d"},"downloads":-1,"filename":"yt_dlp-2024.10.7.232845.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"8426330b07801c8928f8b918e2b8dde4","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3149392,"upload_time":"2024-10-07T23:39:52","upload_time_iso_8601":"2024-10-07T23:39:52.290735Z","url":"https://files.pythonhosted.org/packages/1b/80/e58c31e1da4e1e710a054e6d326703d884b87e796d9b894aa60f9c0d5615/yt_dlp-2024.10.7.232845.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"2a8fc0441ab225e6cb46d7459b1d7a4c3fd1ea9d47943530562161ab8a6c9612","md5":"8ad93b1210361ae009c6ca3c6e5cf469","sha256":"7414fd7908063891e78455ab1463bc5fc7861f0562e723e0b5fb3ea5ab326e75"},"downloads":-1,"filename":"yt_dlp-2024.10.7.232845.dev0.tar.gz","has_sig":false,"md5_digest":"8ad93b1210361ae009c6ca3c6e5cf469","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2877835,"upload_time":"2024-10-07T23:39:54","upload_time_iso_8601":"2024-10-07T23:39:54.956795Z","url":"https://files.pythonhosted.org/packages/2a/8f/c0441ab225e6cb46d7459b1d7a4c3fd1ea9d47943530562161ab8a6c9612/yt_dlp-2024.10.7.232845.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.11.10.232816.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.13","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.11.10.232816.dev0/","requires_dist":["build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.7.2,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","brotli; implementation_name == \"cpython\" and extra == \"default\"","brotlicffi; implementation_name != \"cpython\" and extra == \"default\"","certifi; extra == \"default\"","mutagen; extra == \"default\"","pycryptodomex; extra == \"default\"","requests<3,>=2.32.2; extra == \"default\"","urllib3<3,>=1.26.17; extra == \"default\"","websockets<14,>=13.0; extra == \"default\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest-rerunfailures~=14.0; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.7.0; extra == \"dev\"","pyinstaller>=6.10.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.7.0; extra == \"static-analysis\"","pytest-rerunfailures~=14.0; extra == \"test\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.9","summary":"A feature-rich command-line audio/video downloader","version":"2024.11.10.232816.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"af70d8fe2b72fc249c9482afe73cf2277fc9b7e7a49bd1d38a8af9559430d9ba","md5":"f9278ca8b0f8f30531377b060fa4ff41","sha256":"7887355ec2661e697e09cbc1dc2112c0cab1600cf0b14b7e8cffa14e99947419"},"downloads":-1,"filename":"yt_dlp-2024.11.10.232816.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"f9278ca8b0f8f30531377b060fa4ff41","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.9","size":3168235,"upload_time":"2024-11-10T23:35:34","upload_time_iso_8601":"2024-11-10T23:35:34.222026Z","url":"https://files.pythonhosted.org/packages/af/70/d8fe2b72fc249c9482afe73cf2277fc9b7e7a49bd1d38a8af9559430d9ba/yt_dlp-2024.11.10.232816.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"5989877043e41d3ead8f0458ae6aabe53a83683b9b0aa033b6a37904c6201f91","md5":"a4e2d3d33ea546a74a2b8ae6e90fc679","sha256":"f4ff7d97546bf537153311be02f93e55cc7f47ab93cca4d634c79693a6a3be05"},"downloads":-1,"filename":"yt_dlp-2024.11.10.232816.dev0.tar.gz","has_sig":false,"md5_digest":"a4e2d3d33ea546a74a2b8ae6e90fc679","packagetype":"sdist","python_version":"source","requires_python":">=3.9","size":2902242,"upload_time":"2024-11-10T23:35:36","upload_time_iso_8601":"2024-11-10T23:35:36.636247Z","url":"https://files.pythonhosted.org/packages/59/89/877043e41d3ead8f0458ae6aabe53a83683b9b0aa033b6a37904c6201f91/yt_dlp-2024.11.10.232816.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.11.11.232805.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.13","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.11.11.232805.dev0/","requires_dist":["build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.7.2,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","brotli; implementation_name == \"cpython\" and extra == \"default\"","brotlicffi; implementation_name != \"cpython\" and extra == \"default\"","certifi; extra == \"default\"","mutagen; extra == \"default\"","pycryptodomex; extra == \"default\"","requests<3,>=2.32.2; extra == \"default\"","urllib3<3,>=1.26.17; extra == \"default\"","websockets<14,>=13.0; extra == \"default\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest-rerunfailures~=14.0; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.7.0; extra == \"dev\"","pyinstaller>=6.11.1; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.7.0; extra == \"static-analysis\"","pytest-rerunfailures~=14.0; extra == \"test\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.9","summary":"A feature-rich command-line audio/video downloader","version":"2024.11.11.232805.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"e0ca9be89a5b2e2d664dfdb3f69c49e1d707ee409a5a8eba806c4dec5daff809","md5":"36696a206f93b450c6d0dbf9fc023e42","sha256":"1b08f8b635a76e2235d26328abe23c029bc25863dc3195f895dd15a05de2724d"},"downloads":-1,"filename":"yt_dlp-2024.11.11.232805.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"36696a206f93b450c6d0dbf9fc023e42","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.9","size":3170010,"upload_time":"2024-11-11T23:34:47","upload_time_iso_8601":"2024-11-11T23:34:47.368667Z","url":"https://files.pythonhosted.org/packages/e0/ca/9be89a5b2e2d664dfdb3f69c49e1d707ee409a5a8eba806c4dec5daff809/yt_dlp-2024.11.11.232805.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"fe8a25daebe8145b9f1a7b2dcf1c59f1cb49aecd693600a9c5370fb3567eb357","md5":"97ded0a1291ae7a56001366864bfa83c","sha256":"14afe30a826c27af2926fc7b51ce0c702206b6723565747d1039b4386571b1ab"},"downloads":-1,"filename":"yt_dlp-2024.11.11.232805.dev0.tar.gz","has_sig":false,"md5_digest":"97ded0a1291ae7a56001366864bfa83c","packagetype":"sdist","python_version":"source","requires_python":">=3.9","size":2903996,"upload_time":"2024-11-11T23:34:50","upload_time_iso_8601":"2024-11-11T23:34:50.340153Z","url":"https://files.pythonhosted.org/packages/fe/8a/25daebe8145b9f1a7b2dcf1c59f1cb49aecd693600a9c5370fb3567eb357/yt_dlp-2024.11.11.232805.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.11.2.232942.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.13","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.11.2.232942.dev0/","requires_dist":["build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.7.2,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","brotli; implementation_name == \"cpython\" and extra == \"default\"","brotlicffi; implementation_name != \"cpython\" and extra == \"default\"","certifi; extra == \"default\"","mutagen; extra == \"default\"","pycryptodomex; extra == \"default\"","requests<3,>=2.32.2; extra == \"default\"","urllib3<3,>=1.26.17; extra == \"default\"","websockets>=13.0; extra == \"default\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest-rerunfailures~=14.0; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.7.0; extra == \"dev\"","pyinstaller>=6.10.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.7.0; extra == \"static-analysis\"","pytest-rerunfailures~=14.0; extra == \"test\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.9","summary":"A feature-rich command-line audio/video downloader","version":"2024.11.2.232942.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"626cc9d855c01f6d1f8825f3f100189ac21f55e75cdbf06a392e3c1c86e5c453","md5":"299a94bb0722ef1899f1d46df9db7ae1","sha256":"330365f4760d623934a249fe46677f5fa727bcc972e3ffe7769a0c380de2d072"},"downloads":-1,"filename":"yt_dlp-2024.11.2.232942.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"299a94bb0722ef1899f1d46df9db7ae1","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.9","size":3157987,"upload_time":"2024-11-02T23:35:51","upload_time_iso_8601":"2024-11-02T23:35:51.288949Z","url":"https://files.pythonhosted.org/packages/62/6c/c9d855c01f6d1f8825f3f100189ac21f55e75cdbf06a392e3c1c86e5c453/yt_dlp-2024.11.2.232942.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"dbb80cea94fd62afc3fa4c0348f8b5575daa7a5dceb3b67a8e32aa83ed25ecc8","md5":"5f0a99d2c095f95a06cc07ae6b753152","sha256":"f4d6c7610501e828514772ea93ba3dd4f2da3fde855def3104374b39621fce50"},"downloads":-1,"filename":"yt_dlp-2024.11.2.232942.dev0.tar.gz","has_sig":false,"md5_digest":"5f0a99d2c095f95a06cc07ae6b753152","packagetype":"sdist","python_version":"source","requires_python":">=3.9","size":2891281,"upload_time":"2024-11-02T23:35:54","upload_time_iso_8601":"2024-11-02T23:35:54.047226Z","url":"https://files.pythonhosted.org/packages/db/b8/0cea94fd62afc3fa4c0348f8b5575daa7a5dceb3b67a8e32aa83ed25ecc8/yt_dlp-2024.11.2.232942.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.11.3.232912.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.13","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.11.3.232912.dev0/","requires_dist":["build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.7.2,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","brotli; implementation_name == \"cpython\" and extra == \"default\"","brotlicffi; implementation_name != \"cpython\" and extra == \"default\"","certifi; extra == \"default\"","mutagen; extra == \"default\"","pycryptodomex; extra == \"default\"","requests<3,>=2.32.2; extra == \"default\"","urllib3<3,>=1.26.17; extra == \"default\"","websockets>=13.0; extra == \"default\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest-rerunfailures~=14.0; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.7.0; extra == \"dev\"","pyinstaller>=6.10.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.7.0; extra == \"static-analysis\"","pytest-rerunfailures~=14.0; extra == \"test\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.9","summary":"A feature-rich command-line audio/video downloader","version":"2024.11.3.232912.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"aabd868ad5b7f51fdcbb801d77cc603b3b2c78de72f4acf91aee85be54b2d622","md5":"e65aa5416c00bf85ef41137268b277c6","sha256":"2a70ec1285bcf4236f28fa46c05d881b9c61d7be5460dcc7184af3378807b550"},"downloads":-1,"filename":"yt_dlp-2024.11.3.232912.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"e65aa5416c00bf85ef41137268b277c6","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.9","size":3164131,"upload_time":"2024-11-03T23:35:11","upload_time_iso_8601":"2024-11-03T23:35:11.181907Z","url":"https://files.pythonhosted.org/packages/aa/bd/868ad5b7f51fdcbb801d77cc603b3b2c78de72f4acf91aee85be54b2d622/yt_dlp-2024.11.3.232912.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"8889bd3c7cbc867716170cd2000c69a7d1e9805b123e08b93bee8daa01054e1e","md5":"fe0f1c2f0d8f6049127231a04f8b1f36","sha256":"bea9d16a16f56f22eaff7f4c22cd7d7f9460ac2b8c426fd49e7a4127fb2645df"},"downloads":-1,"filename":"yt_dlp-2024.11.3.232912.dev0.tar.gz","has_sig":false,"md5_digest":"fe0f1c2f0d8f6049127231a04f8b1f36","packagetype":"sdist","python_version":"source","requires_python":">=3.9","size":2898388,"upload_time":"2024-11-03T23:35:13","upload_time_iso_8601":"2024-11-03T23:35:13.508382Z","url":"https://files.pythonhosted.org/packages/88/89/bd3c7cbc867716170cd2000c69a7d1e9805b123e08b93bee8daa01054e1e/yt_dlp-2024.11.3.232912.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.11.4":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.13","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.11.4/","requires_dist":["build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.7.2,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","brotli; implementation_name == \"cpython\" and extra == \"default\"","brotlicffi; implementation_name != \"cpython\" and extra == \"default\"","certifi; extra == \"default\"","mutagen; extra == \"default\"","pycryptodomex; extra == \"default\"","requests<3,>=2.32.2; extra == \"default\"","urllib3<3,>=1.26.17; extra == \"default\"","websockets>=13.0; extra == \"default\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest-rerunfailures~=14.0; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.7.0; extra == \"dev\"","pyinstaller>=6.10.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.7.0; extra == \"static-analysis\"","pytest-rerunfailures~=14.0; extra == \"test\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.9","summary":"A feature-rich command-line audio/video downloader","version":"2024.11.4","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"6ee4e45c5067a79780954b905db4a42aa83d7aaefd91e32b18ab91c77600e668","md5":"8b36ace3f9b9cbdb45518de964be4f48","sha256":"589d51ed9f154624a45c1f0ceb3d68d0d1e2031460e8dbc62139be631c20b388"},"downloads":-1,"filename":"yt_dlp-2024.11.4-py3-none-any.whl","has_sig":false,"md5_digest":"8b36ace3f9b9cbdb45518de964be4f48","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.9","size":3165645,"upload_time":"2024-11-04T00:52:34","upload_time_iso_8601":"2024-11-04T00:52:34.437699Z","url":"https://files.pythonhosted.org/packages/6e/e4/e45c5067a79780954b905db4a42aa83d7aaefd91e32b18ab91c77600e668/yt_dlp-2024.11.4-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"52500014e9099a9dc3dec1da086e5eb5f861984a0512738bd3d3b63cedd82cbb","md5":"fbbb99e01677300db97ba06762ba05d4","sha256":"ed204c1b61bc563e134447766d1ab343173540799e13ebb953e887ce7dcf6865"},"downloads":-1,"filename":"yt_dlp-2024.11.4.tar.gz","has_sig":false,"md5_digest":"fbbb99e01677300db97ba06762ba05d4","packagetype":"sdist","python_version":"source","requires_python":">=3.9","size":2900105,"upload_time":"2024-11-04T00:52:37","upload_time_iso_8601":"2024-11-04T00:52:37.109866Z","url":"https://files.pythonhosted.org/packages/52/50/0014e9099a9dc3dec1da086e5eb5f861984a0512738bd3d3b63cedd82cbb/yt_dlp-2024.11.4.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.11.4.232933.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.13","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.11.4.232933.dev0/","requires_dist":["build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.7.2,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","brotli; implementation_name == \"cpython\" and extra == \"default\"","brotlicffi; implementation_name != \"cpython\" and extra == \"default\"","certifi; extra == \"default\"","mutagen; extra == \"default\"","pycryptodomex; extra == \"default\"","requests<3,>=2.32.2; extra == \"default\"","urllib3<3,>=1.26.17; extra == \"default\"","websockets>=13.0; extra == \"default\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest-rerunfailures~=14.0; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.7.0; extra == \"dev\"","pyinstaller>=6.10.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.7.0; extra == \"static-analysis\"","pytest-rerunfailures~=14.0; extra == \"test\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.9","summary":"A feature-rich command-line audio/video downloader","version":"2024.11.4.232933.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"760da020822dd387358ae0166ed92b89c265ec6488443eaa01199221e14c0f11","md5":"59f1855a75e0fe30dc6c7aa3899fb29c","sha256":"ae3ce364d88b6c3c5249b883dcb1cae3be99157f7763fd45938b96518ec3586c"},"downloads":-1,"filename":"yt_dlp-2024.11.4.232933.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"59f1855a75e0fe30dc6c7aa3899fb29c","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.9","size":3165951,"upload_time":"2024-11-04T23:35:46","upload_time_iso_8601":"2024-11-04T23:35:46.269995Z","url":"https://files.pythonhosted.org/packages/76/0d/a020822dd387358ae0166ed92b89c265ec6488443eaa01199221e14c0f11/yt_dlp-2024.11.4.232933.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"66c3438968b57ba71533aa441b5e3332eddf45fc2a9ff836b0ae92056ac4e4fa","md5":"2ab8832db26b5e62df1caae55ff15d60","sha256":"eb6c8c2b8f76db4719b0bb5d33b7bbcce5328ff7054ab548e227d4a6f53f2257"},"downloads":-1,"filename":"yt_dlp-2024.11.4.232933.dev0.tar.gz","has_sig":false,"md5_digest":"2ab8832db26b5e62df1caae55ff15d60","packagetype":"sdist","python_version":"source","requires_python":">=3.9","size":2900720,"upload_time":"2024-11-04T23:35:48","upload_time_iso_8601":"2024-11-04T23:35:48.767411Z","url":"https://files.pythonhosted.org/packages/66/c3/438968b57ba71533aa441b5e3332eddf45fc2a9ff836b0ae92056ac4e4fa/yt_dlp-2024.11.4.232933.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.11.6.232826.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.13","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.11.6.232826.dev0/","requires_dist":["build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.7.2,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","brotli; implementation_name == \"cpython\" and extra == \"default\"","brotlicffi; implementation_name != \"cpython\" and extra == \"default\"","certifi; extra == \"default\"","mutagen; extra == \"default\"","pycryptodomex; extra == \"default\"","requests<3,>=2.32.2; extra == \"default\"","urllib3<3,>=1.26.17; extra == \"default\"","websockets>=13.0; extra == \"default\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest-rerunfailures~=14.0; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.7.0; extra == \"dev\"","pyinstaller>=6.10.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.7.0; extra == \"static-analysis\"","pytest-rerunfailures~=14.0; extra == \"test\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.9","summary":"A feature-rich command-line audio/video downloader","version":"2024.11.6.232826.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"bae865d4783d66767f2e8db97a8cf6b45da5914bc4df5a5042a03e3548e437ab","md5":"4f47aa7acf610bc9e9a5139e735460ad","sha256":"855f0999d3f67c40950f0b8cb6a47ff015e56363c9219b1bae7fb9fcbedcb1f7"},"downloads":-1,"filename":"yt_dlp-2024.11.6.232826.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"4f47aa7acf610bc9e9a5139e735460ad","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.9","size":3168218,"upload_time":"2024-11-06T23:34:09","upload_time_iso_8601":"2024-11-06T23:34:09.765628Z","url":"https://files.pythonhosted.org/packages/ba/e8/65d4783d66767f2e8db97a8cf6b45da5914bc4df5a5042a03e3548e437ab/yt_dlp-2024.11.6.232826.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"9d0070d3afd2e85c71ddddfb206a2c4e4dd7494293bcfa67b26a0aec428d0b94","md5":"c9ed4454aad8af09c88fa7ed36729697","sha256":"12a51545ff44c7902a22b8ec664b352ed0133fcc9b346dfd55365d103df49528"},"downloads":-1,"filename":"yt_dlp-2024.11.6.232826.dev0.tar.gz","has_sig":false,"md5_digest":"c9ed4454aad8af09c88fa7ed36729697","packagetype":"sdist","python_version":"source","requires_python":">=3.9","size":2902205,"upload_time":"2024-11-06T23:34:12","upload_time_iso_8601":"2024-11-06T23:34:12.141929Z","url":"https://files.pythonhosted.org/packages/9d/00/70d3afd2e85c71ddddfb206a2c4e4dd7494293bcfa67b26a0aec428d0b94/yt_dlp-2024.11.6.232826.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.11.9.232836.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.13","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.11.9.232836.dev0/","requires_dist":["build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.7.2,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","brotli; implementation_name == \"cpython\" and extra == \"default\"","brotlicffi; implementation_name != \"cpython\" and extra == \"default\"","certifi; extra == \"default\"","mutagen; extra == \"default\"","pycryptodomex; extra == \"default\"","requests<3,>=2.32.2; extra == \"default\"","urllib3<3,>=1.26.17; extra == \"default\"","websockets>=13.0; extra == \"default\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest-rerunfailures~=14.0; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.7.0; extra == \"dev\"","pyinstaller>=6.10.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.7.0; extra == \"static-analysis\"","pytest-rerunfailures~=14.0; extra == \"test\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.9","summary":"A feature-rich command-line audio/video downloader","version":"2024.11.9.232836.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"5d712820b30e30ab50b60b909daef08fde4d1476210a0634b8782af83cc5f2fb","md5":"57c9b7b08bc803a94976a01d327dcbd8","sha256":"f079350967b4a6f4161cbd855cb8405d2846c173bcf61f8bf51ceaaa4e1a4c6c"},"downloads":-1,"filename":"yt_dlp-2024.11.9.232836.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"57c9b7b08bc803a94976a01d327dcbd8","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.9","size":3168218,"upload_time":"2024-11-09T23:34:42","upload_time_iso_8601":"2024-11-09T23:34:42.729671Z","url":"https://files.pythonhosted.org/packages/5d/71/2820b30e30ab50b60b909daef08fde4d1476210a0634b8782af83cc5f2fb/yt_dlp-2024.11.9.232836.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"191662423083d36547f6b5f7321001581a0d168a5f9f42eff96227f213a3a1b7","md5":"8b12ca20a127bb3b647c040f360c2949","sha256":"4488e6acdb5c04a31170bc904e1de8ea613e036abb87f0806a9f8c25f2184c3b"},"downloads":-1,"filename":"yt_dlp-2024.11.9.232836.dev0.tar.gz","has_sig":false,"md5_digest":"8b12ca20a127bb3b647c040f360c2949","packagetype":"sdist","python_version":"source","requires_python":">=3.9","size":2902212,"upload_time":"2024-11-09T23:34:45","upload_time_iso_8601":"2024-11-09T23:34:45.519551Z","url":"https://files.pythonhosted.org/packages/19/16/62423083d36547f6b5f7321001581a0d168a5f9f42eff96227f213a3a1b7/yt_dlp-2024.11.9.232836.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.2.13.232701.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"sponsorblock,video-downloader,youtube-dl,youtube-dlc,youtube-downloader,yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":"","maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.2.13.232701.dev0/","requires_dist":["brotli; implementation_name == 'cpython'","brotlicffi; implementation_name != 'cpython'","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == 'build'","hatchling; extra == 'build'","pip; extra == 'build'","wheel; extra == 'build'","flake8; extra == 'dev'","isort; extra == 'dev'","pytest; extra == 'dev'","py2exe>=0.12; extra == 'py2exe'","pyinstaller>=6.3; extra == 'pyinstaller'","cffi; extra == 'secretstorage'","secretstorage; extra == 'secretstorage'"],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2024.2.13.232701.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"9a645ed5102ca2666141ed2477c85b6d69bf1def004a267061d094d5a0794303","md5":"3cfa1d91e229aa75c909c6e936d0d860","sha256":"71ec8f424642484ea8cd3737226aa02f6797d0337521acb44912449ab16bbb36"},"downloads":-1,"filename":"yt_dlp-2024.2.13.232701.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"3cfa1d91e229aa75c909c6e936d0d860","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3061728,"upload_time":"2024-02-13T23:33:29","upload_time_iso_8601":"2024-02-13T23:33:29.181061Z","url":"https://files.pythonhosted.org/packages/9a/64/5ed5102ca2666141ed2477c85b6d69bf1def004a267061d094d5a0794303/yt_dlp-2024.2.13.232701.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"473874cdaba08c15a7783306bdc3cf8210826baa44799bd9303333a56e6422a8","md5":"0ba3f35f229c208f9045debc64f406f0","sha256":"7319995af16fcda2099bf48cd5f0c3cf999606d5f1fcf95c56d989b197b55396"},"downloads":-1,"filename":"yt_dlp-2024.2.13.232701.dev0.tar.gz","has_sig":false,"md5_digest":"0ba3f35f229c208f9045debc64f406f0","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2744450,"upload_time":"2024-02-13T23:33:33","upload_time_iso_8601":"2024-02-13T23:33:33.647983Z","url":"https://files.pythonhosted.org/packages/47/38/74cdaba08c15a7783306bdc3cf8210826baa44799bd9303333a56e6422a8/yt_dlp-2024.2.13.232701.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.2.14.232704.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"sponsorblock,video-downloader,youtube-dl,youtube-dlc,youtube-downloader,yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":"","maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.2.14.232704.dev0/","requires_dist":["brotli; implementation_name == 'cpython'","brotlicffi; implementation_name != 'cpython'","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == 'build'","hatchling; extra == 'build'","pip; extra == 'build'","wheel; extra == 'build'","flake8; extra == 'dev'","isort; extra == 'dev'","pytest; extra == 'dev'","py2exe>=0.12; extra == 'py2exe'","pyinstaller>=6.3; extra == 'pyinstaller'","cffi; extra == 'secretstorage'","secretstorage; extra == 'secretstorage'"],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2024.2.14.232704.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"1e9a9994aeb2361cff4549c2fb3f2b5e7e4104026a18aee98a8b1f97889d6d10","md5":"1bcf82e753541be7bd3c363a746af884","sha256":"0f46090689be9d5dff68f5c46887a1deeeb49757ec5efd3055ac4f7aa871002b"},"downloads":-1,"filename":"yt_dlp-2024.2.14.232704.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"1bcf82e753541be7bd3c363a746af884","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3061734,"upload_time":"2024-02-14T23:33:25","upload_time_iso_8601":"2024-02-14T23:33:25.634141Z","url":"https://files.pythonhosted.org/packages/1e/9a/9994aeb2361cff4549c2fb3f2b5e7e4104026a18aee98a8b1f97889d6d10/yt_dlp-2024.2.14.232704.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"11b6f97125353486d5004e254df683c2944dfe4b0d6a3b7192b2c1c57e4fe383","md5":"c150ee87c9a0033adbd9189493b397c6","sha256":"a98ce0de6b5dc7186f7cc004d53fedad138e5d5909b7225a38beae6f9223e567"},"downloads":-1,"filename":"yt_dlp-2024.2.14.232704.dev0.tar.gz","has_sig":false,"md5_digest":"c150ee87c9a0033adbd9189493b397c6","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2744410,"upload_time":"2024-02-14T23:33:29","upload_time_iso_8601":"2024-02-14T23:33:29.942818Z","url":"https://files.pythonhosted.org/packages/11/b6/f97125353486d5004e254df683c2944dfe4b0d6a3b7192b2c1c57e4fe383/yt_dlp-2024.2.14.232704.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.2.15.232705.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"sponsorblock,video-downloader,youtube-dl,youtube-dlc,youtube-downloader,yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":"","maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.2.15.232705.dev0/","requires_dist":["brotli; implementation_name == 'cpython'","brotlicffi; implementation_name != 'cpython'","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == 'build'","hatchling; extra == 'build'","pip; extra == 'build'","wheel; extra == 'build'","flake8; extra == 'dev'","isort; extra == 'dev'","pytest; extra == 'dev'","py2exe>=0.12; extra == 'py2exe'","pyinstaller>=6.3; extra == 'pyinstaller'","cffi; extra == 'secretstorage'","secretstorage; extra == 'secretstorage'"],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2024.2.15.232705.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"dd834cc3826c6c135bbf9711ecc8b648ad7b6c20efceca61d031afe5f00b8550","md5":"d449bd569c02c63d5473ff4e1cc26f06","sha256":"8dbec6c6c8e9e37065baa002222053b7b86018084fc58c4b07158eb656864eb8"},"downloads":-1,"filename":"yt_dlp-2024.2.15.232705.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"d449bd569c02c63d5473ff4e1cc26f06","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3061755,"upload_time":"2024-02-15T23:33:46","upload_time_iso_8601":"2024-02-15T23:33:46.816688Z","url":"https://files.pythonhosted.org/packages/dd/83/4cc3826c6c135bbf9711ecc8b648ad7b6c20efceca61d031afe5f00b8550/yt_dlp-2024.2.15.232705.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"124dff9090729438aaa56992b759ff20e46db32e038e44b9f0fb802a774c6010","md5":"559548cca7c83a1966ab417631fb11f9","sha256":"cf3b3a349653e41cd4f4d77a8efbe2cc8a61dc7f7590719bbad44fee6692b772"},"downloads":-1,"filename":"yt_dlp-2024.2.15.232705.dev0.tar.gz","has_sig":false,"md5_digest":"559548cca7c83a1966ab417631fb11f9","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2744472,"upload_time":"2024-02-15T23:33:52","upload_time_iso_8601":"2024-02-15T23:33:52.910708Z","url":"https://files.pythonhosted.org/packages/12/4d/ff9090729438aaa56992b759ff20e46db32e038e44b9f0fb802a774c6010/yt_dlp-2024.2.15.232705.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.2.16.232705.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"sponsorblock,video-downloader,youtube-dl,youtube-dlc,youtube-downloader,yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":"","maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.2.16.232705.dev0/","requires_dist":["brotli; implementation_name == 'cpython'","brotlicffi; implementation_name != 'cpython'","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == 'build'","hatchling; extra == 'build'","pip; extra == 'build'","wheel; extra == 'build'","flake8; extra == 'dev'","isort; extra == 'dev'","pytest; extra == 'dev'","py2exe>=0.12; extra == 'py2exe'","pyinstaller>=6.3; extra == 'pyinstaller'","cffi; extra == 'secretstorage'","secretstorage; extra == 'secretstorage'"],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2024.2.16.232705.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"df74e554349a01630735487cb38b03c58b14aa6e39f3805690d74988e180a4f6","md5":"52390002257b526f1d7a56d76dcadc5f","sha256":"589db3d71c033b92a6389e20d46116f6e9243e8de20f116be8d1d087906f3040"},"downloads":-1,"filename":"yt_dlp-2024.2.16.232705.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"52390002257b526f1d7a56d76dcadc5f","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3062568,"upload_time":"2024-02-16T23:33:48","upload_time_iso_8601":"2024-02-16T23:33:48.999698Z","url":"https://files.pythonhosted.org/packages/df/74/e554349a01630735487cb38b03c58b14aa6e39f3805690d74988e180a4f6/yt_dlp-2024.2.16.232705.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"fa7bdf1bb2b2aafd5c44ffcb295eaeb90da5076491f09751d1c5a9d1a407af36","md5":"ba1a5ced912190c9806eaf4c49786ad5","sha256":"44420b9b42427a1f6bbcd679d442d87edb6d20a2f58aabf88742c8e717bebf02"},"downloads":-1,"filename":"yt_dlp-2024.2.16.232705.dev0.tar.gz","has_sig":false,"md5_digest":"ba1a5ced912190c9806eaf4c49786ad5","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2745308,"upload_time":"2024-02-16T23:33:53","upload_time_iso_8601":"2024-02-16T23:33:53.309663Z","url":"https://files.pythonhosted.org/packages/fa/7b/df1bb2b2aafd5c44ffcb295eaeb90da5076491f09751d1c5a9d1a407af36/yt_dlp-2024.2.16.232705.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.2.17.232706.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"sponsorblock,video-downloader,youtube-dl,youtube-dlc,youtube-downloader,yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":"","maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.2.17.232706.dev0/","requires_dist":["brotli; implementation_name == 'cpython'","brotlicffi; implementation_name != 'cpython'","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == 'build'","hatchling; extra == 'build'","pip; extra == 'build'","wheel; extra == 'build'","flake8; extra == 'dev'","isort; extra == 'dev'","pytest; extra == 'dev'","py2exe>=0.12; extra == 'py2exe'","pyinstaller>=6.3; extra == 'pyinstaller'","cffi; extra == 'secretstorage'","secretstorage; extra == 'secretstorage'"],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2024.2.17.232706.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"2c8a2693633732c32e6be4917d97d881ce2d392e2ccd6eacf05b555857b01881","md5":"fe79c60d275db1ab29b2c275389b06a5","sha256":"84f26ec7c257f3c1453d20b5563a2bbe01e41ccc60b9a21c90d001f2b9b0c3ee"},"downloads":-1,"filename":"yt_dlp-2024.2.17.232706.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"fe79c60d275db1ab29b2c275389b06a5","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3062550,"upload_time":"2024-02-17T23:33:35","upload_time_iso_8601":"2024-02-17T23:33:35.722431Z","url":"https://files.pythonhosted.org/packages/2c/8a/2693633732c32e6be4917d97d881ce2d392e2ccd6eacf05b555857b01881/yt_dlp-2024.2.17.232706.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"11265a9b7ac565ea368395b95a9689f60e43ec35b68dce0860bdb57e6e1f044e","md5":"74241611953a11ae529c897a81c1d222","sha256":"8f8c02ea5dff2894d76cdfd3848bb5a9b92795724cbd45dd08c8e33f10662279"},"downloads":-1,"filename":"yt_dlp-2024.2.17.232706.dev0.tar.gz","has_sig":false,"md5_digest":"74241611953a11ae529c897a81c1d222","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2745592,"upload_time":"2024-02-17T23:33:39","upload_time_iso_8601":"2024-02-17T23:33:39.971464Z","url":"https://files.pythonhosted.org/packages/11/26/5a9b7ac565ea368395b95a9689f60e43ec35b68dce0860bdb57e6e1f044e/yt_dlp-2024.2.17.232706.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.2.18.232707.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"sponsorblock,video-downloader,youtube-dl,youtube-dlc,youtube-downloader,yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":"","maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.2.18.232707.dev0/","requires_dist":["brotli; implementation_name == 'cpython'","brotlicffi; implementation_name != 'cpython'","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == 'build'","hatchling; extra == 'build'","pip; extra == 'build'","wheel; extra == 'build'","flake8; extra == 'dev'","isort; extra == 'dev'","pytest; extra == 'dev'","py2exe>=0.12; extra == 'py2exe'","pyinstaller>=6.3; extra == 'pyinstaller'","cffi; extra == 'secretstorage'","secretstorage; extra == 'secretstorage'"],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2024.2.18.232707.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"956b2c0770db376a31a56031976374357306ab25b3b0145013aa5750f8af3e58","md5":"43e52330434e4ddf79703547bc8f2004","sha256":"2c9cc420d43437f87c7dcacf23a5becae373508aee03335f6eeb87ade49139df"},"downloads":-1,"filename":"yt_dlp-2024.2.18.232707.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"43e52330434e4ddf79703547bc8f2004","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3063522,"upload_time":"2024-02-18T23:33:21","upload_time_iso_8601":"2024-02-18T23:33:21.775043Z","url":"https://files.pythonhosted.org/packages/95/6b/2c0770db376a31a56031976374357306ab25b3b0145013aa5750f8af3e58/yt_dlp-2024.2.18.232707.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c69fbcd3a38dbc9d0e39005ebe3aa84b3fdbdc46989f6370e8fa8388d6633a2c","md5":"ed86041049e19f5a33d02b3df1ea85c7","sha256":"ce26cfce83b8aca48bdbbb002818ccc65d7c025bfe3ba06f40a77259d00965f5"},"downloads":-1,"filename":"yt_dlp-2024.2.18.232707.dev0.tar.gz","has_sig":false,"md5_digest":"ed86041049e19f5a33d02b3df1ea85c7","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2746141,"upload_time":"2024-02-18T23:33:26","upload_time_iso_8601":"2024-02-18T23:33:26.319175Z","url":"https://files.pythonhosted.org/packages/c6/9f/bcd3a38dbc9d0e39005ebe3aa84b3fdbdc46989f6370e8fa8388d6633a2c/yt_dlp-2024.2.18.232707.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.2.19.232703.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"sponsorblock,video-downloader,youtube-dl,youtube-dlc,youtube-downloader,yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":"","maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.2.19.232703.dev0/","requires_dist":["brotli; implementation_name == 'cpython'","brotlicffi; implementation_name != 'cpython'","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == 'build'","hatchling; extra == 'build'","pip; extra == 'build'","wheel; extra == 'build'","flake8; extra == 'dev'","isort; extra == 'dev'","pytest; extra == 'dev'","py2exe>=0.12; extra == 'py2exe'","pyinstaller>=6.3; extra == 'pyinstaller'","cffi; extra == 'secretstorage'","secretstorage; extra == 'secretstorage'"],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2024.2.19.232703.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"2cf26812fdb233eb4d9ed1f81ced767f298e993bef01b0c4b3a7bad4630b6585","md5":"6fddad8c1716640576dbf1f0c4ac3d0e","sha256":"e67886b27a31083faf4f513d99252a1a2cb500086c2287253c6999849f34a676"},"downloads":-1,"filename":"yt_dlp-2024.2.19.232703.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"6fddad8c1716640576dbf1f0c4ac3d0e","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3065916,"upload_time":"2024-02-19T23:33:43","upload_time_iso_8601":"2024-02-19T23:33:43.945035Z","url":"https://files.pythonhosted.org/packages/2c/f2/6812fdb233eb4d9ed1f81ced767f298e993bef01b0c4b3a7bad4630b6585/yt_dlp-2024.2.19.232703.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"ac5ccd36e1c188c6420b1f81288f81ac3899944369345980e2bf4743d1ea878c","md5":"39ceddff5aada18c023c318dbc335ba7","sha256":"cb531f497402af71df688d1ce6d91c852e8a21c55f30a26d1bc58d228f66e336"},"downloads":-1,"filename":"yt_dlp-2024.2.19.232703.dev0.tar.gz","has_sig":false,"md5_digest":"39ceddff5aada18c023c318dbc335ba7","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2748007,"upload_time":"2024-02-19T23:33:48","upload_time_iso_8601":"2024-02-19T23:33:48.447582Z","url":"https://files.pythonhosted.org/packages/ac/5c/cd36e1c188c6420b1f81288f81ac3899944369345980e2bf4743d1ea878c/yt_dlp-2024.2.19.232703.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.2.2.232707.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.2.2.232707.dev0/","requires_dist":["mutagen","pycryptodomex","certifi","requests <3,>=2.31.0","urllib3 <3,>=1.26.17","websockets >=12.0","brotlicffi ; implementation_name != \"cpython\"","brotli ; implementation_name == \"cpython\""],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2024.2.2.232707.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"827e5e29d75208d62aff63b2b602bf006ee71808c5b3910d0077171cf5d81e3c","md5":"511207bc6de137a36c2a0cb37795ba77","sha256":"7ff05434979d89e2a7c344d6771cc60229901fe4182c19a756472bb49a50e3b8"},"downloads":-1,"filename":"yt_dlp-2024.2.2.232707.dev0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"511207bc6de137a36c2a0cb37795ba77","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":3038939,"upload_time":"2024-02-02T23:35:58","upload_time_iso_8601":"2024-02-02T23:35:58.302171Z","url":"https://files.pythonhosted.org/packages/82/7e/5e29d75208d62aff63b2b602bf006ee71808c5b3910d0077171cf5d81e3c/yt_dlp-2024.2.2.232707.dev0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"b3f97e53102eb46bfb6b4923d9a0df475d37cd60d9168aadf6be822b70281fb8","md5":"d2a610a8c8e11a6f8f135c3a98e1a416","sha256":"fd8d85f64842038cbdaaf7ee5812d98beed64fdcb4612f6e80b2c721bad13262"},"downloads":-1,"filename":"yt-dlp-2024.2.2.232707.dev0.tar.gz","has_sig":false,"md5_digest":"d2a610a8c8e11a6f8f135c3a98e1a416","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2815005,"upload_time":"2024-02-02T23:36:02","upload_time_iso_8601":"2024-02-02T23:36:02.909933Z","url":"https://files.pythonhosted.org/packages/b3/f9/7e53102eb46bfb6b4923d9a0df475d37cd60d9168aadf6be822b70281fb8/yt-dlp-2024.2.2.232707.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.2.20.232712.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"sponsorblock,video-downloader,youtube-dl,youtube-dlc,youtube-downloader,yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":"","maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.2.20.232712.dev0/","requires_dist":["brotli; implementation_name == 'cpython'","brotlicffi; implementation_name != 'cpython'","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == 'build'","hatchling; extra == 'build'","pip; extra == 'build'","wheel; extra == 'build'","flake8; extra == 'dev'","isort; extra == 'dev'","pytest; extra == 'dev'","py2exe>=0.12; extra == 'py2exe'","pyinstaller>=6.3; extra == 'pyinstaller'","cffi; extra == 'secretstorage'","secretstorage; extra == 'secretstorage'"],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2024.2.20.232712.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"f61a3f7e7bd5706ce7a0ba9e8a9830ed8e51657d4a6b932c6388798efbb449b4","md5":"c30bf7ad9f30bf36f7804ac999fda746","sha256":"e3870611b6049f8df606a2552f3b2518fe65e148a970a8ad1c7db469995ee0b6"},"downloads":-1,"filename":"yt_dlp-2024.2.20.232712.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"c30bf7ad9f30bf36f7804ac999fda746","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3066780,"upload_time":"2024-02-20T23:33:45","upload_time_iso_8601":"2024-02-20T23:33:45.499869Z","url":"https://files.pythonhosted.org/packages/f6/1a/3f7e7bd5706ce7a0ba9e8a9830ed8e51657d4a6b932c6388798efbb449b4/yt_dlp-2024.2.20.232712.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"a46e7fe85cf191f7f370e506cf7a97dae4370a34905e1827c2603ba25ee0ac63","md5":"33f3ded0ae278656e76bc5bc41db95d9","sha256":"ebd9ac657a443923a22481855dea29d3f2e1877af514592afa9d0c8d5f533190"},"downloads":-1,"filename":"yt_dlp-2024.2.20.232712.dev0.tar.gz","has_sig":false,"md5_digest":"33f3ded0ae278656e76bc5bc41db95d9","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2749284,"upload_time":"2024-02-20T23:33:50","upload_time_iso_8601":"2024-02-20T23:33:50.116954Z","url":"https://files.pythonhosted.org/packages/a4/6e/7fe85cf191f7f370e506cf7a97dae4370a34905e1827c2603ba25ee0ac63/yt_dlp-2024.2.20.232712.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.2.21.232721.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"sponsorblock,video-downloader,youtube-dl,youtube-dlc,youtube-downloader,yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":"","maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.2.21.232721.dev0/","requires_dist":["brotli; implementation_name == 'cpython'","brotlicffi; implementation_name != 'cpython'","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == 'build'","hatchling; extra == 'build'","pip; extra == 'build'","wheel; extra == 'build'","flake8; extra == 'dev'","isort; extra == 'dev'","pytest; extra == 'dev'","py2exe>=0.12; extra == 'py2exe'","pyinstaller>=6.3; extra == 'pyinstaller'","cffi; extra == 'secretstorage'","secretstorage; extra == 'secretstorage'"],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2024.2.21.232721.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"71d7e7243f6ac66f4c95c7e0187ab8f18e68a775045eb0fc811c6c9f1e98e1b7","md5":"4c56d52803923a019befad8c5a00b35f","sha256":"21f515c416d5c493aa76d2bf3a4b1e4134cb719cc08603804e2d17b160f01b1b"},"downloads":-1,"filename":"yt_dlp-2024.2.21.232721.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"4c56d52803923a019befad8c5a00b35f","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3066931,"upload_time":"2024-02-21T23:33:48","upload_time_iso_8601":"2024-02-21T23:33:48.350363Z","url":"https://files.pythonhosted.org/packages/71/d7/e7243f6ac66f4c95c7e0187ab8f18e68a775045eb0fc811c6c9f1e98e1b7/yt_dlp-2024.2.21.232721.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"432dac89d572ff46ca20f4f9a74158501a5455047ac6e304cf3d8df6b986fcec","md5":"78f0d9ad630d3e9dc4c15d9efd3429f8","sha256":"f1f6bc257cd94c973bdc5e243a85b7afc07050e7cffd8b8f8adf15dd54cc2118"},"downloads":-1,"filename":"yt_dlp-2024.2.21.232721.dev0.tar.gz","has_sig":false,"md5_digest":"78f0d9ad630d3e9dc4c15d9efd3429f8","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2749421,"upload_time":"2024-02-21T23:33:54","upload_time_iso_8601":"2024-02-21T23:33:54.837008Z","url":"https://files.pythonhosted.org/packages/43/2d/ac89d572ff46ca20f4f9a74158501a5455047ac6e304cf3d8df6b986fcec/yt_dlp-2024.2.21.232721.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.2.22.232849.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"sponsorblock,video-downloader,youtube-dl,youtube-dlc,youtube-downloader,yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":"","maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.2.22.232849.dev0/","requires_dist":["brotli; implementation_name == 'cpython'","brotlicffi; implementation_name != 'cpython'","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == 'build'","hatchling; extra == 'build'","pip; extra == 'build'","wheel; extra == 'build'","flake8; extra == 'dev'","isort; extra == 'dev'","pytest; extra == 'dev'","py2exe>=0.12; extra == 'py2exe'","pyinstaller>=6.3; extra == 'pyinstaller'","cffi; extra == 'secretstorage'","secretstorage; extra == 'secretstorage'"],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2024.2.22.232849.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"267b07fe6a954aa1a307585620ce0debc9a9932d17797708d3dbe84eb429e30e","md5":"b34cfbcce0606b3dbf04b34ec6120b6f","sha256":"9b1854875a9fab05534bc4b04208c9b4a0def28593c2b40413e59c6a4d4d145b"},"downloads":-1,"filename":"yt_dlp-2024.2.22.232849.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"b34cfbcce0606b3dbf04b34ec6120b6f","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3067169,"upload_time":"2024-02-22T23:35:16","upload_time_iso_8601":"2024-02-22T23:35:16.854254Z","url":"https://files.pythonhosted.org/packages/26/7b/07fe6a954aa1a307585620ce0debc9a9932d17797708d3dbe84eb429e30e/yt_dlp-2024.2.22.232849.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"90e82e57b44a06bb29a83709d386754e1d8d46b0a11909e294f736f502518fe8","md5":"ccd45ef4704d7941a27898d00b1fe150","sha256":"ca9e1b9ec6049f17449abf6a0efc9250cd6b9fee9feff6778d8bbdc4151bbae6"},"downloads":-1,"filename":"yt_dlp-2024.2.22.232849.dev0.tar.gz","has_sig":false,"md5_digest":"ccd45ef4704d7941a27898d00b1fe150","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2749732,"upload_time":"2024-02-22T23:35:22","upload_time_iso_8601":"2024-02-22T23:35:22.122942Z","url":"https://files.pythonhosted.org/packages/90/e8/2e57b44a06bb29a83709d386754e1d8d46b0a11909e294f736f502518fe8/yt_dlp-2024.2.22.232849.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.2.23.232656.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"sponsorblock,video-downloader,youtube-dl,youtube-dlc,youtube-downloader,yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":"","maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.2.23.232656.dev0/","requires_dist":["brotli; implementation_name == 'cpython'","brotlicffi; implementation_name != 'cpython'","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == 'build'","hatchling; extra == 'build'","pip; extra == 'build'","wheel; extra == 'build'","flake8; extra == 'dev'","isort; extra == 'dev'","pytest; extra == 'dev'","py2exe>=0.12; extra == 'py2exe'","pyinstaller>=6.3; extra == 'pyinstaller'","cffi; extra == 'secretstorage'","secretstorage; extra == 'secretstorage'"],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2024.2.23.232656.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"eb602aee75892f630c20c432572229bd11feb20a5930592fbb2009b5a26f94a9","md5":"8f1c20c501bb28c1714cb41b9714a1ee","sha256":"315b10cd108484fac48c923d44a6de3b20efbf3784a7eec0557105150f70c962"},"downloads":-1,"filename":"yt_dlp-2024.2.23.232656.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"8f1c20c501bb28c1714cb41b9714a1ee","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3067754,"upload_time":"2024-02-23T23:39:25","upload_time_iso_8601":"2024-02-23T23:39:25.327414Z","url":"https://files.pythonhosted.org/packages/eb/60/2aee75892f630c20c432572229bd11feb20a5930592fbb2009b5a26f94a9/yt_dlp-2024.2.23.232656.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"ae9d9b2d2ca1012918b279faac89073ff8faac2c53e988251b963dc1050954c4","md5":"d99524448201ac09014a2df073470b26","sha256":"59a3c000a353a645ea2af820b7b6908f29155701837ef2721d280e5056d0c123"},"downloads":-1,"filename":"yt_dlp-2024.2.23.232656.dev0.tar.gz","has_sig":false,"md5_digest":"d99524448201ac09014a2df073470b26","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2750176,"upload_time":"2024-02-23T23:39:30","upload_time_iso_8601":"2024-02-23T23:39:30.257774Z","url":"https://files.pythonhosted.org/packages/ae/9d/9b2d2ca1012918b279faac89073ff8faac2c53e988251b963dc1050954c4/yt_dlp-2024.2.23.232656.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.2.24.232815.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"sponsorblock,video-downloader,youtube-dl,youtube-dlc,youtube-downloader,yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":"","maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.2.24.232815.dev0/","requires_dist":["brotli; implementation_name == 'cpython'","brotlicffi; implementation_name != 'cpython'","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == 'build'","hatchling; extra == 'build'","pip; extra == 'build'","wheel; extra == 'build'","flake8; extra == 'dev'","isort; extra == 'dev'","pytest; extra == 'dev'","py2exe>=0.12; extra == 'py2exe'","pyinstaller>=6.3; extra == 'pyinstaller'","cffi; extra == 'secretstorage'","secretstorage; extra == 'secretstorage'"],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2024.2.24.232815.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"9fe85e528a6e8c9ec642f822ef0069141c4a19193e17d6354a6fa2d9f7a40e15","md5":"f5b959465ba59d3ba5b0c52633af819c","sha256":"52a1e05c9e9d3f90dafc037d97a6307bac6e38fb39e916ecedddb078bff59aa8"},"downloads":-1,"filename":"yt_dlp-2024.2.24.232815.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"f5b959465ba59d3ba5b0c52633af819c","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3069552,"upload_time":"2024-02-24T23:34:47","upload_time_iso_8601":"2024-02-24T23:34:47.776097Z","url":"https://files.pythonhosted.org/packages/9f/e8/5e528a6e8c9ec642f822ef0069141c4a19193e17d6354a6fa2d9f7a40e15/yt_dlp-2024.2.24.232815.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"dd2df717102565b377a6c38c8b5b1d4ff2f46a948cb64e3953bdbe9f7c1ca628","md5":"eb68864caf18fdfae16cc34658b1d588","sha256":"7cf00630c1863cbcdd3568ad3fe236d88a5513c20cb5dc21241356540d975cdf"},"downloads":-1,"filename":"yt_dlp-2024.2.24.232815.dev0.tar.gz","has_sig":false,"md5_digest":"eb68864caf18fdfae16cc34658b1d588","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2751909,"upload_time":"2024-02-24T23:34:52","upload_time_iso_8601":"2024-02-24T23:34:52.595570Z","url":"https://files.pythonhosted.org/packages/dd/2d/f717102565b377a6c38c8b5b1d4ff2f46a948cb64e3953bdbe9f7c1ca628/yt_dlp-2024.2.24.232815.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.2.25.232703.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"sponsorblock,video-downloader,youtube-dl,youtube-dlc,youtube-downloader,yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":"","maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.2.25.232703.dev0/","requires_dist":["brotli; implementation_name == 'cpython'","brotlicffi; implementation_name != 'cpython'","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == 'build'","hatchling; extra == 'build'","pip; extra == 'build'","wheel; extra == 'build'","flake8; extra == 'dev'","isort; extra == 'dev'","pytest; extra == 'dev'","py2exe>=0.12; extra == 'py2exe'","pyinstaller>=6.3; extra == 'pyinstaller'","cffi; extra == 'secretstorage'","secretstorage; extra == 'secretstorage'"],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2024.2.25.232703.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"475705c44fed42de7448f082fe01a1d8671816857a1612d9f90084f3d34d7ba7","md5":"753ca959bc54c688f0eb54c28983602b","sha256":"27f9003029ef1d2dcb8a55c5751d13355fa3fe3eeda09f869d66e30aa01861dc"},"downloads":-1,"filename":"yt_dlp-2024.2.25.232703.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"753ca959bc54c688f0eb54c28983602b","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3069638,"upload_time":"2024-02-25T23:33:33","upload_time_iso_8601":"2024-02-25T23:33:33.788853Z","url":"https://files.pythonhosted.org/packages/47/57/05c44fed42de7448f082fe01a1d8671816857a1612d9f90084f3d34d7ba7/yt_dlp-2024.2.25.232703.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"0364a9f33e0837cc19c3a4eaa74cafb6661d6624df52a0e9e23ba41854e800aa","md5":"ee45e78e93dd1c321d4b32e940997ff8","sha256":"08874c834f18af11976f6e33983263b23acc0fb743bb7073824c4bc9505a67b4"},"downloads":-1,"filename":"yt_dlp-2024.2.25.232703.dev0.tar.gz","has_sig":false,"md5_digest":"ee45e78e93dd1c321d4b32e940997ff8","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2752013,"upload_time":"2024-02-25T23:33:39","upload_time_iso_8601":"2024-02-25T23:33:39.973173Z","url":"https://files.pythonhosted.org/packages/03/64/a9f33e0837cc19c3a4eaa74cafb6661d6624df52a0e9e23ba41854e800aa/yt_dlp-2024.2.25.232703.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.2.28.232744.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"sponsorblock,video-downloader,youtube-dl,youtube-dlc,youtube-downloader,yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":"","maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.2.28.232744.dev0/","requires_dist":["brotli; implementation_name == 'cpython'","brotlicffi; implementation_name != 'cpython'","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == 'build'","hatchling; extra == 'build'","pip; extra == 'build'","wheel; extra == 'build'","flake8; extra == 'dev'","isort; extra == 'dev'","pytest; extra == 'dev'","py2exe>=0.12; extra == 'py2exe'","pyinstaller>=6.3; extra == 'pyinstaller'","cffi; extra == 'secretstorage'","secretstorage; extra == 'secretstorage'"],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2024.2.28.232744.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"7feacd2da0a0b347e1c8ce60790f9bf24f3a94f34e12b8652a0299710ccf98e1","md5":"e18c04dad47d29fc52b3fa93cfe43464","sha256":"6b16119c0771310e2d03a7d2a2937c413b1cc8fd7913b347610f16c7a94ffc2a"},"downloads":-1,"filename":"yt_dlp-2024.2.28.232744.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"e18c04dad47d29fc52b3fa93cfe43464","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3069787,"upload_time":"2024-02-28T23:34:35","upload_time_iso_8601":"2024-02-28T23:34:35.989350Z","url":"https://files.pythonhosted.org/packages/7f/ea/cd2da0a0b347e1c8ce60790f9bf24f3a94f34e12b8652a0299710ccf98e1/yt_dlp-2024.2.28.232744.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"635a5aee60100a78db630d7c80a72ac576e29b48565f30fe4a279a31fdbdeb04","md5":"1cfed368b740b52bacb66f5c2d91bec8","sha256":"bcba6995eb6db087c8da84d5d77a4e692a081a641bc97de5dad0205f8d46ef87"},"downloads":-1,"filename":"yt_dlp-2024.2.28.232744.dev0.tar.gz","has_sig":false,"md5_digest":"1cfed368b740b52bacb66f5c2d91bec8","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2752175,"upload_time":"2024-02-28T23:34:40","upload_time_iso_8601":"2024-02-28T23:34:40.878864Z","url":"https://files.pythonhosted.org/packages/63/5a/5aee60100a78db630d7c80a72ac576e29b48565f30fe4a279a31fdbdeb04/yt_dlp-2024.2.28.232744.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.2.29.232658.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"sponsorblock,video-downloader,youtube-dl,youtube-dlc,youtube-downloader,yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":"","maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.2.29.232658.dev0/","requires_dist":["brotli; implementation_name == 'cpython'","brotlicffi; implementation_name != 'cpython'","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == 'build'","hatchling; extra == 'build'","pip; extra == 'build'","wheel; extra == 'build'","flake8; extra == 'dev'","isort; extra == 'dev'","pytest; extra == 'dev'","py2exe>=0.12; extra == 'py2exe'","pyinstaller>=6.3; extra == 'pyinstaller'","cffi; extra == 'secretstorage'","secretstorage; extra == 'secretstorage'"],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2024.2.29.232658.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"b8a396d273e7d713aabc4090e0703c19e14f5199557017797497bc6f68d0c1ee","md5":"321c3967ef95a33fced01f3632530628","sha256":"b1bddb656cd955821932de25f1ae145aadecccc01544deacbb3436a6542cdea9"},"downloads":-1,"filename":"yt_dlp-2024.2.29.232658.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"321c3967ef95a33fced01f3632530628","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3072791,"upload_time":"2024-02-29T23:34:03","upload_time_iso_8601":"2024-02-29T23:34:03.422348Z","url":"https://files.pythonhosted.org/packages/b8/a3/96d273e7d713aabc4090e0703c19e14f5199557017797497bc6f68d0c1ee/yt_dlp-2024.2.29.232658.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f4560d092d233522700492c221e5265d4dd75f21191eb7ce858e8ff3752e7f4b","md5":"ef732b488e747a03c4b445473c3f2a97","sha256":"834c44506181f93f7dd36a5453fe0ab5d87638fdf085c76d7199387fb987160f"},"downloads":-1,"filename":"yt_dlp-2024.2.29.232658.dev0.tar.gz","has_sig":false,"md5_digest":"ef732b488e747a03c4b445473c3f2a97","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2754543,"upload_time":"2024-02-29T23:34:08","upload_time_iso_8601":"2024-02-29T23:34:08.545249Z","url":"https://files.pythonhosted.org/packages/f4/56/0d092d233522700492c221e5265d4dd75f21191eb7ce858e8ff3752e7f4b/yt_dlp-2024.2.29.232658.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.2.3.232712.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.2.3.232712.dev0/","requires_dist":["mutagen","pycryptodomex","certifi","requests <3,>=2.31.0","urllib3 <3,>=1.26.17","websockets >=12.0","brotlicffi ; implementation_name != \"cpython\"","brotli ; implementation_name == \"cpython\""],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2024.2.3.232712.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"9bb53282c0cf58db2590b9d1ffd83ba45efdb8468e3374f57e3ac63e7716b654","md5":"674fdbe36ade42aeb0f1e34b2bb59f25","sha256":"795efdb8083ee702e55139f9f79b25dee91029443e8531daf167f36152711480"},"downloads":-1,"filename":"yt_dlp-2024.2.3.232712.dev0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"674fdbe36ade42aeb0f1e34b2bb59f25","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":3039222,"upload_time":"2024-02-03T23:35:59","upload_time_iso_8601":"2024-02-03T23:35:59.166155Z","url":"https://files.pythonhosted.org/packages/9b/b5/3282c0cf58db2590b9d1ffd83ba45efdb8468e3374f57e3ac63e7716b654/yt_dlp-2024.2.3.232712.dev0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"77ddfd36f134bb36e0fbf2968219b373e9be522617bdd31cc9d12ac0a50a82af","md5":"0ff6cd0c7b173ccc4ecc983ab4614547","sha256":"a743fc343798912de60d44a20bfa2f890c8f0f4efa02e487903f7ae73f4149f6"},"downloads":-1,"filename":"yt-dlp-2024.2.3.232712.dev0.tar.gz","has_sig":false,"md5_digest":"0ff6cd0c7b173ccc4ecc983ab4614547","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2815379,"upload_time":"2024-02-03T23:36:04","upload_time_iso_8601":"2024-02-03T23:36:04.055129Z","url":"https://files.pythonhosted.org/packages/77/dd/fd36f134bb36e0fbf2968219b373e9be522617bdd31cc9d12ac0a50a82af/yt-dlp-2024.2.3.232712.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.2.4.232659.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.2.4.232659.dev0/","requires_dist":["mutagen","pycryptodomex","certifi","requests <3,>=2.31.0","urllib3 <3,>=1.26.17","websockets >=12.0","brotlicffi ; implementation_name != \"cpython\"","brotli ; implementation_name == \"cpython\""],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2024.2.4.232659.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"0e4249423d70c693997e7fc9ef710c171f1e81bb2c570d06918e3800a4b9c746","md5":"a8f607ea6acc0678ee663d6df24970fa","sha256":"07f5dad36e07adc8f97263a0181605ae92a47cf3400fe3c770eb3206427f63c4"},"downloads":-1,"filename":"yt_dlp-2024.2.4.232659.dev0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"a8f607ea6acc0678ee663d6df24970fa","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":3039347,"upload_time":"2024-02-04T23:35:49","upload_time_iso_8601":"2024-02-04T23:35:49.976729Z","url":"https://files.pythonhosted.org/packages/0e/42/49423d70c693997e7fc9ef710c171f1e81bb2c570d06918e3800a4b9c746/yt_dlp-2024.2.4.232659.dev0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"939f4cd7d4152f55ea41b670760f563899920357d3aff2e7f61fa6625ce08d5e","md5":"4ffa7cd9612cf1af7d2f69e7a48b0238","sha256":"64d9125ee0c31010da0e7afb7cd2adeae11fd234d1503586b6a3d22f25530350"},"downloads":-1,"filename":"yt-dlp-2024.2.4.232659.dev0.tar.gz","has_sig":false,"md5_digest":"4ffa7cd9612cf1af7d2f69e7a48b0238","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2815344,"upload_time":"2024-02-04T23:35:53","upload_time_iso_8601":"2024-02-04T23:35:53.795885Z","url":"https://files.pythonhosted.org/packages/93/9f/4cd7d4152f55ea41b670760f563899920357d3aff2e7f61fa6625ce08d5e/yt-dlp-2024.2.4.232659.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.2.5.232712.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.2.5.232712.dev0/","requires_dist":["mutagen","pycryptodomex","certifi","requests <3,>=2.31.0","urllib3 <3,>=1.26.17","websockets >=12.0","brotlicffi ; implementation_name != \"cpython\"","brotli ; implementation_name == \"cpython\""],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2024.2.5.232712.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"2d4c0c4669c9950ae93ed1d335948d707ff397f46af3bb23e6112f83cf62b030","md5":"77b960d09eefc7750c4eaceab36889a2","sha256":"64afb6818883af81afae1bfb5488cffb3dda7d839e4c1e32b05244b4a73c972c"},"downloads":-1,"filename":"yt_dlp-2024.2.5.232712.dev0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"77b960d09eefc7750c4eaceab36889a2","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":3049268,"upload_time":"2024-02-05T23:36:11","upload_time_iso_8601":"2024-02-05T23:36:11.953375Z","url":"https://files.pythonhosted.org/packages/2d/4c/0c4669c9950ae93ed1d335948d707ff397f46af3bb23e6112f83cf62b030/yt_dlp-2024.2.5.232712.dev0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"e53f3f1d6fd3532b69672be53bf4f7648a5aa2c6f3083d758fed392497de591b","md5":"17980ff34c55e87caf12c3928d66725c","sha256":"9bb5dd275bbf67c2b48e9bab17ae20d9105c37e00b9071eaf8d51adbf5f2d6c9"},"downloads":-1,"filename":"yt-dlp-2024.2.5.232712.dev0.tar.gz","has_sig":false,"md5_digest":"17980ff34c55e87caf12c3928d66725c","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2824878,"upload_time":"2024-02-05T23:36:16","upload_time_iso_8601":"2024-02-05T23:36:16.460133Z","url":"https://files.pythonhosted.org/packages/e5/3f/3f1d6fd3532b69672be53bf4f7648a5aa2c6f3083d758fed392497de591b/yt-dlp-2024.2.5.232712.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.2.9.232659.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: Public Domain","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/yt-dlp/yt-dlp","keywords":"","license":"","maintainer":"pukkandan","maintainer_email":"pukkandan.ytdlp@gmail.com","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Homepage":"https://github.com/yt-dlp/yt-dlp","Source":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.2.9.232659.dev0/","requires_dist":["mutagen","pycryptodomex","certifi","requests <3,>=2.31.0","urllib3 <3,>=1.26.17","websockets >=12.0","brotlicffi ; implementation_name != \"cpython\"","brotli ; implementation_name == \"cpython\""],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2024.2.9.232659.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"bd8203e8b213e360fbc4917ffb58deab280e93418f448a04c2390b462700b018","md5":"7bf5e108c0c05248392f931620175e82","sha256":"8cf22ae32da9430055de329bd28aaab0e3b7b4c4fd5cf283d8b56ee8e64ed9c8"},"downloads":-1,"filename":"yt_dlp-2024.2.9.232659.dev0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"7bf5e108c0c05248392f931620175e82","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":3052112,"upload_time":"2024-02-09T23:35:34","upload_time_iso_8601":"2024-02-09T23:35:34.143526Z","url":"https://files.pythonhosted.org/packages/bd/82/03e8b213e360fbc4917ffb58deab280e93418f448a04c2390b462700b018/yt_dlp-2024.2.9.232659.dev0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c3072b7e481ac17d049f591d1dcc26034279773cc30bc9920a2816514b43418f","md5":"37f09ee83154d5d8facd17ef0dcc21f7","sha256":"52a329e1df2f79f7f2fc211a96c82703ca9b2ea6f1b201690c1caa6eee330c2f"},"downloads":-1,"filename":"yt-dlp-2024.2.9.232659.dev0.tar.gz","has_sig":false,"md5_digest":"37f09ee83154d5d8facd17ef0dcc21f7","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2827537,"upload_time":"2024-02-09T23:35:38","upload_time_iso_8601":"2024-02-09T23:35:38.311479Z","url":"https://files.pythonhosted.org/packages/c3/07/2b7e481ac17d049f591d1dcc26034279773cc30bc9920a2816514b43418f/yt-dlp-2024.2.9.232659.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.3.10":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"sponsorblock,video-downloader,youtube-dl,youtube-dlc,youtube-downloader,yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":"","maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.3.10/","requires_dist":["brotli; implementation_name == 'cpython'","brotlicffi; implementation_name != 'cpython'","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == 'build'","hatchling; extra == 'build'","pip; extra == 'build'","wheel; extra == 'build'","flake8; extra == 'dev'","isort; extra == 'dev'","pytest; extra == 'dev'","py2exe>=0.12; extra == 'py2exe'","pyinstaller>=6.3; extra == 'pyinstaller'","cffi; extra == 'secretstorage'","secretstorage; extra == 'secretstorage'"],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2024.3.10","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"06f8a42be2524a6f53f5aa78f37313473890a2155ea2e3d11247b8f35d32226a","md5":"f1ff0b57909f8e894222965c526568b1","sha256":"bbe66b9a3aa23b6378ccca3ea20f5aadf385fa21a993513a105d73c827a86ed4"},"downloads":-1,"filename":"yt_dlp-2024.3.10-py3-none-any.whl","has_sig":false,"md5_digest":"f1ff0b57909f8e894222965c526568b1","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3049050,"upload_time":"2024-03-10T19:48:07","upload_time_iso_8601":"2024-03-10T19:48:07.331138Z","url":"https://files.pythonhosted.org/packages/06/f8/a42be2524a6f53f5aa78f37313473890a2155ea2e3d11247b8f35d32226a/yt_dlp-2024.3.10-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"701df9617f151c124a15981cf79c47b6a53ac875942211b40010f0381296c51d","md5":"938b640b3f771768f4d466c008138b61","sha256":"6e74cb14a69dbeb872c8ef4e0b8bbed2ee846ec633513cf3124a74c1faedc07b"},"downloads":-1,"filename":"yt_dlp-2024.3.10.tar.gz","has_sig":false,"md5_digest":"938b640b3f771768f4d466c008138b61","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2741172,"upload_time":"2024-03-10T19:48:11","upload_time_iso_8601":"2024-03-10T19:48:11.996851Z","url":"https://files.pythonhosted.org/packages/70/1d/f9617f151c124a15981cf79c47b6a53ac875942211b40010f0381296c51d/yt_dlp-2024.3.10.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.3.10.232703.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"sponsorblock,video-downloader,youtube-dl,youtube-dlc,youtube-downloader,yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":"","maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.3.10.232703.dev0/","requires_dist":["brotli; implementation_name == 'cpython'","brotlicffi; implementation_name != 'cpython'","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == 'build'","hatchling; extra == 'build'","pip; extra == 'build'","wheel; extra == 'build'","flake8; extra == 'dev'","isort; extra == 'dev'","pytest; extra == 'dev'","py2exe>=0.12; extra == 'py2exe'","pyinstaller>=6.3; extra == 'pyinstaller'","cffi; extra == 'secretstorage'","secretstorage; extra == 'secretstorage'"],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2024.3.10.232703.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"a1b953b8db885d30fe7b6d28ac8f156ccfbb421d652da28675ee737ea8efacdc","md5":"4f129a1917f90d23dbb2e45c2ccb3a69","sha256":"1cfa65acd3390eca24d1b4a1bb14bacb1f5472ea1cdb5fb429663d7719aaac77"},"downloads":-1,"filename":"yt_dlp-2024.3.10.232703.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"4f129a1917f90d23dbb2e45c2ccb3a69","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3049348,"upload_time":"2024-03-10T23:34:28","upload_time_iso_8601":"2024-03-10T23:34:28.787918Z","url":"https://files.pythonhosted.org/packages/a1/b9/53b8db885d30fe7b6d28ac8f156ccfbb421d652da28675ee737ea8efacdc/yt_dlp-2024.3.10.232703.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"143e6043e355824944c7eee2d67b22e5cf885bdac4a5068d3a95cc17bd26368b","md5":"17f3dd77c2c334cd6b16e6ad96468a35","sha256":"8d59fdcf612ce86885bb48cebbe35ff360c519b6fda72a608a6fe1c5f35fe6e4"},"downloads":-1,"filename":"yt_dlp-2024.3.10.232703.dev0.tar.gz","has_sig":false,"md5_digest":"17f3dd77c2c334cd6b16e6ad96468a35","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2753328,"upload_time":"2024-03-10T23:34:32","upload_time_iso_8601":"2024-03-10T23:34:32.880307Z","url":"https://files.pythonhosted.org/packages/14/3e/6043e355824944c7eee2d67b22e5cf885bdac4a5068d3a95cc17bd26368b/yt_dlp-2024.3.10.232703.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.3.14.232657.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"sponsorblock,video-downloader,youtube-dl,youtube-dlc,youtube-downloader,yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":"","maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.3.14.232657.dev0/","requires_dist":["brotli; implementation_name == 'cpython'","brotlicffi; implementation_name != 'cpython'","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == 'build'","hatchling; extra == 'build'","pip; extra == 'build'","wheel; extra == 'build'","flake8; extra == 'dev'","isort; extra == 'dev'","pytest; extra == 'dev'","py2exe>=0.12; extra == 'py2exe'","pyinstaller>=6.3; extra == 'pyinstaller'","cffi; extra == 'secretstorage'","secretstorage; extra == 'secretstorage'"],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2024.3.14.232657.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"2c7f4505debf7a5d0c3845e6a592eb04aaba44bc74b2dc2ba9dff24fca2ac972","md5":"04640f80bffd0f66b3b8edf846ec09a6","sha256":"700df6389fae2a327a435454f2215d7dc8247a3032fa625f439be6e30655e0c4"},"downloads":-1,"filename":"yt_dlp-2024.3.14.232657.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"04640f80bffd0f66b3b8edf846ec09a6","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3049526,"upload_time":"2024-03-14T23:33:32","upload_time_iso_8601":"2024-03-14T23:33:32.125200Z","url":"https://files.pythonhosted.org/packages/2c/7f/4505debf7a5d0c3845e6a592eb04aaba44bc74b2dc2ba9dff24fca2ac972/yt_dlp-2024.3.14.232657.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"4e9f02e491740c4e2922ecf13f4a3002e66899708b655d754d1c4dccdc6b09a6","md5":"9438e86e5d5adac1d7391397f9508b91","sha256":"df5e9bff675719f3172d9fc4147f418c917ccd380255d5a75ddcaba949fd2403"},"downloads":-1,"filename":"yt_dlp-2024.3.14.232657.dev0.tar.gz","has_sig":false,"md5_digest":"9438e86e5d5adac1d7391397f9508b91","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2753979,"upload_time":"2024-03-14T23:33:36","upload_time_iso_8601":"2024-03-14T23:33:36.968180Z","url":"https://files.pythonhosted.org/packages/4e/9f/02e491740c4e2922ecf13f4a3002e66899708b655d754d1c4dccdc6b09a6/yt_dlp-2024.3.14.232657.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.3.17.232657.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"sponsorblock,video-downloader,youtube-dl,youtube-dlc,youtube-downloader,yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":"","maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.3.17.232657.dev0/","requires_dist":["brotli; implementation_name == 'cpython'","brotlicffi; implementation_name != 'cpython'","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == 'build'","hatchling; extra == 'build'","pip; extra == 'build'","wheel; extra == 'build'","curl-cffi==0.5.10; (implementation_name == 'cpython') and extra == 'curl-cffi'","flake8; extra == 'dev'","isort; extra == 'dev'","pytest; extra == 'dev'","py2exe>=0.12; extra == 'py2exe'","pyinstaller>=6.3; extra == 'pyinstaller'","pyinstaller==5.13.2; extra == 'pyinstaller-macos'","cffi; extra == 'secretstorage'","secretstorage; extra == 'secretstorage'"],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2024.3.17.232657.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"6db85badd7dbd8755fb556cc4e7f4f0c478de25a23683ea8c42115eee1c39656","md5":"2920a8a3acfb81cb8302b7c0fe70fc72","sha256":"6fd0e3c8e14da7fc23a3fbeada92e6c75d9a46db21d41606752fc954aab137c9"},"downloads":-1,"filename":"yt_dlp-2024.3.17.232657.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"2920a8a3acfb81cb8302b7c0fe70fc72","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3056414,"upload_time":"2024-03-17T23:34:12","upload_time_iso_8601":"2024-03-17T23:34:12.429892Z","url":"https://files.pythonhosted.org/packages/6d/b8/5badd7dbd8755fb556cc4e7f4f0c478de25a23683ea8c42115eee1c39656/yt_dlp-2024.3.17.232657.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c37ad6f18d4a9b8c712201bdca4b9825c44f79c2ea719f95b2f5f7a86e3fe928","md5":"33e5aebf6f4aa9e31b2976d45fd92a98","sha256":"2748deac2a2c9fbcf5ef520797c251a15a0b0cfe14c346fb1b5539355a9c407f"},"downloads":-1,"filename":"yt_dlp-2024.3.17.232657.dev0.tar.gz","has_sig":false,"md5_digest":"33e5aebf6f4aa9e31b2976d45fd92a98","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2762159,"upload_time":"2024-03-17T23:34:17","upload_time_iso_8601":"2024-03-17T23:34:17.812177Z","url":"https://files.pythonhosted.org/packages/c3/7a/d6f18d4a9b8c712201bdca4b9825c44f79c2ea719f95b2f5f7a86e3fe928/yt_dlp-2024.3.17.232657.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.3.18.232707.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"sponsorblock,video-downloader,youtube-dl,youtube-dlc,youtube-downloader,yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":"","maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.3.18.232707.dev0/","requires_dist":["brotli; implementation_name == 'cpython'","brotlicffi; implementation_name != 'cpython'","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == 'build'","hatchling; extra == 'build'","pip; extra == 'build'","wheel; extra == 'build'","curl-cffi==0.5.10; (implementation_name == 'cpython') and extra == 'curl-cffi'","flake8; extra == 'dev'","isort; extra == 'dev'","pytest; extra == 'dev'","py2exe>=0.12; extra == 'py2exe'","pyinstaller>=6.3; extra == 'pyinstaller'","pyinstaller==5.13.2; extra == 'pyinstaller-macos'","cffi; extra == 'secretstorage'","secretstorage; extra == 'secretstorage'"],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2024.3.18.232707.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"13cd2fbb0e799fa639268f93a26b524e827ec82d95494a26d6e15a362f0f9d83","md5":"ba907cca2fa154401be25b6f04e4abf0","sha256":"ac1e6775ebe400ebbd0aa170b11924c8a2a5f5db5737eda2085fc4f1b9864b9d"},"downloads":-1,"filename":"yt_dlp-2024.3.18.232707.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"ba907cca2fa154401be25b6f04e4abf0","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3056418,"upload_time":"2024-03-19T00:56:02","upload_time_iso_8601":"2024-03-19T00:56:02.727468Z","url":"https://files.pythonhosted.org/packages/13/cd/2fbb0e799fa639268f93a26b524e827ec82d95494a26d6e15a362f0f9d83/yt_dlp-2024.3.18.232707.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"e5e6dd3a98de8400b773746e3504db14556c0604e12bc7a7f4e767c8c8dec240","md5":"6e100fc8031e8efbf6406b3da2138440","sha256":"71d060e96e32a7c91db143091394c4db3bcbece1a915c26ecf5d764e420de7f3"},"downloads":-1,"filename":"yt_dlp-2024.3.18.232707.dev0.tar.gz","has_sig":false,"md5_digest":"6e100fc8031e8efbf6406b3da2138440","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2762268,"upload_time":"2024-03-19T00:56:07","upload_time_iso_8601":"2024-03-19T00:56:07.485064Z","url":"https://files.pythonhosted.org/packages/e5/e6/dd3a98de8400b773746e3504db14556c0604e12bc7a7f4e767c8c8dec240/yt_dlp-2024.3.18.232707.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.3.19.232701.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.3.19.232701.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","flake8; extra == \"dev\"","isort; extra == \"dev\"","pytest; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.3; extra == \"pyinstaller\"","pyinstaller==5.13.2; extra == \"pyinstaller-macos\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.3.19.232701.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"a11b26d220068c86074df9eb2a9406dfde38139588c6b5c3181208cf2364fc14","md5":"39fb9ddecba71037f2ca21ce1bf0607e","sha256":"6e74419b014b49fd6a2b170fa2c8f46533bb8427a706e3f3880b3f8054a4cabf"},"downloads":-1,"filename":"yt_dlp-2024.3.19.232701.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"39fb9ddecba71037f2ca21ce1bf0607e","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3056475,"upload_time":"2024-03-19T23:34:20","upload_time_iso_8601":"2024-03-19T23:34:20.465661Z","url":"https://files.pythonhosted.org/packages/a1/1b/26d220068c86074df9eb2a9406dfde38139588c6b5c3181208cf2364fc14/yt_dlp-2024.3.19.232701.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"603ffb8575c0a72326da0d6b50e989077e55e95519825c8604153a13fbac608d","md5":"f2b5e4451981fefcf4a9d526360c01cc","sha256":"c4f66e99e2ceb0a1375bfd2d51bd8d4e21d6dc1f3ba524f9747148be403893dc"},"downloads":-1,"filename":"yt_dlp-2024.3.19.232701.dev0.tar.gz","has_sig":false,"md5_digest":"f2b5e4451981fefcf4a9d526360c01cc","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2762430,"upload_time":"2024-03-19T23:34:25","upload_time_iso_8601":"2024-03-19T23:34:25.469813Z","url":"https://files.pythonhosted.org/packages/60/3f/fb8575c0a72326da0d6b50e989077e55e95519825c8604153a13fbac608d/yt_dlp-2024.3.19.232701.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.3.2.232720.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"sponsorblock,video-downloader,youtube-dl,youtube-dlc,youtube-downloader,yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":"","maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.3.2.232720.dev0/","requires_dist":["brotli; implementation_name == 'cpython'","brotlicffi; implementation_name != 'cpython'","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == 'build'","hatchling; extra == 'build'","pip; extra == 'build'","wheel; extra == 'build'","flake8; extra == 'dev'","isort; extra == 'dev'","pytest; extra == 'dev'","py2exe>=0.12; extra == 'py2exe'","pyinstaller>=6.3; extra == 'pyinstaller'","cffi; extra == 'secretstorage'","secretstorage; extra == 'secretstorage'"],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2024.3.2.232720.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"c6179cc5061976c55f009b69855ad96577af61e0792890bc15ab5eda101bcb6c","md5":"7719d01de492a58df97bfec07e65ceef","sha256":"1f1ce691097f274c8bc2d8a1dc2301d5320b349b0f19ae123ad0b8b4d5ad6135"},"downloads":-1,"filename":"yt_dlp-2024.3.2.232720.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"7719d01de492a58df97bfec07e65ceef","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3073629,"upload_time":"2024-03-02T23:33:58","upload_time_iso_8601":"2024-03-02T23:33:58.746695Z","url":"https://files.pythonhosted.org/packages/c6/17/9cc5061976c55f009b69855ad96577af61e0792890bc15ab5eda101bcb6c/yt_dlp-2024.3.2.232720.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"d9ca6b278dbc0e567289f5cd054123a7a18921c742c3faabad183a1f138e329e","md5":"3ef746981f9c1e02f0db213df5fea3b8","sha256":"0349e9d4c02be479538d084388fdcab705875d7a1850605b3de7956571700f82"},"downloads":-1,"filename":"yt_dlp-2024.3.2.232720.dev0.tar.gz","has_sig":false,"md5_digest":"3ef746981f9c1e02f0db213df5fea3b8","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2755198,"upload_time":"2024-03-02T23:34:03","upload_time_iso_8601":"2024-03-02T23:34:03.974620Z","url":"https://files.pythonhosted.org/packages/d9/ca/6b278dbc0e567289f5cd054123a7a18921c742c3faabad183a1f138e329e/yt_dlp-2024.3.2.232720.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.3.20.232704.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.3.20.232704.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","flake8; extra == \"dev\"","isort; extra == \"dev\"","pytest; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.3; extra == \"pyinstaller\"","pyinstaller==5.13.2; extra == \"pyinstaller-macos\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.3.20.232704.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"2df3e8b6be114d588a7020a088062f153811dfd9bae7689a4c5d4b7121d84754","md5":"ce9ae3906118a5cfe8071c8b2f52aec0","sha256":"4e8b321884485b98b0a954efd34e210d75ed0f80d5984f47b543dee2caf2a5ef"},"downloads":-1,"filename":"yt_dlp-2024.3.20.232704.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"ce9ae3906118a5cfe8071c8b2f52aec0","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3064078,"upload_time":"2024-03-20T23:33:43","upload_time_iso_8601":"2024-03-20T23:33:43.647147Z","url":"https://files.pythonhosted.org/packages/2d/f3/e8b6be114d588a7020a088062f153811dfd9bae7689a4c5d4b7121d84754/yt_dlp-2024.3.20.232704.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"9174d1359579fe81e62dd017903d3ccf5534c39bd16990162153ae29fab4cb84","md5":"428b6a2dbfb8c063f5f99e68e51b383a","sha256":"3740815341d2f3a5c9d33ce182e07ac59eb68875ea3b90c655486d0609864b68"},"downloads":-1,"filename":"yt_dlp-2024.3.20.232704.dev0.tar.gz","has_sig":false,"md5_digest":"428b6a2dbfb8c063f5f99e68e51b383a","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2768981,"upload_time":"2024-03-20T23:33:47","upload_time_iso_8601":"2024-03-20T23:33:47.897329Z","url":"https://files.pythonhosted.org/packages/91/74/d1359579fe81e62dd017903d3ccf5534c39bd16990162153ae29fab4cb84/yt_dlp-2024.3.20.232704.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.3.22.232703.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.3.22.232703.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","flake8; extra == \"dev\"","isort; extra == \"dev\"","pytest; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.3; extra == \"pyinstaller\"","pyinstaller==5.13.2; extra == \"pyinstaller-macos\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.3.22.232703.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"89c7c2675042d6536e874f93f66217ee35812d7fceab3bb23b31c414f4f2b2aa","md5":"c8d7300b9ef6f8f3f268c808b1d36fc0","sha256":"7efac7a514f8eaa42ba8154ac40326441c07572e5cc63279329b6879cd6a56b5"},"downloads":-1,"filename":"yt_dlp-2024.3.22.232703.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"c8d7300b9ef6f8f3f268c808b1d36fc0","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3065528,"upload_time":"2024-03-22T23:34:15","upload_time_iso_8601":"2024-03-22T23:34:15.805160Z","url":"https://files.pythonhosted.org/packages/89/c7/c2675042d6536e874f93f66217ee35812d7fceab3bb23b31c414f4f2b2aa/yt_dlp-2024.3.22.232703.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"e7fbf27bada6596ae4f2b6a3e5ba58d29eb7b19c91ec92953ca7459e16daf9be","md5":"2a7319673bdcfdb287ae9e00210e1e8f","sha256":"5a035b18397a3908f6d3813e2b365768110090e58b9adb049425e07ef67796f1"},"downloads":-1,"filename":"yt_dlp-2024.3.22.232703.dev0.tar.gz","has_sig":false,"md5_digest":"2a7319673bdcfdb287ae9e00210e1e8f","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2770125,"upload_time":"2024-03-22T23:34:20","upload_time_iso_8601":"2024-03-22T23:34:20.879639Z","url":"https://files.pythonhosted.org/packages/e7/fb/f27bada6596ae4f2b6a3e5ba58d29eb7b19c91ec92953ca7459e16daf9be/yt_dlp-2024.3.22.232703.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.3.29.232706.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.3.29.232706.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","flake8; extra == \"dev\"","isort; extra == \"dev\"","pytest; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller==5.13.2; sys_platform == \"darwin\" and extra == \"pyinstaller\"","pyinstaller>=6.3; sys_platform != \"darwin\" and extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.3.29.232706.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"8b54b6af01899ac9d676da868d246d444142b2db2414a83adbb88ea6794f40c8","md5":"633963a0ce7b7082fc0e9bb8b766aea4","sha256":"609b6fe0623ac71158fdf404e3b593c2ce9270448cc792ea38cd119d51b8d0d4"},"downloads":-1,"filename":"yt_dlp-2024.3.29.232706.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"633963a0ce7b7082fc0e9bb8b766aea4","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3066612,"upload_time":"2024-03-29T23:34:06","upload_time_iso_8601":"2024-03-29T23:34:06.982698Z","url":"https://files.pythonhosted.org/packages/8b/54/b6af01899ac9d676da868d246d444142b2db2414a83adbb88ea6794f40c8/yt_dlp-2024.3.29.232706.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"25d961124fafd1d615b4c0c1c2104293efa966cee4c85c43a930e5554d3f203c","md5":"e39c85a56294779aed751a82ed7ca935","sha256":"64f6dd9b073746d97ed8a431ceb8fc45ca132d98210bedeeced43deacfcbe157"},"downloads":-1,"filename":"yt_dlp-2024.3.29.232706.dev0.tar.gz","has_sig":false,"md5_digest":"e39c85a56294779aed751a82ed7ca935","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2771290,"upload_time":"2024-03-29T23:34:11","upload_time_iso_8601":"2024-03-29T23:34:11.887347Z","url":"https://files.pythonhosted.org/packages/25/d9/61124fafd1d615b4c0c1c2104293efa966cee4c85c43a930e5554d3f203c/yt_dlp-2024.3.29.232706.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.3.3.232706.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"sponsorblock,video-downloader,youtube-dl,youtube-dlc,youtube-downloader,yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":"","maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.3.3.232706.dev0/","requires_dist":["brotli; implementation_name == 'cpython'","brotlicffi; implementation_name != 'cpython'","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == 'build'","hatchling; extra == 'build'","pip; extra == 'build'","wheel; extra == 'build'","flake8; extra == 'dev'","isort; extra == 'dev'","pytest; extra == 'dev'","py2exe>=0.12; extra == 'py2exe'","pyinstaller>=6.3; extra == 'pyinstaller'","cffi; extra == 'secretstorage'","secretstorage; extra == 'secretstorage'"],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2024.3.3.232706.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"68295224c85da7e3a482980f5d1b0bdcc488c7ea1606d75e0f4ff67f4e830a97","md5":"18af3bdc9eff309b9eb70e8f490c0a37","sha256":"f64758c574688f466a1509c030ea29f49970364a205f9d0f77c21dd93807c80c"},"downloads":-1,"filename":"yt_dlp-2024.3.3.232706.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"18af3bdc9eff309b9eb70e8f490c0a37","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3073502,"upload_time":"2024-03-03T23:33:33","upload_time_iso_8601":"2024-03-03T23:33:33.005918Z","url":"https://files.pythonhosted.org/packages/68/29/5224c85da7e3a482980f5d1b0bdcc488c7ea1606d75e0f4ff67f4e830a97/yt_dlp-2024.3.3.232706.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"094151896b5a2d317dbd7d6a22c20a0e77a3c2a85cd5fd852f6eefef3f916db7","md5":"54274cea86b758df23ee01ff8c14f08f","sha256":"7f9e019bd56600989171efc181d51c10bf7bd60159b4534a9abaad3fe0daff35"},"downloads":-1,"filename":"yt_dlp-2024.3.3.232706.dev0.tar.gz","has_sig":false,"md5_digest":"54274cea86b758df23ee01ff8c14f08f","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2755119,"upload_time":"2024-03-03T23:33:38","upload_time_iso_8601":"2024-03-03T23:33:38.111657Z","url":"https://files.pythonhosted.org/packages/09/41/51896b5a2d317dbd7d6a22c20a0e77a3c2a85cd5fd852f6eefef3f916db7/yt_dlp-2024.3.3.232706.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.3.30.232704.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.3.30.232704.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","flake8; extra == \"dev\"","isort; extra == \"dev\"","pytest; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller==5.13.2; sys_platform == \"darwin\" and extra == \"pyinstaller\"","pyinstaller>=6.3; sys_platform != \"darwin\" and extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.3.30.232704.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"b83d6911f19145c9367a552d447e80a023d82507bab68bcbde91eef0d5db40f9","md5":"5e576f8ba2caea3fb20b74e20c68499f","sha256":"8687e62f043a01b91f0ee57a26db78337c7d5e229515954fff8e76b18e30c828"},"downloads":-1,"filename":"yt_dlp-2024.3.30.232704.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"5e576f8ba2caea3fb20b74e20c68499f","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3067752,"upload_time":"2024-03-30T23:34:41","upload_time_iso_8601":"2024-03-30T23:34:41.912827Z","url":"https://files.pythonhosted.org/packages/b8/3d/6911f19145c9367a552d447e80a023d82507bab68bcbde91eef0d5db40f9/yt_dlp-2024.3.30.232704.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"876360f25f842817a9868c3b80a73c5d432b7a7e3d0976e79ce488adc6b31795","md5":"3cba8039991d2a733697e5acbed433f0","sha256":"9d1044690edc103789d22dcba66960b7b6ea7cbf083ff782ed11d9c0264ebb89"},"downloads":-1,"filename":"yt_dlp-2024.3.30.232704.dev0.tar.gz","has_sig":false,"md5_digest":"3cba8039991d2a733697e5acbed433f0","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2773078,"upload_time":"2024-03-30T23:34:46","upload_time_iso_8601":"2024-03-30T23:34:46.844030Z","url":"https://files.pythonhosted.org/packages/87/63/60f25f842817a9868c3b80a73c5d432b7a7e3d0976e79ce488adc6b31795/yt_dlp-2024.3.30.232704.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.3.31.232706.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.3.31.232706.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","flake8; extra == \"dev\"","isort; extra == \"dev\"","pytest; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller==5.13.2; sys_platform == \"darwin\" and extra == \"pyinstaller\"","pyinstaller>=6.3; sys_platform != \"darwin\" and extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.3.31.232706.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"5bc8277a399ae0e28ebc583185c1245514f5d5075f05c88f7f43edb525e03c40","md5":"bf0f8fcecdbbfa90e4aadc56d00cc2fe","sha256":"e718437d32f109d0ce73d99ff6cbfd5e1bbb9c78577f67b99efdd29c7c4b7a02"},"downloads":-1,"filename":"yt_dlp-2024.3.31.232706.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"bf0f8fcecdbbfa90e4aadc56d00cc2fe","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3067959,"upload_time":"2024-03-31T23:34:04","upload_time_iso_8601":"2024-03-31T23:34:04.713379Z","url":"https://files.pythonhosted.org/packages/5b/c8/277a399ae0e28ebc583185c1245514f5d5075f05c88f7f43edb525e03c40/yt_dlp-2024.3.31.232706.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"500681d3b376cb1a762ce2b5380fc968ee42ac786fbb51c6ad3efd5008a386b6","md5":"0fa09d215de5b459cf9cfdf4c1e10264","sha256":"433b7755c05f3476daf007948d854502022881c325d12d488bcd34f68870235b"},"downloads":-1,"filename":"yt_dlp-2024.3.31.232706.dev0.tar.gz","has_sig":false,"md5_digest":"0fa09d215de5b459cf9cfdf4c1e10264","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2773528,"upload_time":"2024-03-31T23:34:09","upload_time_iso_8601":"2024-03-31T23:34:09.428860Z","url":"https://files.pythonhosted.org/packages/50/06/81d3b376cb1a762ce2b5380fc968ee42ac786fbb51c6ad3efd5008a386b6/yt_dlp-2024.3.31.232706.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.3.4.232716.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"sponsorblock,video-downloader,youtube-dl,youtube-dlc,youtube-downloader,yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":"","maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.3.4.232716.dev0/","requires_dist":["brotli; implementation_name == 'cpython'","brotlicffi; implementation_name != 'cpython'","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == 'build'","hatchling; extra == 'build'","pip; extra == 'build'","wheel; extra == 'build'","flake8; extra == 'dev'","isort; extra == 'dev'","pytest; extra == 'dev'","py2exe>=0.12; extra == 'py2exe'","pyinstaller>=6.3; extra == 'pyinstaller'","cffi; extra == 'secretstorage'","secretstorage; extra == 'secretstorage'"],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2024.3.4.232716.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"c46cc87eae4d89b77c124e4837b3b0a73e1744b7b7fb21e634844975466657d8","md5":"36f4a431ce136c13666cc65398d5469f","sha256":"1c21e46ce06b2256af52d3a0800e7e75b9855614925512856f213a4af88b4656"},"downloads":-1,"filename":"yt_dlp-2024.3.4.232716.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"36f4a431ce136c13666cc65398d5469f","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3074024,"upload_time":"2024-03-04T23:34:00","upload_time_iso_8601":"2024-03-04T23:34:00.759273Z","url":"https://files.pythonhosted.org/packages/c4/6c/c87eae4d89b77c124e4837b3b0a73e1744b7b7fb21e634844975466657d8/yt_dlp-2024.3.4.232716.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"7ed796449da7abe17d1cd1318805ebbc6eac77d711640cb7550110db972a9406","md5":"d4a699135204e542ae57ac22a6b6b3f8","sha256":"bb3a26a84ec31dc0fb6f90c4178feb3f1a85a79b3dbb4dea067bd4631f0fd645"},"downloads":-1,"filename":"yt_dlp-2024.3.4.232716.dev0.tar.gz","has_sig":false,"md5_digest":"d4a699135204e542ae57ac22a6b6b3f8","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2755656,"upload_time":"2024-03-04T23:34:06","upload_time_iso_8601":"2024-03-04T23:34:06.798614Z","url":"https://files.pythonhosted.org/packages/7e/d7/96449da7abe17d1cd1318805ebbc6eac77d711640cb7550110db972a9406/yt_dlp-2024.3.4.232716.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.3.6.232659.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"sponsorblock,video-downloader,youtube-dl,youtube-dlc,youtube-downloader,yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":"","maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.3.6.232659.dev0/","requires_dist":["brotli; implementation_name == 'cpython'","brotlicffi; implementation_name != 'cpython'","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == 'build'","hatchling; extra == 'build'","pip; extra == 'build'","wheel; extra == 'build'","flake8; extra == 'dev'","isort; extra == 'dev'","pytest; extra == 'dev'","py2exe>=0.12; extra == 'py2exe'","pyinstaller>=6.3; extra == 'pyinstaller'","cffi; extra == 'secretstorage'","secretstorage; extra == 'secretstorage'"],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2024.3.6.232659.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"6ed7a4023f8e99ba54eb399dd3a713c2a21e9e1400cf247e0d2fc06cbf69bc36","md5":"dcd126b66d5c5197ffc5feb5424eae45","sha256":"b913fd71c483f6b2983b92e4a21028695799b9eab56b743fe999ce00fa59be94"},"downloads":-1,"filename":"yt_dlp-2024.3.6.232659.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"dcd126b66d5c5197ffc5feb5424eae45","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3075645,"upload_time":"2024-03-06T23:33:41","upload_time_iso_8601":"2024-03-06T23:33:41.087462Z","url":"https://files.pythonhosted.org/packages/6e/d7/a4023f8e99ba54eb399dd3a713c2a21e9e1400cf247e0d2fc06cbf69bc36/yt_dlp-2024.3.6.232659.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"643f69dd71a1aaa9e1a86f3381826d3d8ca6956e6d4e9e34aed962199e3a5d53","md5":"281cf76d541ef438257f272926c4cce6","sha256":"df511c8578608404133711b538d1b4a2f28c0229c002d76d1cd7680cc87a7217"},"downloads":-1,"filename":"yt_dlp-2024.3.6.232659.dev0.tar.gz","has_sig":false,"md5_digest":"281cf76d541ef438257f272926c4cce6","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2756747,"upload_time":"2024-03-06T23:33:46","upload_time_iso_8601":"2024-03-06T23:33:46.267781Z","url":"https://files.pythonhosted.org/packages/64/3f/69dd71a1aaa9e1a86f3381826d3d8ca6956e6d4e9e34aed962199e3a5d53/yt_dlp-2024.3.6.232659.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.3.7.232716.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"sponsorblock,video-downloader,youtube-dl,youtube-dlc,youtube-downloader,yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":"","maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.3.7.232716.dev0/","requires_dist":["brotli; implementation_name == 'cpython'","brotlicffi; implementation_name != 'cpython'","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == 'build'","hatchling; extra == 'build'","pip; extra == 'build'","wheel; extra == 'build'","flake8; extra == 'dev'","isort; extra == 'dev'","pytest; extra == 'dev'","py2exe>=0.12; extra == 'py2exe'","pyinstaller>=6.3; extra == 'pyinstaller'","cffi; extra == 'secretstorage'","secretstorage; extra == 'secretstorage'"],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2024.3.7.232716.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"d16849e39d3a2d95dd8e65671d1ff11aafc2b260a4f69fb11b00c027fa541743","md5":"2259c8c2397671b84b1d8ae5cf0d911a","sha256":"e1dd8e160ed2a6afc36d39dab60bf10ca6b96f2bcc84277b989d2fb37facd34d"},"downloads":-1,"filename":"yt_dlp-2024.3.7.232716.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"2259c8c2397671b84b1d8ae5cf0d911a","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3076594,"upload_time":"2024-03-07T23:33:47","upload_time_iso_8601":"2024-03-07T23:33:47.571988Z","url":"https://files.pythonhosted.org/packages/d1/68/49e39d3a2d95dd8e65671d1ff11aafc2b260a4f69fb11b00c027fa541743/yt_dlp-2024.3.7.232716.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"774d12bbbb93478851591f5641dedf459a9fd1165fce9785cfb9d6d25c903100","md5":"355c2e0a6e926f28f2b252301e527d1b","sha256":"e34764c21424c80c94a2112acee9820fc720abb1113215ccf75aaf35558b03e4"},"downloads":-1,"filename":"yt_dlp-2024.3.7.232716.dev0.tar.gz","has_sig":false,"md5_digest":"355c2e0a6e926f28f2b252301e527d1b","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2757498,"upload_time":"2024-03-07T23:33:55","upload_time_iso_8601":"2024-03-07T23:33:55.427081Z","url":"https://files.pythonhosted.org/packages/77/4d/12bbbb93478851591f5641dedf459a9fd1165fce9785cfb9d6d25c903100/yt_dlp-2024.3.7.232716.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.3.8.232718.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"sponsorblock,video-downloader,youtube-dl,youtube-dlc,youtube-downloader,yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":"","maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.3.8.232718.dev0/","requires_dist":["brotli; implementation_name == 'cpython'","brotlicffi; implementation_name != 'cpython'","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == 'build'","hatchling; extra == 'build'","pip; extra == 'build'","wheel; extra == 'build'","flake8; extra == 'dev'","isort; extra == 'dev'","pytest; extra == 'dev'","py2exe>=0.12; extra == 'py2exe'","pyinstaller>=6.3; extra == 'pyinstaller'","cffi; extra == 'secretstorage'","secretstorage; extra == 'secretstorage'"],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2024.3.8.232718.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"edb4f9f625a2ee500f39e7cea5f494c00b3e3c27e322c782e8a0380793ace665","md5":"c8fa7dc15b4496117a5001482bda137d","sha256":"2e0ee4bc26873b4fafe3236dfbaeb0f1abb1f556fcc69b4c0741ef3f8da91ca1"},"downloads":-1,"filename":"yt_dlp-2024.3.8.232718.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"c8fa7dc15b4496117a5001482bda137d","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3077506,"upload_time":"2024-03-08T23:33:52","upload_time_iso_8601":"2024-03-08T23:33:52.171825Z","url":"https://files.pythonhosted.org/packages/ed/b4/f9f625a2ee500f39e7cea5f494c00b3e3c27e322c782e8a0380793ace665/yt_dlp-2024.3.8.232718.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"077889e067adacebf865749269e45891a0c739df22c383d62a7783983261ce31","md5":"18a32e67322e28ff29141158761ddec1","sha256":"d82904ba86ae5fa002924ec497633e1ae6f739c3a2c2b23cc61ba581eef7a649"},"downloads":-1,"filename":"yt_dlp-2024.3.8.232718.dev0.tar.gz","has_sig":false,"md5_digest":"18a32e67322e28ff29141158761ddec1","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2758273,"upload_time":"2024-03-08T23:33:56","upload_time_iso_8601":"2024-03-08T23:33:56.259465Z","url":"https://files.pythonhosted.org/packages/07/78/89e067adacebf865749269e45891a0c739df22c383d62a7783983261ce31/yt_dlp-2024.3.8.232718.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.3.9.232714.dev0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"sponsorblock,video-downloader,youtube-dl,youtube-dlc,youtube-downloader,yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":"","maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.3.9.232714.dev0/","requires_dist":["brotli; implementation_name == 'cpython'","brotlicffi; implementation_name != 'cpython'","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == 'build'","hatchling; extra == 'build'","pip; extra == 'build'","wheel; extra == 'build'","flake8; extra == 'dev'","isort; extra == 'dev'","pytest; extra == 'dev'","py2exe>=0.12; extra == 'py2exe'","pyinstaller>=6.3; extra == 'pyinstaller'","cffi; extra == 'secretstorage'","secretstorage; extra == 'secretstorage'"],"requires_python":">=3.8","summary":"A youtube-dl fork with additional features and patches","version":"2024.3.9.232714.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"86ba971d88ad2a27be8a1f3ef65084c0e60742224e1b2e2094b7506147d51eb7","md5":"b8c55f7523afde0df7e9f34de941b759","sha256":"f3b3eb2b00343b8e7ba830e3e2d52137db4bcfbf7c16db22c57c50a49f07a409"},"downloads":-1,"filename":"yt_dlp-2024.3.9.232714.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"b8c55f7523afde0df7e9f34de941b759","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3049227,"upload_time":"2024-03-09T23:34:26","upload_time_iso_8601":"2024-03-09T23:34:26.018193Z","url":"https://files.pythonhosted.org/packages/86/ba/971d88ad2a27be8a1f3ef65084c0e60742224e1b2e2094b7506147d51eb7/yt_dlp-2024.3.9.232714.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"4f7580126aa5a0dfe12abb5e56611c50994e1e3fa9464ab4e63370b3b357eff5","md5":"a231578fd0d80b99f5b262a6784488fc","sha256":"cda83090a4a778618184248c99dbe13dd8e44d7f1ffec5f019fa863bfb552519"},"downloads":-1,"filename":"yt_dlp-2024.3.9.232714.dev0.tar.gz","has_sig":false,"md5_digest":"a231578fd0d80b99f5b262a6784488fc","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2741468,"upload_time":"2024-03-09T23:34:30","upload_time_iso_8601":"2024-03-09T23:34:30.895096Z","url":"https://files.pythonhosted.org/packages/4f/75/80126aa5a0dfe12abb5e56611c50994e1e3fa9464ab4e63370b3b357eff5/yt_dlp-2024.3.9.232714.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.4.1.232704.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.4.1.232704.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","flake8; extra == \"dev\"","isort; extra == \"dev\"","pytest; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller==5.13.2; sys_platform == \"darwin\" and extra == \"pyinstaller\"","pyinstaller>=6.3; sys_platform != \"darwin\" and extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.4.1.232704.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"01abf362284fd9e6cb475b3cadb998c15977409121a6df84aa3225bcb3172ac0","md5":"705549b00a216f4f65398bddf670f5d3","sha256":"80ce5e41d97172f0cd44aedd9212f6bfdeebb32035c63068737745866331b4bf"},"downloads":-1,"filename":"yt_dlp-2024.4.1.232704.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"705549b00a216f4f65398bddf670f5d3","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3071149,"upload_time":"2024-04-01T23:36:10","upload_time_iso_8601":"2024-04-01T23:36:10.008981Z","url":"https://files.pythonhosted.org/packages/01/ab/f362284fd9e6cb475b3cadb998c15977409121a6df84aa3225bcb3172ac0/yt_dlp-2024.4.1.232704.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"297e936f468700d556d35bc0df1a7cae77aa3e15090cfbc114428a0bb52d2cf0","md5":"4bb5770ec88941a571ed9958013a8679","sha256":"f66834119aabc847f778af7da28fc7bcda3e25d1107846a6daeca9ec2f9bb452"},"downloads":-1,"filename":"yt_dlp-2024.4.1.232704.dev0.tar.gz","has_sig":false,"md5_digest":"4bb5770ec88941a571ed9958013a8679","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2776773,"upload_time":"2024-04-01T23:36:15","upload_time_iso_8601":"2024-04-01T23:36:15.220003Z","url":"https://files.pythonhosted.org/packages/29/7e/936f468700d556d35bc0df1a7cae77aa3e15090cfbc114428a0bb52d2cf0/yt_dlp-2024.4.1.232704.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.4.13.232802.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.4.13.232802.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","flake8; extra == \"dev\"","isort; extra == \"dev\"","pytest; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller==5.13.2; sys_platform == \"darwin\" and extra == \"pyinstaller\"","pyinstaller>=6.3; sys_platform != \"darwin\" and extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.4.13.232802.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"610cee36d9ee3f317fed870e9f27fe65745e6c7354e9ec31359ea8fc618ff403","md5":"c4976c14f124ef6633ddbe4d9c3ee699","sha256":"ffa1281d9dedbc419cd0dc182ad6bf7c5aecbc0568326e957334ff66bc04dcbb"},"downloads":-1,"filename":"yt_dlp-2024.4.13.232802.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"c4976c14f124ef6633ddbe4d9c3ee699","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3075865,"upload_time":"2024-04-13T23:35:10","upload_time_iso_8601":"2024-04-13T23:35:10.378570Z","url":"https://files.pythonhosted.org/packages/61/0c/ee36d9ee3f317fed870e9f27fe65745e6c7354e9ec31359ea8fc618ff403/yt_dlp-2024.4.13.232802.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"e241eb9af7382299d54e51753b3d9f3848e22f7b4875b44ecb545db3f1c1ed86","md5":"58fb6dc29ed54285fa6271240255bbb6","sha256":"a3897d60ad105adbfe797c7a05edcb9ce99ba1e74c4d02cd2f51e5d7e963f122"},"downloads":-1,"filename":"yt_dlp-2024.4.13.232802.dev0.tar.gz","has_sig":false,"md5_digest":"58fb6dc29ed54285fa6271240255bbb6","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2783632,"upload_time":"2024-04-13T23:35:14","upload_time_iso_8601":"2024-04-13T23:35:14.728333Z","url":"https://files.pythonhosted.org/packages/e2/41/eb9af7382299d54e51753b3d9f3848e22f7b4875b44ecb545db3f1c1ed86/yt_dlp-2024.4.13.232802.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.4.18.232703.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.4.18.232703.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","flake8; extra == \"dev\"","isort; extra == \"dev\"","pytest; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller==5.13.2; sys_platform == \"darwin\" and extra == \"pyinstaller\"","pyinstaller>=6.3; sys_platform != \"darwin\" and extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.4.18.232703.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"79c7862993affe0d7e30a04f6eccbb667c03827c42c6ca6e13e36ab1a521dd2e","md5":"6c22dca66207cf59a5dd871296a8e749","sha256":"a760393d81d23f3038c6edb93c36021ce4cd8431a8440cdb6a128c9750574400"},"downloads":-1,"filename":"yt_dlp-2024.4.18.232703.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"6c22dca66207cf59a5dd871296a8e749","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3076148,"upload_time":"2024-04-18T23:34:15","upload_time_iso_8601":"2024-04-18T23:34:15.088888Z","url":"https://files.pythonhosted.org/packages/79/c7/862993affe0d7e30a04f6eccbb667c03827c42c6ca6e13e36ab1a521dd2e/yt_dlp-2024.4.18.232703.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"b5b498b89ae3f7459ca32ee741708d70b988850259643998be0a905c628a2ab3","md5":"1e799e02dd0ab7a244e6c5e3e8d985ed","sha256":"84bc9ba2273a765d03e4ada84b9fef8c9d6e7243502a3eaf612c2c99e9263f09"},"downloads":-1,"filename":"yt_dlp-2024.4.18.232703.dev0.tar.gz","has_sig":false,"md5_digest":"1e799e02dd0ab7a244e6c5e3e8d985ed","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2784071,"upload_time":"2024-04-18T23:34:19","upload_time_iso_8601":"2024-04-18T23:34:19.355466Z","url":"https://files.pythonhosted.org/packages/b5/b4/98b89ae3f7459ca32ee741708d70b988850259643998be0a905c628a2ab3/yt_dlp-2024.4.18.232703.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.4.20.232659.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.4.20.232659.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","flake8; extra == \"dev\"","isort; extra == \"dev\"","pytest; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller==5.13.2; sys_platform == \"darwin\" and extra == \"pyinstaller\"","pyinstaller>=6.3; sys_platform != \"darwin\" and extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.4.20.232659.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"ecd87b06f982c90c104b456229a42d454f535146f29ded04b375a1e8ed4de254","md5":"ff8e88f506e0b6fd755b9e4db5f128c2","sha256":"a4027baaec891c7f67f67c1103aeaffe1b47343e7b8885ab8a5885f783967242"},"downloads":-1,"filename":"yt_dlp-2024.4.20.232659.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"ff8e88f506e0b6fd755b9e4db5f128c2","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3076163,"upload_time":"2024-04-20T23:37:22","upload_time_iso_8601":"2024-04-20T23:37:22.534949Z","url":"https://files.pythonhosted.org/packages/ec/d8/7b06f982c90c104b456229a42d454f535146f29ded04b375a1e8ed4de254/yt_dlp-2024.4.20.232659.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f84cecd4d0f2f4bc8a63d5572652593e0470c8eee8f7d9e1b142f2210af3645f","md5":"79809ca037e004e78b45d24b4a2e75b5","sha256":"7deb8a2e751248f922985b119abf49789422cda0494f19a2c5b1d980eecbf453"},"downloads":-1,"filename":"yt_dlp-2024.4.20.232659.dev0.tar.gz","has_sig":false,"md5_digest":"79809ca037e004e78b45d24b4a2e75b5","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2784129,"upload_time":"2024-04-20T23:37:27","upload_time_iso_8601":"2024-04-20T23:37:27.767035Z","url":"https://files.pythonhosted.org/packages/f8/4c/ecd4d0f2f4bc8a63d5572652593e0470c8eee8f7d9e1b142f2210af3645f/yt_dlp-2024.4.20.232659.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.4.21.232710.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.4.21.232710.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","flake8; extra == \"dev\"","isort; extra == \"dev\"","pytest; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller==5.13.2; sys_platform == \"darwin\" and extra == \"pyinstaller\"","pyinstaller>=6.3; sys_platform != \"darwin\" and extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.4.21.232710.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"da4b81266d683eed7145c9b1813b18e211369e2141000946dbe5843f49368a2b","md5":"f9eda251ef71f29f57b74fa6a1315e42","sha256":"a66e6541dd5a9bc2ad12c83638a9a67727fb75a52e9337358c0bfa329e4f2dd1"},"downloads":-1,"filename":"yt_dlp-2024.4.21.232710.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"f9eda251ef71f29f57b74fa6a1315e42","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3076248,"upload_time":"2024-04-21T23:34:44","upload_time_iso_8601":"2024-04-21T23:34:44.443528Z","url":"https://files.pythonhosted.org/packages/da/4b/81266d683eed7145c9b1813b18e211369e2141000946dbe5843f49368a2b/yt_dlp-2024.4.21.232710.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"ba2736bef4d2fbb46b45820300639db6d79c4e9b13a782f1d6de4ced482a345f","md5":"f986269599d18f8596867838d7cd86a7","sha256":"9fda03ecfe71878f87c96ce295d409322fe2a92f846b657d6a9f26331ea8c7e2"},"downloads":-1,"filename":"yt_dlp-2024.4.21.232710.dev0.tar.gz","has_sig":false,"md5_digest":"f986269599d18f8596867838d7cd86a7","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2784586,"upload_time":"2024-04-21T23:34:49","upload_time_iso_8601":"2024-04-21T23:34:49.451025Z","url":"https://files.pythonhosted.org/packages/ba/27/36bef4d2fbb46b45820300639db6d79c4e9b13a782f1d6de4ced482a345f/yt_dlp-2024.4.21.232710.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.4.28.232723.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.4.28.232723.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","flake8; extra == \"dev\"","isort; extra == \"dev\"","pytest; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller==5.13.2; sys_platform == \"darwin\" and extra == \"pyinstaller\"","pyinstaller>=6.3; sys_platform != \"darwin\" and extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.4.28.232723.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"d98bfa92ac88e33bb44608bd5fdbf52387747944177e0ba0e0c26504e7b1aa67","md5":"b97df979b0e0a8dcd9199f808238611c","sha256":"6553780a65314c5b388da9475d792aa3a983e79b048b6b8600e1d41d60f651af"},"downloads":-1,"filename":"yt_dlp-2024.4.28.232723.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"b97df979b0e0a8dcd9199f808238611c","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3076239,"upload_time":"2024-04-28T23:34:25","upload_time_iso_8601":"2024-04-28T23:34:25.186530Z","url":"https://files.pythonhosted.org/packages/d9/8b/fa92ac88e33bb44608bd5fdbf52387747944177e0ba0e0c26504e7b1aa67/yt_dlp-2024.4.28.232723.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"72c57e1a0949e7051a9c44ab6a494a6dd414bf59e64bb9693216973d8b7d72ff","md5":"e5c7380303bebf29ba77bb37186ce431","sha256":"54ad09f922c27f72e74184c052b746d935146b3f3ae47a6a18220f626bc40294"},"downloads":-1,"filename":"yt_dlp-2024.4.28.232723.dev0.tar.gz","has_sig":false,"md5_digest":"e5c7380303bebf29ba77bb37186ce431","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2785056,"upload_time":"2024-04-28T23:34:29","upload_time_iso_8601":"2024-04-28T23:34:29.891470Z","url":"https://files.pythonhosted.org/packages/72/c5/7e1a0949e7051a9c44ab6a494a6dd414bf59e64bb9693216973d8b7d72ff/yt_dlp-2024.4.28.232723.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.4.3.233315.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.4.3.233315.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","flake8; extra == \"dev\"","isort; extra == \"dev\"","pytest; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller==5.13.2; sys_platform == \"darwin\" and extra == \"pyinstaller\"","pyinstaller>=6.3; sys_platform != \"darwin\" and extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.4.3.233315.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"775485979bcf37ce21604a643f7d5bc1293e47d10943a42f506eae18fc059ef0","md5":"d1edb9d992a9ec5bf8f883fcbf522b18","sha256":"b03401f3a1edc325bc35119970a7e5608a2ca81acfed1b7bf8ff45faba277732"},"downloads":-1,"filename":"yt_dlp-2024.4.3.233315.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"d1edb9d992a9ec5bf8f883fcbf522b18","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3072333,"upload_time":"2024-04-03T23:49:19","upload_time_iso_8601":"2024-04-03T23:49:19.065111Z","url":"https://files.pythonhosted.org/packages/77/54/85979bcf37ce21604a643f7d5bc1293e47d10943a42f506eae18fc059ef0/yt_dlp-2024.4.3.233315.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"745268228e16ff6c748229682306118bdd516395e746ff4ed15ca15b590f3298","md5":"5f62dd89191fa13bc63a20fa13e3141f","sha256":"8f3d737f31fdfad19155c502248b8bce04a8b260e9e0be715a529ee7b8a65806"},"downloads":-1,"filename":"yt_dlp-2024.4.3.233315.dev0.tar.gz","has_sig":false,"md5_digest":"5f62dd89191fa13bc63a20fa13e3141f","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2778321,"upload_time":"2024-04-03T23:49:24","upload_time_iso_8601":"2024-04-03T23:49:24.350354Z","url":"https://files.pythonhosted.org/packages/74/52/68228e16ff6c748229682306118bdd516395e746ff4ed15ca15b590f3298/yt_dlp-2024.4.3.233315.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.4.4.232729.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.4.4.232729.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","flake8; extra == \"dev\"","isort; extra == \"dev\"","pytest; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller==5.13.2; sys_platform == \"darwin\" and extra == \"pyinstaller\"","pyinstaller>=6.3; sys_platform != \"darwin\" and extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.4.4.232729.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"8bbdd3fb71c89a48c84a610d3b06ea0a229876891865326bba664579d2742067","md5":"0cbd1bd67188b9ad4bcd6703e410d593","sha256":"34bcaf9726bd87df3dc0f50963327e8f28959ae5bd7e05aae1d1e5385effc88f"},"downloads":-1,"filename":"yt_dlp-2024.4.4.232729.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"0cbd1bd67188b9ad4bcd6703e410d593","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3073342,"upload_time":"2024-04-04T23:35:03","upload_time_iso_8601":"2024-04-04T23:35:03.188900Z","url":"https://files.pythonhosted.org/packages/8b/bd/d3fb71c89a48c84a610d3b06ea0a229876891865326bba664579d2742067/yt_dlp-2024.4.4.232729.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"6eb4bb8760dc21b87592d2295ecc5978fefcd9221ea074011261cb81bc8e56aa","md5":"a91bf0f714aa3bff1398401a72df809d","sha256":"2e1e0f9d51ecff78394494d9aee675c7ab3e5ecca1098b4bbe507e1470baf92f"},"downloads":-1,"filename":"yt_dlp-2024.4.4.232729.dev0.tar.gz","has_sig":false,"md5_digest":"a91bf0f714aa3bff1398401a72df809d","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2779367,"upload_time":"2024-04-04T23:35:08","upload_time_iso_8601":"2024-04-04T23:35:08.694386Z","url":"https://files.pythonhosted.org/packages/6e/b4/bb8760dc21b87592d2295ecc5978fefcd9221ea074011261cb81bc8e56aa/yt_dlp-2024.4.4.232729.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.4.6.232655.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.4.6.232655.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","flake8; extra == \"dev\"","isort; extra == \"dev\"","pytest; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller==5.13.2; sys_platform == \"darwin\" and extra == \"pyinstaller\"","pyinstaller>=6.3; sys_platform != \"darwin\" and extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.4.6.232655.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"360e69abcd113839c1aeed79ca3002d28e6c4e670b9554cf63e5c3b931dff448","md5":"31ddf843c1d9c4a65c3600d73a020bd7","sha256":"dc01032c1e816d47482e0a6c9142e0e7110004799e5d29bd94cf014c28fed447"},"downloads":-1,"filename":"yt_dlp-2024.4.6.232655.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"31ddf843c1d9c4a65c3600d73a020bd7","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3072525,"upload_time":"2024-04-06T23:33:51","upload_time_iso_8601":"2024-04-06T23:33:51.137759Z","url":"https://files.pythonhosted.org/packages/36/0e/69abcd113839c1aeed79ca3002d28e6c4e670b9554cf63e5c3b931dff448/yt_dlp-2024.4.6.232655.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"a0beb7cb4fc747d070a6dc2c649dd9e3de365fa90dc950f116c35003ba22e1e1","md5":"26d8b8102ceed561953325e8b407b51d","sha256":"fb56aea9ca27a7fb6c546a78504fb15e26cf6c6f8fc0bdf664732b59445ffff6"},"downloads":-1,"filename":"yt_dlp-2024.4.6.232655.dev0.tar.gz","has_sig":false,"md5_digest":"26d8b8102ceed561953325e8b407b51d","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2778572,"upload_time":"2024-04-06T23:33:55","upload_time_iso_8601":"2024-04-06T23:33:55.424502Z","url":"https://files.pythonhosted.org/packages/a0/be/b7cb4fc747d070a6dc2c649dd9e3de365fa90dc950f116c35003ba22e1e1/yt_dlp-2024.4.6.232655.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.4.7.232657.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.4.7.232657.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","flake8; extra == \"dev\"","isort; extra == \"dev\"","pytest; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller==5.13.2; sys_platform == \"darwin\" and extra == \"pyinstaller\"","pyinstaller>=6.3; sys_platform != \"darwin\" and extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.4.7.232657.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"7d43102780f1859b3e87e46b62f9ba2ccdc5b2cb10e00d3c9acffaa7e4ef3119","md5":"a946d58921f87c0e77a3802bbe0ffe3e","sha256":"775c6955449885c6a30bfb8f93cf1243e44d2367896ddf9ab1eaa917a9849afc"},"downloads":-1,"filename":"yt_dlp-2024.4.7.232657.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"a946d58921f87c0e77a3802bbe0ffe3e","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3074418,"upload_time":"2024-04-07T23:34:17","upload_time_iso_8601":"2024-04-07T23:34:17.442103Z","url":"https://files.pythonhosted.org/packages/7d/43/102780f1859b3e87e46b62f9ba2ccdc5b2cb10e00d3c9acffaa7e4ef3119/yt_dlp-2024.4.7.232657.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"99fd0ec9d18c7f69fd9b1f0feb4d21aa02874b65234e9768faeb0692d75cda8e","md5":"6bb1c323966218ce011fb04478265bf4","sha256":"f4eb924194f2c3951a6e961d832b76c80e7cfc27f087047d0075ae53bf498bb0"},"downloads":-1,"filename":"yt_dlp-2024.4.7.232657.dev0.tar.gz","has_sig":false,"md5_digest":"6bb1c323966218ce011fb04478265bf4","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2781017,"upload_time":"2024-04-07T23:34:22","upload_time_iso_8601":"2024-04-07T23:34:22.733385Z","url":"https://files.pythonhosted.org/packages/99/fd/0ec9d18c7f69fd9b1f0feb4d21aa02874b65234e9768faeb0692d75cda8e/yt_dlp-2024.4.7.232657.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.4.8.232708.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.4.8.232708.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","flake8; extra == \"dev\"","isort; extra == \"dev\"","pytest; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller==5.13.2; sys_platform == \"darwin\" and extra == \"pyinstaller\"","pyinstaller>=6.3; sys_platform != \"darwin\" and extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.4.8.232708.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"95d66642fa1428d955ae36dc6d04d079bdaae1a8a0462dc3b16bece00216430e","md5":"c0372b33a14631729f40a85b6cb0a6a4","sha256":"a7df5910c0e783439f6bd7387d1f53a621e4efc0e514f8b687866294d8c1ff85"},"downloads":-1,"filename":"yt_dlp-2024.4.8.232708.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"c0372b33a14631729f40a85b6cb0a6a4","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3074523,"upload_time":"2024-04-08T23:34:40","upload_time_iso_8601":"2024-04-08T23:34:40.437208Z","url":"https://files.pythonhosted.org/packages/95/d6/6642fa1428d955ae36dc6d04d079bdaae1a8a0462dc3b16bece00216430e/yt_dlp-2024.4.8.232708.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"0e87ef893f0ad8ace6cb162e232aee31d3c2f988ff967ceff7ef97b284b8e697","md5":"241ad355c5fb8c1adc8aacb6a53377fb","sha256":"4a201310d0f852299a5120db5efa712bc4282cd8226f3fb73cad87274b5888e8"},"downloads":-1,"filename":"yt_dlp-2024.4.8.232708.dev0.tar.gz","has_sig":false,"md5_digest":"241ad355c5fb8c1adc8aacb6a53377fb","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2781530,"upload_time":"2024-04-08T23:34:44","upload_time_iso_8601":"2024-04-08T23:34:44.656108Z","url":"https://files.pythonhosted.org/packages/0e/87/ef893f0ad8ace6cb162e232aee31d3c2f988ff967ceff7ef97b284b8e697/yt_dlp-2024.4.8.232708.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-22423"],"details":"### Summary\nThe [patch that addressed CVE-2023-40581](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes.\nHowever, this escaping is not sufficient, and still allows expansion of environment variables.\n\nSupport for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version [2021.04.11](https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11).\n\n```cmd\n> yt-dlp \"https://youtu.be/42xO6rVqf2E\" --ignore-config -f 18 --exec \"echo %(title)q\"\n[youtube] Extracting URL: https://youtu.be/42xO6rVqf2E\n[youtube] 42xO6rVqf2E: Downloading webpage\n[youtube] 42xO6rVqf2E: Downloading ios player API JSON\n[youtube] 42xO6rVqf2E: Downloading android player API JSON\n[youtube] 42xO6rVqf2E: Downloading m3u8 information\n[info] 42xO6rVqf2E: Downloading 1 format(s): 18\n[download] Destination: %CMDCMDLINE：~-1%&echo pwned&calc.exe [42xO6rVqf2E].mp4\n[download] 100% of  126.16KiB in 00:00:00 at 2.46MiB/s\n[Exec] Executing command: echo \"%CMDCMDLINE:~-1%&echo pwned&calc.exe\"\n\"\"\npwned\n```\n\n### Patches\nyt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.\n\nFor Windows users who are not able to upgrade:\n- Avoid using any output template expansion in `--exec` other than `{}` (filepath).\n- If expansion in `--exec` is needed, verify the fields you are using do not contain `%`, `\"`, `|` or `&`.\n- Instead of using `--exec`, write the info json and load the fields from it instead.\n\n### Details\nWhen escaping variables, the following code is used for Windows.\n[`yt_dlp/compat/__init__.py` line 31-33](https://github.com/yt-dlp/yt-dlp/blob/8e6e3651727b0b85764857fc6329fe5e0a3f00de/yt_dlp/compat/__init__.py#L31-L33)\n```python\n    def compat_shlex_quote(s):\n        import re\n        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n```\nIt replaces `\"` with `\"\"` to balance out the quotes and keep quoting intact if non-allowed characters are included. However, the `%CMDCMDLINE%` variable can be used to generate a quote using `%CMDCMDLINE:~-1%`; since the value of `%CMDCMDLINE%` is the commandline with which `cmd.exe` was called, and it is always called with the command surrounded by quotes, `%CMDCMDLINE:~-1%` expands to `\"`. After the quotes have been unbalanced, special characters are no longer quoted and commands can be executed:\n```cmd\n%CMDCMDLINE:~-1%&calc.exe\n```\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p\n- https://nvd.nist.gov/vuln/detail/CVE-2024-22423\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09\n- https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a","fixed_in":["2024.04.09"],"id":"GHSA-hjq6-52gw-2g7p","link":"https://osv.dev/vulnerability/GHSA-hjq6-52gw-2g7p","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.4.9":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.4.9/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","flake8; extra == \"dev\"","isort; extra == \"dev\"","pytest; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller==5.13.2; sys_platform == \"darwin\" and extra == \"pyinstaller\"","pyinstaller>=6.3; sys_platform != \"darwin\" and extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.4.9","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"d6dd40b79e6864709a47fa781206589bf1c91383d8e277b848a0e7cbd5a00b00","md5":"8af5a10a7104b6844ff50721d84a492d","sha256":"d6ff6798bd114cc48763564fcb2f296464ec1604f731e69b07a8814c89b170a2"},"downloads":-1,"filename":"yt_dlp-2024.4.9-py3-none-any.whl","has_sig":false,"md5_digest":"8af5a10a7104b6844ff50721d84a492d","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3074590,"upload_time":"2024-04-09T17:11:03","upload_time_iso_8601":"2024-04-09T17:11:03.033194Z","url":"https://files.pythonhosted.org/packages/d6/dd/40b79e6864709a47fa781206589bf1c91383d8e277b848a0e7cbd5a00b00/yt_dlp-2024.4.9-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"5285af44c30f0cc5d94ebbce365f8ee40eea6e9d7a1d26d50f16e3766ca8410c","md5":"f23c035e3753277e409ca879355e0413","sha256":"7ee90572b4d313b582b99c89e4eccf779b57ff54edc331873c6b3fba77faa8b0"},"downloads":-1,"filename":"yt_dlp-2024.4.9.tar.gz","has_sig":false,"md5_digest":"f23c035e3753277e409ca879355e0413","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2782033,"upload_time":"2024-04-09T17:11:08","upload_time_iso_8601":"2024-04-09T17:11:08.195251Z","url":"https://files.pythonhosted.org/packages/52/85/af44c30f0cc5d94ebbce365f8ee40eea6e9d7a1d26d50f16e3766ca8410c/yt_dlp-2024.4.9.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.4.9.232723.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.4.9.232723.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","flake8; extra == \"dev\"","isort; extra == \"dev\"","pytest; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller==5.13.2; sys_platform == \"darwin\" and extra == \"pyinstaller\"","pyinstaller>=6.3; sys_platform != \"darwin\" and extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.4.9.232723.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"b2b2b50a01a2a4a7d3cd8652a856d2058dbb4e18fb90c588a0ecef2b07a6e5fa","md5":"baab4ba3ee90f1758ffe2404a203f189","sha256":"afb4ce9e839651f6aaa4fb828da41eaba0269842aff2873cdc9dbaa0fec37807"},"downloads":-1,"filename":"yt_dlp-2024.4.9.232723.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"baab4ba3ee90f1758ffe2404a203f189","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3074900,"upload_time":"2024-04-09T23:35:33","upload_time_iso_8601":"2024-04-09T23:35:33.746855Z","url":"https://files.pythonhosted.org/packages/b2/b2/b50a01a2a4a7d3cd8652a856d2058dbb4e18fb90c588a0ecef2b07a6e5fa/yt_dlp-2024.4.9.232723.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"3d2645a9189ceae8b6fa894afcbb6e4dfa15bfa476b1c4750920529f8dce5039","md5":"10ba42ca7ae9be9b0b77ba41d047b4e2","sha256":"8dc7e287db368b390db7dfe797f586817cd395fe30d8d39690c2d1cba80fe749"},"downloads":-1,"filename":"yt_dlp-2024.4.9.232723.dev0.tar.gz","has_sig":false,"md5_digest":"10ba42ca7ae9be9b0b77ba41d047b4e2","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2782587,"upload_time":"2024-04-09T23:35:38","upload_time_iso_8601":"2024-04-09T23:35:38.663465Z","url":"https://files.pythonhosted.org/packages/3d/26/45a9189ceae8b6fa894afcbb6e4dfa15bfa476b1c4750920529f8dce5039/yt_dlp-2024.4.9.232723.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.5.10.232705.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.5.10.232705.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","flake8; extra == \"dev\"","isort; extra == \"dev\"","pytest; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller==5.13.2; sys_platform == \"darwin\" and extra == \"pyinstaller\"","pyinstaller>=6.3; sys_platform != \"darwin\" and extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.5.10.232705.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"26889a7eae445f02210f7faaa70935ac2433c95920f8f079d0c12c8a0b0bfc09","md5":"88f048e841cebcbf11a5269d6be0e7ef","sha256":"4727d325770f0a642ab382da48d8a75a27bc3d06a4b7d109062fa1ed290bf7fc"},"downloads":-1,"filename":"yt_dlp-2024.5.10.232705.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"88f048e841cebcbf11a5269d6be0e7ef","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3079012,"upload_time":"2024-05-10T23:34:03","upload_time_iso_8601":"2024-05-10T23:34:03.257784Z","url":"https://files.pythonhosted.org/packages/26/88/9a7eae445f02210f7faaa70935ac2433c95920f8f079d0c12c8a0b0bfc09/yt_dlp-2024.5.10.232705.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"81ecf5d398d16d550bb8f845f28ba3e4e88794215f2c1a2988c18447f81969cd","md5":"e2b9a590543f1abfc62cbe11be885314","sha256":"f072f7316f5686089f8221a90a8403b90aa575aca14693375714e7cda091a8f0"},"downloads":-1,"filename":"yt_dlp-2024.5.10.232705.dev0.tar.gz","has_sig":false,"md5_digest":"e2b9a590543f1abfc62cbe11be885314","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2792483,"upload_time":"2024-05-10T23:34:08","upload_time_iso_8601":"2024-05-10T23:34:08.121762Z","url":"https://files.pythonhosted.org/packages/81/ec/f5d398d16d550bb8f845f28ba3e4e88794215f2c1a2988c18447f81969cd/yt_dlp-2024.5.10.232705.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.5.11.232654.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.5.11.232654.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","flake8; extra == \"dev\"","isort; extra == \"dev\"","pytest; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller==5.13.2; sys_platform == \"darwin\" and extra == \"pyinstaller\"","pyinstaller>=6.3; sys_platform != \"darwin\" and extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.5.11.232654.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"6c9dac9241e1b7d0e59822f4a0f0a072271a38754ae8c72855c6299d0d6c9ca4","md5":"fa12421d07d95e3606b314df23b0fb37","sha256":"a17f49d6ddabd398d4b9d39d0dc2903aa49029542139f50cb613022c606927b0"},"downloads":-1,"filename":"yt_dlp-2024.5.11.232654.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"fa12421d07d95e3606b314df23b0fb37","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3079111,"upload_time":"2024-05-11T23:34:00","upload_time_iso_8601":"2024-05-11T23:34:00.426234Z","url":"https://files.pythonhosted.org/packages/6c/9d/ac9241e1b7d0e59822f4a0f0a072271a38754ae8c72855c6299d0d6c9ca4/yt_dlp-2024.5.11.232654.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"31e798b89755fdc49d852d6ff81e9a2ee7ccabc0e2a129cf4294cb716c807e27","md5":"66f570f521ef8c68a5a07330f1e97cea","sha256":"d1a3c95aff5fa512769f4825e4b7992ace6ffc72fae2a318e5af05e3bf43767d"},"downloads":-1,"filename":"yt_dlp-2024.5.11.232654.dev0.tar.gz","has_sig":false,"md5_digest":"66f570f521ef8c68a5a07330f1e97cea","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2792803,"upload_time":"2024-05-11T23:34:06","upload_time_iso_8601":"2024-05-11T23:34:06.084951Z","url":"https://files.pythonhosted.org/packages/31/e7/98b89755fdc49d852d6ff81e9a2ee7ccabc0e2a129cf4294cb716c807e27/yt_dlp-2024.5.11.232654.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.5.12.232709.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.5.12.232709.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","flake8; extra == \"dev\"","isort; extra == \"dev\"","pytest; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller==5.13.2; sys_platform == \"darwin\" and extra == \"pyinstaller\"","pyinstaller>=6.3; sys_platform != \"darwin\" and extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.5.12.232709.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"359f56074b4053ff5ef0d2b06d4b96dee4a72b7f2d94ee23e6563523147bb3b0","md5":"4ddb610ca0fdf5eeaa36ed4c307a83ed","sha256":"fdff8439863cab7548b8b9c2e28e6465326788e5586db85ee61e172b9ed65a59"},"downloads":-1,"filename":"yt_dlp-2024.5.12.232709.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"4ddb610ca0fdf5eeaa36ed4c307a83ed","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3069256,"upload_time":"2024-05-12T23:34:27","upload_time_iso_8601":"2024-05-12T23:34:27.960253Z","url":"https://files.pythonhosted.org/packages/35/9f/56074b4053ff5ef0d2b06d4b96dee4a72b7f2d94ee23e6563523147bb3b0/yt_dlp-2024.5.12.232709.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"1949a6b1c5912a9779561674ea353605c95a4303cafde54ac9d2339749dabfa3","md5":"d329d6c5a00947ad2b38b6e516a39fd7","sha256":"39124fdf57f3a9d11078bd2cb8fb1411895df252b72b34ef5c507c45be15ff18"},"downloads":-1,"filename":"yt_dlp-2024.5.12.232709.dev0.tar.gz","has_sig":false,"md5_digest":"d329d6c5a00947ad2b38b6e516a39fd7","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2787411,"upload_time":"2024-05-12T23:34:33","upload_time_iso_8601":"2024-05-12T23:34:33.199460Z","url":"https://files.pythonhosted.org/packages/19/49/a6b1c5912a9779561674ea353605c95a4303cafde54ac9d2339749dabfa3/yt_dlp-2024.5.12.232709.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.5.13.232704.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.5.13.232704.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","flake8; extra == \"dev\"","isort; extra == \"dev\"","pytest; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller==5.13.2; sys_platform == \"darwin\" and extra == \"pyinstaller\"","pyinstaller>=6.3; sys_platform != \"darwin\" and extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.5.13.232704.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"ceb7c6505b753d23f01decdeb73fcc9c1ffa125a252a13724b296239dd9e7906","md5":"3737158a7d6c569167484af912e60c86","sha256":"3fa43b489ce80f1d065c6d15a389e4e7d553252069c54eb21e739a6921de5fe1"},"downloads":-1,"filename":"yt_dlp-2024.5.13.232704.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"3737158a7d6c569167484af912e60c86","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3069572,"upload_time":"2024-05-13T23:34:09","upload_time_iso_8601":"2024-05-13T23:34:09.768799Z","url":"https://files.pythonhosted.org/packages/ce/b7/c6505b753d23f01decdeb73fcc9c1ffa125a252a13724b296239dd9e7906/yt_dlp-2024.5.13.232704.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"2c08717bd229e7d0a9a61d624d446a4ba009e72a8abde12fc07bf1a19d1daef2","md5":"faf98cc38c17e44b844b7f8bfea82e77","sha256":"67f615650843a6663d1dc127f6367f0cc08ef515ea4fe96bbd8a00772743a8ca"},"downloads":-1,"filename":"yt_dlp-2024.5.13.232704.dev0.tar.gz","has_sig":false,"md5_digest":"faf98cc38c17e44b844b7f8bfea82e77","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2787813,"upload_time":"2024-05-13T23:34:14","upload_time_iso_8601":"2024-05-13T23:34:14.914000Z","url":"https://files.pythonhosted.org/packages/2c/08/717bd229e7d0a9a61d624d446a4ba009e72a8abde12fc07bf1a19d1daef2/yt_dlp-2024.5.13.232704.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.5.16.232713.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.5.16.232713.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","flake8; extra == \"dev\"","isort; extra == \"dev\"","pytest; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller==5.13.2; sys_platform == \"darwin\" and extra == \"pyinstaller\"","pyinstaller>=6.3; sys_platform != \"darwin\" and extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.5.16.232713.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"091e38fe136caa1e34019ee88ec3383254e02bf24b280dc5288f3ffed73bf5f5","md5":"d4dcabafa7af3de2b27a5bab2071d07d","sha256":"42d3c27ab77583ff67ee2ddc94e376ea2a76a561ed8b1836ee04fd1cd23ad88c"},"downloads":-1,"filename":"yt_dlp-2024.5.16.232713.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"d4dcabafa7af3de2b27a5bab2071d07d","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3069922,"upload_time":"2024-05-16T23:34:22","upload_time_iso_8601":"2024-05-16T23:34:22.204647Z","url":"https://files.pythonhosted.org/packages/09/1e/38fe136caa1e34019ee88ec3383254e02bf24b280dc5288f3ffed73bf5f5/yt_dlp-2024.5.16.232713.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"eb1342d4172764e9747d8e6eeb5643b2d6ee95872b8aa973c8d06e09aba4eaed","md5":"b89a659a6d69336b988e42c95bb7f6d2","sha256":"d431187fa703c9f52225080ae56471272679e44d9363f97b7b3187d37a5e6480"},"downloads":-1,"filename":"yt_dlp-2024.5.16.232713.dev0.tar.gz","has_sig":false,"md5_digest":"b89a659a6d69336b988e42c95bb7f6d2","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2788186,"upload_time":"2024-05-16T23:34:27","upload_time_iso_8601":"2024-05-16T23:34:27.342824Z","url":"https://files.pythonhosted.org/packages/eb/13/42d4172764e9747d8e6eeb5643b2d6ee95872b8aa973c8d06e09aba4eaed/yt_dlp-2024.5.16.232713.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.5.17.232726.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.5.17.232726.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","flake8; extra == \"dev\"","isort; extra == \"dev\"","pytest; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller==5.13.2; sys_platform == \"darwin\" and extra == \"pyinstaller\"","pyinstaller>=6.3; sys_platform != \"darwin\" and extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.5.17.232726.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"3b7f4b2b6e3fc91b1159afd8caf399fc7c336b47fd5feea5fe28a7b5508f2971","md5":"dcc19ad1fa6f2438419e0c33963f9c9d","sha256":"d95b252e4fb069faaa41d5848f7dc1ebcd29db07f2c4f9c73546cbb09881c165"},"downloads":-1,"filename":"yt_dlp-2024.5.17.232726.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"dcc19ad1fa6f2438419e0c33963f9c9d","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3073057,"upload_time":"2024-05-17T23:34:20","upload_time_iso_8601":"2024-05-17T23:34:20.511934Z","url":"https://files.pythonhosted.org/packages/3b/7f/4b2b6e3fc91b1159afd8caf399fc7c336b47fd5feea5fe28a7b5508f2971/yt_dlp-2024.5.17.232726.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"492af5449c80d4e7c432eb3be84e62e9907cf7970f9071181c1c6fa4109075c7","md5":"ff690d4557cd3d6fc590bde78bfd8be4","sha256":"d8578c9bc7fe48a5631a617a131a6115582da6b0afdb35ed06b88b7baf673a31"},"downloads":-1,"filename":"yt_dlp-2024.5.17.232726.dev0.tar.gz","has_sig":false,"md5_digest":"ff690d4557cd3d6fc590bde78bfd8be4","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2791519,"upload_time":"2024-05-17T23:34:25","upload_time_iso_8601":"2024-05-17T23:34:25.168565Z","url":"https://files.pythonhosted.org/packages/49/2a/f5449c80d4e7c432eb3be84e62e9907cf7970f9071181c1c6fa4109075c7/yt_dlp-2024.5.17.232726.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.5.18.232655.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.5.18.232655.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","flake8; extra == \"dev\"","isort; extra == \"dev\"","pytest; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller==5.13.2; sys_platform == \"darwin\" and extra == \"pyinstaller\"","pyinstaller>=6.3; sys_platform != \"darwin\" and extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.5.18.232655.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"afe06b7f312bf044213b5afba05a10b3ab96888f005f1618aadf49bcdb228740","md5":"c5cde7bf46b673f4e20b5ae6e963cf94","sha256":"a05ace72c5407d744f986ead12ee47af46e8325bc93c28b832f17764eb8cd752"},"downloads":-1,"filename":"yt_dlp-2024.5.18.232655.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"c5cde7bf46b673f4e20b5ae6e963cf94","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3073174,"upload_time":"2024-05-18T23:33:48","upload_time_iso_8601":"2024-05-18T23:33:48.545497Z","url":"https://files.pythonhosted.org/packages/af/e0/6b7f312bf044213b5afba05a10b3ab96888f005f1618aadf49bcdb228740/yt_dlp-2024.5.18.232655.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"143e2088b189e586aab0774cd61b3bef85ab367a67babe97df38e4387091d098","md5":"18ce5f1c9b6a0bc46b4d95ddcf84bc9f","sha256":"f7683c76b69e2e677fd356c749de4c2ed818e4d9c5ab85df6c3007c3d2f78de2"},"downloads":-1,"filename":"yt_dlp-2024.5.18.232655.dev0.tar.gz","has_sig":false,"md5_digest":"18ce5f1c9b6a0bc46b4d95ddcf84bc9f","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2792071,"upload_time":"2024-05-18T23:33:52","upload_time_iso_8601":"2024-05-18T23:33:52.907467Z","url":"https://files.pythonhosted.org/packages/14/3e/2088b189e586aab0774cd61b3bef85ab367a67babe97df38e4387091d098/yt_dlp-2024.5.18.232655.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.5.20.232721.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.5.20.232721.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","flake8; extra == \"dev\"","isort; extra == \"dev\"","pytest; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller==5.13.2; sys_platform == \"darwin\" and extra == \"pyinstaller\"","pyinstaller>=6.3; sys_platform != \"darwin\" and extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.5.20.232721.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"d21eab3a5fa2deb6729c3e02a04a319014837e3161cdce15a88a363bb79d1172","md5":"82352d0dd8fc9584f45821baa3c67779","sha256":"21f030115937271103828e0100ed7e1af3b0c7cc25eaf2eb5f4bc2afe7b63035"},"downloads":-1,"filename":"yt_dlp-2024.5.20.232721.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"82352d0dd8fc9584f45821baa3c67779","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3074264,"upload_time":"2024-05-20T23:34:27","upload_time_iso_8601":"2024-05-20T23:34:27.653397Z","url":"https://files.pythonhosted.org/packages/d2/1e/ab3a5fa2deb6729c3e02a04a319014837e3161cdce15a88a363bb79d1172/yt_dlp-2024.5.20.232721.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"5ebdb4fb555a214b84eed9a67cf561d33bcba6fcdcf9a3665eb2e7819ecff5c3","md5":"9f2915cda807abeca7d64bb3deb66bfe","sha256":"cf32fb9c3594630084426526c767bd04a26abf0902e38c06d17419e20c0507ba"},"downloads":-1,"filename":"yt_dlp-2024.5.20.232721.dev0.tar.gz","has_sig":false,"md5_digest":"9f2915cda807abeca7d64bb3deb66bfe","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2793459,"upload_time":"2024-05-20T23:34:32","upload_time_iso_8601":"2024-05-20T23:34:32.610522Z","url":"https://files.pythonhosted.org/packages/5e/bd/b4fb555a214b84eed9a67cf561d33bcba6fcdcf9a3665eb2e7819ecff5c3/yt_dlp-2024.5.20.232721.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.5.22.232749.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.5.22.232749.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools<70,>=66.1.0; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","flake8; extra == \"dev\"","isort; extra == \"dev\"","pytest; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","requests==2.31.*; extra == \"py2exe\"","pyinstaller==5.13.2; sys_platform == \"darwin\" and extra == \"pyinstaller\"","pyinstaller>=6.3; sys_platform != \"darwin\" and extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.5.22.232749.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"da4cfc4e50bb70c608db857ec4efb78e97fb52200954d883f4502a0b145fe64e","md5":"1e9aad09df43e31a84424b7a4af0c4e1","sha256":"0699e0a552aa795cdc63d1c16a7b76d87cb888d258472934de339356889c1b72"},"downloads":-1,"filename":"yt_dlp-2024.5.22.232749.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"1e9aad09df43e31a84424b7a4af0c4e1","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3075745,"upload_time":"2024-05-22T23:34:26","upload_time_iso_8601":"2024-05-22T23:34:26.233526Z","url":"https://files.pythonhosted.org/packages/da/4c/fc4e50bb70c608db857ec4efb78e97fb52200954d883f4502a0b145fe64e/yt_dlp-2024.5.22.232749.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"12dc3c2d5c9528502a0e2a6fe94465c94df122416310bb8a4a8cd6939a0c7a8d","md5":"ff410114f315179875bf353244dcd0ac","sha256":"1b906039b3efcfbde7298cc819ca8122f7934ea5143133cd813ad68c3185c65a"},"downloads":-1,"filename":"yt_dlp-2024.5.22.232749.dev0.tar.gz","has_sig":false,"md5_digest":"ff410114f315179875bf353244dcd0ac","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2795533,"upload_time":"2024-05-22T23:34:31","upload_time_iso_8601":"2024-05-22T23:34:31.813642Z","url":"https://files.pythonhosted.org/packages/12/dc/3c2d5c9528502a0e2a6fe94465c94df122416310bb8a4a8cd6939a0c7a8d/yt_dlp-2024.5.22.232749.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.5.23.232707.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.5.23.232707.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools<70,>=66.1.0; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","flake8; extra == \"dev\"","isort; extra == \"dev\"","pytest; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","requests==2.31.*; extra == \"py2exe\"","pyinstaller==5.13.2; sys_platform == \"darwin\" and extra == \"pyinstaller\"","pyinstaller>=6.3; sys_platform != \"darwin\" and extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.5.23.232707.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"9407e47d77fd2657b221e67d7236b024527f5428aac05957df5891ddfeb89547","md5":"014df0375b38c039f71283d24d0fbec2","sha256":"0226a75f0a32408c9d2498369a2cc57fcce17b03436dfbda48f7e893dc429a8e"},"downloads":-1,"filename":"yt_dlp-2024.5.23.232707.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"014df0375b38c039f71283d24d0fbec2","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3080503,"upload_time":"2024-05-23T23:34:15","upload_time_iso_8601":"2024-05-23T23:34:15.871455Z","url":"https://files.pythonhosted.org/packages/94/07/e47d77fd2657b221e67d7236b024527f5428aac05957df5891ddfeb89547/yt_dlp-2024.5.23.232707.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c43d1e626b5dee6433bbced857ef9265c0c4431084fee1f71f4f91774720dd5c","md5":"904b625509bbe8485f7a6fea3d7728c8","sha256":"f1b494105d26201c268a81e1a10c316168ddcb161b59d7def4fd4490eaf226e0"},"downloads":-1,"filename":"yt_dlp-2024.5.23.232707.dev0.tar.gz","has_sig":false,"md5_digest":"904b625509bbe8485f7a6fea3d7728c8","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2799276,"upload_time":"2024-05-23T23:34:21","upload_time_iso_8601":"2024-05-23T23:34:21.115663Z","url":"https://files.pythonhosted.org/packages/c4/3d/1e626b5dee6433bbced857ef9265c0c4431084fee1f71f4f91774720dd5c/yt_dlp-2024.5.23.232707.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.5.25.232709.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.5.25.232709.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools<70,>=66.1.0; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","flake8; extra == \"dev\"","isort; extra == \"dev\"","pytest; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","requests==2.31.*; extra == \"py2exe\"","pyinstaller==5.13.2; sys_platform == \"darwin\" and extra == \"pyinstaller\"","pyinstaller>=6.3; sys_platform != \"darwin\" and extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.5.25.232709.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"338f46f7d460137827820ef3fdb803af51d23e32a85b418b4e6b73db330125d6","md5":"605876b5a53e664c97a65262cfbd8bbf","sha256":"e24846133b65e9e6b6c254f8211a220ee88a7dcbd5820e50cc16e50ed14626b1"},"downloads":-1,"filename":"yt_dlp-2024.5.25.232709.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"605876b5a53e664c97a65262cfbd8bbf","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3086057,"upload_time":"2024-05-25T23:34:09","upload_time_iso_8601":"2024-05-25T23:34:09.344496Z","url":"https://files.pythonhosted.org/packages/33/8f/46f7d460137827820ef3fdb803af51d23e32a85b418b4e6b73db330125d6/yt_dlp-2024.5.25.232709.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"b46bd69d04dfdcf2566c529e0ee103a264f9effb4a131703cdf2960725a10f6f","md5":"50cc368f08d12eee6cbf2bdbb09921d5","sha256":"11fb28338f2bf8ad67b78e920563dc5e87455ec9daa618750a4b3af218de2133"},"downloads":-1,"filename":"yt_dlp-2024.5.25.232709.dev0.tar.gz","has_sig":false,"md5_digest":"50cc368f08d12eee6cbf2bdbb09921d5","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2804173,"upload_time":"2024-05-25T23:34:14","upload_time_iso_8601":"2024-05-25T23:34:14.599065Z","url":"https://files.pythonhosted.org/packages/b4/6b/d69d04dfdcf2566c529e0ee103a264f9effb4a131703cdf2960725a10f6f/yt_dlp-2024.5.25.232709.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.5.26":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.5.26/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools<70,>=66.1.0; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.4.4; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","requests==2.31.*; extra == \"py2exe\"","pyinstaller==5.13.2; sys_platform == \"darwin\" and extra == \"pyinstaller\"","pyinstaller>=6.3; sys_platform != \"darwin\" and extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.4.4; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.5.26","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"45e8360cf1eeff93f0cf8107d1a9a272381e343e20fe0c2c591eb258b7c4b016","md5":"06008af1a0a587ba05c591fb548c230b","sha256":"884deab9e38b2c67a39b0e39b820d860c5d46d9d5d6f7c883b73ff70bd891d7c"},"downloads":-1,"filename":"yt_dlp-2024.5.26-py3-none-any.whl","has_sig":false,"md5_digest":"06008af1a0a587ba05c591fb548c230b","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3094955,"upload_time":"2024-05-26T22:02:32","upload_time_iso_8601":"2024-05-26T22:02:32.735160Z","url":"https://files.pythonhosted.org/packages/45/e8/360cf1eeff93f0cf8107d1a9a272381e343e20fe0c2c591eb258b7c4b016/yt_dlp-2024.5.26-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"83b32b44ed5c8fbfc888026df6556141ccc433fd03f7c183fb735b3421f84150","md5":"ec3013d400a39946fb63db781a62e6d2","sha256":"ae9bef603f9da76115f863750598d3afbd60bcd808234efc28be393d7e83369b"},"downloads":-1,"filename":"yt_dlp-2024.5.26.tar.gz","has_sig":false,"md5_digest":"ec3013d400a39946fb63db781a62e6d2","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2812892,"upload_time":"2024-05-26T22:02:38","upload_time_iso_8601":"2024-05-26T22:02:38.418313Z","url":"https://files.pythonhosted.org/packages/83/b3/2b44ed5c8fbfc888026df6556141ccc433fd03f7c183fb735b3421f84150/yt_dlp-2024.5.26.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.5.26.232731.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.5.26.232731.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools<70,>=66.1.0; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.4.4; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","requests==2.31.*; extra == \"py2exe\"","pyinstaller==5.13.2; sys_platform == \"darwin\" and extra == \"pyinstaller\"","pyinstaller>=6.3; sys_platform != \"darwin\" and extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.4.4; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.5.26.232731.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"d0942c7dede5a7ae242ddcbaefe92f063e1bf9be13a2f41298e6cf6a1651a5a9","md5":"3e70d7edacf6a1414292a2fc0636246d","sha256":"dd4871fa1022751d4707c909a59ec4244431274a3bc89fbba539f273756cead3"},"downloads":-1,"filename":"yt_dlp-2024.5.26.232731.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"3e70d7edacf6a1414292a2fc0636246d","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3095362,"upload_time":"2024-05-26T23:34:37","upload_time_iso_8601":"2024-05-26T23:34:37.553267Z","url":"https://files.pythonhosted.org/packages/d0/94/2c7dede5a7ae242ddcbaefe92f063e1bf9be13a2f41298e6cf6a1651a5a9/yt_dlp-2024.5.26.232731.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"54e179a1af4ca161647306b7c9f57e862bbc580079184e59755a7a5f6f3b7e32","md5":"a08fdec31d9e64cce464b6da680079e5","sha256":"c510e2c5f8a4d50d924a9c35d1d62f437a82043873d4b50783d6db97c2f9a373"},"downloads":-1,"filename":"yt_dlp-2024.5.26.232731.dev0.tar.gz","has_sig":false,"md5_digest":"a08fdec31d9e64cce464b6da680079e5","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2813553,"upload_time":"2024-05-26T23:34:42","upload_time_iso_8601":"2024-05-26T23:34:42.839073Z","url":"https://files.pythonhosted.org/packages/54/e1/79a1af4ca161647306b7c9f57e862bbc580079184e59755a7a5f6f3b7e32/yt_dlp-2024.5.26.232731.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.5.27":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.5.27/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools<70,>=66.1.0; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.4.4; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","requests==2.31.*; extra == \"py2exe\"","pyinstaller==5.13.2; sys_platform == \"darwin\" and extra == \"pyinstaller\"","pyinstaller>=6.3; sys_platform != \"darwin\" and extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.4.4; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.5.27","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"fc94dc1cbc7f47bb61fdb33ca440e03140b677e81a3b91bac6bede8c0d46ab9f","md5":"d35d95871e80f97814b31930b53209fd","sha256":"5dbedb7610ae9440cc44e744f528e078828142bbe09af950cf7e99ce69c866d9"},"downloads":-1,"filename":"yt_dlp-2024.5.27-py3-none-any.whl","has_sig":false,"md5_digest":"d35d95871e80f97814b31930b53209fd","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3095444,"upload_time":"2024-05-27T22:43:21","upload_time_iso_8601":"2024-05-27T22:43:21.243768Z","url":"https://files.pythonhosted.org/packages/fc/94/dc1cbc7f47bb61fdb33ca440e03140b677e81a3b91bac6bede8c0d46ab9f/yt_dlp-2024.5.27-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"089c6dc54bc591d50eb9378a0e0442e5b69f28eff1ead4f234b7837b6d582761","md5":"08aa98f22ab1dc40e7a6c4b7ec5c573a","sha256":"3566c0de240d0cd3d1c2285ce655f72ca38dfc618d634d46818b00d89d5288be"},"downloads":-1,"filename":"yt_dlp-2024.5.27.tar.gz","has_sig":false,"md5_digest":"08aa98f22ab1dc40e7a6c4b7ec5c573a","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2813727,"upload_time":"2024-05-27T22:43:25","upload_time_iso_8601":"2024-05-27T22:43:25.813459Z","url":"https://files.pythonhosted.org/packages/08/9c/6dc54bc591d50eb9378a0e0442e5b69f28eff1ead4f234b7837b6d582761/yt_dlp-2024.5.27.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.5.27.232744.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.5.27.232744.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools<70,>=66.1.0; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.4.4; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","requests==2.31.*; extra == \"py2exe\"","pyinstaller==5.13.2; sys_platform == \"darwin\" and extra == \"pyinstaller\"","pyinstaller>=6.3; sys_platform != \"darwin\" and extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.4.4; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.5.27.232744.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"b45b7cf36e1f5a659ab7b48f8e1c0e0ee8392553bc8d98278d2f51709927aa84","md5":"2ebd109fdff51b554218bf0f40f601c5","sha256":"4fae014aaee7a0c03e41aa7a6d0726817b4e794fc4e5697f9b5285e60efa7afc"},"downloads":-1,"filename":"yt_dlp-2024.5.27.232744.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"2ebd109fdff51b554218bf0f40f601c5","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3095748,"upload_time":"2024-05-27T23:34:36","upload_time_iso_8601":"2024-05-27T23:34:36.533083Z","url":"https://files.pythonhosted.org/packages/b4/5b/7cf36e1f5a659ab7b48f8e1c0e0ee8392553bc8d98278d2f51709927aa84/yt_dlp-2024.5.27.232744.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"8e384b80b7a536c6a4440075beca6bee79878e02c6b472cdb1f23f29ed0d9a26","md5":"d733a1a7780f7b4bf07f8e31ce5322be","sha256":"7447a4903662c9eead00a595eeabf00c2dfc6274834538a89085ef2fb842da2a"},"downloads":-1,"filename":"yt_dlp-2024.5.27.232744.dev0.tar.gz","has_sig":false,"md5_digest":"d733a1a7780f7b4bf07f8e31ce5322be","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2814129,"upload_time":"2024-05-27T23:34:42","upload_time_iso_8601":"2024-05-27T23:34:42.051545Z","url":"https://files.pythonhosted.org/packages/8e/38/4b80b7a536c6a4440075beca6bee79878e02c6b472cdb1f23f29ed0d9a26/yt_dlp-2024.5.27.232744.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.5.29.232700.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.5.29.232700.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools<70,>=66.1.0; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.4.4; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","requests==2.31.*; extra == \"py2exe\"","pyinstaller==5.13.2; sys_platform == \"darwin\" and extra == \"pyinstaller\"","pyinstaller>=6.3; sys_platform != \"darwin\" and extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.4.4; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.5.29.232700.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"356c6d07d8cff1c0c34f5f0fb617df6ee02a972441d66f5c9d25e715179ba7ff","md5":"616677baa169be83ce27e3b7e8be7de8","sha256":"38b6846d5001bcd775040ac39d668c1eb57131951408c858465c3f7ea2a5c205"},"downloads":-1,"filename":"yt_dlp-2024.5.29.232700.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"616677baa169be83ce27e3b7e8be7de8","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3096941,"upload_time":"2024-05-29T23:34:40","upload_time_iso_8601":"2024-05-29T23:34:40.669709Z","url":"https://files.pythonhosted.org/packages/35/6c/6d07d8cff1c0c34f5f0fb617df6ee02a972441d66f5c9d25e715179ba7ff/yt_dlp-2024.5.29.232700.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"e7cbd3b7d218e09c10fbca7c60949764e5cec18406bd1f968a30f93b8fde9cf6","md5":"2df5912671780fe5f542e040e25de484","sha256":"ef5fa5f03107c702d89aeb208dcc0ef2820c5ab7f8d5627906699129801b6719"},"downloads":-1,"filename":"yt_dlp-2024.5.29.232700.dev0.tar.gz","has_sig":false,"md5_digest":"2df5912671780fe5f542e040e25de484","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2815501,"upload_time":"2024-05-29T23:34:47","upload_time_iso_8601":"2024-05-29T23:34:47.459311Z","url":"https://files.pythonhosted.org/packages/e7/cb/d3b7d218e09c10fbca7c60949764e5cec18406bd1f968a30f93b8fde9cf6/yt_dlp-2024.5.29.232700.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.5.30.232720.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.5.30.232720.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.4.4; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","requests==2.31.*; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.4.4; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.5.30.232720.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"d5caa34ddff90cdea68b9e241791b9bc9ded08c9b7016e41e86aed060a4d6742","md5":"3f7be1b2099d8e4c2a28e61004ed6910","sha256":"d6e563a2923807392325722028e7792e35affb694a505617b008195d0d212d2c"},"downloads":-1,"filename":"yt_dlp-2024.5.30.232720.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"3f7be1b2099d8e4c2a28e61004ed6910","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3096936,"upload_time":"2024-05-30T23:33:47","upload_time_iso_8601":"2024-05-30T23:33:47.186279Z","url":"https://files.pythonhosted.org/packages/d5/ca/a34ddff90cdea68b9e241791b9bc9ded08c9b7016e41e86aed060a4d6742/yt_dlp-2024.5.30.232720.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"481445dadd80819b02ac1c9da8edd8f6807950d81b464a0ac12f16ff1b4a5d95","md5":"2920de96dcff153080c3a5e3636faeaa","sha256":"9e2b177c5b13ea6f54cee1c56a69dd7832d506fba73a2247c6470e7d1952f959"},"downloads":-1,"filename":"yt_dlp-2024.5.30.232720.dev0.tar.gz","has_sig":false,"md5_digest":"2920de96dcff153080c3a5e3636faeaa","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2815674,"upload_time":"2024-05-30T23:33:52","upload_time_iso_8601":"2024-05-30T23:33:52.559598Z","url":"https://files.pythonhosted.org/packages/48/14/45dadd80819b02ac1c9da8edd8f6807950d81b464a0ac12f16ff1b4a5d95/yt_dlp-2024.5.30.232720.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.5.4.232706.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.5.4.232706.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","flake8; extra == \"dev\"","isort; extra == \"dev\"","pytest; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller==5.13.2; sys_platform == \"darwin\" and extra == \"pyinstaller\"","pyinstaller>=6.3; sys_platform != \"darwin\" and extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.5.4.232706.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"ec79e7461ccfbd77469b89a37d12967bdd48814fe23de963314f0db51114a8f1","md5":"1c5b79a2f28403fcefb0e8e82fa5b18c","sha256":"eab86c60c75c9d9746bb7070d97c92ca70f2b75d104bd79afd39a962634c75e8"},"downloads":-1,"filename":"yt_dlp-2024.5.4.232706.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"1c5b79a2f28403fcefb0e8e82fa5b18c","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3077349,"upload_time":"2024-05-04T23:34:15","upload_time_iso_8601":"2024-05-04T23:34:15.413909Z","url":"https://files.pythonhosted.org/packages/ec/79/e7461ccfbd77469b89a37d12967bdd48814fe23de963314f0db51114a8f1/yt_dlp-2024.5.4.232706.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"ac3ba917fee617e28bc049d036a01f8144e5a7a7dfb4349780b5bc7b89a28197","md5":"8df93c8ad412108c7b16321e8d4cb992","sha256":"8418fef56d3321dcd76c0af276913c29fc7daad79354486606eb9f9f57516463"},"downloads":-1,"filename":"yt_dlp-2024.5.4.232706.dev0.tar.gz","has_sig":false,"md5_digest":"8df93c8ad412108c7b16321e8d4cb992","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2786558,"upload_time":"2024-05-04T23:34:20","upload_time_iso_8601":"2024-05-04T23:34:20.758448Z","url":"https://files.pythonhosted.org/packages/ac/3b/a917fee617e28bc049d036a01f8144e5a7a7dfb4349780b5bc7b89a28197/yt_dlp-2024.5.4.232706.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.5.5.232701.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.5.5.232701.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","flake8; extra == \"dev\"","isort; extra == \"dev\"","pytest; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller==5.13.2; sys_platform == \"darwin\" and extra == \"pyinstaller\"","pyinstaller>=6.3; sys_platform != \"darwin\" and extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.5.5.232701.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"921574a69eeb44d61092772f573b6615e6aecc76c329a808638be78086d5dfa0","md5":"3c4416555c506b20c49bd0c54c7109e9","sha256":"53d19447a9d7f4898e7b921da84f722362b7f63ad4d39305ea61a23ea0f8fbf3"},"downloads":-1,"filename":"yt_dlp-2024.5.5.232701.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"3c4416555c506b20c49bd0c54c7109e9","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3077675,"upload_time":"2024-05-05T23:34:14","upload_time_iso_8601":"2024-05-05T23:34:14.380021Z","url":"https://files.pythonhosted.org/packages/92/15/74a69eeb44d61092772f573b6615e6aecc76c329a808638be78086d5dfa0/yt_dlp-2024.5.5.232701.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"84b9776c1dd6af3d11b008b3d15993bd9675fea67e86f7b78a1dac88febb9fcf","md5":"652cde09d440e797885f0a8f3d4e58d1","sha256":"513f53508a1da20ee1b93cd72a3351e8ef96af81d90394a61cca1bd8b2d4d0d2"},"downloads":-1,"filename":"yt_dlp-2024.5.5.232701.dev0.tar.gz","has_sig":false,"md5_digest":"652cde09d440e797885f0a8f3d4e58d1","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2787069,"upload_time":"2024-05-05T23:34:19","upload_time_iso_8601":"2024-05-05T23:34:19.615417Z","url":"https://files.pythonhosted.org/packages/84/b9/776c1dd6af3d11b008b3d15993bd9675fea67e86f7b78a1dac88febb9fcf/yt_dlp-2024.5.5.232701.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.5.8.232715.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.5.8.232715.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.31.0","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","flake8; extra == \"dev\"","isort; extra == \"dev\"","pytest; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller==5.13.2; sys_platform == \"darwin\" and extra == \"pyinstaller\"","pyinstaller>=6.3; sys_platform != \"darwin\" and extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.5.8.232715.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"039fd335d1c47b9f5193ed9d4cc177f756664ca0999ba86e73aa896ff2c06920","md5":"b26496f2e3aaa1c8ada2fcae662ae909","sha256":"d81cb544705d8f170a7150e980c2403452db164237e9b4b9a4df15ecbe05e32a"},"downloads":-1,"filename":"yt_dlp-2024.5.8.232715.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"b26496f2e3aaa1c8ada2fcae662ae909","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3078564,"upload_time":"2024-05-08T23:34:23","upload_time_iso_8601":"2024-05-08T23:34:23.668093Z","url":"https://files.pythonhosted.org/packages/03/9f/d335d1c47b9f5193ed9d4cc177f756664ca0999ba86e73aa896ff2c06920/yt_dlp-2024.5.8.232715.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"29374d7e7b1d095d515aef0e3e9af758d0dc33fceebfe46ebce02a1a240d274c","md5":"8d4425d4b718f5155828795bc39c9b2c","sha256":"cd2b393ba55b8ff3248a9f80a83b1c74717e7913c585f2473d85a6383fef3f19"},"downloads":-1,"filename":"yt_dlp-2024.5.8.232715.dev0.tar.gz","has_sig":false,"md5_digest":"8d4425d4b718f5155828795bc39c9b2c","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2788308,"upload_time":"2024-05-08T23:34:28","upload_time_iso_8601":"2024-05-08T23:34:28.937828Z","url":"https://files.pythonhosted.org/packages/29/37/4d7e7b1d095d515aef0e3e9af758d0dc33fceebfe46ebce02a1a240d274c/yt_dlp-2024.5.8.232715.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.6.1.232725.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.6.1.232725.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.4.4; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.4.4; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.6.1.232725.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"433a59e40a36f188bf2d86a82d675672fa05ece2a3de67c27407a69718ae9322","md5":"e7360dfccf2c2e01554c57a1ac61fe74","sha256":"b3048fc49d0b0726b0e99d0605d7a29ce9a23c58badc18ec9e10984424a739d2"},"downloads":-1,"filename":"yt_dlp-2024.6.1.232725.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"e7360dfccf2c2e01554c57a1ac61fe74","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3096881,"upload_time":"2024-06-01T23:33:44","upload_time_iso_8601":"2024-06-01T23:33:44.252179Z","url":"https://files.pythonhosted.org/packages/43/3a/59e40a36f188bf2d86a82d675672fa05ece2a3de67c27407a69718ae9322/yt_dlp-2024.6.1.232725.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"837b748db974055c2f62d46983eb602f6422de643b8b5423191c4c755d57ca38","md5":"837270ecbb7b5dbbda939045e76004a4","sha256":"0946f21fe7a6469c6adea0f93b727146121a65b0d271a3b65b1f14d27539a164"},"downloads":-1,"filename":"yt_dlp-2024.6.1.232725.dev0.tar.gz","has_sig":false,"md5_digest":"837270ecbb7b5dbbda939045e76004a4","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2815649,"upload_time":"2024-06-01T23:33:49","upload_time_iso_8601":"2024-06-01T23:33:49.406947Z","url":"https://files.pythonhosted.org/packages/83/7b/748db974055c2f62d46983eb602f6422de643b8b5423191c4c755d57ca38/yt_dlp-2024.6.1.232725.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.6.11.232712.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.6.11.232712.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.4.4; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.4.4; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.6.11.232712.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"505d9e122db0c101091dcf025f66a019c19b52d42aa701b86c29a0b985065bd2","md5":"13d3a0876bd6ec56c771113e9f4cfefa","sha256":"5c892c2f868599e077ad7af441589a00596b23d9f3831a23906aab0ef68fcd23"},"downloads":-1,"filename":"yt_dlp-2024.6.11.232712.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"13d3a0876bd6ec56c771113e9f4cfefa","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3092274,"upload_time":"2024-06-11T23:33:54","upload_time_iso_8601":"2024-06-11T23:33:54.519962Z","url":"https://files.pythonhosted.org/packages/50/5d/9e122db0c101091dcf025f66a019c19b52d42aa701b86c29a0b985065bd2/yt_dlp-2024.6.11.232712.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"8e7d1af42332efa76b1cae89ab82ca10e6a69c4cad63937adcf2c543136e1143","md5":"56c3835edaf48284f2cf5618ea0b6968","sha256":"3fecf91d05204a0d39718bf4989b36be66800e274949383a59cb7ea1b12fb4af"},"downloads":-1,"filename":"yt_dlp-2024.6.11.232712.dev0.tar.gz","has_sig":false,"md5_digest":"56c3835edaf48284f2cf5618ea0b6968","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2810223,"upload_time":"2024-06-11T23:33:59","upload_time_iso_8601":"2024-06-11T23:33:59.568610Z","url":"https://files.pythonhosted.org/packages/8e/7d/1af42332efa76b1cae89ab82ca10e6a69c4cad63937adcf2c543136e1143/yt_dlp-2024.6.11.232712.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.6.13.232720.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.6.13.232720.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.4.4; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.4.4; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.6.13.232720.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"7001650dcf885d80622bdc4420a922771eece1171f3c086da9676e65705aeb20","md5":"4af49d9e2014a68e3843cd6f078a3ed4","sha256":"5b85789b959017609d6c297b53ef46b91c76fe5c846f8c3366c186f8fa1d134c"},"downloads":-1,"filename":"yt_dlp-2024.6.13.232720.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"4af49d9e2014a68e3843cd6f078a3ed4","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3094319,"upload_time":"2024-06-13T23:32:41","upload_time_iso_8601":"2024-06-13T23:32:41.366974Z","url":"https://files.pythonhosted.org/packages/70/01/650dcf885d80622bdc4420a922771eece1171f3c086da9676e65705aeb20/yt_dlp-2024.6.13.232720.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"5ad7805f6343614861d7a5bac27aa55a696a1d845b6d117cf952f26b9f48a7e1","md5":"73cc1e50e63e910e7bf72a26b7dedfd4","sha256":"9de2f4a0e4fe1471f7f7af00fbd8365bf5da23514915baab376ac451f37ad013"},"downloads":-1,"filename":"yt_dlp-2024.6.13.232720.dev0.tar.gz","has_sig":false,"md5_digest":"73cc1e50e63e910e7bf72a26b7dedfd4","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2812835,"upload_time":"2024-06-13T23:32:46","upload_time_iso_8601":"2024-06-13T23:32:46.373515Z","url":"https://files.pythonhosted.org/packages/5a/d7/805f6343614861d7a5bac27aa55a696a1d845b6d117cf952f26b9f48a7e1/yt_dlp-2024.6.13.232720.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.6.15.232712.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/yt-dlp/2024.6.15.232712.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.4.4; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.4.4; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.6.15.232712.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"ed4ec66e6ae50ada25fb366b47a791ffb9ec265fff5984c18988355287905638","md5":"61795e729116d7c19cc3f8077e9d55c4","sha256":"b269575f7e6bfab5acf8635ff477fb79217530a7f3aef97363823c50bdc18942"},"downloads":-1,"filename":"yt_dlp-2024.6.15.232712.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"61795e729116d7c19cc3f8077e9d55c4","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3094798,"upload_time":"2024-06-15T23:32:31","upload_time_iso_8601":"2024-06-15T23:32:31.912490Z","url":"https://files.pythonhosted.org/packages/ed/4e/c66e6ae50ada25fb366b47a791ffb9ec265fff5984c18988355287905638/yt_dlp-2024.6.15.232712.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c9dcc6571c459b085277f72161bab6a8707919667697ea9072e16cf25e33f1ee","md5":"ddbeaadbd6c5e22cf0b13f40440de5f6","sha256":"f7a020270b096a9d48004f033cff4228eb3db38335e17c791ea4c9f7c29f3a7d"},"downloads":-1,"filename":"yt_dlp-2024.6.15.232712.dev0.tar.gz","has_sig":false,"md5_digest":"ddbeaadbd6c5e22cf0b13f40440de5f6","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2813333,"upload_time":"2024-06-15T23:32:37","upload_time_iso_8601":"2024-06-15T23:32:37.117548Z","url":"https://files.pythonhosted.org/packages/c9/dc/c6571c459b085277f72161bab6a8707919667697ea9072e16cf25e33f1ee/yt_dlp-2024.6.15.232712.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.6.16.232832.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.6.16.232832.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.4.4; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.4.4; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.6.16.232832.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"48f7139cd740d6850ef01a53055fdcba7f638d5c48a70dab469eddd9231af095","md5":"9138fa65e8af11693fadd1c3c6473b04","sha256":"5cc35724984e343ea27fd1e1ada716c52203de54b1fe6223663ffbb6029698e9"},"downloads":-1,"filename":"yt_dlp-2024.6.16.232832.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"9138fa65e8af11693fadd1c3c6473b04","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3095430,"upload_time":"2024-06-16T23:33:58","upload_time_iso_8601":"2024-06-16T23:33:58.030715Z","url":"https://files.pythonhosted.org/packages/48/f7/139cd740d6850ef01a53055fdcba7f638d5c48a70dab469eddd9231af095/yt_dlp-2024.6.16.232832.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"3716d187cb5df4afba3d628c217faabe093ee3bddbde1f6ea5b069ea01367e1a","md5":"00f0ac83b44a977f6de143cb5b722542","sha256":"70676b889623e25ca409178e8dc5a919c088d4ce7deca8c317246d349560cd5c"},"downloads":-1,"filename":"yt_dlp-2024.6.16.232832.dev0.tar.gz","has_sig":false,"md5_digest":"00f0ac83b44a977f6de143cb5b722542","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2814542,"upload_time":"2024-06-16T23:34:03","upload_time_iso_8601":"2024-06-16T23:34:03.123560Z","url":"https://files.pythonhosted.org/packages/37/16/d187cb5df4afba3d628c217faabe093ee3bddbde1f6ea5b069ea01367e1a/yt_dlp-2024.6.16.232832.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.6.17.232743.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.6.17.232743.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.4.4; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.4.4; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.6.17.232743.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"1c8171b3c47ef77e20c58fe24d472f3c22899497e60a453c67c6a909c68b8c52","md5":"6a384df1e023836b43b68dc2ebd2b2c3","sha256":"dd6e7e194b96e778691f58a0cb6b42956cf956b22f6bb1a12bdef5ab3ac0c9ad"},"downloads":-1,"filename":"yt_dlp-2024.6.17.232743.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"6a384df1e023836b43b68dc2ebd2b2c3","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3098758,"upload_time":"2024-06-17T23:33:17","upload_time_iso_8601":"2024-06-17T23:33:17.967093Z","url":"https://files.pythonhosted.org/packages/1c/81/71b3c47ef77e20c58fe24d472f3c22899497e60a453c67c6a909c68b8c52/yt_dlp-2024.6.17.232743.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"23cc0c668d8a8b72359d9527f3eac9b35237427f4fcfc89b0ae8fb8ef41f625b","md5":"5b2319b53cfa6a0dac711a59196074df","sha256":"2f6f44eff755a7b051cdcd3c4375771033dbeb64d6164351022efdc67cce0c52"},"downloads":-1,"filename":"yt_dlp-2024.6.17.232743.dev0.tar.gz","has_sig":false,"md5_digest":"5b2319b53cfa6a0dac711a59196074df","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2817322,"upload_time":"2024-06-17T23:33:27","upload_time_iso_8601":"2024-06-17T23:33:27.319275Z","url":"https://files.pythonhosted.org/packages/23/cc/0c668d8a8b72359d9527f3eac9b35237427f4fcfc89b0ae8fb8ef41f625b/yt_dlp-2024.6.17.232743.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.6.20.232815.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.6.20.232815.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.4.4; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.4.4; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.6.20.232815.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"281083f05b2e9b7e6840754ea33af88c89c65615524da32701bda2e4834f2381","md5":"de7a6700bc835cae813c1cd326b72bbc","sha256":"0f37424d8cedd8607bdfe9832b6d4e14c567dc473966a7ea4e7fc8e619b52945"},"downloads":-1,"filename":"yt_dlp-2024.6.20.232815.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"de7a6700bc835cae813c1cd326b72bbc","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3099469,"upload_time":"2024-06-20T23:33:57","upload_time_iso_8601":"2024-06-20T23:33:57.813596Z","url":"https://files.pythonhosted.org/packages/28/10/83f05b2e9b7e6840754ea33af88c89c65615524da32701bda2e4834f2381/yt_dlp-2024.6.20.232815.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"05336032c19d3fad1d6ad0230889ddbba957ccc5064cb5601f3e7255e7dc5d04","md5":"ac267421ca6fbd43a1700a72b0d38d13","sha256":"34b4119a6d8210b2eda52e47b1be627b8972d6bd3b19883c975bbc4c76f58a34"},"downloads":-1,"filename":"yt_dlp-2024.6.20.232815.dev0.tar.gz","has_sig":false,"md5_digest":"ac267421ca6fbd43a1700a72b0d38d13","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2818276,"upload_time":"2024-06-20T23:34:04","upload_time_iso_8601":"2024-06-20T23:34:04.271772Z","url":"https://files.pythonhosted.org/packages/05/33/6032c19d3fad1d6ad0230889ddbba957ccc5064cb5601f3e7255e7dc5d04/yt_dlp-2024.6.20.232815.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.6.21.232706.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.6.21.232706.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.4.4; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.4.4; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.6.21.232706.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"c7fd3be8ff19f08fc413edbad2328fd8cfe5c87f321ce670c49f6ab5b7dbbbb8","md5":"5b1d22b08412451f4e9b912d30565b21","sha256":"c7da9705d2b0ac8de950b1e8205087f09855e91ffa8c654720a54534c32bdae9"},"downloads":-1,"filename":"yt_dlp-2024.6.21.232706.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"5b1d22b08412451f4e9b912d30565b21","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3099487,"upload_time":"2024-06-21T23:32:43","upload_time_iso_8601":"2024-06-21T23:32:43.640471Z","url":"https://files.pythonhosted.org/packages/c7/fd/3be8ff19f08fc413edbad2328fd8cfe5c87f321ce670c49f6ab5b7dbbbb8/yt_dlp-2024.6.21.232706.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"1646a32b142fcf0c1d8ffd5c4e0b1abf4ee3f17d56b5862c09ee56495cab1f68","md5":"b8e348e38afd7646153c1aa450a5e62f","sha256":"5fee1d77ce7b734e0ae8ca979791639480a9a8086e46fc483f5a928ab6e508fb"},"downloads":-1,"filename":"yt_dlp-2024.6.21.232706.dev0.tar.gz","has_sig":false,"md5_digest":"b8e348e38afd7646153c1aa450a5e62f","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2818487,"upload_time":"2024-06-21T23:32:49","upload_time_iso_8601":"2024-06-21T23:32:49.809093Z","url":"https://files.pythonhosted.org/packages/16/46/a32b142fcf0c1d8ffd5c4e0b1abf4ee3f17d56b5862c09ee56495cab1f68/yt_dlp-2024.6.21.232706.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.6.22.232706.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.6.22.232706.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.4.4; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.4.4; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.6.22.232706.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"f4c67089830816ceb00aa43c8e825d41d42304cabdbfada35a0464ff0af80a22","md5":"9b246e4c5ebc220678396896d9394362","sha256":"409532143f8474c29cce4a42e2411c75eb9599c31940f04004eadab71bcfe946"},"downloads":-1,"filename":"yt_dlp-2024.6.22.232706.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"9b246e4c5ebc220678396896d9394362","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3099519,"upload_time":"2024-06-22T23:32:31","upload_time_iso_8601":"2024-06-22T23:32:31.815039Z","url":"https://files.pythonhosted.org/packages/f4/c6/7089830816ceb00aa43c8e825d41d42304cabdbfada35a0464ff0af80a22/yt_dlp-2024.6.22.232706.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"db2701016de974df6529942f610d71568917608ccaef030b373c0eacc33994a7","md5":"549706ce905f5f563dfba3d130446d14","sha256":"ad187f2c8349dcac1c71225dc59604bff539c4f5f7b2d78d5029e99f30a7269a"},"downloads":-1,"filename":"yt_dlp-2024.6.22.232706.dev0.tar.gz","has_sig":false,"md5_digest":"549706ce905f5f563dfba3d130446d14","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2818627,"upload_time":"2024-06-22T23:32:37","upload_time_iso_8601":"2024-06-22T23:32:37.896659Z","url":"https://files.pythonhosted.org/packages/db/27/01016de974df6529942f610d71568917608ccaef030b373c0eacc33994a7/yt_dlp-2024.6.22.232706.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.6.24.232830.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.6.24.232830.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.4.4; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.4.4; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.6.24.232830.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"ff7c8933cea8eb5674f92de439c95c14d166d52a2298403c18370f837736ef26","md5":"31e04e45b8383c38ed82718f720756d9","sha256":"efffecef44ce688e9ee3c02226eb1ba4ad64b37744726e9e4df5c2bd04ea93c5"},"downloads":-1,"filename":"yt_dlp-2024.6.24.232830.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"31e04e45b8383c38ed82718f720756d9","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3099394,"upload_time":"2024-06-24T23:34:27","upload_time_iso_8601":"2024-06-24T23:34:27.820631Z","url":"https://files.pythonhosted.org/packages/ff/7c/8933cea8eb5674f92de439c95c14d166d52a2298403c18370f837736ef26/yt_dlp-2024.6.24.232830.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"7f9bf80c523ec1d0421cca6220475687b7680c8efc5d1ba609dc06e0526454d2","md5":"adee03efdff468445c76124b690b6400","sha256":"0e89b46958984954393692a8c41e0f6d76a773be2df381c3d3a4ff24ce89aa32"},"downloads":-1,"filename":"yt_dlp-2024.6.24.232830.dev0.tar.gz","has_sig":false,"md5_digest":"adee03efdff468445c76124b690b6400","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2818493,"upload_time":"2024-06-24T23:34:33","upload_time_iso_8601":"2024-06-24T23:34:33.992285Z","url":"https://files.pythonhosted.org/packages/7f/9b/f80c523ec1d0421cca6220475687b7680c8efc5d1ba609dc06e0526454d2/yt_dlp-2024.6.24.232830.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.6.27.232805.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.6.27.232805.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.4.4; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.4.4; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.6.27.232805.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"62095dbb16dac689a56bb059284b5bf2e974ca3c326d8337ad824943d81b25b6","md5":"1d3f7d2031ebfa443ecc3edbce0263f6","sha256":"4d97b2bef30af27899bd9ae7f3b31364c8c7125c89453a4541cc2828bf286982"},"downloads":-1,"filename":"yt_dlp-2024.6.27.232805.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"1d3f7d2031ebfa443ecc3edbce0263f6","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3100112,"upload_time":"2024-06-27T23:33:35","upload_time_iso_8601":"2024-06-27T23:33:35.811782Z","url":"https://files.pythonhosted.org/packages/62/09/5dbb16dac689a56bb059284b5bf2e974ca3c326d8337ad824943d81b25b6/yt_dlp-2024.6.27.232805.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"4afa1d61b2644e935842d064d33c1447c4410c7962174f6ab76600eaaf88fc9b","md5":"efdf421880daf39330e047a10dbbf434","sha256":"b558f765803a498f194487f66a42f99ba0cc1491012e25215ebce0ca2a7d253b"},"downloads":-1,"filename":"yt_dlp-2024.6.27.232805.dev0.tar.gz","has_sig":false,"md5_digest":"efdf421880daf39330e047a10dbbf434","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2819535,"upload_time":"2024-06-27T23:33:41","upload_time_iso_8601":"2024-06-27T23:33:41.863959Z","url":"https://files.pythonhosted.org/packages/4a/fa/1d61b2644e935842d064d33c1447c4410c7962174f6ab76600eaaf88fc9b/yt_dlp-2024.6.27.232805.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.6.29.232730.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.6.29.232730.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.6.29.232730.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"52e73bdfc0a92e03abed9f451eae5d1c8c02abffa722fd10166f8b60952e1c02","md5":"e7e751093cb50c851f9ae62464dd765b","sha256":"88feb16614f9cbb894ecb651c32d8c0687407d6fa2363da9ef76934b1b3ccb97"},"downloads":-1,"filename":"yt_dlp-2024.6.29.232730.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"e7e751093cb50c851f9ae62464dd765b","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3100227,"upload_time":"2024-06-29T23:32:46","upload_time_iso_8601":"2024-06-29T23:32:46.399053Z","url":"https://files.pythonhosted.org/packages/52/e7/3bdfc0a92e03abed9f451eae5d1c8c02abffa722fd10166f8b60952e1c02/yt_dlp-2024.6.29.232730.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"ed0a1ea26407ba4e359637c12a7aabd1fc87e596ff0b53b3032c24440a8ed359","md5":"c679ceb2bd01228eda4b46c3ef270ba0","sha256":"523e581beaae2df49a97d988b1833201826032cb79e6c30e9d3a3d1c222a2f93"},"downloads":-1,"filename":"yt_dlp-2024.6.29.232730.dev0.tar.gz","has_sig":false,"md5_digest":"c679ceb2bd01228eda4b46c3ef270ba0","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2819856,"upload_time":"2024-06-29T23:32:53","upload_time_iso_8601":"2024-06-29T23:32:53.013299Z","url":"https://files.pythonhosted.org/packages/ed/0a/1ea26407ba4e359637c12a7aabd1fc87e596ff0b53b3032c24440a8ed359/yt_dlp-2024.6.29.232730.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.6.30.232744.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.6.30.232744.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.6.30.232744.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"802e81bb908062366d1c996e3922c158af341fc8a33cc03d001fcc19dc5b5074","md5":"0913aea9445be2a6e08175d488184cb6","sha256":"62e0086b18ac5449277e9d9366ead4eb9e1ba0db23c607ad076da07f945fc1ea"},"downloads":-1,"filename":"yt_dlp-2024.6.30.232744.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"0913aea9445be2a6e08175d488184cb6","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3100750,"upload_time":"2024-06-30T23:33:15","upload_time_iso_8601":"2024-06-30T23:33:15.467353Z","url":"https://files.pythonhosted.org/packages/80/2e/81bb908062366d1c996e3922c158af341fc8a33cc03d001fcc19dc5b5074/yt_dlp-2024.6.30.232744.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"46ec18a27293975956588ec6f88591ce22a1db138c8e58f92ddc6bf3b356737a","md5":"10690fdd77cf385ebd2b4e792fdd5e90","sha256":"06dedc2e6b007a64d7f4019fe4f5773f1d6b9421d9f5f58df9e3233ce9683d5b"},"downloads":-1,"filename":"yt_dlp-2024.6.30.232744.dev0.tar.gz","has_sig":false,"md5_digest":"10690fdd77cf385ebd2b4e792fdd5e90","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2820773,"upload_time":"2024-06-30T23:33:21","upload_time_iso_8601":"2024-06-30T23:33:21.114082Z","url":"https://files.pythonhosted.org/packages/46/ec/18a27293975956588ec6f88591ce22a1db138c8e58f92ddc6bf3b356737a/yt_dlp-2024.6.30.232744.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-38519"],"details":"### Summary\n`yt-dlp` does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.\n\n### Patches\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions.\nThis means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, **always** have `.%(ext)s` at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, `system32`, or other binaries locations.\n\nFor users not able to upgrade:\n- Make sure the extension of the media to download is a common video/audio/sub/... one\n- Try to avoid the generic extractor (`--ies default,-generic`)\n- Keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`)\n- Omit any of the subtitle options (`--write-subs`, `--write-auto-subs`, `--all-subs`, `--write-srt`)\n- Use `--ignore-config --config-location ...` to not load config from common locations\n\n### Details\nOne potential exploitation might look like this:\n\nFrom a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains\n```html\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": \"ffmpeg\",\n    \"encodingFormat\": \"video/exe\",\n    \"contentUrl\": \"https://example.com/video.mp4\"\n}\n</script>\n```\nthis will try and download a file called `ffmpeg.exe` (`-o \"%(title)s.%(ext)s`).\n`ffmpeg.exe` will be searched for in the current directory, and so upon the next run arbitrary code can be executed.\n\nAlternatively, when engineering a file called `yt-dlp.conf` to be created, the config file could contain `--exec ...` and so would also execute arbitrary code.\n\n### Acknowledgement\nA big thanks to @JarLob for independently finding a new application of the same underlying issue.\nMore can be read about on the dedicated GitHub Security Lab disclosure here: [Path traversal saving subtitles (GHSL-2024-090)](<https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp>)\n\n### References\n- https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n- https://nvd.nist.gov/vuln/detail/CVE-2024-38519\n- https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01\n- https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a\n- https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp\n","fixed_in":["2024.07.01"],"id":"GHSA-79w7-vh3h-8g4j","link":"https://osv.dev/vulnerability/GHSA-79w7-vh3h-8g4j","source":"osv","summary":null,"withdrawn":null},{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.7.1":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.7.1/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.7.1","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"d4a3887779ff6882f9c72b4b9b565d1a8a3e5c4d1eca10d8da02a9a131f991c5","md5":"196c9146f74f5fc4fcaf7620a4d55923","sha256":"2479540f7a7bdea30258c7a46dfbd96e0904e706247db95c94bfa5a04239698a"},"downloads":-1,"filename":"yt_dlp-2024.7.1-py3-none-any.whl","has_sig":false,"md5_digest":"196c9146f74f5fc4fcaf7620a4d55923","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3109700,"upload_time":"2024-07-01T23:07:07","upload_time_iso_8601":"2024-07-01T23:07:07.359893Z","url":"https://files.pythonhosted.org/packages/d4/a3/887779ff6882f9c72b4b9b565d1a8a3e5c4d1eca10d8da02a9a131f991c5/yt_dlp-2024.7.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"db73b1a1f2ccb07456891ba28e8f0e37a22071d065e3b0866fe0b4fc5160e804","md5":"7224d00ffe6ba49e3360366ffafb287e","sha256":"eb0019474ffde6979378c07555fa01173cf55bde90b172a0181b5716793aaef2"},"downloads":-1,"filename":"yt_dlp-2024.7.1.tar.gz","has_sig":false,"md5_digest":"7224d00ffe6ba49e3360366ffafb287e","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2830145,"upload_time":"2024-07-01T23:07:13","upload_time_iso_8601":"2024-07-01T23:07:13.690986Z","url":"https://files.pythonhosted.org/packages/db/73/b1a1f2ccb07456891ba28e8f0e37a22071d065e3b0866fe0b4fc5160e804/yt_dlp-2024.7.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.7.1.232715.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.7.1.232715.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.7.1.232715.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"53d563bae7f79ef913dd146dab067d3282f3d8946c4354b8b56b13e5e800a521","md5":"0a8d3c04efa61a5a4c56ca9dff0b9b2a","sha256":"e9ab443353da0c8f01587b031fb84b2cc42eae82aeaa03a9ce5ed6edc301b503"},"downloads":-1,"filename":"yt_dlp-2024.7.1.232715.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"0a8d3c04efa61a5a4c56ca9dff0b9b2a","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3110008,"upload_time":"2024-07-01T23:32:52","upload_time_iso_8601":"2024-07-01T23:32:52.978829Z","url":"https://files.pythonhosted.org/packages/53/d5/63bae7f79ef913dd146dab067d3282f3d8946c4354b8b56b13e5e800a521/yt_dlp-2024.7.1.232715.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"e43443851839fb275407df06b5cef2f08f57ac2e4a5170cbb9967696107f40e6","md5":"d8dffd6100ac650f10ee5683f42f3028","sha256":"4f1ab25318c9156cca0b7308bdd2aeb3e7f01e8d9fb83916b4719010038170c8"},"downloads":-1,"filename":"yt_dlp-2024.7.1.232715.dev0.tar.gz","has_sig":false,"md5_digest":"d8dffd6100ac650f10ee5683f42f3028","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2830583,"upload_time":"2024-07-01T23:32:57","upload_time_iso_8601":"2024-07-01T23:32:57.453515Z","url":"https://files.pythonhosted.org/packages/e4/34/43851839fb275407df06b5cef2f08f57ac2e4a5170cbb9967696107f40e6/yt_dlp-2024.7.1.232715.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.7.10.232707.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.7.10.232707.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.8,>=0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.7.10.232707.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"5f93fb69018a9fe9c8eb7ca1f12392d42e601cce4498021055da400e387b14b5","md5":"54f0e937f4a4317b6bdde924c3c6dd85","sha256":"84740dd623b7423b83fc3590f895878375b4f9061942c0dcafc058354ec47177"},"downloads":-1,"filename":"yt_dlp-2024.7.10.232707.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"54f0e937f4a4317b6bdde924c3c6dd85","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3119651,"upload_time":"2024-07-10T23:33:32","upload_time_iso_8601":"2024-07-10T23:33:32.281808Z","url":"https://files.pythonhosted.org/packages/5f/93/fb69018a9fe9c8eb7ca1f12392d42e601cce4498021055da400e387b14b5/yt_dlp-2024.7.10.232707.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"53ab17b30ebebdaa3fbe2d1e4a5ca57796ce29de5d748fcad7f99527b8cd2ee4","md5":"dd85d6bc13d1f5f60103316196c68fcf","sha256":"bf24efb8c6f247375a736e952ecc4e9e5d2c4a7178d4e5a7efea8e7f64523c1b"},"downloads":-1,"filename":"yt_dlp-2024.7.10.232707.dev0.tar.gz","has_sig":false,"md5_digest":"dd85d6bc13d1f5f60103316196c68fcf","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2842474,"upload_time":"2024-07-10T23:33:38","upload_time_iso_8601":"2024-07-10T23:33:38.193086Z","url":"https://files.pythonhosted.org/packages/53/ab/17b30ebebdaa3fbe2d1e4a5ca57796ce29de5d748fcad7f99527b8cd2ee4/yt_dlp-2024.7.10.232707.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.7.11.232833.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.7.11.232833.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.8,>=0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.7.11.232833.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"684d6b9336ceb8cc2e2b369137d6144d8d654bc7a8dfd89b68592aa9a315572b","md5":"bf63360f95dbd958d14effbd0dab5dd0","sha256":"aea9b5e2a93b08f2cd6fc3e67b0ec9b353b525ae11c0fc8cadc2821016c94188"},"downloads":-1,"filename":"yt_dlp-2024.7.11.232833.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"bf63360f95dbd958d14effbd0dab5dd0","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3119651,"upload_time":"2024-07-11T23:35:05","upload_time_iso_8601":"2024-07-11T23:35:05.080904Z","url":"https://files.pythonhosted.org/packages/68/4d/6b9336ceb8cc2e2b369137d6144d8d654bc7a8dfd89b68592aa9a315572b/yt_dlp-2024.7.11.232833.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f454d87403de14072b9bf9d05f809cd991c96eef177183dd24bedbfbb8a4b972","md5":"c45cfe13e318aa1ba6ed9251d09f023c","sha256":"0f1f5ae417f96a6eb52607b796492941043983e77d97b7d22ffd7867c431824a"},"downloads":-1,"filename":"yt_dlp-2024.7.11.232833.dev0.tar.gz","has_sig":false,"md5_digest":"c45cfe13e318aa1ba6ed9251d09f023c","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2842530,"upload_time":"2024-07-11T23:35:11","upload_time_iso_8601":"2024-07-11T23:35:11.621605Z","url":"https://files.pythonhosted.org/packages/f4/54/d87403de14072b9bf9d05f809cd991c96eef177183dd24bedbfbb8a4b972/yt_dlp-2024.7.11.232833.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.7.12.232729.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.7.12.232729.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.8,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.7.12.232729.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"deae85d079d4892ab54dc97d38710c191610177ba600708bcc2c9604414e34c2","md5":"290844472ad50062ef9537a6871cf31a","sha256":"069720ade52f1fe2fc7ff20ac842e4edb57b9842b354701e201d5d9625ac5bd4"},"downloads":-1,"filename":"yt_dlp-2024.7.12.232729.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"290844472ad50062ef9537a6871cf31a","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3119652,"upload_time":"2024-07-12T23:33:52","upload_time_iso_8601":"2024-07-12T23:33:52.397990Z","url":"https://files.pythonhosted.org/packages/de/ae/85d079d4892ab54dc97d38710c191610177ba600708bcc2c9604414e34c2/yt_dlp-2024.7.12.232729.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"477a8f91ebabe3f564626cb7927e6a3931c17fde468072862174fc0d9450e50e","md5":"c270a98ecf73a243b48017b31d49165a","sha256":"d15785b3932d7e208125795516ad09035005245069fa7e20e61378b6323a304d"},"downloads":-1,"filename":"yt_dlp-2024.7.12.232729.dev0.tar.gz","has_sig":false,"md5_digest":"c270a98ecf73a243b48017b31d49165a","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2842573,"upload_time":"2024-07-12T23:33:59","upload_time_iso_8601":"2024-07-12T23:33:59.264358Z","url":"https://files.pythonhosted.org/packages/47/7a/8f91ebabe3f564626cb7927e6a3931c17fde468072862174fc0d9450e50e/yt_dlp-2024.7.12.232729.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.7.13.232701.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.7.13.232701.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.8,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.7.13.232701.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"ecd5cce10227f4481892368c962a22cdc1a976db0a95c865ec5518d29612422a","md5":"0c86bf495b20502d6e1f7eaaad2cd0ab","sha256":"7b3eb5d58615548e53062cfa084386592967fd7ec65057ec7d001b6029dc95d6"},"downloads":-1,"filename":"yt_dlp-2024.7.13.232701.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"0c86bf495b20502d6e1f7eaaad2cd0ab","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3120226,"upload_time":"2024-07-13T23:33:31","upload_time_iso_8601":"2024-07-13T23:33:31.133106Z","url":"https://files.pythonhosted.org/packages/ec/d5/cce10227f4481892368c962a22cdc1a976db0a95c865ec5518d29612422a/yt_dlp-2024.7.13.232701.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"50d47d0e05bbb5848a66c4d12a69ab5f5b6a00645cc9852c6a9d817048f71908","md5":"a6180fa265c5f4686d2fc153b67a153c","sha256":"bbc7eb57dc8033b474ad238d74df5b1eafc9160274585413d7befbd2dab9624b"},"downloads":-1,"filename":"yt_dlp-2024.7.13.232701.dev0.tar.gz","has_sig":false,"md5_digest":"a6180fa265c5f4686d2fc153b67a153c","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2843901,"upload_time":"2024-07-13T23:33:38","upload_time_iso_8601":"2024-07-13T23:33:38.119919Z","url":"https://files.pythonhosted.org/packages/50/d4/7d0e05bbb5848a66c4d12a69ab5f5b6a00645cc9852c6a9d817048f71908/yt_dlp-2024.7.13.232701.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.7.14.232743.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.7.14.232743.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.8,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.7.14.232743.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"6281cad5b1b79ff86d111db49aba1440f01be5765c37b878cba63af81df0e558","md5":"89a7369f91772d851a27c1948e238abd","sha256":"95fd60e48d8f7d587423bd29234fee0c3a2a5b76aaf4e6348969d2eefce6ba00"},"downloads":-1,"filename":"yt_dlp-2024.7.14.232743.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"89a7369f91772d851a27c1948e238abd","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3120777,"upload_time":"2024-07-14T23:34:31","upload_time_iso_8601":"2024-07-14T23:34:31.885832Z","url":"https://files.pythonhosted.org/packages/62/81/cad5b1b79ff86d111db49aba1440f01be5765c37b878cba63af81df0e558/yt_dlp-2024.7.14.232743.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"af7150708994ee8626329e08f5aa6b6f9e0c54eda9ac8482706f000111b62176","md5":"450f28e433a886071f5ad1244058686d","sha256":"9c0565bccfa2953e378428eb041283b1c406db92a127291173e313b7c0b97cd6"},"downloads":-1,"filename":"yt_dlp-2024.7.14.232743.dev0.tar.gz","has_sig":false,"md5_digest":"450f28e433a886071f5ad1244058686d","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2844746,"upload_time":"2024-07-14T23:34:38","upload_time_iso_8601":"2024-07-14T23:34:38.256597Z","url":"https://files.pythonhosted.org/packages/af/71/50708994ee8626329e08f5aa6b6f9e0c54eda9ac8482706f000111b62176/yt_dlp-2024.7.14.232743.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.7.15.232803.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.7.15.232803.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.8,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.7.15.232803.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"e1849e1c0376cbc424804364503dca74d5966798196fef0c89bb871a5ad3eb12","md5":"8c75ed8484d258d7859992f43dff1bd9","sha256":"f4614e1c710fcb387bf152d2162868c565ed3f675647ecaa19dab54e581780eb"},"downloads":-1,"filename":"yt_dlp-2024.7.15.232803.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"8c75ed8484d258d7859992f43dff1bd9","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3118674,"upload_time":"2024-07-15T23:34:24","upload_time_iso_8601":"2024-07-15T23:34:24.483252Z","url":"https://files.pythonhosted.org/packages/e1/84/9e1c0376cbc424804364503dca74d5966798196fef0c89bb871a5ad3eb12/yt_dlp-2024.7.15.232803.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"44268e748539e8be7298728a7ec42e08db471a03747526aa2a708635c5355290","md5":"5fcfff8203bfb0456c9ed9f69bbf4970","sha256":"2a59d9e65ef6dadb1ff318346d04403664c3fa395e098fcd0d7ad626ef9f8a89"},"downloads":-1,"filename":"yt_dlp-2024.7.15.232803.dev0.tar.gz","has_sig":false,"md5_digest":"5fcfff8203bfb0456c9ed9f69bbf4970","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2844252,"upload_time":"2024-07-15T23:34:31","upload_time_iso_8601":"2024-07-15T23:34:31.632090Z","url":"https://files.pythonhosted.org/packages/44/26/8e748539e8be7298728a7ec42e08db471a03747526aa2a708635c5355290/yt_dlp-2024.7.15.232803.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.7.16":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.7.16/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.8,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.7.16","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"2374e564c05aacf9c9ca421ea39b11374f37d4071cca9b2d0a3a81a0360b262d","md5":"d62688729c996652779c4b754472a5d9","sha256":"424805a112e757b141e767bc938d49db56d13d6415a92fa4cd8acadd55790be0"},"downloads":-1,"filename":"yt_dlp-2024.7.16-py3-none-any.whl","has_sig":false,"md5_digest":"d62688729c996652779c4b754472a5d9","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3118597,"upload_time":"2024-07-16T22:15:10","upload_time_iso_8601":"2024-07-16T22:15:10.870423Z","url":"https://files.pythonhosted.org/packages/23/74/e564c05aacf9c9ca421ea39b11374f37d4071cca9b2d0a3a81a0360b262d/yt_dlp-2024.7.16-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"734dccdd4a92f5604ad409f3d56a89896276a9a3c3bc8995e4dc566b012265ba","md5":"2623fe5813fc8b31b8e1873a194d28d3","sha256":"c5bd517a49dea1923ec8e14f51858f10fd89dfece14cb701392b480b41b2f516"},"downloads":-1,"filename":"yt_dlp-2024.7.16.tar.gz","has_sig":false,"md5_digest":"2623fe5813fc8b31b8e1873a194d28d3","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2844312,"upload_time":"2024-07-16T22:15:18","upload_time_iso_8601":"2024-07-16T22:15:18.900712Z","url":"https://files.pythonhosted.org/packages/73/4d/ccdd4a92f5604ad409f3d56a89896276a9a3c3bc8995e4dc566b012265ba/yt_dlp-2024.7.16.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.7.16.232919.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.7.16.232919.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.8,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.7.16.232919.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"e6e974a9436ded3457a2065f876792b6d921d0e837d07aec05efb21e598a12cd","md5":"85e61e7d2d5e4214d08aaae5712dfbe5","sha256":"a27a5e6b7b201698087f99469742f32b364e58c95d6849f576991f83bab18f92"},"downloads":-1,"filename":"yt_dlp-2024.7.16.232919.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"85e61e7d2d5e4214d08aaae5712dfbe5","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3118902,"upload_time":"2024-07-16T23:36:00","upload_time_iso_8601":"2024-07-16T23:36:00.821466Z","url":"https://files.pythonhosted.org/packages/e6/e9/74a9436ded3457a2065f876792b6d921d0e837d07aec05efb21e598a12cd/yt_dlp-2024.7.16.232919.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"aa4fd118dd64e856b0a38a1fc4c23954abea8a5ef34ea1dcd9e5fd58ecd9f20b","md5":"ae74eefb04fd5e5fd912a3e848cc2370","sha256":"e3fc4f11615bd6ab10521866ff89007c3dd698e956deddf64877740c98637284"},"downloads":-1,"filename":"yt_dlp-2024.7.16.232919.dev0.tar.gz","has_sig":false,"md5_digest":"ae74eefb04fd5e5fd912a3e848cc2370","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2844890,"upload_time":"2024-07-16T23:36:09","upload_time_iso_8601":"2024-07-16T23:36:09.849575Z","url":"https://files.pythonhosted.org/packages/aa/4f/d118dd64e856b0a38a1fc4c23954abea8a5ef34ea1dcd9e5fd58ecd9f20b/yt_dlp-2024.7.16.232919.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.7.19.25855.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.7.19.25855.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.8,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.7.19.25855.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"679ce7476ae6cce849db6380df0ddb45c13a0e0c3815eeb2c049d27dc4f03644","md5":"d4acd2fe01ddd5ae0daabf57d4a3949a","sha256":"e05ef99f5f4b794c54d3d854e5baa476867cc512cd836aafb7dd0b54d2c70256"},"downloads":-1,"filename":"yt_dlp-2024.7.19.25855.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"d4acd2fe01ddd5ae0daabf57d4a3949a","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3118553,"upload_time":"2024-07-19T03:06:30","upload_time_iso_8601":"2024-07-19T03:06:30.642937Z","url":"https://files.pythonhosted.org/packages/67/9c/e7476ae6cce849db6380df0ddb45c13a0e0c3815eeb2c049d27dc4f03644/yt_dlp-2024.7.19.25855.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"21e729f14c83e0c4e1602d1b1b2f13db6dc19c4fbce9169895462e2565d93cb4","md5":"25eaefe4ff7c6793f6cbc10bc423a3fb","sha256":"9b88823a7ab12da83f67413c885285012a106ce768a9bafdd84c39ee59469f21"},"downloads":-1,"filename":"yt_dlp-2024.7.19.25855.dev0.tar.gz","has_sig":false,"md5_digest":"25eaefe4ff7c6793f6cbc10bc423a3fb","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2844626,"upload_time":"2024-07-19T03:06:36","upload_time_iso_8601":"2024-07-19T03:06:36.093309Z","url":"https://files.pythonhosted.org/packages/21/e7/29f14c83e0c4e1602d1b1b2f13db6dc19c4fbce9169895462e2565d93cb4/yt_dlp-2024.7.19.25855.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.7.2":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.7.2/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.7.2","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"4c53bed78ddb9a1dbf2070c714fa34c2fa6b1c1633e67832b11dc448e6a02e81","md5":"2446dc2f265b4df19a28a88986b49b77","sha256":"4f76b48244c783e6ac06e8d7627bcf62cbeb4f6d79ba7e3cfc8249e680d4e691"},"downloads":-1,"filename":"yt_dlp-2024.7.2-py3-none-any.whl","has_sig":false,"md5_digest":"2446dc2f265b4df19a28a88986b49b77","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3110968,"upload_time":"2024-07-02T23:19:21","upload_time_iso_8601":"2024-07-02T23:19:21.581427Z","url":"https://files.pythonhosted.org/packages/4c/53/bed78ddb9a1dbf2070c714fa34c2fa6b1c1633e67832b11dc448e6a02e81/yt_dlp-2024.7.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"5ac3ebb3aa4b46550aaa1e125db81db8c4efbfe1436221e8ed60ee5a18930890","md5":"f2a21048b436383e0a0c6c8912dab3bf","sha256":"2b0c86b579d4a044eaf3c4b00e3d7b24d82e6e26869fa11c288ea4395b387f41"},"downloads":-1,"filename":"yt_dlp-2024.7.2.tar.gz","has_sig":false,"md5_digest":"f2a21048b436383e0a0c6c8912dab3bf","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2831702,"upload_time":"2024-07-02T23:19:27","upload_time_iso_8601":"2024-07-02T23:19:27.421485Z","url":"https://files.pythonhosted.org/packages/5a/c3/ebb3aa4b46550aaa1e125db81db8c4efbfe1436221e8ed60ee5a18930890/yt_dlp-2024.7.2.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.7.2.232715.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.7.2.232715.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.7.2.232715.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"0e17ffec03571096ccc3ea835b45240b7502eac8f8eeea676f10d429fc7a8a91","md5":"ab86c0ebcd0fe8c7bbfe83a3dd34d366","sha256":"5a44ccb69efc815425265323376da0abca192238475bbd67ca26a9804b1bb8b6"},"downloads":-1,"filename":"yt_dlp-2024.7.2.232715.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"ab86c0ebcd0fe8c7bbfe83a3dd34d366","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3111270,"upload_time":"2024-07-02T23:32:56","upload_time_iso_8601":"2024-07-02T23:32:56.221156Z","url":"https://files.pythonhosted.org/packages/0e/17/ffec03571096ccc3ea835b45240b7502eac8f8eeea676f10d429fc7a8a91/yt_dlp-2024.7.2.232715.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"5d3489359c28eef7b4072428d8b9064b4ed7cede2030a05f0a39f8d3d9a67580","md5":"b0055e53ca8d50681d0d70eaf1a9c2f4","sha256":"23658e2e12e066ed1a6abd7d27a2e4b70e4d1c6a4ef71d26a9f11d01adf7b278"},"downloads":-1,"filename":"yt_dlp-2024.7.2.232715.dev0.tar.gz","has_sig":false,"md5_digest":"b0055e53ca8d50681d0d70eaf1a9c2f4","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2832107,"upload_time":"2024-07-02T23:33:08","upload_time_iso_8601":"2024-07-02T23:33:08.384990Z","url":"https://files.pythonhosted.org/packages/5d/34/89359c28eef7b4072428d8b9064b4ed7cede2030a05f0a39f8d3d9a67580/yt_dlp-2024.7.2.232715.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.7.23.232906.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.7.23.232906.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.8,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.7.23.232906.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"a506ca28f6ca49704057934e5c1ecdfc57255dd98499c7737ba90627b34ede62","md5":"e180a3b5362f9b90f8540b90e35e94c9","sha256":"38778ae5d73b2ab985f45da3a0d7eda0166595cde8028267d2fe54e712155832"},"downloads":-1,"filename":"yt_dlp-2024.7.23.232906.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"e180a3b5362f9b90f8540b90e35e94c9","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3119410,"upload_time":"2024-07-23T23:36:38","upload_time_iso_8601":"2024-07-23T23:36:38.257201Z","url":"https://files.pythonhosted.org/packages/a5/06/ca28f6ca49704057934e5c1ecdfc57255dd98499c7737ba90627b34ede62/yt_dlp-2024.7.23.232906.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"8368b031d7e6d3804dea0eac724fef9793ea29d0ad9d426cdd2b47bdeb8d0158","md5":"db66494e2f7b391094c3e83a74114fce","sha256":"eba82828d5c12f633f5575ee7535ec67d763e20edd969cf2efaca933304b4590"},"downloads":-1,"filename":"yt_dlp-2024.7.23.232906.dev0.tar.gz","has_sig":false,"md5_digest":"db66494e2f7b391094c3e83a74114fce","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2845829,"upload_time":"2024-07-23T23:36:43","upload_time_iso_8601":"2024-07-23T23:36:43.763650Z","url":"https://files.pythonhosted.org/packages/83/68/b031d7e6d3804dea0eac724fef9793ea29d0ad9d426cdd2b47bdeb8d0158/yt_dlp-2024.7.23.232906.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.7.24.232745.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.7.24.232745.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.8,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.7.24.232745.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"53ad5115dc99937ca8dd4cf69d985236e13616a1a2fff7a87e286b54b35ac2a1","md5":"a31666e334f0f50f44fed738e0aad76f","sha256":"c1d88914c1f68f58f12a562b3b325572050e2da1b61dff113860a510e3b6b346"},"downloads":-1,"filename":"yt_dlp-2024.7.24.232745.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"a31666e334f0f50f44fed738e0aad76f","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3120697,"upload_time":"2024-07-24T23:34:27","upload_time_iso_8601":"2024-07-24T23:34:27.367051Z","url":"https://files.pythonhosted.org/packages/53/ad/5115dc99937ca8dd4cf69d985236e13616a1a2fff7a87e286b54b35ac2a1/yt_dlp-2024.7.24.232745.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"87a651f0efe0fd1a6fb30811c84d7e1df6643a112fc4beb450f92d467b9034a0","md5":"6dbe686b3e8d3f07ce212c85deec609b","sha256":"0f122da3b9ccc70cb0daede48642ae6e58028bd32e6dc247be77de6b3dbf023d"},"downloads":-1,"filename":"yt_dlp-2024.7.24.232745.dev0.tar.gz","has_sig":false,"md5_digest":"6dbe686b3e8d3f07ce212c85deec609b","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2847076,"upload_time":"2024-07-24T23:34:32","upload_time_iso_8601":"2024-07-24T23:34:32.870320Z","url":"https://files.pythonhosted.org/packages/87/a6/51f0efe0fd1a6fb30811c84d7e1df6643a112fc4beb450f92d467b9034a0/yt_dlp-2024.7.24.232745.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.7.25":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.7.25/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.8,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.7.25","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"166111d8c5bf197e596109dc51f1645149e26fc6c36bea423319e4eeb3e42192","md5":"a5326185f5d20c56e477e6207229e03e","sha256":"f44b5f33776b4f718900c670fe6e4698fb6fcd426455cd837cf25a1d6d4d9560"},"downloads":-1,"filename":"yt_dlp-2024.7.25-py3-none-any.whl","has_sig":false,"md5_digest":"a5326185f5d20c56e477e6207229e03e","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3120392,"upload_time":"2024-07-25T03:36:23","upload_time_iso_8601":"2024-07-25T03:36:23.525218Z","url":"https://files.pythonhosted.org/packages/16/61/11d8c5bf197e596109dc51f1645149e26fc6c36bea423319e4eeb3e42192/yt_dlp-2024.7.25-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"209ab8c8d096813d10402fec1d9ed1378636b5bd66a1e251a3746e4dd639a277","md5":"5eb4e8ff9ff0cd3b5c1aa72abaff0073","sha256":"7587aa25e236cf7b14bdb9378bbffff51202d901b04202be0cf62cbb56d3b52c"},"downloads":-1,"filename":"yt_dlp-2024.7.25.tar.gz","has_sig":false,"md5_digest":"5eb4e8ff9ff0cd3b5c1aa72abaff0073","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2846701,"upload_time":"2024-07-25T03:36:28","upload_time_iso_8601":"2024-07-25T03:36:28.986916Z","url":"https://files.pythonhosted.org/packages/20/9a/b8c8d096813d10402fec1d9ed1378636b5bd66a1e251a3746e4dd639a277/yt_dlp-2024.7.25.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.7.25.232820.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.7.25.232820.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.8,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.7.25.232820.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"9aad765e2beaeaa1c04963cfa206c0efe40cc927a2f22bd1507add3b734385c8","md5":"fe4ea943be331e37537fc4ea5e6c8807","sha256":"f8b26b5d76629db66ee9fbcbb7570469d32e43bba0cde3592c0a4e3634d0bbc2"},"downloads":-1,"filename":"yt_dlp-2024.7.25.232820.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"fe4ea943be331e37537fc4ea5e6c8807","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3120636,"upload_time":"2024-07-25T23:35:18","upload_time_iso_8601":"2024-07-25T23:35:18.031439Z","url":"https://files.pythonhosted.org/packages/9a/ad/765e2beaeaa1c04963cfa206c0efe40cc927a2f22bd1507add3b734385c8/yt_dlp-2024.7.25.232820.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"77bf9eeb3d48831a1a890c3db3e30ae7557c2d90921a40c148b4125c09ebdc22","md5":"18c4f393648104c39976ed54987affe0","sha256":"62300b9df61e21e32439f40255686a228f888785aea0995d83e338fefc1fb110"},"downloads":-1,"filename":"yt_dlp-2024.7.25.232820.dev0.tar.gz","has_sig":false,"md5_digest":"18c4f393648104c39976ed54987affe0","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2847154,"upload_time":"2024-07-25T23:35:23","upload_time_iso_8601":"2024-07-25T23:35:23.159167Z","url":"https://files.pythonhosted.org/packages/77/bf/9eeb3d48831a1a890c3db3e30ae7557c2d90921a40c148b4125c09ebdc22/yt_dlp-2024.7.25.232820.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.7.29.232758.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.7.29.232758.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.8,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.7.29.232758.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"6d911abe9a977be71b9cd76817f3e3e34b137812e84ccf4162e1a11b37b97674","md5":"89af3a9377ac7641186f7420b4e6cae4","sha256":"022fbcfa7e9ee7903319543daf49cc321dc2e7e0a16d171be7b2506fdd1f4cf3"},"downloads":-1,"filename":"yt_dlp-2024.7.29.232758.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"89af3a9377ac7641186f7420b4e6cae4","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3122708,"upload_time":"2024-07-29T23:35:06","upload_time_iso_8601":"2024-07-29T23:35:06.997542Z","url":"https://files.pythonhosted.org/packages/6d/91/1abe9a977be71b9cd76817f3e3e34b137812e84ccf4162e1a11b37b97674/yt_dlp-2024.7.29.232758.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"050e6fb52c9af3408e5fa22cfaac7f2cb6f2e1c802712210cf9d69b333aef04c","md5":"c1ba6ddc7cf452c743f0e409729c04eb","sha256":"91346c3f80eaa56833871ac206f1f6a443ef80274a657ece6c2b139d3848b907"},"downloads":-1,"filename":"yt_dlp-2024.7.29.232758.dev0.tar.gz","has_sig":false,"md5_digest":"c1ba6ddc7cf452c743f0e409729c04eb","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2849275,"upload_time":"2024-07-29T23:35:13","upload_time_iso_8601":"2024-07-29T23:35:13.029274Z","url":"https://files.pythonhosted.org/packages/05/0e/6fb52c9af3408e5fa22cfaac7f2cb6f2e1c802712210cf9d69b333aef04c/yt_dlp-2024.7.29.232758.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.7.3.232825.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.7.3.232825.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.7.3.232825.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"ca127fef8af00ceada3c6e41e10956e51b5042ac9bb48602032ce2d440aa1633","md5":"2c51d58aef17e98e265146a94ca19c85","sha256":"7108c5a540b279eeb466c18273529330a1f48ae4b90046f2a9fe047fd42a2775"},"downloads":-1,"filename":"yt_dlp-2024.7.3.232825.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"2c51d58aef17e98e265146a94ca19c85","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3111373,"upload_time":"2024-07-03T23:34:20","upload_time_iso_8601":"2024-07-03T23:34:20.520335Z","url":"https://files.pythonhosted.org/packages/ca/12/7fef8af00ceada3c6e41e10956e51b5042ac9bb48602032ce2d440aa1633/yt_dlp-2024.7.3.232825.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"ac4f2b0a534b5a9bbab7362e8fcdfa1e063aa2f37511d5b358bd1e116e8b00e3","md5":"c35582d3ad8c8a1a2a2318589c3f132d","sha256":"2feb04a16a6c707d3245bd290e73f8ff06dde147c15d1258cb95da8593bf7289"},"downloads":-1,"filename":"yt_dlp-2024.7.3.232825.dev0.tar.gz","has_sig":false,"md5_digest":"c35582d3ad8c8a1a2a2318589c3f132d","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2832369,"upload_time":"2024-07-03T23:34:26","upload_time_iso_8601":"2024-07-03T23:34:26.492817Z","url":"https://files.pythonhosted.org/packages/ac/4f/2b0a534b5a9bbab7362e8fcdfa1e063aa2f37511d5b358bd1e116e8b00e3/yt_dlp-2024.7.3.232825.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.7.30.232707.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.7.30.232707.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.8,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.7.30.232707.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"214724d0e1876d6c6cc0b71cfe12c65fc086005f22eba27edeac37b4b1c12ae1","md5":"2b33e90c6772d64332d7f5857f5e2620","sha256":"a7314bc28c7429b40ff680a07603a391165cd13dd75d0338fe1f6aa0420a88db"},"downloads":-1,"filename":"yt_dlp-2024.7.30.232707.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"2b33e90c6772d64332d7f5857f5e2620","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3124495,"upload_time":"2024-07-30T23:34:04","upload_time_iso_8601":"2024-07-30T23:34:04.492977Z","url":"https://files.pythonhosted.org/packages/21/47/24d0e1876d6c6cc0b71cfe12c65fc086005f22eba27edeac37b4b1c12ae1/yt_dlp-2024.7.30.232707.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"7855774cd2d78700233378a67dca2683a76b62cf637d4b35b247f733f8d9fadf","md5":"d7478b378077887b00d7019ccf4fe904","sha256":"50ad5152455e9b1ae81b02ce193b9dbfd12ece890a8b0e76640f0d34e0226ca7"},"downloads":-1,"filename":"yt_dlp-2024.7.30.232707.dev0.tar.gz","has_sig":false,"md5_digest":"d7478b378077887b00d7019ccf4fe904","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2850749,"upload_time":"2024-07-30T23:34:09","upload_time_iso_8601":"2024-07-30T23:34:09.772695Z","url":"https://files.pythonhosted.org/packages/78/55/774cd2d78700233378a67dca2683a76b62cf637d4b35b247f733f8d9fadf/yt_dlp-2024.7.30.232707.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.7.31.232733.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.7.31.232733.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.8,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.7.31.232733.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"7460ff2a7407fc43923af197f76eb818f09d4e550539f1f12bcca44a5dc46f3c","md5":"a72b5a1a6ae7324f177c2c40767a3ed0","sha256":"544a1deb4b4e20d57d3bd17780bbb6afca697bb6825f197c97afc16559e3ecc3"},"downloads":-1,"filename":"yt_dlp-2024.7.31.232733.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"a72b5a1a6ae7324f177c2c40767a3ed0","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3126596,"upload_time":"2024-07-31T23:35:33","upload_time_iso_8601":"2024-07-31T23:35:33.876775Z","url":"https://files.pythonhosted.org/packages/74/60/ff2a7407fc43923af197f76eb818f09d4e550539f1f12bcca44a5dc46f3c/yt_dlp-2024.7.31.232733.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"06416c739d0ef2fb5befd77fccc7e79b020d59e676390db4501a99a843e97224","md5":"58a68d3fce47219a6b3bd9036bbb1b6e","sha256":"223deb7c80dc91e84b5db6118ea5f18795ce1ebf2200dee7ebf907bb3d9119cd"},"downloads":-1,"filename":"yt_dlp-2024.7.31.232733.dev0.tar.gz","has_sig":false,"md5_digest":"58a68d3fce47219a6b3bd9036bbb1b6e","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2852799,"upload_time":"2024-07-31T23:35:39","upload_time_iso_8601":"2024-07-31T23:35:39.551170Z","url":"https://files.pythonhosted.org/packages/06/41/6c739d0ef2fb5befd77fccc7e79b020d59e676390db4501a99a843e97224/yt_dlp-2024.7.31.232733.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.7.5.232716.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.7.5.232716.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.7.5.232716.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"d8d8a7b3e3ccb5846f160fbb157a1e7c9329d7713dbaa9bd286a8232f2889a78","md5":"9f7242421702ca4fcd69e288be35b750","sha256":"4b5e3c65648d03748f7251e0c0e9d3fd89f7fcb4e47add077f3da2516d6ab677"},"downloads":-1,"filename":"yt_dlp-2024.7.5.232716.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"9f7242421702ca4fcd69e288be35b750","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3116707,"upload_time":"2024-07-05T23:32:47","upload_time_iso_8601":"2024-07-05T23:32:47.654117Z","url":"https://files.pythonhosted.org/packages/d8/d8/a7b3e3ccb5846f160fbb157a1e7c9329d7713dbaa9bd286a8232f2889a78/yt_dlp-2024.7.5.232716.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"99f025b052e336200fac9fbba3d53de3a9509f9c29a47a9b0a11a7dc0a4aca6d","md5":"41e8bad9345a3ba65b06e8246361ebf3","sha256":"f2bfb6daf05ab5a4c2666169763b2c289c0f1836882eacd682275c5f51b212fe"},"downloads":-1,"filename":"yt_dlp-2024.7.5.232716.dev0.tar.gz","has_sig":false,"md5_digest":"41e8bad9345a3ba65b06e8246361ebf3","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2837748,"upload_time":"2024-07-05T23:32:52","upload_time_iso_8601":"2024-07-05T23:32:52.602904Z","url":"https://files.pythonhosted.org/packages/99/f0/25b052e336200fac9fbba3d53de3a9509f9c29a47a9b0a11a7dc0a4aca6d/yt_dlp-2024.7.5.232716.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.7.6.232701.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.7.6.232701.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.7.6.232701.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"a1993dcbf7a28f36f64760819098e8dd99d97925eddbc69251775252c0d680dc","md5":"22a91f50f222b24da59f0654e395ff27","sha256":"b090873cfdfaeb0aed99e96d65d80c3653bdadeebaff984f642cf9310a992fb9"},"downloads":-1,"filename":"yt_dlp-2024.7.6.232701.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"22a91f50f222b24da59f0654e395ff27","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3117007,"upload_time":"2024-07-06T23:33:46","upload_time_iso_8601":"2024-07-06T23:33:46.794220Z","url":"https://files.pythonhosted.org/packages/a1/99/3dcbf7a28f36f64760819098e8dd99d97925eddbc69251775252c0d680dc/yt_dlp-2024.7.6.232701.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"1cfcf207354d04a86187dc74b66fb93ea90146a3b924f0e00501d5ce9d356d6c","md5":"a7d787af08d895edc5ce35593b86d762","sha256":"c04c6a311f5011b117e185df87c3614986d488b59fcbcbc95a0c80ebe0731150"},"downloads":-1,"filename":"yt_dlp-2024.7.6.232701.dev0.tar.gz","has_sig":false,"md5_digest":"a7d787af08d895edc5ce35593b86d762","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2837984,"upload_time":"2024-07-06T23:33:53","upload_time_iso_8601":"2024-07-06T23:33:53.298530Z","url":"https://files.pythonhosted.org/packages/1c/fc/f207354d04a86187dc74b66fb93ea90146a3b924f0e00501d5ce9d356d6c/yt_dlp-2024.7.6.232701.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":[],"details":"### Impact\nyt-dlp's DouyuTV and DouyuShow extractors used a `cdn.bootcdn.net` URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using [PhantomJS](https://github.com/ariya/phantomjs). `bootcdn.net` is owned by the bad actor responsible for the [Polyfill JS supply chain attack](https://sansec.io/research/polyfill-supply-chain-attack) that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.\n\nIn order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:\n1. The user has PhantomJS installed on their system.\n2. The user passes a `douyu.com` or `douyutv.com` URL to yt-dlp as input, or passes a URL that redirects to one of these domains.\n3. `cdnjs.cloudflare.com` is unavailable or blocked at the time of extraction, necessitating the usage of the `cdn.bootcdn.net` fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from `cdn.bootcdn.net` had been cached to disk.\n\n### Patches\nyt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.\n\n### Workarounds\nIt is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.\n\nFor users not able to upgrade:\n- Avoid using the Douyu extractors (`--ies default,-douyutv,-douyushow`)\n- Uninstall (or do not install) PhantomJS\n\n### Acknowledgement\nThanks to @LeSuisse for [reporting this](https://github.com/yt-dlp/yt-dlp/pull/10347) promptly after `bootcdn.net` was discovered to be under control of the same bad actor behind the `polyfill.io` supply chain attack.\n\n### References\n- https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41\n- https://sansec.io/research/polyfill-supply-chain-attack\n","fixed_in":["2024.07.07"],"id":"GHSA-3v33-3wmw-3785","link":"https://osv.dev/vulnerability/GHSA-3v33-3wmw-3785","source":"osv","summary":null,"withdrawn":null}]},"2024.7.7":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.7.7/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.7.7","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"3d31e6cf721778ac1a6b920a28ed3db5c83dde6e2a337595ced5bfee865cd71c","md5":"a1cec8c35c21a65ee22f7d9712510d04","sha256":"2e90abeadc0199c787b1b4a3e0a1c8ed9d7c9f824f58da88467a1b30ed745e07"},"downloads":-1,"filename":"yt_dlp-2024.7.7-py3-none-any.whl","has_sig":false,"md5_digest":"a1cec8c35c21a65ee22f7d9712510d04","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3118714,"upload_time":"2024-07-07T21:41:43","upload_time_iso_8601":"2024-07-07T21:41:43.975029Z","url":"https://files.pythonhosted.org/packages/3d/31/e6cf721778ac1a6b920a28ed3db5c83dde6e2a337595ced5bfee865cd71c/yt_dlp-2024.7.7-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"dfec09031f0179cd0d41cdd40de14d18cda31061fffeaa29c8ee56219cbda599","md5":"cc11c0bbea0d1a5c291730d5a472050b","sha256":"2a0f89423d25d47db949925db5bd2c6f651960ae93dbbf5b3ed61cf3a4078ce5"},"downloads":-1,"filename":"yt_dlp-2024.7.7.tar.gz","has_sig":false,"md5_digest":"cc11c0bbea0d1a5c291730d5a472050b","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2839886,"upload_time":"2024-07-07T21:41:51","upload_time_iso_8601":"2024-07-07T21:41:51.276944Z","url":"https://files.pythonhosted.org/packages/df/ec/09031f0179cd0d41cdd40de14d18cda31061fffeaa29c8ee56219cbda599/yt_dlp-2024.7.7.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.7.7.232743.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.7.7.232743.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.7.7.232743.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"0939688e8a54232820d5cf275171a8ff379043b0481523044575d83b60445e8c","md5":"fbe34316228c599f8e272c441c0553e3","sha256":"b2ad27bbf51c7f4f4ae9067e82b864b068c301b6c0a94de4ef5cf93eba4450f3"},"downloads":-1,"filename":"yt_dlp-2024.7.7.232743.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"fbe34316228c599f8e272c441c0553e3","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3119017,"upload_time":"2024-07-07T23:34:36","upload_time_iso_8601":"2024-07-07T23:34:36.154820Z","url":"https://files.pythonhosted.org/packages/09/39/688e8a54232820d5cf275171a8ff379043b0481523044575d83b60445e8c/yt_dlp-2024.7.7.232743.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"310cd3b4eead856d6d3468632e71636cb99c1c02a6f7c84947377c965de61886","md5":"5804c8516156ccc77bc329c7a4325d65","sha256":"844596c6d8b9affdbfc82fef4bcb7c0054c0f19e253094c0ed7d9003e1b4802e"},"downloads":-1,"filename":"yt_dlp-2024.7.7.232743.dev0.tar.gz","has_sig":false,"md5_digest":"5804c8516156ccc77bc329c7a4325d65","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2840352,"upload_time":"2024-07-07T23:34:42","upload_time_iso_8601":"2024-07-07T23:34:42.190652Z","url":"https://files.pythonhosted.org/packages/31/0c/d3b4eead856d6d3468632e71636cb99c1c02a6f7c84947377c965de61886/yt_dlp-2024.7.7.232743.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.7.8":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.7.8/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.7.8","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"36e763a8534756e0530a0d425eacfc88dd29852c7be0608de91e69a514cd9e9a","md5":"73d68d0c51c2843d0c8dae1b46259b8f","sha256":"d12fb17540f7da7c2c9fcd68a655f573d124548ea37657662cd4e471d14c14d2"},"downloads":-1,"filename":"yt_dlp-2024.7.8-py3-none-any.whl","has_sig":false,"md5_digest":"73d68d0c51c2843d0c8dae1b46259b8f","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3118988,"upload_time":"2024-07-08T22:25:56","upload_time_iso_8601":"2024-07-08T22:25:56.350421Z","url":"https://files.pythonhosted.org/packages/36/e7/63a8534756e0530a0d425eacfc88dd29852c7be0608de91e69a514cd9e9a/yt_dlp-2024.7.8-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"1bb0fa65235daddb197109fbd2fabecd9587ae37a598d966464c873b1f281dd3","md5":"3289fc1ffb064f1b11c553208fd1eeaa","sha256":"9367e9b2e8dac4b37f512d21a4533273de22009dd74588ad24a7528c7f77b806"},"downloads":-1,"filename":"yt_dlp-2024.7.8.tar.gz","has_sig":false,"md5_digest":"3289fc1ffb064f1b11c553208fd1eeaa","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2840676,"upload_time":"2024-07-08T22:26:03","upload_time_iso_8601":"2024-07-08T22:26:03.105255Z","url":"https://files.pythonhosted.org/packages/1b/b0/fa65235daddb197109fbd2fabecd9587ae37a598d966464c873b1f281dd3/yt_dlp-2024.7.8.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.7.8.232708.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.7.8.232708.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.7.8.232708.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"7065f06d22478473b64acf3ecc521ee8e905225408adbf7333125db1e8fd1f77","md5":"fdd2d9ad3e8b0d6056363ddc6de98969","sha256":"57a746f896283556569c6a122cd78514056b0635d82c4664669606330b2e68a6"},"downloads":-1,"filename":"yt_dlp-2024.7.8.232708.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"fdd2d9ad3e8b0d6056363ddc6de98969","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3119291,"upload_time":"2024-07-08T23:33:44","upload_time_iso_8601":"2024-07-08T23:33:44.458041Z","url":"https://files.pythonhosted.org/packages/70/65/f06d22478473b64acf3ecc521ee8e905225408adbf7333125db1e8fd1f77/yt_dlp-2024.7.8.232708.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"d17c0dde24239f5112f81f8cd722e5fc5eb0910752bb1cac9ad087083a390c0d","md5":"ced6f9e6e60f6df3234ef38accb6be20","sha256":"cde03b124f84b05505d8e7f9a79c2f94f7f6fe375ca26aa8b11173bced86a334"},"downloads":-1,"filename":"yt_dlp-2024.7.8.232708.dev0.tar.gz","has_sig":false,"md5_digest":"ced6f9e6e60f6df3234ef38accb6be20","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2841189,"upload_time":"2024-07-08T23:33:51","upload_time_iso_8601":"2024-07-08T23:33:51.066375Z","url":"https://files.pythonhosted.org/packages/d1/7c/0dde24239f5112f81f8cd722e5fc5eb0910752bb1cac9ad087083a390c0d/yt_dlp-2024.7.8.232708.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.7.9":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.7.9/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.7.9","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"c6b3456c9a96bc7cbfb6201cbc5144c06e2ab941f94afb8e5be3e0f3041a7351","md5":"4a935c9463dc054931aab7c928c609e0","sha256":"b50a595abde523b5cc84d788f97e69c642503bd673ba740f709ebf65b5ec6592"},"downloads":-1,"filename":"yt_dlp-2024.7.9-py3-none-any.whl","has_sig":false,"md5_digest":"4a935c9463dc054931aab7c928c609e0","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3118947,"upload_time":"2024-07-09T01:57:39","upload_time_iso_8601":"2024-07-09T01:57:39.915714Z","url":"https://files.pythonhosted.org/packages/c6/b3/456c9a96bc7cbfb6201cbc5144c06e2ab941f94afb8e5be3e0f3041a7351/yt_dlp-2024.7.9-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"2d2a9eeaaf4f3c9253c332d065ae9adf925742f46bf033864754d01a2aae66ec","md5":"c5d721365b0201f43f1ab8cecfd8509d","sha256":"e19f00f9e55e90bca1c94bcaf809aa33e51634be9f0de2df84a72d3206934f94"},"downloads":-1,"filename":"yt_dlp-2024.7.9.tar.gz","has_sig":false,"md5_digest":"c5d721365b0201f43f1ab8cecfd8509d","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2841060,"upload_time":"2024-07-09T01:57:46","upload_time_iso_8601":"2024-07-09T01:57:46.253034Z","url":"https://files.pythonhosted.org/packages/2d/2a/9eeaaf4f3c9253c332d065ae9adf925742f46bf033864754d01a2aae66ec/yt_dlp-2024.7.9.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.7.9.232843.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.7.9.232843.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools; extra == \"build\"","wheel; extra == \"build\"","curl-cffi==0.5.10; implementation_name == \"cpython\" and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.7.9.232843.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"6eb80ee13930d953c2466eb07abeed9b6459ad664ee96fc9fce2ac1740efd427","md5":"59b20a94bd6d3583e3e3319ee3433903","sha256":"d6b1f0ab67c826dc30e14f816086c9db8d1d264964e670bb176a0b5b0b743e7a"},"downloads":-1,"filename":"yt_dlp-2024.7.9.232843.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"59b20a94bd6d3583e3e3319ee3433903","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3119261,"upload_time":"2024-07-09T23:35:27","upload_time_iso_8601":"2024-07-09T23:35:27.088896Z","url":"https://files.pythonhosted.org/packages/6e/b8/0ee13930d953c2466eb07abeed9b6459ad664ee96fc9fce2ac1740efd427/yt_dlp-2024.7.9.232843.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"581b32b8ba3554f42199ea2c7b26ff3131b7c077292065e2d1a33a15c4400ed9","md5":"14bc2c93fbe3460164001dfa7275301c","sha256":"efe18cf05012b09e6f5f052c07cff9a59e0a79d2fe3edad2c57c46b4ed8695cf"},"downloads":-1,"filename":"yt_dlp-2024.7.9.232843.dev0.tar.gz","has_sig":false,"md5_digest":"14bc2c93fbe3460164001dfa7275301c","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2841789,"upload_time":"2024-07-09T23:35:34","upload_time_iso_8601":"2024-07-09T23:35:34.766548Z","url":"https://files.pythonhosted.org/packages/58/1b/32b8ba3554f42199ea2c7b26ff3131b7c077292065e2d1a33a15c4400ed9/yt_dlp-2024.7.9.232843.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.8.1":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.8.1/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.8,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.8.1","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"01ba585ea70a2caa4f25447080144398c8243b117eb5deb6462622bbce5ea4a4","md5":"ef1a7970e59cdcb4f8bee930347f6e93","sha256":"d0d927038e30a05f6eab26ff6189628456ea21bb159a3d9dc2e855eef2810eac"},"downloads":-1,"filename":"yt_dlp-2024.8.1-py3-none-any.whl","has_sig":false,"md5_digest":"ef1a7970e59cdcb4f8bee930347f6e93","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3127102,"upload_time":"2024-08-01T15:18:57","upload_time_iso_8601":"2024-08-01T15:18:57.328217Z","url":"https://files.pythonhosted.org/packages/01/ba/585ea70a2caa4f25447080144398c8243b117eb5deb6462622bbce5ea4a4/yt_dlp-2024.8.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"1224652cb8bad19b4cebb19c1f26637317d32c84b571050b27e28fcfbcc55323","md5":"6f770d7da61c31d4c208c0e7f5fc9b09","sha256":"4318aa523694611562f01419c8d526b662a72df34ef8ba454016b34c8366c158"},"downloads":-1,"filename":"yt_dlp-2024.8.1.tar.gz","has_sig":false,"md5_digest":"6f770d7da61c31d4c208c0e7f5fc9b09","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2853245,"upload_time":"2024-08-01T15:19:02","upload_time_iso_8601":"2024-08-01T15:19:02.258338Z","url":"https://files.pythonhosted.org/packages/12/24/652cb8bad19b4cebb19c1f26637317d32c84b571050b27e28fcfbcc55323/yt_dlp-2024.8.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.8.1.232808.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.8.1.232808.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.8,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.8.1.232808.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"8d9dbc2ec4f51061dfdd06089911bec1476ccfc2b5cd189d85936130c2eedfdc","md5":"1bfc7ccacd6d8853aa5ff988166d7508","sha256":"fa988f1f0176d4bb9b458368aa0278729fe13e6dc326bc3cd1617905aa948e1a"},"downloads":-1,"filename":"yt_dlp-2024.8.1.232808.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"1bfc7ccacd6d8853aa5ff988166d7508","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3127521,"upload_time":"2024-08-01T23:35:06","upload_time_iso_8601":"2024-08-01T23:35:06.775033Z","url":"https://files.pythonhosted.org/packages/8d/9d/bc2ec4f51061dfdd06089911bec1476ccfc2b5cd189d85936130c2eedfdc/yt_dlp-2024.8.1.232808.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"d14367fa29eadf98b59b01bedf7319cea74a9f74203d11b7795a5e75fadbb925","md5":"a23780b7936b0f5ea92bded46ae314b4","sha256":"6355b79ba1bd29f698b63a98f480910bb765c800544dea5208368e339453381b"},"downloads":-1,"filename":"yt_dlp-2024.8.1.232808.dev0.tar.gz","has_sig":false,"md5_digest":"a23780b7936b0f5ea92bded46ae314b4","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2853892,"upload_time":"2024-08-01T23:35:11","upload_time_iso_8601":"2024-08-01T23:35:11.863898Z","url":"https://files.pythonhosted.org/packages/d1/43/67fa29eadf98b59b01bedf7319cea74a9f74203d11b7795a5e75fadbb925/yt_dlp-2024.8.1.232808.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.8.12.232840.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.8.12.232840.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.8,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.8.12.232840.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"7725df83ae9e6670ceb82ea1967e6c794aef559a5f5264d5cddd3315a37938a2","md5":"c0ab6536e8923c2afa490451d0903b56","sha256":"7cee56b71423baca4a47b6a3c89471f296daffaf5ec5611f664eb8c1cf8ce336"},"downloads":-1,"filename":"yt_dlp-2024.8.12.232840.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"c0ab6536e8923c2afa490451d0903b56","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3128090,"upload_time":"2024-08-12T23:36:35","upload_time_iso_8601":"2024-08-12T23:36:35.023836Z","url":"https://files.pythonhosted.org/packages/77/25/df83ae9e6670ceb82ea1967e6c794aef559a5f5264d5cddd3315a37938a2/yt_dlp-2024.8.12.232840.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"711522be213da344254ae6ae180d352988910e131ee30705a15441da45560f84","md5":"a0fc7843a4153cb9265a248539a35d9d","sha256":"b8259fc6d24d8c0e9c68f2a51f85ffd0abc0e54bae5a6ea6c9294185ab22f356"},"downloads":-1,"filename":"yt_dlp-2024.8.12.232840.dev0.tar.gz","has_sig":false,"md5_digest":"a0fc7843a4153cb9265a248539a35d9d","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2855026,"upload_time":"2024-08-12T23:36:37","upload_time_iso_8601":"2024-08-12T23:36:37.918082Z","url":"https://files.pythonhosted.org/packages/71/15/22be213da344254ae6ae180d352988910e131ee30705a15441da45560f84/yt_dlp-2024.8.12.232840.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.8.13.232739.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.8.13.232739.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.8,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.8.13.232739.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"ab818357c299d219714dbb49fdd423aa60bcd1e2645afd96e26358cb821ab663","md5":"1f5248fd5645c676a150e7ee4849d6a1","sha256":"7f7b93e62e82308f5b200452193756cb3612aadc3be8f93506a1ab8da6c78348"},"downloads":-1,"filename":"yt_dlp-2024.8.13.232739.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"1f5248fd5645c676a150e7ee4849d6a1","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3128228,"upload_time":"2024-08-13T23:35:10","upload_time_iso_8601":"2024-08-13T23:35:10.033834Z","url":"https://files.pythonhosted.org/packages/ab/81/8357c299d219714dbb49fdd423aa60bcd1e2645afd96e26358cb821ab663/yt_dlp-2024.8.13.232739.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"513878b0b7dc7bf094ba2296e840be4d7d9eb2a1b0c355a63b4f0cd297c84442","md5":"f8d550e53b14ab907e2a37d7fd7c798a","sha256":"fd9a11052d7ed91092fa3a0ff7101198c1a7bd31d7adf92a54613f852daeea69"},"downloads":-1,"filename":"yt_dlp-2024.8.13.232739.dev0.tar.gz","has_sig":false,"md5_digest":"f8d550e53b14ab907e2a37d7fd7c798a","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2855157,"upload_time":"2024-08-13T23:35:12","upload_time_iso_8601":"2024-08-13T23:35:12.235928Z","url":"https://files.pythonhosted.org/packages/51/38/78b0b7dc7bf094ba2296e840be4d7d9eb2a1b0c355a63b4f0cd297c84442/yt_dlp-2024.8.13.232739.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.8.15.233031.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.8.15.233031.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.8,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.8.15.233031.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"1a772304e682969630fcbaeb5031a27466fd4680fe484b03a1d42f02b1cbcd94","md5":"5dec825e304d59f24a4f68b262899162","sha256":"f153532bec345eb91857f1421999ebe83252181893e8b8e88461a2d01c60bffc"},"downloads":-1,"filename":"yt_dlp-2024.8.15.233031.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"5dec825e304d59f24a4f68b262899162","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3128501,"upload_time":"2024-08-15T23:38:24","upload_time_iso_8601":"2024-08-15T23:38:24.254096Z","url":"https://files.pythonhosted.org/packages/1a/77/2304e682969630fcbaeb5031a27466fd4680fe484b03a1d42f02b1cbcd94/yt_dlp-2024.8.15.233031.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"6551081303787a8a85343d5bd9517127554d1dab34b0e1c9c1b2e0adec0b32de","md5":"5d59860ed07b9be676e54d23a8330e2a","sha256":"d05c2e7f7a2ff2a6f1b3a898cdf6cca9e31717dbd19be9e7fb3cadd0492918b1"},"downloads":-1,"filename":"yt_dlp-2024.8.15.233031.dev0.tar.gz","has_sig":false,"md5_digest":"5d59860ed07b9be676e54d23a8330e2a","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2855616,"upload_time":"2024-08-15T23:38:26","upload_time_iso_8601":"2024-08-15T23:38:26.572824Z","url":"https://files.pythonhosted.org/packages/65/51/081303787a8a85343d5bd9517127554d1dab34b0e1c9c1b2e0adec0b32de/yt_dlp-2024.8.15.233031.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.8.18.232809.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.8.18.232809.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.8,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.8.18.232809.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"96fa94b97f440ca1563f2eaace54112df5a3b0ae328f8074fe0b7d68255e7dc1","md5":"80b7434e56b7fbd2dbffecaef79dd47d","sha256":"9ad0f84747d145e561cc72a93a4cd433a24469cb81127b2e82e1b1c5a7291f0c"},"downloads":-1,"filename":"yt_dlp-2024.8.18.232809.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"80b7434e56b7fbd2dbffecaef79dd47d","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3128514,"upload_time":"2024-08-18T23:35:54","upload_time_iso_8601":"2024-08-18T23:35:54.165133Z","url":"https://files.pythonhosted.org/packages/96/fa/94b97f440ca1563f2eaace54112df5a3b0ae328f8074fe0b7d68255e7dc1/yt_dlp-2024.8.18.232809.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f8b23fe1071023991d81c96fc9db5012b16f5bf6a9dd3c10d824f78f3b6fce3d","md5":"2668f983a88204fb8849c9213af1c3a6","sha256":"77bee00753925d01e55086667c5be989e4f06404b40f126d79c514412373de0a"},"downloads":-1,"filename":"yt_dlp-2024.8.18.232809.dev0.tar.gz","has_sig":false,"md5_digest":"2668f983a88204fb8849c9213af1c3a6","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2855716,"upload_time":"2024-08-18T23:35:56","upload_time_iso_8601":"2024-08-18T23:35:56.535514Z","url":"https://files.pythonhosted.org/packages/f8/b2/3fe1071023991d81c96fc9db5012b16f5bf6a9dd3c10d824f78f3b6fce3d/yt_dlp-2024.8.18.232809.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.8.19.232821.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.8.19.232821.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.8,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.8.19.232821.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"82884fd0cbc3bb0bf04bb6eb7134db2f488591c979f826d6108d45ba7cd8f0f6","md5":"97adcd7c77076ef6d12d946281508d58","sha256":"5f07f6e93796db98e22876a34a01789c8efb97088e9e5a00fe4c63d169908ecf"},"downloads":-1,"filename":"yt_dlp-2024.8.19.232821.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"97adcd7c77076ef6d12d946281508d58","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3129749,"upload_time":"2024-08-19T23:35:41","upload_time_iso_8601":"2024-08-19T23:35:41.140605Z","url":"https://files.pythonhosted.org/packages/82/88/4fd0cbc3bb0bf04bb6eb7134db2f488591c979f826d6108d45ba7cd8f0f6/yt_dlp-2024.8.19.232821.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"8a653357f88fa6fd11dc004854b23e7cddb292183d1660add940bcb6fd23cd97","md5":"702c4d4a946ff8bd8f5e33b385feede3","sha256":"fd4734b2c45a4784a7febe88f529378e13adc8c200557e3cef5feae66a5db397"},"downloads":-1,"filename":"yt_dlp-2024.8.19.232821.dev0.tar.gz","has_sig":false,"md5_digest":"702c4d4a946ff8bd8f5e33b385feede3","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2857352,"upload_time":"2024-08-19T23:35:43","upload_time_iso_8601":"2024-08-19T23:35:43.407340Z","url":"https://files.pythonhosted.org/packages/8a/65/3357f88fa6fd11dc004854b23e7cddb292183d1660add940bcb6fd23cd97/yt_dlp-2024.8.19.232821.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.8.21.232751.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.8.21.232751.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=13.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.8,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.8.21.232751.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"5bf4b5e001fb44ec8ba3be2535739347a0b65cd6a561c04539bd4b9aa1ad4e5c","md5":"2a3eb703314b75fc195490ca0dc03b0f","sha256":"5830e69f07b939842ea719cae6481b9af57b0629542b9ac49a28970509f0d970"},"downloads":-1,"filename":"yt_dlp-2024.8.21.232751.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"2a3eb703314b75fc195490ca0dc03b0f","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3129728,"upload_time":"2024-08-21T23:35:28","upload_time_iso_8601":"2024-08-21T23:35:28.483045Z","url":"https://files.pythonhosted.org/packages/5b/f4/b5e001fb44ec8ba3be2535739347a0b65cd6a561c04539bd4b9aa1ad4e5c/yt_dlp-2024.8.21.232751.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"a6e23275e0e7e415ca60fae7802e69cf59d49b65c63d9ac222aecf5711cacfdb","md5":"e4ba0d58d3827d4b3f55f27dd9521dce","sha256":"090b6c0e915cce3678636ea77e486a2ec0ae21cd85fa01638a2c464107c48469"},"downloads":-1,"filename":"yt_dlp-2024.8.21.232751.dev0.tar.gz","has_sig":false,"md5_digest":"e4ba0d58d3827d4b3f55f27dd9521dce","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2857411,"upload_time":"2024-08-21T23:35:31","upload_time_iso_8601":"2024-08-21T23:35:31.028646Z","url":"https://files.pythonhosted.org/packages/a6/e2/3275e0e7e415ca60fae7802e69cf59d49b65c63d9ac222aecf5711cacfdb/yt_dlp-2024.8.21.232751.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.8.26.232811.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.8.26.232811.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=13.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.8,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.8.26.232811.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"ef925994b447b46a4ef94bc60a80dd4697e69f45a2437a59db6203d44546d5e0","md5":"259d6b8a7da9a79c93b662c527e9c9f5","sha256":"5b6becc5a7d0b4cd9c71c755aeecec004b8892c45fc6509b41cab76423d176cf"},"downloads":-1,"filename":"yt_dlp-2024.8.26.232811.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"259d6b8a7da9a79c93b662c527e9c9f5","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3132480,"upload_time":"2024-08-26T23:50:01","upload_time_iso_8601":"2024-08-26T23:50:01.673584Z","url":"https://files.pythonhosted.org/packages/ef/92/5994b447b46a4ef94bc60a80dd4697e69f45a2437a59db6203d44546d5e0/yt_dlp-2024.8.26.232811.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"ee4a207762594b1845718f9a80c03c81f597f01f1c5a5c1b8e7e4cb973dcc18e","md5":"f96b89676c0c119389beb3554ba9ba03","sha256":"b1fa052ad0de4885b5c317368b475e093731129b888fc24bf5458c0ec4c6c866"},"downloads":-1,"filename":"yt_dlp-2024.8.26.232811.dev0.tar.gz","has_sig":false,"md5_digest":"f96b89676c0c119389beb3554ba9ba03","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2859744,"upload_time":"2024-08-26T23:50:03","upload_time_iso_8601":"2024-08-26T23:50:03.917928Z","url":"https://files.pythonhosted.org/packages/ee/4a/207762594b1845718f9a80c03c81f597f01f1c5a5c1b8e7e4cb973dcc18e/yt_dlp-2024.8.26.232811.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.8.4.232814.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.8.4.232814.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.8,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.8.4.232814.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"5072d93f7af43db3ddf3b56ca771eee1e0fe29157ec865e61f095872efb6e499","md5":"35df10d5d4687b64262b0d7dc01ef555","sha256":"277b5298a4ee580f848e991944deec56e94d07c04015d9d6b1fb1cd5e7b44579"},"downloads":-1,"filename":"yt_dlp-2024.8.4.232814.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"35df10d5d4687b64262b0d7dc01ef555","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3127581,"upload_time":"2024-08-04T23:35:04","upload_time_iso_8601":"2024-08-04T23:35:04.374035Z","url":"https://files.pythonhosted.org/packages/50/72/d93f7af43db3ddf3b56ca771eee1e0fe29157ec865e61f095872efb6e499/yt_dlp-2024.8.4.232814.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"b86fc31c66dacb745ef4f4122ba12ce7943078634ddd25ef296cd9c0a15aa9e2","md5":"0488705236f319f3b283c0ecae25db72","sha256":"8dcba5ab1b3aaf634661a48333ff34b4f827579d39fdf317bc039cfe9a8b743b"},"downloads":-1,"filename":"yt_dlp-2024.8.4.232814.dev0.tar.gz","has_sig":false,"md5_digest":"0488705236f319f3b283c0ecae25db72","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2853988,"upload_time":"2024-08-04T23:35:10","upload_time_iso_8601":"2024-08-04T23:35:10.505376Z","url":"https://files.pythonhosted.org/packages/b8/6f/c31c66dacb745ef4f4122ba12ce7943078634ddd25ef296cd9c0a15aa9e2/yt_dlp-2024.8.4.232814.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.8.5.232823.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.8.5.232823.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.8,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.8.5.232823.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"50f73b75eed2718aced5b17b7a41f45cb295288d09ac284bdf0de2da6320ffa2","md5":"79ec0755cd6320239334224032415077","sha256":"1fc7d9d83d19f3e99a684883cbf06d4c7b97a3af5ef5bcc9feb5809ffae8195f"},"downloads":-1,"filename":"yt_dlp-2024.8.5.232823.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"79ec0755cd6320239334224032415077","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3127673,"upload_time":"2024-08-05T23:35:35","upload_time_iso_8601":"2024-08-05T23:35:35.140608Z","url":"https://files.pythonhosted.org/packages/50/f7/3b75eed2718aced5b17b7a41f45cb295288d09ac284bdf0de2da6320ffa2/yt_dlp-2024.8.5.232823.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"be51e34e4fb1542c3d9740af958a95ed84dfa17b42e78c528a35dd06b7b7bdf5","md5":"cee1e28eba3733bba5e01a7742b18147","sha256":"99264213a66657bee632ac1357ad9ce6f18b3dd8bc1632765b445ea2661891f8"},"downloads":-1,"filename":"yt_dlp-2024.8.5.232823.dev0.tar.gz","has_sig":false,"md5_digest":"cee1e28eba3733bba5e01a7742b18147","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2854392,"upload_time":"2024-08-05T23:35:40","upload_time_iso_8601":"2024-08-05T23:35:40.525701Z","url":"https://files.pythonhosted.org/packages/be/51/e34e4fb1542c3d9740af958a95ed84dfa17b42e78c528a35dd06b7b7bdf5/yt_dlp-2024.8.5.232823.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.8.6":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.8.6/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.8,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.8.6","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"a59bf58db6c36f899c4f9c88f63aa9bc6ab676ff3d0ccbbe3201a5d3a670cfe4","md5":"0528b3c27e8e81e31b45c1af1c9cce3d","sha256":"ab507ff600bd9269ad4d654e309646976778f0e243eaa2f6c3c3214278bb2922"},"downloads":-1,"filename":"yt_dlp-2024.8.6-py3-none-any.whl","has_sig":false,"md5_digest":"0528b3c27e8e81e31b45c1af1c9cce3d","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3127674,"upload_time":"2024-08-06T03:10:19","upload_time_iso_8601":"2024-08-06T03:10:19.578315Z","url":"https://files.pythonhosted.org/packages/a5/9b/f58db6c36f899c4f9c88f63aa9bc6ab676ff3d0ccbbe3201a5d3a670cfe4/yt_dlp-2024.8.6-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"d82883ec43b75afd9e9840680757000fc75e68d3d221621090b3ca7601ca8129","md5":"e0ef73c6b1b310d15e57c07c2f797bfd","sha256":"e8551f26bc8bf67b99c12373cc87ed2073436c3437e53290878d0f4b4bb1f663"},"downloads":-1,"filename":"yt_dlp-2024.8.6.tar.gz","has_sig":false,"md5_digest":"e0ef73c6b1b310d15e57c07c2f797bfd","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2854463,"upload_time":"2024-08-06T03:10:24","upload_time_iso_8601":"2024-08-06T03:10:24.713859Z","url":"https://files.pythonhosted.org/packages/d8/28/83ec43b75afd9e9840680757000fc75e68d3d221621090b3ca7601ca8129/yt_dlp-2024.8.6.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.8.6.232802.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.8.6.232802.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=12.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.8,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.8.6.232802.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"f70f3de35d3b695f0981010cda1b8d8009a5fad31e500e74288d2a485facd6f5","md5":"00119f8258c7e3fea7bdd105b03a0c93","sha256":"6e107004e4d8a5dc24a500df92038fa79ac364ae7b841b29a6f9ed9b8210af89"},"downloads":-1,"filename":"yt_dlp-2024.8.6.232802.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"00119f8258c7e3fea7bdd105b03a0c93","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3127983,"upload_time":"2024-08-06T23:35:44","upload_time_iso_8601":"2024-08-06T23:35:44.108426Z","url":"https://files.pythonhosted.org/packages/f7/0f/3de35d3b695f0981010cda1b8d8009a5fad31e500e74288d2a485facd6f5/yt_dlp-2024.8.6.232802.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"d09d82caeaea939c695ca5c7412ffaa2b52ad03540d0f7d3419b9cdb874aed47","md5":"a09d70e72ebf29a7fd3b3ed728ade058","sha256":"70aa034a9937accce9a61abcab625b2412617afd1a76784cb7209dbe447fb1bb"},"downloads":-1,"filename":"yt_dlp-2024.8.6.232802.dev0.tar.gz","has_sig":false,"md5_digest":"a09d70e72ebf29a7fd3b3ed728ade058","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2854906,"upload_time":"2024-08-06T23:35:52","upload_time_iso_8601":"2024-08-06T23:35:52.985049Z","url":"https://files.pythonhosted.org/packages/d0/9d/82caeaea939c695ca5c7412ffaa2b52ad03540d0f7d3419b9cdb874aed47/yt_dlp-2024.8.6.232802.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.9.1.235933.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.9.1.235933.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=13.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.8,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.9.1.235933.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"996be8311bbca05b522b3ec3e36455a30993414c586f1cc9a08e4ae32fc6418a","md5":"6c0abb264ccd40928b156068b6f45ff2","sha256":"464d98e4873530076e05aeff9ca96a0de6d2f79713ae4e446345af818d398ad5"},"downloads":-1,"filename":"yt_dlp-2024.9.1.235933.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"6c0abb264ccd40928b156068b6f45ff2","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3134751,"upload_time":"2024-09-02T00:08:12","upload_time_iso_8601":"2024-09-02T00:08:12.949311Z","url":"https://files.pythonhosted.org/packages/99/6b/e8311bbca05b522b3ec3e36455a30993414c586f1cc9a08e4ae32fc6418a/yt_dlp-2024.9.1.235933.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"cd59c141e9306a6f4eb3f1134a33d388342b4ae4839ea91af14aac1d5d7b307b","md5":"ddd637222a9f9213e72142aec4f6f5b8","sha256":"0c3477b961251c8d356de3f58463e6a36374cea3b622944c26e606c94f174c01"},"downloads":-1,"filename":"yt_dlp-2024.9.1.235933.dev0.tar.gz","has_sig":false,"md5_digest":"ddd637222a9f9213e72142aec4f6f5b8","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2862172,"upload_time":"2024-09-02T00:08:15","upload_time_iso_8601":"2024-09-02T00:08:15.996739Z","url":"https://files.pythonhosted.org/packages/cd/59/c141e9306a6f4eb3f1134a33d388342b4ae4839ea91af14aac1d5d7b307b/yt_dlp-2024.9.1.235933.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.9.13.232912.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.9.13.232912.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=13.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.8,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.9.13.232912.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"e143bf4459a511563e1fe2f022d7ae488740d49725b500788c5c9362532ddcd6","md5":"a380bd26bdda42fee7cb01865b50f0d6","sha256":"70865ae46c71b93ce1273a2eb9d4a5c5aa42e72b130b1f694bc25c5fdf2ead54"},"downloads":-1,"filename":"yt_dlp-2024.9.13.232912.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"a380bd26bdda42fee7cb01865b50f0d6","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3140687,"upload_time":"2024-09-13T23:36:57","upload_time_iso_8601":"2024-09-13T23:36:57.420184Z","url":"https://files.pythonhosted.org/packages/e1/43/bf4459a511563e1fe2f022d7ae488740d49725b500788c5c9362532ddcd6/yt_dlp-2024.9.13.232912.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c27ffdf0dbdd86b7d80dc5536a92aef756022951f536b69a4b036738eecd7053","md5":"65ed1c115201cc8974ffc0ad0f10597d","sha256":"8d476763ed1bf2e0781b435e228436601f6bb3f0cd000ae323a9325fa3e77fff"},"downloads":-1,"filename":"yt_dlp-2024.9.13.232912.dev0.tar.gz","has_sig":false,"md5_digest":"65ed1c115201cc8974ffc0ad0f10597d","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2868660,"upload_time":"2024-09-13T23:37:00","upload_time_iso_8601":"2024-09-13T23:37:00.149580Z","url":"https://files.pythonhosted.org/packages/c2/7f/fdf0dbdd86b7d80dc5536a92aef756022951f536b69a4b036738eecd7053/yt_dlp-2024.9.13.232912.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.9.14.232748.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.9.14.232748.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=13.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.8,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.9.14.232748.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"b6efded9f62619499fd735a29a4b477ae169fa06e08e514152befbf931b7cf48","md5":"c4e08c0cb0f667747aed997c2d245ee8","sha256":"03d5f90dd22aa3bed049316d67701196ca9f4e79bb7d41d3326d7da804e46960"},"downloads":-1,"filename":"yt_dlp-2024.9.14.232748.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"c4e08c0cb0f667747aed997c2d245ee8","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3141841,"upload_time":"2024-09-14T23:35:52","upload_time_iso_8601":"2024-09-14T23:35:52.296979Z","url":"https://files.pythonhosted.org/packages/b6/ef/ded9f62619499fd735a29a4b477ae169fa06e08e514152befbf931b7cf48/yt_dlp-2024.9.14.232748.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"99e9f15160f909ac9163b04c3bfdc10580db42fb7751fc64e2fcf05a76510666","md5":"7fa1010640f140b4f7b38ed3cd5b8dc2","sha256":"63342785bf8ffe2b776ce42acd4532da4ad32469aaefd9cb8ee83cd214764fda"},"downloads":-1,"filename":"yt_dlp-2024.9.14.232748.dev0.tar.gz","has_sig":false,"md5_digest":"7fa1010640f140b4f7b38ed3cd5b8dc2","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2869863,"upload_time":"2024-09-14T23:35:54","upload_time_iso_8601":"2024-09-14T23:35:54.084955Z","url":"https://files.pythonhosted.org/packages/99/e9/f15160f909ac9163b04c3bfdc10580db42fb7751fc64e2fcf05a76510666/yt_dlp-2024.9.14.232748.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.9.17.232940.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.9.17.232940.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=13.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.8,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.9.17.232940.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"2355987a8d1c627915c49578ab62cc5b2e439896513aedaf1ad88f2fd4fa27c6","md5":"4027e6ee384d1425983c0a3f0ce300ac","sha256":"eadccbc6bdaa2370bc0ac9da328271dd28f401f24b5837d1a848592807af017f"},"downloads":-1,"filename":"yt_dlp-2024.9.17.232940.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"4027e6ee384d1425983c0a3f0ce300ac","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3141773,"upload_time":"2024-09-17T23:37:18","upload_time_iso_8601":"2024-09-17T23:37:18.230216Z","url":"https://files.pythonhosted.org/packages/23/55/987a8d1c627915c49578ab62cc5b2e439896513aedaf1ad88f2fd4fa27c6/yt_dlp-2024.9.17.232940.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c780884322e94ace7c49e554e95e869bc85aea18070df5b5642c3bda3ced2a55","md5":"b8a8f1f92cbc5c15224322c752d20f54","sha256":"8f0c99494002a76b196d7d634241d80d2a329818e14f83ad8ae54d6c5c0f7d4a"},"downloads":-1,"filename":"yt_dlp-2024.9.17.232940.dev0.tar.gz","has_sig":false,"md5_digest":"b8a8f1f92cbc5c15224322c752d20f54","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2869932,"upload_time":"2024-09-17T23:37:21","upload_time_iso_8601":"2024-09-17T23:37:21.118176Z","url":"https://files.pythonhosted.org/packages/c7/80/884322e94ace7c49e554e95e869bc85aea18070df5b5642c3bda3ced2a55/yt_dlp-2024.9.17.232940.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.9.2.232855.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.9.2.232855.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=13.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.8,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.9.2.232855.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"a28afc421a8617be2aa3594a8a80a3969d9ca453e78e83343351b1e601516d21","md5":"7fa78052036c0827f1610764f5b50bae","sha256":"f00a413f0409960fd281c6a1545183f6aa569b6969e30f646194a5c1219c9aba"},"downloads":-1,"filename":"yt_dlp-2024.9.2.232855.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"7fa78052036c0827f1610764f5b50bae","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3134750,"upload_time":"2024-09-02T23:36:26","upload_time_iso_8601":"2024-09-02T23:36:26.491140Z","url":"https://files.pythonhosted.org/packages/a2/8a/fc421a8617be2aa3594a8a80a3969d9ca453e78e83343351b1e601516d21/yt_dlp-2024.9.2.232855.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"ce8fc510b1e6e090c146882a80e5af4de1a793a034cf3aedae192fc70e149d14","md5":"a6bfce25ee9097704cb2091570081ba0","sha256":"4b3e4bccf1d1d760c8f849959b8570387d0c979bf07f0239316fdd08827f1792"},"downloads":-1,"filename":"yt_dlp-2024.9.2.232855.dev0.tar.gz","has_sig":false,"md5_digest":"a6bfce25ee9097704cb2091570081ba0","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2862174,"upload_time":"2024-09-02T23:36:29","upload_time_iso_8601":"2024-09-02T23:36:29.059653Z","url":"https://files.pythonhosted.org/packages/ce/8f/c510b1e6e090c146882a80e5af4de1a793a034cf3aedae192fc70e149d14/yt_dlp-2024.9.2.232855.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.9.24.232842.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.9.24.232842.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=13.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.8,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.9.24.232842.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"434bac9c59825796dbfdba892bf29e3483ba2007844f3daf9a826d3cf99aa3be","md5":"e495eb82ebce230f721eaf3a0d3f78cf","sha256":"9373c24ef9e8d49dde2a587ce23c30ee978eab87bc4b5ee2b5ee16a13b8ab3fb"},"downloads":-1,"filename":"yt_dlp-2024.9.24.232842.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"e495eb82ebce230f721eaf3a0d3f78cf","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3141793,"upload_time":"2024-09-24T23:36:26","upload_time_iso_8601":"2024-09-24T23:36:26.107009Z","url":"https://files.pythonhosted.org/packages/43/4b/ac9c59825796dbfdba892bf29e3483ba2007844f3daf9a826d3cf99aa3be/yt_dlp-2024.9.24.232842.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"bc2888ba4ef67d0c8cb7edc7ba4018b814e6f48e186bd02db4b7fd8b69c0d5f8","md5":"1afc7abc26ec6192940f5251407200bc","sha256":"bc82aaad7d6e2feb1a2efa9d69c9fc7b72d64ca07022f9d39c85e1ea91f9104d"},"downloads":-1,"filename":"yt_dlp-2024.9.24.232842.dev0.tar.gz","has_sig":false,"md5_digest":"1afc7abc26ec6192940f5251407200bc","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2869980,"upload_time":"2024-09-24T23:36:28","upload_time_iso_8601":"2024-09-24T23:36:28.064387Z","url":"https://files.pythonhosted.org/packages/bc/28/88ba4ef67d0c8cb7edc7ba4018b814e6f48e186bd02db4b7fd8b69c0d5f8/yt_dlp-2024.9.24.232842.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.9.25.232842.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.9.25.232842.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=13.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.7.2,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.10.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.9.25.232842.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"1b17ee940fb69ad86e8b966a9bccc9b0146e245f17813b89f741c5bd6632f74a","md5":"72f14cf17b73f63cedb7502f5c5b2345","sha256":"21547cf28686808c9d5d9f0459e098154473ad7c86dfce0bc9a62f14628aa01f"},"downloads":-1,"filename":"yt_dlp-2024.9.25.232842.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"72f14cf17b73f63cedb7502f5c5b2345","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3141818,"upload_time":"2024-09-25T23:36:24","upload_time_iso_8601":"2024-09-25T23:36:24.583760Z","url":"https://files.pythonhosted.org/packages/1b/17/ee940fb69ad86e8b966a9bccc9b0146e245f17813b89f741c5bd6632f74a/yt_dlp-2024.9.25.232842.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c608edd44153ffb4f1b850010e37b5a28493c7abd232cbf4ac96e80be1cd0c06","md5":"22636d39fe5eb75ede8d0fc7d8189c9b","sha256":"ec78cc77f9c46a4867124207e8545fa2e3f98be004b141b072ac7c876c46ec81"},"downloads":-1,"filename":"yt_dlp-2024.9.25.232842.dev0.tar.gz","has_sig":false,"md5_digest":"22636d39fe5eb75ede8d0fc7d8189c9b","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2870218,"upload_time":"2024-09-25T23:36:27","upload_time_iso_8601":"2024-09-25T23:36:27.038286Z","url":"https://files.pythonhosted.org/packages/c6/08/edd44153ffb4f1b850010e37b5a28493c7abd232cbf4ac96e80be1cd0c06/yt_dlp-2024.9.25.232842.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.9.26.232938.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.9.26.232938.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=13.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.7.2,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.10.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.9.26.232938.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"d66b0ed88cc9b506ba01d2c3cd21d55d51c3c9bd2415c3b6d6ca96e02c0c8854","md5":"e22de168b8eb94715b75c5d2a64b0579","sha256":"00c93150d343d142db0ca1ece2abc8a7ebe5f37c32635fa2c4f0c4cfd099387a"},"downloads":-1,"filename":"yt_dlp-2024.9.26.232938.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"e22de168b8eb94715b75c5d2a64b0579","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3147334,"upload_time":"2024-09-26T23:37:21","upload_time_iso_8601":"2024-09-26T23:37:21.444996Z","url":"https://files.pythonhosted.org/packages/d6/6b/0ed88cc9b506ba01d2c3cd21d55d51c3c9bd2415c3b6d6ca96e02c0c8854/yt_dlp-2024.9.26.232938.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"2416e853b11701db10ee3694acfcc3839cc21be1285e50a06b3e571ad6753918","md5":"2c121b8f90a104c0816d42f058225387","sha256":"ebf63dbeef73dbbe89b9027f769ae67e7fad8df04bce36cd91c3f0b7fea1a791"},"downloads":-1,"filename":"yt_dlp-2024.9.26.232938.dev0.tar.gz","has_sig":false,"md5_digest":"2c121b8f90a104c0816d42f058225387","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2874752,"upload_time":"2024-09-26T23:37:23","upload_time_iso_8601":"2024-09-26T23:37:23.763826Z","url":"https://files.pythonhosted.org/packages/24/16/e853b11701db10ee3694acfcc3839cc21be1285e50a06b3e571ad6753918/yt_dlp-2024.9.26.232938.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.9.27":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.9.27/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=13.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.7.2,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.6.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.10.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.6.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.9.27","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"c6265dc3a802bd85c19d3d2fa746e6b36979801e2f32a433799c57f646335a7d","md5":"68d7d856180cc14f6184a45bd0772bad","sha256":"2717468dd697fcfcf9a89f493ba30a3830cdfb276c09750e5b561b08b9ef5f69"},"downloads":-1,"filename":"yt_dlp-2024.9.27-py3-none-any.whl","has_sig":false,"md5_digest":"68d7d856180cc14f6184a45bd0772bad","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3148509,"upload_time":"2024-09-27T23:09:22","upload_time_iso_8601":"2024-09-27T23:09:22.713748Z","url":"https://files.pythonhosted.org/packages/c6/26/5dc3a802bd85c19d3d2fa746e6b36979801e2f32a433799c57f646335a7d/yt_dlp-2024.9.27-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"7d3fc63b11419d7adacde35b39e7e62aef1be6ce9ff3d2219fae024962ab4a53","md5":"af4894706b08e6246f81d97f85ffed39","sha256":"86605542e17e2e23ad23145b637ec308133762a15a5dedac4ae50b7973237026"},"downloads":-1,"filename":"yt_dlp-2024.9.27.tar.gz","has_sig":false,"md5_digest":"af4894706b08e6246f81d97f85ffed39","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2876534,"upload_time":"2024-09-27T23:09:25","upload_time_iso_8601":"2024-09-27T23:09:25.474908Z","url":"https://files.pythonhosted.org/packages/7d/3f/c63b11419d7adacde35b39e7e62aef1be6ce9ff3d2219fae024962ab4a53/yt_dlp-2024.9.27.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.9.27.232842.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.9.27.232842.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=13.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.7.2,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.6.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.10.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.6.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.9.27.232842.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"d2b0add5963215e1edf87f9f8b1a485cd16f3ba9226cf546012848111fe16ef3","md5":"049d54224fc0a8e78ce12a9ceb1e02be","sha256":"a1be8f23f1fc50cae928931cdda58e515f89822cee45457a170d542f85f5fbc5"},"downloads":-1,"filename":"yt_dlp-2024.9.27.232842.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"049d54224fc0a8e78ce12a9ceb1e02be","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3148820,"upload_time":"2024-09-27T23:36:14","upload_time_iso_8601":"2024-09-27T23:36:14.113234Z","url":"https://files.pythonhosted.org/packages/d2/b0/add5963215e1edf87f9f8b1a485cd16f3ba9226cf546012848111fe16ef3/yt_dlp-2024.9.27.232842.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"a7554c8e9efaeb0cc8aba193bfb942463215fac82b2d2e84f40dc3cc1596dd43","md5":"b2099bf64f60b0dfae7916b349de89bf","sha256":"668fbd6e1913edc740a025d1f4760e8824e696926174b8b1d9ba61e5252585bd"},"downloads":-1,"filename":"yt_dlp-2024.9.27.232842.dev0.tar.gz","has_sig":false,"md5_digest":"b2099bf64f60b0dfae7916b349de89bf","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2877171,"upload_time":"2024-09-27T23:36:16","upload_time_iso_8601":"2024-09-27T23:36:16.633734Z","url":"https://files.pythonhosted.org/packages/a7/55/4c8e9efaeb0cc8aba193bfb942463215fac82b2d2e84f40dc3cc1596dd43/yt_dlp-2024.9.27.232842.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.9.29.232819.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.9.29.232819.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=13.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.7.2,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.6.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.10.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.6.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.9.29.232819.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"5db87d245b926c023a03dac87acd90cb32a876ea289430b560d4ad5e739397a0","md5":"aeeec2480c241465bc9eb70575dbd919","sha256":"f15e81b9019de9b308336d4d67b26f59a9b644550f48b4eeaa1091573766e51c"},"downloads":-1,"filename":"yt_dlp-2024.9.29.232819.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"aeeec2480c241465bc9eb70575dbd919","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3148710,"upload_time":"2024-09-29T23:36:17","upload_time_iso_8601":"2024-09-29T23:36:17.711058Z","url":"https://files.pythonhosted.org/packages/5d/b8/7d245b926c023a03dac87acd90cb32a876ea289430b560d4ad5e739397a0/yt_dlp-2024.9.29.232819.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"4051062f63d66a7e09b758c436e69d79b5b2ae410ba9752b91ced4ba729f62da","md5":"880e37b46a3ff1b67ed54dfa7b95150b","sha256":"0e3bcdd3b6076db1d12e87622cc07c4b0a87ce47b17469378a3a43b07e1f1ab5"},"downloads":-1,"filename":"yt_dlp-2024.9.29.232819.dev0.tar.gz","has_sig":false,"md5_digest":"880e37b46a3ff1b67ed54dfa7b95150b","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2876957,"upload_time":"2024-09-29T23:36:20","upload_time_iso_8601":"2024-09-29T23:36:20.541431Z","url":"https://files.pythonhosted.org/packages/40/51/062f63d66a7e09b758c436e69d79b5b2ae410ba9752b91ced4ba729f62da/yt_dlp-2024.9.29.232819.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.9.30.232929.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.9.30.232929.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=13.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.7.2,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest-rerunfailures~=14.0; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.6.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.10.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.6.0; extra == \"static-analysis\"","pytest-rerunfailures~=14.0; extra == \"test\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.9.30.232929.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"70977bcce094beb149f5becde69005ab0968549fd01dc2ce89fa02b202caad36","md5":"bf4d665ac91ca4ba8e3338255fbcb78a","sha256":"8c792f792197cff2f8d41aba457bc1a8477613aaa8f2b5f98588fb4837185063"},"downloads":-1,"filename":"yt_dlp-2024.9.30.232929.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"bf4d665ac91ca4ba8e3338255fbcb78a","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3149157,"upload_time":"2024-09-30T23:37:32","upload_time_iso_8601":"2024-09-30T23:37:32.776907Z","url":"https://files.pythonhosted.org/packages/70/97/7bcce094beb149f5becde69005ab0968549fd01dc2ce89fa02b202caad36/yt_dlp-2024.9.30.232929.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"8db170d2e1e8fd27a3bc338cc4485cee56376d853da575bfa5836b12fb3a7e12","md5":"0cebc1a8bb96458aab7ad2e08b3a2e30","sha256":"1519b9f8bbc9d9b959f149246b9ecabb9e8395d13d90bf6c6e0a14a8dd5be43a"},"downloads":-1,"filename":"yt_dlp-2024.9.30.232929.dev0.tar.gz","has_sig":false,"md5_digest":"0cebc1a8bb96458aab7ad2e08b3a2e30","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2877457,"upload_time":"2024-09-30T23:37:35","upload_time_iso_8601":"2024-09-30T23:37:35.178422Z","url":"https://files.pythonhosted.org/packages/8d/b1/70d2e1e8fd27a3bc338cc4485cee56376d853da575bfa5836b12fb3a7e12/yt_dlp-2024.9.30.232929.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.9.5.232840.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.9.5.232840.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=13.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.8,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.9.5.232840.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"b995edc994c460038c17a0d941aa797ff7d0a54e53e95aab9475007a2c7e3054","md5":"d57c1447565afdc241ef0b30ba253da2","sha256":"e2cce8df6c620b9199c1a0b72a7b455f6a852cd34e7cd9f56dafbc3f31cd288b"},"downloads":-1,"filename":"yt_dlp-2024.9.5.232840.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"d57c1447565afdc241ef0b30ba253da2","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3134756,"upload_time":"2024-09-05T23:36:27","upload_time_iso_8601":"2024-09-05T23:36:27.274466Z","url":"https://files.pythonhosted.org/packages/b9/95/edc994c460038c17a0d941aa797ff7d0a54e53e95aab9475007a2c7e3054/yt_dlp-2024.9.5.232840.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"35bd366bdd6f3b7bef3249fe03ec54643cf367cf211328f2b889d3a6b8c5fe55","md5":"46279178a585b103dc5597db5e8481a3","sha256":"d9d8ce5e9e43af716d889fe0cb2a32f66ade0d64f40661078d940125476715ac"},"downloads":-1,"filename":"yt_dlp-2024.9.5.232840.dev0.tar.gz","has_sig":false,"md5_digest":"46279178a585b103dc5597db5e8481a3","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2862413,"upload_time":"2024-09-05T23:36:29","upload_time_iso_8601":"2024-09-05T23:36:29.918606Z","url":"https://files.pythonhosted.org/packages/35/bd/366bdd6f3b7bef3249fe03ec54643cf367cf211328f2b889d3a6b8c5fe55/yt_dlp-2024.9.5.232840.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.9.7.232731.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.9.7.232731.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=13.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.8,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.9.7.232731.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"ad1bf0e3c4b7b69c48daf2401cb2747dd492ad7c509045443002524ea6269c6a","md5":"b465bae6d961f7ba8e3184e45dc0a8f5","sha256":"76a37f15cd499aa06b8afe6189046e0ecee19c4d51158737efcdf00a525917bd"},"downloads":-1,"filename":"yt_dlp-2024.9.7.232731.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"b465bae6d961f7ba8e3184e45dc0a8f5","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3134821,"upload_time":"2024-09-07T23:35:09","upload_time_iso_8601":"2024-09-07T23:35:09.798640Z","url":"https://files.pythonhosted.org/packages/ad/1b/f0e3c4b7b69c48daf2401cb2747dd492ad7c509045443002524ea6269c6a/yt_dlp-2024.9.7.232731.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"54ff21294bf99d925dfb06bd31595f6657cbab0c977c59af2006676bbe48e660","md5":"df45896a916b363c79314dd50f9a0aa7","sha256":"c80c56573019b0bde643fc3dcc79b3e2ea516cf11457f219dfc5ec86fe1cd1b0"},"downloads":-1,"filename":"yt_dlp-2024.9.7.232731.dev0.tar.gz","has_sig":false,"md5_digest":"df45896a916b363c79314dd50f9a0aa7","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2862479,"upload_time":"2024-09-07T23:35:11","upload_time_iso_8601":"2024-09-07T23:35:11.776371Z","url":"https://files.pythonhosted.org/packages/54/ff/21294bf99d925dfb06bd31595f6657cbab0c977c59af2006676bbe48e660/yt_dlp-2024.9.7.232731.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2024.9.8.232909.dev0":{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","License :: OSI Approved :: The Unlicense (Unlicense)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Multimedia :: Video"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"sponsorblock, video-downloader, youtube-dl, youtube-dlc, youtube-downloader, yt-dlp","license":"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>","maintainer":null,"maintainer_email":"pukkandan <pukkandan.ytdlp@gmail.com>, Grub4K <contact@grub4k.xyz>, bashonly <bashonly@protonmail.com>, coletdjnz <coletdjnz@protonmail.com>, sepro <sepro@sepr0.com>","name":"yt-dlp","package_url":"https://pypi.org/project/yt-dlp/","platform":null,"project_url":"https://pypi.org/project/yt-dlp/","project_urls":{"Documentation":"https://github.com/yt-dlp/yt-dlp#readme","Funding":"https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators","Repository":"https://github.com/yt-dlp/yt-dlp","Tracker":"https://github.com/yt-dlp/yt-dlp/issues"},"provides_extra":["build","curl-cffi","default","dev","py2exe","pyinstaller","secretstorage","static-analysis","test"],"release_url":"https://pypi.org/project/yt-dlp/2024.9.8.232909.dev0/","requires_dist":["brotli; implementation_name == \"cpython\"","brotlicffi; implementation_name != \"cpython\"","certifi","mutagen","pycryptodomex","requests<3,>=2.32.2","urllib3<3,>=1.26.17","websockets>=13.0","build; extra == \"build\"","hatchling; extra == \"build\"","pip; extra == \"build\"","setuptools>=71.0.2; extra == \"build\"","wheel; extra == \"build\"","curl-cffi!=0.6.*,<0.8,>=0.5.10; (os_name != \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","curl-cffi==0.5.10; (os_name == \"nt\" and implementation_name == \"cpython\") and extra == \"curl-cffi\"","autopep8~=2.0; extra == \"dev\"","pre-commit; extra == \"dev\"","pytest~=8.1; extra == \"dev\"","ruff~=0.5.0; extra == \"dev\"","py2exe>=0.12; extra == \"py2exe\"","pyinstaller>=6.7.0; extra == \"pyinstaller\"","cffi; extra == \"secretstorage\"","secretstorage; extra == \"secretstorage\"","autopep8~=2.0; extra == \"static-analysis\"","ruff~=0.5.0; extra == \"static-analysis\"","pytest~=8.1; extra == \"test\""],"requires_python":">=3.8","summary":"A feature-rich command-line audio/video downloader","version":"2024.9.8.232909.dev0","yanked":false,"yanked_reason":null},"last_serial":25943361,"urls":[{"comment_text":"","digests":{"blake2b_256":"21c75950ccf37b7d88ae68fe36a575f20d269d8cd5f3132fb99f198b6ca7f31c","md5":"ab0a3d68568e86e915be842198f6358a","sha256":"3c343daa99d7a26133beff7a16748420b533665eba14e9a9fdad329b34fcf77e"},"downloads":-1,"filename":"yt_dlp-2024.9.8.232909.dev0-py3-none-any.whl","has_sig":false,"md5_digest":"ab0a3d68568e86e915be842198f6358a","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":3134812,"upload_time":"2024-09-08T23:36:45","upload_time_iso_8601":"2024-09-08T23:36:45.340563Z","url":"https://files.pythonhosted.org/packages/21/c7/5950ccf37b7d88ae68fe36a575f20d269d8cd5f3132fb99f198b6ca7f31c/yt_dlp-2024.9.8.232909.dev0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"d1b17a79d23d0693b4a2f09db434f6e8712e39e719b360105d205410bc845dec","md5":"fc8e2ffdb909446d9cf8d69b64ed4904","sha256":"69356316f24d1660c7fbd62ce592e83f486dfec41828f943ad356d562a977e7c"},"downloads":-1,"filename":"yt_dlp-2024.9.8.232909.dev0.tar.gz","has_sig":false,"md5_digest":"fc8e2ffdb909446d9cf8d69b64ed4904","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":2862731,"upload_time":"2024-09-08T23:36:47","upload_time_iso_8601":"2024-09-08T23:36:47.732741Z","url":"https://files.pythonhosted.org/packages/d1/b1/7a79d23d0693b4a2f09db434f6e8712e39e719b360105d205410bc845dec/yt_dlp-2024.9.8.232909.dev0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}}