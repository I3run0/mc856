{"0.1.0":{"info":{"author":"Andi Albrecht","author_email":"albrecht.andi@gmail.com","bugtrack_url":null,"classifiers":["Development Status :: 3 - Alpha","Intended Audience :: Developers","License :: OSI Approved :: BSD License","Operating System :: OS Independent","Programming Language :: Python","Topic :: Database","Topic :: Software Development"],"description_content_type":null,"docs_url":null,"download_url":"http://python-sqlparse.googlecode.com/files/sqlparse-0.1.0.tar.gz","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"http://python-sqlparse.googlecode.com/","keywords":null,"license":"BSD","maintainer":null,"maintainer_email":null,"name":"sqlparse","package_url":"https://pypi.org/project/sqlparse/","platform":"UNKNOWN","project_url":"https://pypi.org/project/sqlparse/","project_urls":{"Download":"http://python-sqlparse.googlecode.com/files/sqlparse-0.1.0.tar.gz","Homepage":"http://python-sqlparse.googlecode.com/"},"provides_extra":null,"release_url":"https://pypi.org/project/sqlparse/0.1.0/","requires_dist":null,"requires_python":null,"summary":"Non-validating SQL parser","version":"0.1.0","yanked":false,"yanked_reason":null},"last_serial":24141613,"urls":[{"comment_text":"","digests":{"blake2b_256":"a98278f60ca2d543578193a25679e2f7af9323fa6bce3689090c3f803dab8b51","md5":"7b65df04850dd1baff03da5b18ebca07","sha256":"760c0454fbc3c9ecffbddc5d08627cfff0aac01319743cfd894948024ef9c598"},"downloads":-1,"filename":"sqlparse-0.1.0.tar.gz","has_sig":false,"md5_digest":"7b65df04850dd1baff03da5b18ebca07","packagetype":"sdist","python_version":"source","requires_python":null,"size":30859,"upload_time":"2013-05-20T06:39:42","upload_time_iso_8601":"2013-05-20T06:39:42.388015Z","url":"https://files.pythonhosted.org/packages/a9/82/78f60ca2d543578193a25679e2f7af9323fa6bce3689090c3f803dab8b51/sqlparse-0.1.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4340"],"details":"### Summary\nPassing a heavily nested list to sqlparse.parse() leads to a Denial of Service due to RecursionError.\n\n### Details + PoC\nRunning the following code will raise Maximum recursion limit exceeded exception:\n```py\nimport sqlparse\nsqlparse.parse('[' * 10000 + ']' * 10000)\n```\nWe expect a traceback of RecursionError:\n```py\nTraceback (most recent call last):\n  File \"trigger_sqlparse_nested_list.py\", line 3, in <module>\n    sqlparse.parse('[' * 10000 + ']' * 10000)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/__init__.py\", line 30, in parse\n    return tuple(parsestream(sql, encoding))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/filter_stack.py\", line 36, in run\n    stmt = grouping.group(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 428, in group\n    func(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 53, in group_brackets\n    _group_matching(tlist, sql.SquareBrackets)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 48, in _group_matching\n    tlist.group_tokens(cls, open_idx, close_idx)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 328, in group_tokens\n    grp = grp_cls(subtokens)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 161, in __init__\n    super().__init__(None, str(self))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in __str__\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in <genexpr>\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  [Previous line repeated 983 more times]\nRecursionError: maximum recursion depth exceeded\n```\n\n### Fix suggestion\nThe [flatten()](https://github.com/andialbrecht/sqlparse/blob/master/sqlparse/sql.py#L207) function of TokenList class should limit the recursion to a maximal depth:\n```py\nfrom sqlparse.exceptions import SQLParseError\n\nMAX_DEPTH = 100\n\n    def flatten(self, depth=1):\n        \"\"\"Generator yielding ungrouped tokens.\n\n        This method is recursively called for all child tokens.\n        \"\"\"\n    if depth >= MAX_DEPTH:\n        raise SQLParseError('Maximal depth reached')\n        for token in self.tokens:\n            if token.is_group:\n                yield from token.flatten(depth + 1)\n            else:\n                yield token\n```\n\n### Impact\nDenial of Service (the impact depends on the use).\nAnyone parsing a user input with sqlparse.parse() is affected.\n","fixed_in":["0.5.0"],"id":"GHSA-2m57-hf25-phgg","link":"https://osv.dev/vulnerability/GHSA-2m57-hf25-phgg","source":"osv","summary":null,"withdrawn":null}]},"0.1.1":{"info":{"author":"Andi Albrecht","author_email":"albrecht.andi@gmail.com","bugtrack_url":null,"classifiers":["Development Status :: 3 - Alpha","Intended Audience :: Developers","License :: OSI Approved :: BSD License","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.4","Programming Language :: Python :: 2.5","Programming Language :: Python :: 2.6","Topic :: Database","Topic :: Software Development"],"description_content_type":null,"docs_url":null,"download_url":"http://python-sqlparse.googlecode.com/files/sqlparse-0.1.1.tar.gz","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"http://python-sqlparse.googlecode.com/","keywords":null,"license":"BSD","maintainer":null,"maintainer_email":null,"name":"sqlparse","package_url":"https://pypi.org/project/sqlparse/","platform":"UNKNOWN","project_url":"https://pypi.org/project/sqlparse/","project_urls":{"Download":"http://python-sqlparse.googlecode.com/files/sqlparse-0.1.1.tar.gz","Homepage":"http://python-sqlparse.googlecode.com/"},"provides_extra":null,"release_url":"https://pypi.org/project/sqlparse/0.1.1/","requires_dist":null,"requires_python":null,"summary":"Non-validating SQL parser","version":"0.1.1","yanked":false,"yanked_reason":null},"last_serial":24141613,"urls":[{"comment_text":"","digests":{"blake2b_256":"399c47b05772980c3341460c38e0c82620800ee8e41eca5d704c4a2662f5c19c","md5":"000053e0352f5bf19c2f8d5242329ea4","sha256":"6049385a7032628c9a9bc2ac578ce1826e4179b0a8a9f33b535f022fabd8d3ea"},"downloads":-1,"filename":"sqlparse-0.1.1.tar.gz","has_sig":false,"md5_digest":"000053e0352f5bf19c2f8d5242329ea4","packagetype":"sdist","python_version":"source","requires_python":null,"size":30876,"upload_time":"2013-05-20T06:40:33","upload_time_iso_8601":"2013-05-20T06:40:33.470492Z","url":"https://files.pythonhosted.org/packages/39/9c/47b05772980c3341460c38e0c82620800ee8e41eca5d704c4a2662f5c19c/sqlparse-0.1.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4340"],"details":"### Summary\nPassing a heavily nested list to sqlparse.parse() leads to a Denial of Service due to RecursionError.\n\n### Details + PoC\nRunning the following code will raise Maximum recursion limit exceeded exception:\n```py\nimport sqlparse\nsqlparse.parse('[' * 10000 + ']' * 10000)\n```\nWe expect a traceback of RecursionError:\n```py\nTraceback (most recent call last):\n  File \"trigger_sqlparse_nested_list.py\", line 3, in <module>\n    sqlparse.parse('[' * 10000 + ']' * 10000)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/__init__.py\", line 30, in parse\n    return tuple(parsestream(sql, encoding))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/filter_stack.py\", line 36, in run\n    stmt = grouping.group(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 428, in group\n    func(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 53, in group_brackets\n    _group_matching(tlist, sql.SquareBrackets)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 48, in _group_matching\n    tlist.group_tokens(cls, open_idx, close_idx)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 328, in group_tokens\n    grp = grp_cls(subtokens)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 161, in __init__\n    super().__init__(None, str(self))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in __str__\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in <genexpr>\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  [Previous line repeated 983 more times]\nRecursionError: maximum recursion depth exceeded\n```\n\n### Fix suggestion\nThe [flatten()](https://github.com/andialbrecht/sqlparse/blob/master/sqlparse/sql.py#L207) function of TokenList class should limit the recursion to a maximal depth:\n```py\nfrom sqlparse.exceptions import SQLParseError\n\nMAX_DEPTH = 100\n\n    def flatten(self, depth=1):\n        \"\"\"Generator yielding ungrouped tokens.\n\n        This method is recursively called for all child tokens.\n        \"\"\"\n    if depth >= MAX_DEPTH:\n        raise SQLParseError('Maximal depth reached')\n        for token in self.tokens:\n            if token.is_group:\n                yield from token.flatten(depth + 1)\n            else:\n                yield token\n```\n\n### Impact\nDenial of Service (the impact depends on the use).\nAnyone parsing a user input with sqlparse.parse() is affected.\n","fixed_in":["0.5.0"],"id":"GHSA-2m57-hf25-phgg","link":"https://osv.dev/vulnerability/GHSA-2m57-hf25-phgg","source":"osv","summary":null,"withdrawn":null}]},"0.1.10":{"info":{"author":"Andi Albrecht","author_email":"albrecht.andi@gmail.com","bugtrack_url":null,"classifiers":["Development Status :: 4 - Beta","Intended Audience :: Developers","License :: OSI Approved :: BSD License","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.4","Programming Language :: Python :: 2.5","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.2","Programming Language :: Python :: 3.3","Topic :: Database","Topic :: Software Development"],"description_content_type":null,"docs_url":null,"download_url":"UNKNOWN","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/andialbrecht/sqlparse","keywords":null,"license":"BSD","maintainer":null,"maintainer_email":null,"name":"sqlparse","package_url":"https://pypi.org/project/sqlparse/","platform":"UNKNOWN","project_url":"https://pypi.org/project/sqlparse/","project_urls":{"Download":"UNKNOWN","Homepage":"https://github.com/andialbrecht/sqlparse"},"provides_extra":null,"release_url":"https://pypi.org/project/sqlparse/0.1.10/","requires_dist":null,"requires_python":null,"summary":"Non-validating SQL parser","version":"0.1.10","yanked":false,"yanked_reason":null},"last_serial":24141613,"urls":[{"comment_text":"","digests":{"blake2b_256":"534f5874394af1d54a8e7bd5563815c5439cb11b87e033019653b875f1a16c10","md5":"45ea3821a205f4430bda139a63f2a95e","sha256":"d159e104fbf1710bba2e4d410fe0371dcbff80457d4752a0bd414d88ddbdd476"},"downloads":-1,"filename":"sqlparse-0.1.10.tar.gz","has_sig":false,"md5_digest":"45ea3821a205f4430bda139a63f2a95e","packagetype":"sdist","python_version":"source","requires_python":null,"size":53322,"upload_time":"2013-11-02T06:46:45","upload_time_iso_8601":"2013-11-02T06:46:45.394439Z","url":"https://files.pythonhosted.org/packages/53/4f/5874394af1d54a8e7bd5563815c5439cb11b87e033019653b875f1a16c10/sqlparse-0.1.10.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4340"],"details":"### Summary\nPassing a heavily nested list to sqlparse.parse() leads to a Denial of Service due to RecursionError.\n\n### Details + PoC\nRunning the following code will raise Maximum recursion limit exceeded exception:\n```py\nimport sqlparse\nsqlparse.parse('[' * 10000 + ']' * 10000)\n```\nWe expect a traceback of RecursionError:\n```py\nTraceback (most recent call last):\n  File \"trigger_sqlparse_nested_list.py\", line 3, in <module>\n    sqlparse.parse('[' * 10000 + ']' * 10000)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/__init__.py\", line 30, in parse\n    return tuple(parsestream(sql, encoding))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/filter_stack.py\", line 36, in run\n    stmt = grouping.group(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 428, in group\n    func(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 53, in group_brackets\n    _group_matching(tlist, sql.SquareBrackets)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 48, in _group_matching\n    tlist.group_tokens(cls, open_idx, close_idx)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 328, in group_tokens\n    grp = grp_cls(subtokens)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 161, in __init__\n    super().__init__(None, str(self))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in __str__\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in <genexpr>\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  [Previous line repeated 983 more times]\nRecursionError: maximum recursion depth exceeded\n```\n\n### Fix suggestion\nThe [flatten()](https://github.com/andialbrecht/sqlparse/blob/master/sqlparse/sql.py#L207) function of TokenList class should limit the recursion to a maximal depth:\n```py\nfrom sqlparse.exceptions import SQLParseError\n\nMAX_DEPTH = 100\n\n    def flatten(self, depth=1):\n        \"\"\"Generator yielding ungrouped tokens.\n\n        This method is recursively called for all child tokens.\n        \"\"\"\n    if depth >= MAX_DEPTH:\n        raise SQLParseError('Maximal depth reached')\n        for token in self.tokens:\n            if token.is_group:\n                yield from token.flatten(depth + 1)\n            else:\n                yield token\n```\n\n### Impact\nDenial of Service (the impact depends on the use).\nAnyone parsing a user input with sqlparse.parse() is affected.\n","fixed_in":["0.5.0"],"id":"GHSA-2m57-hf25-phgg","link":"https://osv.dev/vulnerability/GHSA-2m57-hf25-phgg","source":"osv","summary":null,"withdrawn":null}]},"0.1.11":{"info":{"author":"Andi Albrecht","author_email":"albrecht.andi@gmail.com","bugtrack_url":null,"classifiers":["Development Status :: 4 - Beta","Intended Audience :: Developers","License :: OSI Approved :: BSD License","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.4","Programming Language :: Python :: 2.5","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.2","Programming Language :: Python :: 3.3","Topic :: Database","Topic :: Software Development"],"description_content_type":null,"docs_url":null,"download_url":"UNKNOWN","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/andialbrecht/sqlparse","keywords":null,"license":"BSD","maintainer":null,"maintainer_email":null,"name":"sqlparse","package_url":"https://pypi.org/project/sqlparse/","platform":"UNKNOWN","project_url":"https://pypi.org/project/sqlparse/","project_urls":{"Download":"UNKNOWN","Homepage":"https://github.com/andialbrecht/sqlparse"},"provides_extra":null,"release_url":"https://pypi.org/project/sqlparse/0.1.11/","requires_dist":null,"requires_python":null,"summary":"Non-validating SQL parser","version":"0.1.11","yanked":false,"yanked_reason":null},"last_serial":24141613,"urls":[{"comment_text":"","digests":{"blake2b_256":"617d71d50e9c5db5e9b7fb8784063d0d7f9ae572f9dc82de654fdaa61ca30328","md5":"abc3315f4970e7ff0f6758d693dc8a45","sha256":"4355f38d0fd620a6f2c45a9cfe822988a379d3d097bb47bf009e9eb5b323ed1e"},"downloads":-1,"filename":"sqlparse-0.1.11.tar.gz","has_sig":false,"md5_digest":"abc3315f4970e7ff0f6758d693dc8a45","packagetype":"sdist","python_version":"source","requires_python":null,"size":53588,"upload_time":"2014-02-07T20:37:58","upload_time_iso_8601":"2014-02-07T20:37:58.448027Z","url":"https://files.pythonhosted.org/packages/61/7d/71d50e9c5db5e9b7fb8784063d0d7f9ae572f9dc82de654fdaa61ca30328/sqlparse-0.1.11.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4340"],"details":"### Summary\nPassing a heavily nested list to sqlparse.parse() leads to a Denial of Service due to RecursionError.\n\n### Details + PoC\nRunning the following code will raise Maximum recursion limit exceeded exception:\n```py\nimport sqlparse\nsqlparse.parse('[' * 10000 + ']' * 10000)\n```\nWe expect a traceback of RecursionError:\n```py\nTraceback (most recent call last):\n  File \"trigger_sqlparse_nested_list.py\", line 3, in <module>\n    sqlparse.parse('[' * 10000 + ']' * 10000)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/__init__.py\", line 30, in parse\n    return tuple(parsestream(sql, encoding))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/filter_stack.py\", line 36, in run\n    stmt = grouping.group(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 428, in group\n    func(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 53, in group_brackets\n    _group_matching(tlist, sql.SquareBrackets)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 48, in _group_matching\n    tlist.group_tokens(cls, open_idx, close_idx)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 328, in group_tokens\n    grp = grp_cls(subtokens)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 161, in __init__\n    super().__init__(None, str(self))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in __str__\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in <genexpr>\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  [Previous line repeated 983 more times]\nRecursionError: maximum recursion depth exceeded\n```\n\n### Fix suggestion\nThe [flatten()](https://github.com/andialbrecht/sqlparse/blob/master/sqlparse/sql.py#L207) function of TokenList class should limit the recursion to a maximal depth:\n```py\nfrom sqlparse.exceptions import SQLParseError\n\nMAX_DEPTH = 100\n\n    def flatten(self, depth=1):\n        \"\"\"Generator yielding ungrouped tokens.\n\n        This method is recursively called for all child tokens.\n        \"\"\"\n    if depth >= MAX_DEPTH:\n        raise SQLParseError('Maximal depth reached')\n        for token in self.tokens:\n            if token.is_group:\n                yield from token.flatten(depth + 1)\n            else:\n                yield token\n```\n\n### Impact\nDenial of Service (the impact depends on the use).\nAnyone parsing a user input with sqlparse.parse() is affected.\n","fixed_in":["0.5.0"],"id":"GHSA-2m57-hf25-phgg","link":"https://osv.dev/vulnerability/GHSA-2m57-hf25-phgg","source":"osv","summary":null,"withdrawn":null}]},"0.1.12":{"info":{"author":"Andi Albrecht","author_email":"albrecht.andi@gmail.com","bugtrack_url":null,"classifiers":["Development Status :: 4 - Beta","Intended Audience :: Developers","License :: OSI Approved :: BSD License","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.4","Programming Language :: Python :: 2.5","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.2","Programming Language :: Python :: 3.3","Topic :: Database","Topic :: Software Development"],"description_content_type":null,"docs_url":null,"download_url":"UNKNOWN","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/andialbrecht/sqlparse","keywords":null,"license":"BSD","maintainer":null,"maintainer_email":null,"name":"sqlparse","package_url":"https://pypi.org/project/sqlparse/","platform":"UNKNOWN","project_url":"https://pypi.org/project/sqlparse/","project_urls":{"Download":"UNKNOWN","Homepage":"https://github.com/andialbrecht/sqlparse"},"provides_extra":null,"release_url":"https://pypi.org/project/sqlparse/0.1.12/","requires_dist":null,"requires_python":null,"summary":"Non-validating SQL parser","version":"0.1.12","yanked":false,"yanked_reason":null},"last_serial":24141613,"urls":[{"comment_text":"","digests":{"blake2b_256":"4de38ed186176b92385fb85eb306080f3114b50ae4a87b71e25fb14ccbd75d62","md5":"fc8de0d7c7ab3ab3ee51b89ad37aecdd","sha256":"68e88ec48b11c09ff727ecf0891d65fbd5217c98f217952deb52149d5eb368a3"},"downloads":-1,"filename":"sqlparse-0.1.12.tar.gz","has_sig":false,"md5_digest":"fc8de0d7c7ab3ab3ee51b89ad37aecdd","packagetype":"sdist","python_version":"source","requires_python":null,"size":54870,"upload_time":"2014-09-20T16:55:15","upload_time_iso_8601":"2014-09-20T16:55:15.902416Z","url":"https://files.pythonhosted.org/packages/4d/e3/8ed186176b92385fb85eb306080f3114b50ae4a87b71e25fb14ccbd75d62/sqlparse-0.1.12.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4340"],"details":"### Summary\nPassing a heavily nested list to sqlparse.parse() leads to a Denial of Service due to RecursionError.\n\n### Details + PoC\nRunning the following code will raise Maximum recursion limit exceeded exception:\n```py\nimport sqlparse\nsqlparse.parse('[' * 10000 + ']' * 10000)\n```\nWe expect a traceback of RecursionError:\n```py\nTraceback (most recent call last):\n  File \"trigger_sqlparse_nested_list.py\", line 3, in <module>\n    sqlparse.parse('[' * 10000 + ']' * 10000)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/__init__.py\", line 30, in parse\n    return tuple(parsestream(sql, encoding))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/filter_stack.py\", line 36, in run\n    stmt = grouping.group(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 428, in group\n    func(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 53, in group_brackets\n    _group_matching(tlist, sql.SquareBrackets)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 48, in _group_matching\n    tlist.group_tokens(cls, open_idx, close_idx)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 328, in group_tokens\n    grp = grp_cls(subtokens)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 161, in __init__\n    super().__init__(None, str(self))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in __str__\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in <genexpr>\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  [Previous line repeated 983 more times]\nRecursionError: maximum recursion depth exceeded\n```\n\n### Fix suggestion\nThe [flatten()](https://github.com/andialbrecht/sqlparse/blob/master/sqlparse/sql.py#L207) function of TokenList class should limit the recursion to a maximal depth:\n```py\nfrom sqlparse.exceptions import SQLParseError\n\nMAX_DEPTH = 100\n\n    def flatten(self, depth=1):\n        \"\"\"Generator yielding ungrouped tokens.\n\n        This method is recursively called for all child tokens.\n        \"\"\"\n    if depth >= MAX_DEPTH:\n        raise SQLParseError('Maximal depth reached')\n        for token in self.tokens:\n            if token.is_group:\n                yield from token.flatten(depth + 1)\n            else:\n                yield token\n```\n\n### Impact\nDenial of Service (the impact depends on the use).\nAnyone parsing a user input with sqlparse.parse() is affected.\n","fixed_in":["0.5.0"],"id":"GHSA-2m57-hf25-phgg","link":"https://osv.dev/vulnerability/GHSA-2m57-hf25-phgg","source":"osv","summary":null,"withdrawn":null}]},"0.1.13":{"info":{"author":"Andi Albrecht","author_email":"albrecht.andi@gmail.com","bugtrack_url":null,"classifiers":["Development Status :: 4 - Beta","Intended Audience :: Developers","License :: OSI Approved :: BSD License","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.4","Programming Language :: Python :: 2.5","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.2","Programming Language :: Python :: 3.3","Topic :: Database","Topic :: Software Development"],"description_content_type":null,"docs_url":null,"download_url":"UNKNOWN","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/andialbrecht/sqlparse","keywords":null,"license":"BSD","maintainer":null,"maintainer_email":null,"name":"sqlparse","package_url":"https://pypi.org/project/sqlparse/","platform":"UNKNOWN","project_url":"https://pypi.org/project/sqlparse/","project_urls":{"Download":"UNKNOWN","Homepage":"https://github.com/andialbrecht/sqlparse"},"provides_extra":null,"release_url":"https://pypi.org/project/sqlparse/0.1.13/","requires_dist":null,"requires_python":null,"summary":"Non-validating SQL parser","version":"0.1.13","yanked":false,"yanked_reason":null},"last_serial":24141613,"urls":[{"comment_text":"","digests":{"blake2b_256":"0dc445d4a28887959e86dce663f85be2783407e25e6df86897b76d8091c9299a","md5":"93bb37b3e9ee016a77906b2fcd5c927b","sha256":"9f3953add43be4f342a272cc2bbb8998aa450f87948aa1d72599ba1447ed3e15"},"downloads":-1,"filename":"sqlparse-0.1.13.tar.gz","has_sig":false,"md5_digest":"93bb37b3e9ee016a77906b2fcd5c927b","packagetype":"sdist","python_version":"source","requires_python":null,"size":54917,"upload_time":"2014-10-09T03:51:47","upload_time_iso_8601":"2014-10-09T03:51:47.381818Z","url":"https://files.pythonhosted.org/packages/0d/c4/45d4a28887959e86dce663f85be2783407e25e6df86897b76d8091c9299a/sqlparse-0.1.13.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4340"],"details":"### Summary\nPassing a heavily nested list to sqlparse.parse() leads to a Denial of Service due to RecursionError.\n\n### Details + PoC\nRunning the following code will raise Maximum recursion limit exceeded exception:\n```py\nimport sqlparse\nsqlparse.parse('[' * 10000 + ']' * 10000)\n```\nWe expect a traceback of RecursionError:\n```py\nTraceback (most recent call last):\n  File \"trigger_sqlparse_nested_list.py\", line 3, in <module>\n    sqlparse.parse('[' * 10000 + ']' * 10000)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/__init__.py\", line 30, in parse\n    return tuple(parsestream(sql, encoding))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/filter_stack.py\", line 36, in run\n    stmt = grouping.group(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 428, in group\n    func(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 53, in group_brackets\n    _group_matching(tlist, sql.SquareBrackets)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 48, in _group_matching\n    tlist.group_tokens(cls, open_idx, close_idx)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 328, in group_tokens\n    grp = grp_cls(subtokens)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 161, in __init__\n    super().__init__(None, str(self))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in __str__\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in <genexpr>\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  [Previous line repeated 983 more times]\nRecursionError: maximum recursion depth exceeded\n```\n\n### Fix suggestion\nThe [flatten()](https://github.com/andialbrecht/sqlparse/blob/master/sqlparse/sql.py#L207) function of TokenList class should limit the recursion to a maximal depth:\n```py\nfrom sqlparse.exceptions import SQLParseError\n\nMAX_DEPTH = 100\n\n    def flatten(self, depth=1):\n        \"\"\"Generator yielding ungrouped tokens.\n\n        This method is recursively called for all child tokens.\n        \"\"\"\n    if depth >= MAX_DEPTH:\n        raise SQLParseError('Maximal depth reached')\n        for token in self.tokens:\n            if token.is_group:\n                yield from token.flatten(depth + 1)\n            else:\n                yield token\n```\n\n### Impact\nDenial of Service (the impact depends on the use).\nAnyone parsing a user input with sqlparse.parse() is affected.\n","fixed_in":["0.5.0"],"id":"GHSA-2m57-hf25-phgg","link":"https://osv.dev/vulnerability/GHSA-2m57-hf25-phgg","source":"osv","summary":null,"withdrawn":null}]},"0.1.14":{"info":{"author":"Andi Albrecht","author_email":"albrecht.andi@gmail.com","bugtrack_url":null,"classifiers":["Development Status :: 4 - Beta","Intended Audience :: Developers","License :: OSI Approved :: BSD License","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.4","Programming Language :: Python :: 2.5","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.2","Programming Language :: Python :: 3.3","Topic :: Database","Topic :: Software Development"],"description_content_type":null,"docs_url":null,"download_url":"UNKNOWN","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/andialbrecht/sqlparse","keywords":null,"license":"BSD","maintainer":null,"maintainer_email":null,"name":"sqlparse","package_url":"https://pypi.org/project/sqlparse/","platform":"UNKNOWN","project_url":"https://pypi.org/project/sqlparse/","project_urls":{"Download":"UNKNOWN","Homepage":"https://github.com/andialbrecht/sqlparse"},"provides_extra":null,"release_url":"https://pypi.org/project/sqlparse/0.1.14/","requires_dist":null,"requires_python":null,"summary":"Non-validating SQL parser","version":"0.1.14","yanked":false,"yanked_reason":null},"last_serial":24141613,"urls":[{"comment_text":"","digests":{"blake2b_256":"85c7eca37ac1f1388b0e188732ed8d614cf6058ada5247755cc22e8831e2e95a","md5":"d59da626d247d46196097c5bece677e7","sha256":"e561e31853ab9f3634a1a2bd53035f9e47dfb203d56b33cc6569047ba087daf0"},"downloads":-1,"filename":"sqlparse-0.1.14.tar.gz","has_sig":false,"md5_digest":"d59da626d247d46196097c5bece677e7","packagetype":"sdist","python_version":"source","requires_python":null,"size":55307,"upload_time":"2014-11-30T07:23:49","upload_time_iso_8601":"2014-11-30T07:23:49.741318Z","url":"https://files.pythonhosted.org/packages/85/c7/eca37ac1f1388b0e188732ed8d614cf6058ada5247755cc22e8831e2e95a/sqlparse-0.1.14.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4340"],"details":"### Summary\nPassing a heavily nested list to sqlparse.parse() leads to a Denial of Service due to RecursionError.\n\n### Details + PoC\nRunning the following code will raise Maximum recursion limit exceeded exception:\n```py\nimport sqlparse\nsqlparse.parse('[' * 10000 + ']' * 10000)\n```\nWe expect a traceback of RecursionError:\n```py\nTraceback (most recent call last):\n  File \"trigger_sqlparse_nested_list.py\", line 3, in <module>\n    sqlparse.parse('[' * 10000 + ']' * 10000)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/__init__.py\", line 30, in parse\n    return tuple(parsestream(sql, encoding))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/filter_stack.py\", line 36, in run\n    stmt = grouping.group(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 428, in group\n    func(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 53, in group_brackets\n    _group_matching(tlist, sql.SquareBrackets)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 48, in _group_matching\n    tlist.group_tokens(cls, open_idx, close_idx)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 328, in group_tokens\n    grp = grp_cls(subtokens)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 161, in __init__\n    super().__init__(None, str(self))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in __str__\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in <genexpr>\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  [Previous line repeated 983 more times]\nRecursionError: maximum recursion depth exceeded\n```\n\n### Fix suggestion\nThe [flatten()](https://github.com/andialbrecht/sqlparse/blob/master/sqlparse/sql.py#L207) function of TokenList class should limit the recursion to a maximal depth:\n```py\nfrom sqlparse.exceptions import SQLParseError\n\nMAX_DEPTH = 100\n\n    def flatten(self, depth=1):\n        \"\"\"Generator yielding ungrouped tokens.\n\n        This method is recursively called for all child tokens.\n        \"\"\"\n    if depth >= MAX_DEPTH:\n        raise SQLParseError('Maximal depth reached')\n        for token in self.tokens:\n            if token.is_group:\n                yield from token.flatten(depth + 1)\n            else:\n                yield token\n```\n\n### Impact\nDenial of Service (the impact depends on the use).\nAnyone parsing a user input with sqlparse.parse() is affected.\n","fixed_in":["0.5.0"],"id":"GHSA-2m57-hf25-phgg","link":"https://osv.dev/vulnerability/GHSA-2m57-hf25-phgg","source":"osv","summary":null,"withdrawn":null}]},"0.1.15":{"info":{"author":"Andi Albrecht","author_email":"albrecht.andi@gmail.com","bugtrack_url":null,"classifiers":["Development Status :: 4 - Beta","Intended Audience :: Developers","License :: OSI Approved :: BSD License","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.4","Programming Language :: Python :: 2.5","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.2","Programming Language :: Python :: 3.3","Topic :: Database","Topic :: Software Development"],"description_content_type":null,"docs_url":null,"download_url":"UNKNOWN","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/andialbrecht/sqlparse","keywords":null,"license":"BSD","maintainer":null,"maintainer_email":null,"name":"sqlparse","package_url":"https://pypi.org/project/sqlparse/","platform":"UNKNOWN","project_url":"https://pypi.org/project/sqlparse/","project_urls":{"Download":"UNKNOWN","Homepage":"https://github.com/andialbrecht/sqlparse"},"provides_extra":null,"release_url":"https://pypi.org/project/sqlparse/0.1.15/","requires_dist":null,"requires_python":null,"summary":"Non-validating SQL parser","version":"0.1.15","yanked":false,"yanked_reason":null},"last_serial":24141613,"urls":[{"comment_text":"","digests":{"blake2b_256":"368237090b3f0274b19e26d12f5d3d8f6239c7494aab8cdbb492423f0a4134be","md5":"90cd6db9ec8354d9c133b017b395a312","sha256":"ce92c9f134b1cd461a27c502197464b5f245261ad0fbb26d7bf659f28a5c11b2"},"downloads":-1,"filename":"sqlparse-0.1.15.tar.gz","has_sig":false,"md5_digest":"90cd6db9ec8354d9c133b017b395a312","packagetype":"sdist","python_version":"source","requires_python":null,"size":57863,"upload_time":"2015-04-15T16:19:18","upload_time_iso_8601":"2015-04-15T16:19:18.339902Z","url":"https://files.pythonhosted.org/packages/36/82/37090b3f0274b19e26d12f5d3d8f6239c7494aab8cdbb492423f0a4134be/sqlparse-0.1.15.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-30608"],"details":"### Impact\nThe SQL parser contains a regular expression that is vulnerable to [ReDoS](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS) (Regular Expression Denial of Service). The vulnerability may lead to Denial of Service (DoS).\n\n### Patches\nThis issues has been fixed in sqlparse 0.4.4.\n\n### Workarounds\nNone. \n\n### References\nThis issue was discovered and reported by GHSL team member [@erik-krogh (Erik Krogh Kristensen)](https://github.com/erik-krogh).\n- Commit that introduced the vulnerability: e75e35869473832a1eb67772b1adfee2db11b85a\n","fixed_in":["0.4.4"],"id":"GHSA-rrm6-wvj7-cwh2","link":"https://osv.dev/vulnerability/GHSA-rrm6-wvj7-cwh2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-30608","GHSA-rrm6-wvj7-cwh2"],"details":"sqlparse is a non-validating SQL parser module for Python. In affected versions the SQL parser contains a regular expression that is vulnerable to ReDoS (Regular Expression Denial of Service). This issue was introduced by commit `e75e358`. The vulnerability may lead to Denial of Service (DoS). This issues has been fixed in sqlparse 0.4.4 by commit `c457abd5f`. Users are advised to upgrade. There are no known workarounds for this issue.\n","fixed_in":["0.4.4"],"id":"PYSEC-2023-87","link":"https://osv.dev/vulnerability/PYSEC-2023-87","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4340"],"details":"### Summary\nPassing a heavily nested list to sqlparse.parse() leads to a Denial of Service due to RecursionError.\n\n### Details + PoC\nRunning the following code will raise Maximum recursion limit exceeded exception:\n```py\nimport sqlparse\nsqlparse.parse('[' * 10000 + ']' * 10000)\n```\nWe expect a traceback of RecursionError:\n```py\nTraceback (most recent call last):\n  File \"trigger_sqlparse_nested_list.py\", line 3, in <module>\n    sqlparse.parse('[' * 10000 + ']' * 10000)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/__init__.py\", line 30, in parse\n    return tuple(parsestream(sql, encoding))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/filter_stack.py\", line 36, in run\n    stmt = grouping.group(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 428, in group\n    func(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 53, in group_brackets\n    _group_matching(tlist, sql.SquareBrackets)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 48, in _group_matching\n    tlist.group_tokens(cls, open_idx, close_idx)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 328, in group_tokens\n    grp = grp_cls(subtokens)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 161, in __init__\n    super().__init__(None, str(self))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in __str__\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in <genexpr>\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  [Previous line repeated 983 more times]\nRecursionError: maximum recursion depth exceeded\n```\n\n### Fix suggestion\nThe [flatten()](https://github.com/andialbrecht/sqlparse/blob/master/sqlparse/sql.py#L207) function of TokenList class should limit the recursion to a maximal depth:\n```py\nfrom sqlparse.exceptions import SQLParseError\n\nMAX_DEPTH = 100\n\n    def flatten(self, depth=1):\n        \"\"\"Generator yielding ungrouped tokens.\n\n        This method is recursively called for all child tokens.\n        \"\"\"\n    if depth >= MAX_DEPTH:\n        raise SQLParseError('Maximal depth reached')\n        for token in self.tokens:\n            if token.is_group:\n                yield from token.flatten(depth + 1)\n            else:\n                yield token\n```\n\n### Impact\nDenial of Service (the impact depends on the use).\nAnyone parsing a user input with sqlparse.parse() is affected.\n","fixed_in":["0.5.0"],"id":"GHSA-2m57-hf25-phgg","link":"https://osv.dev/vulnerability/GHSA-2m57-hf25-phgg","source":"osv","summary":null,"withdrawn":null}]},"0.1.16":{"info":{"author":"Andi Albrecht","author_email":"albrecht.andi@gmail.com","bugtrack_url":null,"classifiers":["Development Status :: 4 - Beta","Intended Audience :: Developers","License :: OSI Approved :: BSD License","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.4","Programming Language :: Python :: 2.5","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.2","Programming Language :: Python :: 3.3","Topic :: Database","Topic :: Software Development"],"description_content_type":null,"docs_url":null,"download_url":"UNKNOWN","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/andialbrecht/sqlparse","keywords":null,"license":"BSD","maintainer":null,"maintainer_email":null,"name":"sqlparse","package_url":"https://pypi.org/project/sqlparse/","platform":"UNKNOWN","project_url":"https://pypi.org/project/sqlparse/","project_urls":{"Download":"UNKNOWN","Homepage":"https://github.com/andialbrecht/sqlparse"},"provides_extra":null,"release_url":"https://pypi.org/project/sqlparse/0.1.16/","requires_dist":null,"requires_python":null,"summary":"Non-validating SQL parser","version":"0.1.16","yanked":false,"yanked_reason":null},"last_serial":24141613,"urls":[{"comment_text":"","digests":{"blake2b_256":"1e85688011bacac4224b2c0c971727f9f037cd69affb72e3d482af59d129b17c","md5":"370962a307ebaaa70a28b6b0ccb53980","sha256":"678c6c36ca4b01405177da8b84eecf92ec92c9f6c762396c965bb5d305f20f81"},"downloads":-1,"filename":"sqlparse-0.1.16.tar.gz","has_sig":false,"md5_digest":"370962a307ebaaa70a28b6b0ccb53980","packagetype":"sdist","python_version":"source","requires_python":null,"size":58418,"upload_time":"2015-07-26T09:26:15","upload_time_iso_8601":"2015-07-26T09:26:15.471029Z","url":"https://files.pythonhosted.org/packages/1e/85/688011bacac4224b2c0c971727f9f037cd69affb72e3d482af59d129b17c/sqlparse-0.1.16.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-30608"],"details":"### Impact\nThe SQL parser contains a regular expression that is vulnerable to [ReDoS](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS) (Regular Expression Denial of Service). The vulnerability may lead to Denial of Service (DoS).\n\n### Patches\nThis issues has been fixed in sqlparse 0.4.4.\n\n### Workarounds\nNone. \n\n### References\nThis issue was discovered and reported by GHSL team member [@erik-krogh (Erik Krogh Kristensen)](https://github.com/erik-krogh).\n- Commit that introduced the vulnerability: e75e35869473832a1eb67772b1adfee2db11b85a\n","fixed_in":["0.4.4"],"id":"GHSA-rrm6-wvj7-cwh2","link":"https://osv.dev/vulnerability/GHSA-rrm6-wvj7-cwh2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-30608","GHSA-rrm6-wvj7-cwh2"],"details":"sqlparse is a non-validating SQL parser module for Python. In affected versions the SQL parser contains a regular expression that is vulnerable to ReDoS (Regular Expression Denial of Service). This issue was introduced by commit `e75e358`. The vulnerability may lead to Denial of Service (DoS). This issues has been fixed in sqlparse 0.4.4 by commit `c457abd5f`. Users are advised to upgrade. There are no known workarounds for this issue.\n","fixed_in":["0.4.4"],"id":"PYSEC-2023-87","link":"https://osv.dev/vulnerability/PYSEC-2023-87","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4340"],"details":"### Summary\nPassing a heavily nested list to sqlparse.parse() leads to a Denial of Service due to RecursionError.\n\n### Details + PoC\nRunning the following code will raise Maximum recursion limit exceeded exception:\n```py\nimport sqlparse\nsqlparse.parse('[' * 10000 + ']' * 10000)\n```\nWe expect a traceback of RecursionError:\n```py\nTraceback (most recent call last):\n  File \"trigger_sqlparse_nested_list.py\", line 3, in <module>\n    sqlparse.parse('[' * 10000 + ']' * 10000)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/__init__.py\", line 30, in parse\n    return tuple(parsestream(sql, encoding))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/filter_stack.py\", line 36, in run\n    stmt = grouping.group(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 428, in group\n    func(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 53, in group_brackets\n    _group_matching(tlist, sql.SquareBrackets)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 48, in _group_matching\n    tlist.group_tokens(cls, open_idx, close_idx)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 328, in group_tokens\n    grp = grp_cls(subtokens)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 161, in __init__\n    super().__init__(None, str(self))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in __str__\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in <genexpr>\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  [Previous line repeated 983 more times]\nRecursionError: maximum recursion depth exceeded\n```\n\n### Fix suggestion\nThe [flatten()](https://github.com/andialbrecht/sqlparse/blob/master/sqlparse/sql.py#L207) function of TokenList class should limit the recursion to a maximal depth:\n```py\nfrom sqlparse.exceptions import SQLParseError\n\nMAX_DEPTH = 100\n\n    def flatten(self, depth=1):\n        \"\"\"Generator yielding ungrouped tokens.\n\n        This method is recursively called for all child tokens.\n        \"\"\"\n    if depth >= MAX_DEPTH:\n        raise SQLParseError('Maximal depth reached')\n        for token in self.tokens:\n            if token.is_group:\n                yield from token.flatten(depth + 1)\n            else:\n                yield token\n```\n\n### Impact\nDenial of Service (the impact depends on the use).\nAnyone parsing a user input with sqlparse.parse() is affected.\n","fixed_in":["0.5.0"],"id":"GHSA-2m57-hf25-phgg","link":"https://osv.dev/vulnerability/GHSA-2m57-hf25-phgg","source":"osv","summary":null,"withdrawn":null}]},"0.1.17":{"info":{"author":"Andi Albrecht","author_email":"albrecht.andi@gmail.com","bugtrack_url":null,"classifiers":["Development Status :: 4 - Beta","Intended Audience :: Developers","License :: OSI Approved :: BSD License","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.4","Programming Language :: Python :: 2.5","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.2","Programming Language :: Python :: 3.3","Topic :: Database","Topic :: Software Development"],"description_content_type":null,"docs_url":null,"download_url":"UNKNOWN","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/andialbrecht/sqlparse","keywords":null,"license":"BSD","maintainer":null,"maintainer_email":null,"name":"sqlparse","package_url":"https://pypi.org/project/sqlparse/","platform":"UNKNOWN","project_url":"https://pypi.org/project/sqlparse/","project_urls":{"Download":"UNKNOWN","Homepage":"https://github.com/andialbrecht/sqlparse"},"provides_extra":null,"release_url":"https://pypi.org/project/sqlparse/0.1.17/","requires_dist":null,"requires_python":null,"summary":"Non-validating SQL parser","version":"0.1.17","yanked":false,"yanked_reason":null},"last_serial":24141613,"urls":[{"comment_text":"","digests":{"blake2b_256":"a848b353fa9cfd52238ca659a42bb028b6560525dc177a0797a90fa8b819e7e9","md5":"3189f8639d62f28c18c7f75b10cffd46","sha256":"2e9fcb4d07c9771f13995f211f8a6825e088856ec5f57db184a66f2f65dd8833"},"downloads":-1,"filename":"sqlparse-0.1.17.tar.gz","has_sig":false,"md5_digest":"3189f8639d62f28c18c7f75b10cffd46","packagetype":"sdist","python_version":"source","requires_python":null,"size":58539,"upload_time":"2015-10-24T06:09:34","upload_time_iso_8601":"2015-10-24T06:09:34.035569Z","url":"https://files.pythonhosted.org/packages/a8/48/b353fa9cfd52238ca659a42bb028b6560525dc177a0797a90fa8b819e7e9/sqlparse-0.1.17.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-30608"],"details":"### Impact\nThe SQL parser contains a regular expression that is vulnerable to [ReDoS](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS) (Regular Expression Denial of Service). The vulnerability may lead to Denial of Service (DoS).\n\n### Patches\nThis issues has been fixed in sqlparse 0.4.4.\n\n### Workarounds\nNone. \n\n### References\nThis issue was discovered and reported by GHSL team member [@erik-krogh (Erik Krogh Kristensen)](https://github.com/erik-krogh).\n- Commit that introduced the vulnerability: e75e35869473832a1eb67772b1adfee2db11b85a\n","fixed_in":["0.4.4"],"id":"GHSA-rrm6-wvj7-cwh2","link":"https://osv.dev/vulnerability/GHSA-rrm6-wvj7-cwh2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-30608","GHSA-rrm6-wvj7-cwh2"],"details":"sqlparse is a non-validating SQL parser module for Python. In affected versions the SQL parser contains a regular expression that is vulnerable to ReDoS (Regular Expression Denial of Service). This issue was introduced by commit `e75e358`. The vulnerability may lead to Denial of Service (DoS). This issues has been fixed in sqlparse 0.4.4 by commit `c457abd5f`. Users are advised to upgrade. There are no known workarounds for this issue.\n","fixed_in":["0.4.4"],"id":"PYSEC-2023-87","link":"https://osv.dev/vulnerability/PYSEC-2023-87","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4340"],"details":"### Summary\nPassing a heavily nested list to sqlparse.parse() leads to a Denial of Service due to RecursionError.\n\n### Details + PoC\nRunning the following code will raise Maximum recursion limit exceeded exception:\n```py\nimport sqlparse\nsqlparse.parse('[' * 10000 + ']' * 10000)\n```\nWe expect a traceback of RecursionError:\n```py\nTraceback (most recent call last):\n  File \"trigger_sqlparse_nested_list.py\", line 3, in <module>\n    sqlparse.parse('[' * 10000 + ']' * 10000)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/__init__.py\", line 30, in parse\n    return tuple(parsestream(sql, encoding))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/filter_stack.py\", line 36, in run\n    stmt = grouping.group(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 428, in group\n    func(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 53, in group_brackets\n    _group_matching(tlist, sql.SquareBrackets)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 48, in _group_matching\n    tlist.group_tokens(cls, open_idx, close_idx)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 328, in group_tokens\n    grp = grp_cls(subtokens)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 161, in __init__\n    super().__init__(None, str(self))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in __str__\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in <genexpr>\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  [Previous line repeated 983 more times]\nRecursionError: maximum recursion depth exceeded\n```\n\n### Fix suggestion\nThe [flatten()](https://github.com/andialbrecht/sqlparse/blob/master/sqlparse/sql.py#L207) function of TokenList class should limit the recursion to a maximal depth:\n```py\nfrom sqlparse.exceptions import SQLParseError\n\nMAX_DEPTH = 100\n\n    def flatten(self, depth=1):\n        \"\"\"Generator yielding ungrouped tokens.\n\n        This method is recursively called for all child tokens.\n        \"\"\"\n    if depth >= MAX_DEPTH:\n        raise SQLParseError('Maximal depth reached')\n        for token in self.tokens:\n            if token.is_group:\n                yield from token.flatten(depth + 1)\n            else:\n                yield token\n```\n\n### Impact\nDenial of Service (the impact depends on the use).\nAnyone parsing a user input with sqlparse.parse() is affected.\n","fixed_in":["0.5.0"],"id":"GHSA-2m57-hf25-phgg","link":"https://osv.dev/vulnerability/GHSA-2m57-hf25-phgg","source":"osv","summary":null,"withdrawn":null}]},"0.1.18":{"info":{"author":"Andi Albrecht","author_email":"albrecht.andi@gmail.com","bugtrack_url":null,"classifiers":["Development Status :: 4 - Beta","Intended Audience :: Developers","License :: OSI Approved :: BSD License","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.4","Programming Language :: Python :: 2.5","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.2","Programming Language :: Python :: 3.3","Topic :: Database","Topic :: Software Development"],"description_content_type":null,"docs_url":null,"download_url":"UNKNOWN","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/andialbrecht/sqlparse","keywords":null,"license":"BSD","maintainer":null,"maintainer_email":null,"name":"sqlparse","package_url":"https://pypi.org/project/sqlparse/","platform":"UNKNOWN","project_url":"https://pypi.org/project/sqlparse/","project_urls":{"Download":"UNKNOWN","Homepage":"https://github.com/andialbrecht/sqlparse"},"provides_extra":null,"release_url":"https://pypi.org/project/sqlparse/0.1.18/","requires_dist":null,"requires_python":null,"summary":"Non-validating SQL parser","version":"0.1.18","yanked":false,"yanked_reason":null},"last_serial":24141613,"urls":[{"comment_text":"","digests":{"blake2b_256":"857d0d217b6132f1dd3fd22d1b1fbc16bb9fd951f5c1a3af814bb8a22edc5da3","md5":"777942cb613ebbaedadda81dc7fcdb9b","sha256":"39b196c4a06f76d6ac82f029457ca961f662a8bbbb2694eb1dfe4f2b68a2d7cf"},"downloads":-1,"filename":"sqlparse-0.1.18.tar.gz","has_sig":false,"md5_digest":"777942cb613ebbaedadda81dc7fcdb9b","packagetype":"sdist","python_version":"source","requires_python":null,"size":58594,"upload_time":"2015-10-25T06:42:32","upload_time_iso_8601":"2015-10-25T06:42:32.880527Z","url":"https://files.pythonhosted.org/packages/85/7d/0d217b6132f1dd3fd22d1b1fbc16bb9fd951f5c1a3af814bb8a22edc5da3/sqlparse-0.1.18.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-30608"],"details":"### Impact\nThe SQL parser contains a regular expression that is vulnerable to [ReDoS](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS) (Regular Expression Denial of Service). The vulnerability may lead to Denial of Service (DoS).\n\n### Patches\nThis issues has been fixed in sqlparse 0.4.4.\n\n### Workarounds\nNone. \n\n### References\nThis issue was discovered and reported by GHSL team member [@erik-krogh (Erik Krogh Kristensen)](https://github.com/erik-krogh).\n- Commit that introduced the vulnerability: e75e35869473832a1eb67772b1adfee2db11b85a\n","fixed_in":["0.4.4"],"id":"GHSA-rrm6-wvj7-cwh2","link":"https://osv.dev/vulnerability/GHSA-rrm6-wvj7-cwh2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-30608","GHSA-rrm6-wvj7-cwh2"],"details":"sqlparse is a non-validating SQL parser module for Python. In affected versions the SQL parser contains a regular expression that is vulnerable to ReDoS (Regular Expression Denial of Service). This issue was introduced by commit `e75e358`. The vulnerability may lead to Denial of Service (DoS). This issues has been fixed in sqlparse 0.4.4 by commit `c457abd5f`. Users are advised to upgrade. There are no known workarounds for this issue.\n","fixed_in":["0.4.4"],"id":"PYSEC-2023-87","link":"https://osv.dev/vulnerability/PYSEC-2023-87","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4340"],"details":"### Summary\nPassing a heavily nested list to sqlparse.parse() leads to a Denial of Service due to RecursionError.\n\n### Details + PoC\nRunning the following code will raise Maximum recursion limit exceeded exception:\n```py\nimport sqlparse\nsqlparse.parse('[' * 10000 + ']' * 10000)\n```\nWe expect a traceback of RecursionError:\n```py\nTraceback (most recent call last):\n  File \"trigger_sqlparse_nested_list.py\", line 3, in <module>\n    sqlparse.parse('[' * 10000 + ']' * 10000)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/__init__.py\", line 30, in parse\n    return tuple(parsestream(sql, encoding))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/filter_stack.py\", line 36, in run\n    stmt = grouping.group(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 428, in group\n    func(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 53, in group_brackets\n    _group_matching(tlist, sql.SquareBrackets)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 48, in _group_matching\n    tlist.group_tokens(cls, open_idx, close_idx)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 328, in group_tokens\n    grp = grp_cls(subtokens)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 161, in __init__\n    super().__init__(None, str(self))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in __str__\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in <genexpr>\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  [Previous line repeated 983 more times]\nRecursionError: maximum recursion depth exceeded\n```\n\n### Fix suggestion\nThe [flatten()](https://github.com/andialbrecht/sqlparse/blob/master/sqlparse/sql.py#L207) function of TokenList class should limit the recursion to a maximal depth:\n```py\nfrom sqlparse.exceptions import SQLParseError\n\nMAX_DEPTH = 100\n\n    def flatten(self, depth=1):\n        \"\"\"Generator yielding ungrouped tokens.\n\n        This method is recursively called for all child tokens.\n        \"\"\"\n    if depth >= MAX_DEPTH:\n        raise SQLParseError('Maximal depth reached')\n        for token in self.tokens:\n            if token.is_group:\n                yield from token.flatten(depth + 1)\n            else:\n                yield token\n```\n\n### Impact\nDenial of Service (the impact depends on the use).\nAnyone parsing a user input with sqlparse.parse() is affected.\n","fixed_in":["0.5.0"],"id":"GHSA-2m57-hf25-phgg","link":"https://osv.dev/vulnerability/GHSA-2m57-hf25-phgg","source":"osv","summary":null,"withdrawn":null}]},"0.1.19":{"info":{"author":"Andi Albrecht","author_email":"albrecht.andi@gmail.com","bugtrack_url":null,"classifiers":["Development Status :: 4 - Beta","Intended Audience :: Developers","License :: OSI Approved :: BSD License","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.4","Programming Language :: Python :: 2.5","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.2","Programming Language :: Python :: 3.3","Topic :: Database","Topic :: Software Development"],"description_content_type":null,"docs_url":null,"download_url":"UNKNOWN","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/andialbrecht/sqlparse","keywords":null,"license":"BSD","maintainer":null,"maintainer_email":null,"name":"sqlparse","package_url":"https://pypi.org/project/sqlparse/","platform":"UNKNOWN","project_url":"https://pypi.org/project/sqlparse/","project_urls":{"Download":"UNKNOWN","Homepage":"https://github.com/andialbrecht/sqlparse"},"provides_extra":null,"release_url":"https://pypi.org/project/sqlparse/0.1.19/","requires_dist":null,"requires_python":null,"summary":"Non-validating SQL parser","version":"0.1.19","yanked":false,"yanked_reason":null},"last_serial":24141613,"urls":[{"comment_text":"","digests":{"blake2b_256":"9ccc3d8d34cfd0507dd3c278575e42baff2316a92513de0a87ac0ec9f32806c9","md5":"f200d8dea67b58bc15575bfa76e4e9dc","sha256":"d896be1a1c7f24bffe08d7a64e6f0176b260e281c5f3685afe7826f8bada4ee8"},"downloads":-1,"filename":"sqlparse-0.1.19.tar.gz","has_sig":false,"md5_digest":"f200d8dea67b58bc15575bfa76e4e9dc","packagetype":"sdist","python_version":"source","requires_python":null,"size":58132,"upload_time":"2016-03-07T10:47:15","upload_time_iso_8601":"2016-03-07T10:47:15.066242Z","url":"https://files.pythonhosted.org/packages/9c/cc/3d8d34cfd0507dd3c278575e42baff2316a92513de0a87ac0ec9f32806c9/sqlparse-0.1.19.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-30608"],"details":"### Impact\nThe SQL parser contains a regular expression that is vulnerable to [ReDoS](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS) (Regular Expression Denial of Service). The vulnerability may lead to Denial of Service (DoS).\n\n### Patches\nThis issues has been fixed in sqlparse 0.4.4.\n\n### Workarounds\nNone. \n\n### References\nThis issue was discovered and reported by GHSL team member [@erik-krogh (Erik Krogh Kristensen)](https://github.com/erik-krogh).\n- Commit that introduced the vulnerability: e75e35869473832a1eb67772b1adfee2db11b85a\n","fixed_in":["0.4.4"],"id":"GHSA-rrm6-wvj7-cwh2","link":"https://osv.dev/vulnerability/GHSA-rrm6-wvj7-cwh2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-30608","GHSA-rrm6-wvj7-cwh2"],"details":"sqlparse is a non-validating SQL parser module for Python. In affected versions the SQL parser contains a regular expression that is vulnerable to ReDoS (Regular Expression Denial of Service). This issue was introduced by commit `e75e358`. The vulnerability may lead to Denial of Service (DoS). This issues has been fixed in sqlparse 0.4.4 by commit `c457abd5f`. Users are advised to upgrade. There are no known workarounds for this issue.\n","fixed_in":["0.4.4"],"id":"PYSEC-2023-87","link":"https://osv.dev/vulnerability/PYSEC-2023-87","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4340"],"details":"### Summary\nPassing a heavily nested list to sqlparse.parse() leads to a Denial of Service due to RecursionError.\n\n### Details + PoC\nRunning the following code will raise Maximum recursion limit exceeded exception:\n```py\nimport sqlparse\nsqlparse.parse('[' * 10000 + ']' * 10000)\n```\nWe expect a traceback of RecursionError:\n```py\nTraceback (most recent call last):\n  File \"trigger_sqlparse_nested_list.py\", line 3, in <module>\n    sqlparse.parse('[' * 10000 + ']' * 10000)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/__init__.py\", line 30, in parse\n    return tuple(parsestream(sql, encoding))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/filter_stack.py\", line 36, in run\n    stmt = grouping.group(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 428, in group\n    func(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 53, in group_brackets\n    _group_matching(tlist, sql.SquareBrackets)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 48, in _group_matching\n    tlist.group_tokens(cls, open_idx, close_idx)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 328, in group_tokens\n    grp = grp_cls(subtokens)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 161, in __init__\n    super().__init__(None, str(self))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in __str__\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in <genexpr>\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  [Previous line repeated 983 more times]\nRecursionError: maximum recursion depth exceeded\n```\n\n### Fix suggestion\nThe [flatten()](https://github.com/andialbrecht/sqlparse/blob/master/sqlparse/sql.py#L207) function of TokenList class should limit the recursion to a maximal depth:\n```py\nfrom sqlparse.exceptions import SQLParseError\n\nMAX_DEPTH = 100\n\n    def flatten(self, depth=1):\n        \"\"\"Generator yielding ungrouped tokens.\n\n        This method is recursively called for all child tokens.\n        \"\"\"\n    if depth >= MAX_DEPTH:\n        raise SQLParseError('Maximal depth reached')\n        for token in self.tokens:\n            if token.is_group:\n                yield from token.flatten(depth + 1)\n            else:\n                yield token\n```\n\n### Impact\nDenial of Service (the impact depends on the use).\nAnyone parsing a user input with sqlparse.parse() is affected.\n","fixed_in":["0.5.0"],"id":"GHSA-2m57-hf25-phgg","link":"https://osv.dev/vulnerability/GHSA-2m57-hf25-phgg","source":"osv","summary":null,"withdrawn":null}]},"0.1.2":{"info":{"author":"Andi Albrecht","author_email":"albrecht.andi@gmail.com","bugtrack_url":null,"classifiers":["Development Status :: 4 - Beta","Intended Audience :: Developers","License :: OSI Approved :: BSD License","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.4","Programming Language :: Python :: 2.5","Programming Language :: Python :: 2.6","Topic :: Database","Topic :: Software Development"],"description_content_type":null,"docs_url":null,"download_url":"http://python-sqlparse.googlecode.com/files/sqlparse-0.1.2.tar.gz","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"http://python-sqlparse.googlecode.com/","keywords":null,"license":"BSD","maintainer":null,"maintainer_email":null,"name":"sqlparse","package_url":"https://pypi.org/project/sqlparse/","platform":"UNKNOWN","project_url":"https://pypi.org/project/sqlparse/","project_urls":{"Download":"http://python-sqlparse.googlecode.com/files/sqlparse-0.1.2.tar.gz","Homepage":"http://python-sqlparse.googlecode.com/"},"provides_extra":null,"release_url":"https://pypi.org/project/sqlparse/0.1.2/","requires_dist":null,"requires_python":null,"summary":"Non-validating SQL parser","version":"0.1.2","yanked":false,"yanked_reason":null},"last_serial":24141613,"urls":[{"comment_text":"","digests":{"blake2b_256":"8c43d241c949a92f4f0a2d58a67d061531d0bb0b8e4db523be0549d41f9ffa41","md5":"aa9852ad81822723adcd9f96838de14e","sha256":"a92a84ae0d606505740b759c80d8129ed46d98b72c843bc1a6f6eac7420aa42a"},"downloads":-1,"filename":"sqlparse-0.1.2.tar.gz","has_sig":false,"md5_digest":"aa9852ad81822723adcd9f96838de14e","packagetype":"sdist","python_version":"source","requires_python":null,"size":33262,"upload_time":"2013-05-20T06:40:58","upload_time_iso_8601":"2013-05-20T06:40:58.182235Z","url":"https://files.pythonhosted.org/packages/8c/43/d241c949a92f4f0a2d58a67d061531d0bb0b8e4db523be0549d41f9ffa41/sqlparse-0.1.2.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4340"],"details":"### Summary\nPassing a heavily nested list to sqlparse.parse() leads to a Denial of Service due to RecursionError.\n\n### Details + PoC\nRunning the following code will raise Maximum recursion limit exceeded exception:\n```py\nimport sqlparse\nsqlparse.parse('[' * 10000 + ']' * 10000)\n```\nWe expect a traceback of RecursionError:\n```py\nTraceback (most recent call last):\n  File \"trigger_sqlparse_nested_list.py\", line 3, in <module>\n    sqlparse.parse('[' * 10000 + ']' * 10000)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/__init__.py\", line 30, in parse\n    return tuple(parsestream(sql, encoding))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/filter_stack.py\", line 36, in run\n    stmt = grouping.group(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 428, in group\n    func(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 53, in group_brackets\n    _group_matching(tlist, sql.SquareBrackets)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 48, in _group_matching\n    tlist.group_tokens(cls, open_idx, close_idx)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 328, in group_tokens\n    grp = grp_cls(subtokens)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 161, in __init__\n    super().__init__(None, str(self))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in __str__\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in <genexpr>\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  [Previous line repeated 983 more times]\nRecursionError: maximum recursion depth exceeded\n```\n\n### Fix suggestion\nThe [flatten()](https://github.com/andialbrecht/sqlparse/blob/master/sqlparse/sql.py#L207) function of TokenList class should limit the recursion to a maximal depth:\n```py\nfrom sqlparse.exceptions import SQLParseError\n\nMAX_DEPTH = 100\n\n    def flatten(self, depth=1):\n        \"\"\"Generator yielding ungrouped tokens.\n\n        This method is recursively called for all child tokens.\n        \"\"\"\n    if depth >= MAX_DEPTH:\n        raise SQLParseError('Maximal depth reached')\n        for token in self.tokens:\n            if token.is_group:\n                yield from token.flatten(depth + 1)\n            else:\n                yield token\n```\n\n### Impact\nDenial of Service (the impact depends on the use).\nAnyone parsing a user input with sqlparse.parse() is affected.\n","fixed_in":["0.5.0"],"id":"GHSA-2m57-hf25-phgg","link":"https://osv.dev/vulnerability/GHSA-2m57-hf25-phgg","source":"osv","summary":null,"withdrawn":null}]},"0.1.3":{"info":{"author":"Andi Albrecht","author_email":"albrecht.andi@gmail.com","bugtrack_url":null,"classifiers":["Development Status :: 4 - Beta","Intended Audience :: Developers","License :: OSI Approved :: BSD License","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.4","Programming Language :: Python :: 2.5","Programming Language :: Python :: 2.6","Topic :: Database","Topic :: Software Development"],"description_content_type":null,"docs_url":null,"download_url":"http://python-sqlparse.googlecode.com/files/sqlparse-0.1.3.tar.gz","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"http://python-sqlparse.googlecode.com/","keywords":"","license":"BSD","maintainer":"","maintainer_email":"","name":"sqlparse","package_url":"https://pypi.org/project/sqlparse/","platform":"UNKNOWN","project_url":"https://pypi.org/project/sqlparse/","project_urls":{"Download":"http://python-sqlparse.googlecode.com/files/sqlparse-0.1.3.tar.gz","Homepage":"http://python-sqlparse.googlecode.com/"},"provides_extra":null,"release_url":"https://pypi.org/project/sqlparse/0.1.3/","requires_dist":null,"requires_python":null,"summary":"Non-validating SQL parser","version":"0.1.3","yanked":false,"yanked_reason":null},"last_serial":24141613,"urls":[{"comment_text":"","digests":{"blake2b_256":"21554c146f38df60519e7b6d5220f3a2c33a3a1940d7a9ce3e9e0d4d7486f3b2","md5":"f7e01e8ff3eeddf9bc7be8b8a1cef730","sha256":"5f870d293ecdaba8baace52536dd9a34884ed3775990c058ecfd1d23499d7e63"},"downloads":-1,"filename":"sqlparse-0.1.3.tar.gz","has_sig":false,"md5_digest":"f7e01e8ff3eeddf9bc7be8b8a1cef730","packagetype":"sdist","python_version":"source","requires_python":null,"size":43369,"upload_time":"2013-05-20T06:41:23","upload_time_iso_8601":"2013-05-20T06:41:23.109098Z","url":"https://files.pythonhosted.org/packages/21/55/4c146f38df60519e7b6d5220f3a2c33a3a1940d7a9ce3e9e0d4d7486f3b2/sqlparse-0.1.3.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4340"],"details":"### Summary\nPassing a heavily nested list to sqlparse.parse() leads to a Denial of Service due to RecursionError.\n\n### Details + PoC\nRunning the following code will raise Maximum recursion limit exceeded exception:\n```py\nimport sqlparse\nsqlparse.parse('[' * 10000 + ']' * 10000)\n```\nWe expect a traceback of RecursionError:\n```py\nTraceback (most recent call last):\n  File \"trigger_sqlparse_nested_list.py\", line 3, in <module>\n    sqlparse.parse('[' * 10000 + ']' * 10000)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/__init__.py\", line 30, in parse\n    return tuple(parsestream(sql, encoding))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/filter_stack.py\", line 36, in run\n    stmt = grouping.group(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 428, in group\n    func(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 53, in group_brackets\n    _group_matching(tlist, sql.SquareBrackets)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 48, in _group_matching\n    tlist.group_tokens(cls, open_idx, close_idx)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 328, in group_tokens\n    grp = grp_cls(subtokens)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 161, in __init__\n    super().__init__(None, str(self))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in __str__\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in <genexpr>\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  [Previous line repeated 983 more times]\nRecursionError: maximum recursion depth exceeded\n```\n\n### Fix suggestion\nThe [flatten()](https://github.com/andialbrecht/sqlparse/blob/master/sqlparse/sql.py#L207) function of TokenList class should limit the recursion to a maximal depth:\n```py\nfrom sqlparse.exceptions import SQLParseError\n\nMAX_DEPTH = 100\n\n    def flatten(self, depth=1):\n        \"\"\"Generator yielding ungrouped tokens.\n\n        This method is recursively called for all child tokens.\n        \"\"\"\n    if depth >= MAX_DEPTH:\n        raise SQLParseError('Maximal depth reached')\n        for token in self.tokens:\n            if token.is_group:\n                yield from token.flatten(depth + 1)\n            else:\n                yield token\n```\n\n### Impact\nDenial of Service (the impact depends on the use).\nAnyone parsing a user input with sqlparse.parse() is affected.\n","fixed_in":["0.5.0"],"id":"GHSA-2m57-hf25-phgg","link":"https://osv.dev/vulnerability/GHSA-2m57-hf25-phgg","source":"osv","summary":null,"withdrawn":null}]},"0.1.4":{"info":{"author":"Andi Albrecht","author_email":"albrecht.andi@gmail.com","bugtrack_url":null,"classifiers":["Development Status :: 4 - Beta","Intended Audience :: Developers","License :: OSI Approved :: BSD License","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.4","Programming Language :: Python :: 2.5","Programming Language :: Python :: 2.6","Topic :: Database","Topic :: Software Development"],"description_content_type":null,"docs_url":null,"download_url":"https://github.com/downloads/andialbrecht/sqlparse/sqlparse-0.1.4.tar.gz","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/andialbrecht/sqlparse","keywords":null,"license":"BSD","maintainer":null,"maintainer_email":null,"name":"sqlparse","package_url":"https://pypi.org/project/sqlparse/","platform":"UNKNOWN","project_url":"https://pypi.org/project/sqlparse/","project_urls":{"Download":"https://github.com/downloads/andialbrecht/sqlparse/sqlparse-0.1.4.tar.gz","Homepage":"https://github.com/andialbrecht/sqlparse"},"provides_extra":null,"release_url":"https://pypi.org/project/sqlparse/0.1.4/","requires_dist":null,"requires_python":null,"summary":"Non-validating SQL parser","version":"0.1.4","yanked":false,"yanked_reason":null},"last_serial":24141613,"urls":[{"comment_text":"","digests":{"blake2b_256":"993dfda2360dc7c7c31cae217f9637e0a342445f1b5afcbbb67d091349a5e99f","md5":"c93cd554dc7442ef6e28e854528e2f93","sha256":"68a49ba33a608e438574f9d150aca5f753c31b9940d200341a20bba6ba82c6a4"},"downloads":-1,"filename":"sqlparse-0.1.4.tar.gz","has_sig":false,"md5_digest":"c93cd554dc7442ef6e28e854528e2f93","packagetype":"sdist","python_version":"source","requires_python":null,"size":47939,"upload_time":"2012-04-20T19:43:29","upload_time_iso_8601":"2012-04-20T19:43:29.760450Z","url":"https://files.pythonhosted.org/packages/99/3d/fda2360dc7c7c31cae217f9637e0a342445f1b5afcbbb67d091349a5e99f/sqlparse-0.1.4.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4340"],"details":"### Summary\nPassing a heavily nested list to sqlparse.parse() leads to a Denial of Service due to RecursionError.\n\n### Details + PoC\nRunning the following code will raise Maximum recursion limit exceeded exception:\n```py\nimport sqlparse\nsqlparse.parse('[' * 10000 + ']' * 10000)\n```\nWe expect a traceback of RecursionError:\n```py\nTraceback (most recent call last):\n  File \"trigger_sqlparse_nested_list.py\", line 3, in <module>\n    sqlparse.parse('[' * 10000 + ']' * 10000)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/__init__.py\", line 30, in parse\n    return tuple(parsestream(sql, encoding))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/filter_stack.py\", line 36, in run\n    stmt = grouping.group(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 428, in group\n    func(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 53, in group_brackets\n    _group_matching(tlist, sql.SquareBrackets)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 48, in _group_matching\n    tlist.group_tokens(cls, open_idx, close_idx)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 328, in group_tokens\n    grp = grp_cls(subtokens)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 161, in __init__\n    super().__init__(None, str(self))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in __str__\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in <genexpr>\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  [Previous line repeated 983 more times]\nRecursionError: maximum recursion depth exceeded\n```\n\n### Fix suggestion\nThe [flatten()](https://github.com/andialbrecht/sqlparse/blob/master/sqlparse/sql.py#L207) function of TokenList class should limit the recursion to a maximal depth:\n```py\nfrom sqlparse.exceptions import SQLParseError\n\nMAX_DEPTH = 100\n\n    def flatten(self, depth=1):\n        \"\"\"Generator yielding ungrouped tokens.\n\n        This method is recursively called for all child tokens.\n        \"\"\"\n    if depth >= MAX_DEPTH:\n        raise SQLParseError('Maximal depth reached')\n        for token in self.tokens:\n            if token.is_group:\n                yield from token.flatten(depth + 1)\n            else:\n                yield token\n```\n\n### Impact\nDenial of Service (the impact depends on the use).\nAnyone parsing a user input with sqlparse.parse() is affected.\n","fixed_in":["0.5.0"],"id":"GHSA-2m57-hf25-phgg","link":"https://osv.dev/vulnerability/GHSA-2m57-hf25-phgg","source":"osv","summary":null,"withdrawn":null}]},"0.1.5":{"info":{"author":"Andi Albrecht","author_email":"albrecht.andi@gmail.com","bugtrack_url":null,"classifiers":["Development Status :: 4 - Beta","Intended Audience :: Developers","License :: OSI Approved :: BSD License","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.5","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.2","Programming Language :: Python :: 3.3","Topic :: Database","Topic :: Software Development"],"description_content_type":null,"docs_url":null,"download_url":"UNKNOWN","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/andialbrecht/sqlparse","keywords":null,"license":"BSD","maintainer":null,"maintainer_email":null,"name":"sqlparse","package_url":"https://pypi.org/project/sqlparse/","platform":"UNKNOWN","project_url":"https://pypi.org/project/sqlparse/","project_urls":{"Download":"UNKNOWN","Homepage":"https://github.com/andialbrecht/sqlparse"},"provides_extra":null,"release_url":"https://pypi.org/project/sqlparse/0.1.5/","requires_dist":null,"requires_python":null,"summary":"Non-validating SQL parser","version":"0.1.5","yanked":false,"yanked_reason":null},"last_serial":24141613,"urls":[{"comment_text":"","digests":{"blake2b_256":"f0bac4a4076328b7d4b8b50ee4c215b41b2b1e71f6a9dd29ac1d23e120fc3588","md5":"5bc0b058e38490934828145c7de4f100","sha256":"dfbbbf50e86147ea2a2f32c2c4bc0743faec1edd02d3201b4e9a32ffa41e00a7"},"downloads":-1,"filename":"sqlparse-0.1.5.tar.gz","has_sig":false,"md5_digest":"5bc0b058e38490934828145c7de4f100","packagetype":"sdist","python_version":"source","requires_python":null,"size":46138,"upload_time":"2013-05-20T06:42:14","upload_time_iso_8601":"2013-05-20T06:42:14.006367Z","url":"https://files.pythonhosted.org/packages/f0/ba/c4a4076328b7d4b8b50ee4c215b41b2b1e71f6a9dd29ac1d23e120fc3588/sqlparse-0.1.5.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4340"],"details":"### Summary\nPassing a heavily nested list to sqlparse.parse() leads to a Denial of Service due to RecursionError.\n\n### Details + PoC\nRunning the following code will raise Maximum recursion limit exceeded exception:\n```py\nimport sqlparse\nsqlparse.parse('[' * 10000 + ']' * 10000)\n```\nWe expect a traceback of RecursionError:\n```py\nTraceback (most recent call last):\n  File \"trigger_sqlparse_nested_list.py\", line 3, in <module>\n    sqlparse.parse('[' * 10000 + ']' * 10000)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/__init__.py\", line 30, in parse\n    return tuple(parsestream(sql, encoding))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/filter_stack.py\", line 36, in run\n    stmt = grouping.group(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 428, in group\n    func(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 53, in group_brackets\n    _group_matching(tlist, sql.SquareBrackets)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 48, in _group_matching\n    tlist.group_tokens(cls, open_idx, close_idx)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 328, in group_tokens\n    grp = grp_cls(subtokens)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 161, in __init__\n    super().__init__(None, str(self))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in __str__\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in <genexpr>\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  [Previous line repeated 983 more times]\nRecursionError: maximum recursion depth exceeded\n```\n\n### Fix suggestion\nThe [flatten()](https://github.com/andialbrecht/sqlparse/blob/master/sqlparse/sql.py#L207) function of TokenList class should limit the recursion to a maximal depth:\n```py\nfrom sqlparse.exceptions import SQLParseError\n\nMAX_DEPTH = 100\n\n    def flatten(self, depth=1):\n        \"\"\"Generator yielding ungrouped tokens.\n\n        This method is recursively called for all child tokens.\n        \"\"\"\n    if depth >= MAX_DEPTH:\n        raise SQLParseError('Maximal depth reached')\n        for token in self.tokens:\n            if token.is_group:\n                yield from token.flatten(depth + 1)\n            else:\n                yield token\n```\n\n### Impact\nDenial of Service (the impact depends on the use).\nAnyone parsing a user input with sqlparse.parse() is affected.\n","fixed_in":["0.5.0"],"id":"GHSA-2m57-hf25-phgg","link":"https://osv.dev/vulnerability/GHSA-2m57-hf25-phgg","source":"osv","summary":null,"withdrawn":null}]},"0.1.6":{"info":{"author":"Andi Albrecht","author_email":"albrecht.andi@gmail.com","bugtrack_url":null,"classifiers":["Development Status :: 4 - Beta","Intended Audience :: Developers","License :: OSI Approved :: BSD License","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.5","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.2","Programming Language :: Python :: 3.3","Topic :: Database","Topic :: Software Development"],"description_content_type":null,"docs_url":null,"download_url":"UNKNOWN","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/andialbrecht/sqlparse","keywords":null,"license":"BSD","maintainer":null,"maintainer_email":null,"name":"sqlparse","package_url":"https://pypi.org/project/sqlparse/","platform":"UNKNOWN","project_url":"https://pypi.org/project/sqlparse/","project_urls":{"Download":"UNKNOWN","Homepage":"https://github.com/andialbrecht/sqlparse"},"provides_extra":null,"release_url":"https://pypi.org/project/sqlparse/0.1.6/","requires_dist":null,"requires_python":null,"summary":"Non-validating SQL parser","version":"0.1.6","yanked":false,"yanked_reason":null},"last_serial":24141613,"urls":[{"comment_text":"","digests":{"blake2b_256":"b624cb815012cfd25f410c65edc62c7cfcb62924a4a5f10ca12f363473bc0b99","md5":"2946514fbd29ea2a18ba398da171fbd2","sha256":"ab0d833f8b504ae4c5aa8e88db5d12472369356644eedbda2d11ad94054a4b75"},"downloads":-1,"filename":"sqlparse-0.1.6.tar.gz","has_sig":false,"md5_digest":"2946514fbd29ea2a18ba398da171fbd2","packagetype":"sdist","python_version":"source","requires_python":null,"size":47760,"upload_time":"2013-01-01T15:47:29","upload_time_iso_8601":"2013-01-01T15:47:29.054787Z","url":"https://files.pythonhosted.org/packages/b6/24/cb815012cfd25f410c65edc62c7cfcb62924a4a5f10ca12f363473bc0b99/sqlparse-0.1.6.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4340"],"details":"### Summary\nPassing a heavily nested list to sqlparse.parse() leads to a Denial of Service due to RecursionError.\n\n### Details + PoC\nRunning the following code will raise Maximum recursion limit exceeded exception:\n```py\nimport sqlparse\nsqlparse.parse('[' * 10000 + ']' * 10000)\n```\nWe expect a traceback of RecursionError:\n```py\nTraceback (most recent call last):\n  File \"trigger_sqlparse_nested_list.py\", line 3, in <module>\n    sqlparse.parse('[' * 10000 + ']' * 10000)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/__init__.py\", line 30, in parse\n    return tuple(parsestream(sql, encoding))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/filter_stack.py\", line 36, in run\n    stmt = grouping.group(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 428, in group\n    func(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 53, in group_brackets\n    _group_matching(tlist, sql.SquareBrackets)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 48, in _group_matching\n    tlist.group_tokens(cls, open_idx, close_idx)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 328, in group_tokens\n    grp = grp_cls(subtokens)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 161, in __init__\n    super().__init__(None, str(self))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in __str__\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in <genexpr>\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  [Previous line repeated 983 more times]\nRecursionError: maximum recursion depth exceeded\n```\n\n### Fix suggestion\nThe [flatten()](https://github.com/andialbrecht/sqlparse/blob/master/sqlparse/sql.py#L207) function of TokenList class should limit the recursion to a maximal depth:\n```py\nfrom sqlparse.exceptions import SQLParseError\n\nMAX_DEPTH = 100\n\n    def flatten(self, depth=1):\n        \"\"\"Generator yielding ungrouped tokens.\n\n        This method is recursively called for all child tokens.\n        \"\"\"\n    if depth >= MAX_DEPTH:\n        raise SQLParseError('Maximal depth reached')\n        for token in self.tokens:\n            if token.is_group:\n                yield from token.flatten(depth + 1)\n            else:\n                yield token\n```\n\n### Impact\nDenial of Service (the impact depends on the use).\nAnyone parsing a user input with sqlparse.parse() is affected.\n","fixed_in":["0.5.0"],"id":"GHSA-2m57-hf25-phgg","link":"https://osv.dev/vulnerability/GHSA-2m57-hf25-phgg","source":"osv","summary":null,"withdrawn":null}]},"0.1.7":{"info":{"author":"Andi Albrecht","author_email":"albrecht.andi@gmail.com","bugtrack_url":null,"classifiers":["Development Status :: 4 - Beta","Intended Audience :: Developers","License :: OSI Approved :: BSD License","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.4","Programming Language :: Python :: 2.5","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.2","Programming Language :: Python :: 3.3","Topic :: Database","Topic :: Software Development"],"description_content_type":null,"docs_url":null,"download_url":"UNKNOWN","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/andialbrecht/sqlparse","keywords":null,"license":"BSD","maintainer":null,"maintainer_email":null,"name":"sqlparse","package_url":"https://pypi.org/project/sqlparse/","platform":"UNKNOWN","project_url":"https://pypi.org/project/sqlparse/","project_urls":{"Download":"UNKNOWN","Homepage":"https://github.com/andialbrecht/sqlparse"},"provides_extra":null,"release_url":"https://pypi.org/project/sqlparse/0.1.7/","requires_dist":null,"requires_python":null,"summary":"Non-validating SQL parser","version":"0.1.7","yanked":false,"yanked_reason":null},"last_serial":24141613,"urls":[{"comment_text":"","digests":{"blake2b_256":"eda829f94bd239071e9200786be936779b3bc307ef24c540c011aa69c6f74a9a","md5":"a62c0075e5707ccd36c237e461b90913","sha256":"de5fdc75b26de71c320850a1e0abc5d21fd78def5a8ea4f02b98e1aa40adf5ad"},"downloads":-1,"filename":"sqlparse-0.1.7.tar.gz","has_sig":false,"md5_digest":"a62c0075e5707ccd36c237e461b90913","packagetype":"sdist","python_version":"source","requires_python":null,"size":50936,"upload_time":"2013-04-06T08:53:56","upload_time_iso_8601":"2013-04-06T08:53:56.486556Z","url":"https://files.pythonhosted.org/packages/ed/a8/29f94bd239071e9200786be936779b3bc307ef24c540c011aa69c6f74a9a/sqlparse-0.1.7.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4340"],"details":"### Summary\nPassing a heavily nested list to sqlparse.parse() leads to a Denial of Service due to RecursionError.\n\n### Details + PoC\nRunning the following code will raise Maximum recursion limit exceeded exception:\n```py\nimport sqlparse\nsqlparse.parse('[' * 10000 + ']' * 10000)\n```\nWe expect a traceback of RecursionError:\n```py\nTraceback (most recent call last):\n  File \"trigger_sqlparse_nested_list.py\", line 3, in <module>\n    sqlparse.parse('[' * 10000 + ']' * 10000)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/__init__.py\", line 30, in parse\n    return tuple(parsestream(sql, encoding))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/filter_stack.py\", line 36, in run\n    stmt = grouping.group(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 428, in group\n    func(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 53, in group_brackets\n    _group_matching(tlist, sql.SquareBrackets)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 48, in _group_matching\n    tlist.group_tokens(cls, open_idx, close_idx)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 328, in group_tokens\n    grp = grp_cls(subtokens)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 161, in __init__\n    super().__init__(None, str(self))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in __str__\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in <genexpr>\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  [Previous line repeated 983 more times]\nRecursionError: maximum recursion depth exceeded\n```\n\n### Fix suggestion\nThe [flatten()](https://github.com/andialbrecht/sqlparse/blob/master/sqlparse/sql.py#L207) function of TokenList class should limit the recursion to a maximal depth:\n```py\nfrom sqlparse.exceptions import SQLParseError\n\nMAX_DEPTH = 100\n\n    def flatten(self, depth=1):\n        \"\"\"Generator yielding ungrouped tokens.\n\n        This method is recursively called for all child tokens.\n        \"\"\"\n    if depth >= MAX_DEPTH:\n        raise SQLParseError('Maximal depth reached')\n        for token in self.tokens:\n            if token.is_group:\n                yield from token.flatten(depth + 1)\n            else:\n                yield token\n```\n\n### Impact\nDenial of Service (the impact depends on the use).\nAnyone parsing a user input with sqlparse.parse() is affected.\n","fixed_in":["0.5.0"],"id":"GHSA-2m57-hf25-phgg","link":"https://osv.dev/vulnerability/GHSA-2m57-hf25-phgg","source":"osv","summary":null,"withdrawn":null}]},"0.1.8":{"info":{"author":"Andi Albrecht","author_email":"albrecht.andi@gmail.com","bugtrack_url":null,"classifiers":["Development Status :: 4 - Beta","Intended Audience :: Developers","License :: OSI Approved :: BSD License","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.4","Programming Language :: Python :: 2.5","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.2","Programming Language :: Python :: 3.3","Topic :: Database","Topic :: Software Development"],"description_content_type":null,"docs_url":null,"download_url":"UNKNOWN","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/andialbrecht/sqlparse","keywords":null,"license":"BSD","maintainer":null,"maintainer_email":null,"name":"sqlparse","package_url":"https://pypi.org/project/sqlparse/","platform":"UNKNOWN","project_url":"https://pypi.org/project/sqlparse/","project_urls":{"Download":"UNKNOWN","Homepage":"https://github.com/andialbrecht/sqlparse"},"provides_extra":null,"release_url":"https://pypi.org/project/sqlparse/0.1.8/","requires_dist":null,"requires_python":null,"summary":"Non-validating SQL parser","version":"0.1.8","yanked":false,"yanked_reason":null},"last_serial":24141613,"urls":[{"comment_text":"","digests":{"blake2b_256":"3df7357393eda9f5c2c7f045a4dd01c853082fd87fcec88ceb5799f045bb047e","md5":"bd14f9304bed67bcec616eb43e8c3b1b","sha256":"e8590b2771c0a93b35e08092d5f71fff5022f9ac48af07a7888abf2603b82615"},"downloads":-1,"filename":"sqlparse-0.1.8.tar.gz","has_sig":false,"md5_digest":"bd14f9304bed67bcec616eb43e8c3b1b","packagetype":"sdist","python_version":"source","requires_python":null,"size":52478,"upload_time":"2013-06-29T17:32:53","upload_time_iso_8601":"2013-06-29T17:32:53.146906Z","url":"https://files.pythonhosted.org/packages/3d/f7/357393eda9f5c2c7f045a4dd01c853082fd87fcec88ceb5799f045bb047e/sqlparse-0.1.8.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4340"],"details":"### Summary\nPassing a heavily nested list to sqlparse.parse() leads to a Denial of Service due to RecursionError.\n\n### Details + PoC\nRunning the following code will raise Maximum recursion limit exceeded exception:\n```py\nimport sqlparse\nsqlparse.parse('[' * 10000 + ']' * 10000)\n```\nWe expect a traceback of RecursionError:\n```py\nTraceback (most recent call last):\n  File \"trigger_sqlparse_nested_list.py\", line 3, in <module>\n    sqlparse.parse('[' * 10000 + ']' * 10000)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/__init__.py\", line 30, in parse\n    return tuple(parsestream(sql, encoding))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/filter_stack.py\", line 36, in run\n    stmt = grouping.group(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 428, in group\n    func(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 53, in group_brackets\n    _group_matching(tlist, sql.SquareBrackets)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 48, in _group_matching\n    tlist.group_tokens(cls, open_idx, close_idx)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 328, in group_tokens\n    grp = grp_cls(subtokens)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 161, in __init__\n    super().__init__(None, str(self))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in __str__\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in <genexpr>\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  [Previous line repeated 983 more times]\nRecursionError: maximum recursion depth exceeded\n```\n\n### Fix suggestion\nThe [flatten()](https://github.com/andialbrecht/sqlparse/blob/master/sqlparse/sql.py#L207) function of TokenList class should limit the recursion to a maximal depth:\n```py\nfrom sqlparse.exceptions import SQLParseError\n\nMAX_DEPTH = 100\n\n    def flatten(self, depth=1):\n        \"\"\"Generator yielding ungrouped tokens.\n\n        This method is recursively called for all child tokens.\n        \"\"\"\n    if depth >= MAX_DEPTH:\n        raise SQLParseError('Maximal depth reached')\n        for token in self.tokens:\n            if token.is_group:\n                yield from token.flatten(depth + 1)\n            else:\n                yield token\n```\n\n### Impact\nDenial of Service (the impact depends on the use).\nAnyone parsing a user input with sqlparse.parse() is affected.\n","fixed_in":["0.5.0"],"id":"GHSA-2m57-hf25-phgg","link":"https://osv.dev/vulnerability/GHSA-2m57-hf25-phgg","source":"osv","summary":null,"withdrawn":null}]},"0.1.9":{"info":{"author":"Andi Albrecht","author_email":"albrecht.andi@gmail.com","bugtrack_url":null,"classifiers":["Development Status :: 4 - Beta","Intended Audience :: Developers","License :: OSI Approved :: BSD License","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.4","Programming Language :: Python :: 2.5","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.2","Programming Language :: Python :: 3.3","Topic :: Database","Topic :: Software Development"],"description_content_type":null,"docs_url":null,"download_url":"UNKNOWN","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/andialbrecht/sqlparse","keywords":null,"license":"BSD","maintainer":null,"maintainer_email":null,"name":"sqlparse","package_url":"https://pypi.org/project/sqlparse/","platform":"UNKNOWN","project_url":"https://pypi.org/project/sqlparse/","project_urls":{"Download":"UNKNOWN","Homepage":"https://github.com/andialbrecht/sqlparse"},"provides_extra":null,"release_url":"https://pypi.org/project/sqlparse/0.1.9/","requires_dist":null,"requires_python":null,"summary":"Non-validating SQL parser","version":"0.1.9","yanked":false,"yanked_reason":null},"last_serial":24141613,"urls":[{"comment_text":"","digests":{"blake2b_256":"9a88831dea5b82cf623323ac941a520587bfcaa4e9307415288b9e6b5b8ef252","md5":"165fa986606b4ee7064844ccfc40aee0","sha256":"63542965488690cf0aa34ae6bbe2fcfb7b0e863eebc383e2b0cc03b10ae6645d"},"downloads":-1,"filename":"sqlparse-0.1.9.tar.gz","has_sig":false,"md5_digest":"165fa986606b4ee7064844ccfc40aee0","packagetype":"sdist","python_version":"source","requires_python":null,"size":53496,"upload_time":"2013-09-28T06:41:49","upload_time_iso_8601":"2013-09-28T06:41:49.311834Z","url":"https://files.pythonhosted.org/packages/9a/88/831dea5b82cf623323ac941a520587bfcaa4e9307415288b9e6b5b8ef252/sqlparse-0.1.9.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4340"],"details":"### Summary\nPassing a heavily nested list to sqlparse.parse() leads to a Denial of Service due to RecursionError.\n\n### Details + PoC\nRunning the following code will raise Maximum recursion limit exceeded exception:\n```py\nimport sqlparse\nsqlparse.parse('[' * 10000 + ']' * 10000)\n```\nWe expect a traceback of RecursionError:\n```py\nTraceback (most recent call last):\n  File \"trigger_sqlparse_nested_list.py\", line 3, in <module>\n    sqlparse.parse('[' * 10000 + ']' * 10000)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/__init__.py\", line 30, in parse\n    return tuple(parsestream(sql, encoding))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/filter_stack.py\", line 36, in run\n    stmt = grouping.group(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 428, in group\n    func(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 53, in group_brackets\n    _group_matching(tlist, sql.SquareBrackets)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 48, in _group_matching\n    tlist.group_tokens(cls, open_idx, close_idx)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 328, in group_tokens\n    grp = grp_cls(subtokens)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 161, in __init__\n    super().__init__(None, str(self))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in __str__\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in <genexpr>\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  [Previous line repeated 983 more times]\nRecursionError: maximum recursion depth exceeded\n```\n\n### Fix suggestion\nThe [flatten()](https://github.com/andialbrecht/sqlparse/blob/master/sqlparse/sql.py#L207) function of TokenList class should limit the recursion to a maximal depth:\n```py\nfrom sqlparse.exceptions import SQLParseError\n\nMAX_DEPTH = 100\n\n    def flatten(self, depth=1):\n        \"\"\"Generator yielding ungrouped tokens.\n\n        This method is recursively called for all child tokens.\n        \"\"\"\n    if depth >= MAX_DEPTH:\n        raise SQLParseError('Maximal depth reached')\n        for token in self.tokens:\n            if token.is_group:\n                yield from token.flatten(depth + 1)\n            else:\n                yield token\n```\n\n### Impact\nDenial of Service (the impact depends on the use).\nAnyone parsing a user input with sqlparse.parse() is affected.\n","fixed_in":["0.5.0"],"id":"GHSA-2m57-hf25-phgg","link":"https://osv.dev/vulnerability/GHSA-2m57-hf25-phgg","source":"osv","summary":null,"withdrawn":null}]},"0.2.0":{"info":{"author":"Andi Albrecht","author_email":"albrecht.andi@gmail.com","bugtrack_url":null,"classifiers":["Development Status :: 4 - Beta","Intended Audience :: Developers","License :: OSI Approved :: BSD License","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Topic :: Database","Topic :: Software Development"],"description_content_type":null,"docs_url":null,"download_url":"UNKNOWN","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/andialbrecht/sqlparse","keywords":null,"license":"BSD","maintainer":null,"maintainer_email":null,"name":"sqlparse","package_url":"https://pypi.org/project/sqlparse/","platform":"UNKNOWN","project_url":"https://pypi.org/project/sqlparse/","project_urls":{"Download":"UNKNOWN","Homepage":"https://github.com/andialbrecht/sqlparse"},"provides_extra":null,"release_url":"https://pypi.org/project/sqlparse/0.2.0/","requires_dist":null,"requires_python":null,"summary":"Non-validating SQL parser","version":"0.2.0","yanked":false,"yanked_reason":null},"last_serial":24141613,"urls":[{"comment_text":"","digests":{"blake2b_256":"c5a210fd705dd8f6630db66af47aacf624ab33a78680d4e236c50db9782dd5de","md5":"ab89816d24b5d730600b25786a52abb0","sha256":"9838667b3d7fc96976ee5711ba654e49028e80f95f7b1849cb57474dba499deb"},"downloads":-1,"filename":"sqlparse-0.2.0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"ab89816d24b5d730600b25786a52abb0","packagetype":"bdist_wheel","python_version":"2.7","requires_python":null,"size":38083,"upload_time":"2016-10-02T11:56:56","upload_time_iso_8601":"2016-10-02T11:56:56.210038Z","url":"https://files.pythonhosted.org/packages/c5/a2/10fd705dd8f6630db66af47aacf624ab33a78680d4e236c50db9782dd5de/sqlparse-0.2.0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"48e4ecd908ef40a9d0e78fc40f3abd2f329dd96b82402fee07f14dbf69948f1b","md5":"d0dde71546b4a37e72c0c607252ad942","sha256":"7fac8d39ac543499b191be19e811ff275f2df0d45c4ba5fc24850aa883ac2060"},"downloads":-1,"filename":"sqlparse-0.2.0.tar.gz","has_sig":false,"md5_digest":"d0dde71546b4a37e72c0c607252ad942","packagetype":"sdist","python_version":"source","requires_python":null,"size":52554,"upload_time":"2016-07-20T07:21:19","upload_time_iso_8601":"2016-07-20T07:21:19.241368Z","url":"https://files.pythonhosted.org/packages/48/e4/ecd908ef40a9d0e78fc40f3abd2f329dd96b82402fee07f14dbf69948f1b/sqlparse-0.2.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-30608"],"details":"### Impact\nThe SQL parser contains a regular expression that is vulnerable to [ReDoS](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS) (Regular Expression Denial of Service). The vulnerability may lead to Denial of Service (DoS).\n\n### Patches\nThis issues has been fixed in sqlparse 0.4.4.\n\n### Workarounds\nNone. \n\n### References\nThis issue was discovered and reported by GHSL team member [@erik-krogh (Erik Krogh Kristensen)](https://github.com/erik-krogh).\n- Commit that introduced the vulnerability: e75e35869473832a1eb67772b1adfee2db11b85a\n","fixed_in":["0.4.4"],"id":"GHSA-rrm6-wvj7-cwh2","link":"https://osv.dev/vulnerability/GHSA-rrm6-wvj7-cwh2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-30608","GHSA-rrm6-wvj7-cwh2"],"details":"sqlparse is a non-validating SQL parser module for Python. In affected versions the SQL parser contains a regular expression that is vulnerable to ReDoS (Regular Expression Denial of Service). This issue was introduced by commit `e75e358`. The vulnerability may lead to Denial of Service (DoS). This issues has been fixed in sqlparse 0.4.4 by commit `c457abd5f`. Users are advised to upgrade. There are no known workarounds for this issue.\n","fixed_in":["0.4.4"],"id":"PYSEC-2023-87","link":"https://osv.dev/vulnerability/PYSEC-2023-87","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4340"],"details":"### Summary\nPassing a heavily nested list to sqlparse.parse() leads to a Denial of Service due to RecursionError.\n\n### Details + PoC\nRunning the following code will raise Maximum recursion limit exceeded exception:\n```py\nimport sqlparse\nsqlparse.parse('[' * 10000 + ']' * 10000)\n```\nWe expect a traceback of RecursionError:\n```py\nTraceback (most recent call last):\n  File \"trigger_sqlparse_nested_list.py\", line 3, in <module>\n    sqlparse.parse('[' * 10000 + ']' * 10000)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/__init__.py\", line 30, in parse\n    return tuple(parsestream(sql, encoding))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/filter_stack.py\", line 36, in run\n    stmt = grouping.group(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 428, in group\n    func(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 53, in group_brackets\n    _group_matching(tlist, sql.SquareBrackets)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 48, in _group_matching\n    tlist.group_tokens(cls, open_idx, close_idx)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 328, in group_tokens\n    grp = grp_cls(subtokens)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 161, in __init__\n    super().__init__(None, str(self))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in __str__\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in <genexpr>\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  [Previous line repeated 983 more times]\nRecursionError: maximum recursion depth exceeded\n```\n\n### Fix suggestion\nThe [flatten()](https://github.com/andialbrecht/sqlparse/blob/master/sqlparse/sql.py#L207) function of TokenList class should limit the recursion to a maximal depth:\n```py\nfrom sqlparse.exceptions import SQLParseError\n\nMAX_DEPTH = 100\n\n    def flatten(self, depth=1):\n        \"\"\"Generator yielding ungrouped tokens.\n\n        This method is recursively called for all child tokens.\n        \"\"\"\n    if depth >= MAX_DEPTH:\n        raise SQLParseError('Maximal depth reached')\n        for token in self.tokens:\n            if token.is_group:\n                yield from token.flatten(depth + 1)\n            else:\n                yield token\n```\n\n### Impact\nDenial of Service (the impact depends on the use).\nAnyone parsing a user input with sqlparse.parse() is affected.\n","fixed_in":["0.5.0"],"id":"GHSA-2m57-hf25-phgg","link":"https://osv.dev/vulnerability/GHSA-2m57-hf25-phgg","source":"osv","summary":null,"withdrawn":null}]},"0.2.1":{"info":{"author":"Andi Albrecht","author_email":"albrecht.andi@gmail.com","bugtrack_url":null,"classifiers":["Development Status :: 4 - Beta","Intended Audience :: Developers","License :: OSI Approved :: BSD License","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Topic :: Database","Topic :: Software Development"],"description_content_type":null,"docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/andialbrecht/sqlparse","keywords":"","license":"BSD","maintainer":"","maintainer_email":"","name":"sqlparse","package_url":"https://pypi.org/project/sqlparse/","platform":"","project_url":"https://pypi.org/project/sqlparse/","project_urls":{"Homepage":"https://github.com/andialbrecht/sqlparse"},"provides_extra":null,"release_url":"https://pypi.org/project/sqlparse/0.2.1/","requires_dist":null,"requires_python":"","summary":"Non-validating SQL parser","version":"0.2.1","yanked":false,"yanked_reason":null},"last_serial":24141613,"urls":[{"comment_text":"","digests":{"blake2b_256":"183f6f7182f040a083f9d8645dd28cb4ebfa6f90aca1bd6f61b36259966d148b","md5":"adfe78acb255224419dc577f0c6a6e8d","sha256":"cbe7a47b3eb8c5d5172cc4ce0ed2ed9aaafc37348a6d61fd1de8f3fcf8e1e94f"},"downloads":-1,"filename":"sqlparse-0.2.1-py2.py3-none-any.whl","has_sig":false,"md5_digest":"adfe78acb255224419dc577f0c6a6e8d","packagetype":"bdist_wheel","python_version":"2.7","requires_python":null,"size":38317,"upload_time":"2016-10-02T11:56:21","upload_time_iso_8601":"2016-10-02T11:56:21.320300Z","url":"https://files.pythonhosted.org/packages/18/3f/6f7182f040a083f9d8645dd28cb4ebfa6f90aca1bd6f61b36259966d148b/sqlparse-0.2.1-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c3c46159720e7a100cd419bac31a202898e291e5af29e4ada09ee58f7eeaa076","md5":"f40771e9ad2ff5ef5a6158ec13ea108f","sha256":"1c98a2bdffe67f1bb817b72a7ba4d38be592e0f07c5acea4adebcec12c4377d1"},"downloads":-1,"filename":"sqlparse-0.2.1.tar.gz","has_sig":false,"md5_digest":"f40771e9ad2ff5ef5a6158ec13ea108f","packagetype":"sdist","python_version":"source","requires_python":null,"size":53463,"upload_time":"2016-08-13T15:43:08","upload_time_iso_8601":"2016-08-13T15:43:08.364460Z","url":"https://files.pythonhosted.org/packages/c3/c4/6159720e7a100cd419bac31a202898e291e5af29e4ada09ee58f7eeaa076/sqlparse-0.2.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-30608"],"details":"### Impact\nThe SQL parser contains a regular expression that is vulnerable to [ReDoS](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS) (Regular Expression Denial of Service). The vulnerability may lead to Denial of Service (DoS).\n\n### Patches\nThis issues has been fixed in sqlparse 0.4.4.\n\n### Workarounds\nNone. \n\n### References\nThis issue was discovered and reported by GHSL team member [@erik-krogh (Erik Krogh Kristensen)](https://github.com/erik-krogh).\n- Commit that introduced the vulnerability: e75e35869473832a1eb67772b1adfee2db11b85a\n","fixed_in":["0.4.4"],"id":"GHSA-rrm6-wvj7-cwh2","link":"https://osv.dev/vulnerability/GHSA-rrm6-wvj7-cwh2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-30608","GHSA-rrm6-wvj7-cwh2"],"details":"sqlparse is a non-validating SQL parser module for Python. In affected versions the SQL parser contains a regular expression that is vulnerable to ReDoS (Regular Expression Denial of Service). This issue was introduced by commit `e75e358`. The vulnerability may lead to Denial of Service (DoS). This issues has been fixed in sqlparse 0.4.4 by commit `c457abd5f`. Users are advised to upgrade. There are no known workarounds for this issue.\n","fixed_in":["0.4.4"],"id":"PYSEC-2023-87","link":"https://osv.dev/vulnerability/PYSEC-2023-87","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4340"],"details":"### Summary\nPassing a heavily nested list to sqlparse.parse() leads to a Denial of Service due to RecursionError.\n\n### Details + PoC\nRunning the following code will raise Maximum recursion limit exceeded exception:\n```py\nimport sqlparse\nsqlparse.parse('[' * 10000 + ']' * 10000)\n```\nWe expect a traceback of RecursionError:\n```py\nTraceback (most recent call last):\n  File \"trigger_sqlparse_nested_list.py\", line 3, in <module>\n    sqlparse.parse('[' * 10000 + ']' * 10000)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/__init__.py\", line 30, in parse\n    return tuple(parsestream(sql, encoding))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/filter_stack.py\", line 36, in run\n    stmt = grouping.group(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 428, in group\n    func(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 53, in group_brackets\n    _group_matching(tlist, sql.SquareBrackets)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 48, in _group_matching\n    tlist.group_tokens(cls, open_idx, close_idx)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 328, in group_tokens\n    grp = grp_cls(subtokens)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 161, in __init__\n    super().__init__(None, str(self))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in __str__\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in <genexpr>\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  [Previous line repeated 983 more times]\nRecursionError: maximum recursion depth exceeded\n```\n\n### Fix suggestion\nThe [flatten()](https://github.com/andialbrecht/sqlparse/blob/master/sqlparse/sql.py#L207) function of TokenList class should limit the recursion to a maximal depth:\n```py\nfrom sqlparse.exceptions import SQLParseError\n\nMAX_DEPTH = 100\n\n    def flatten(self, depth=1):\n        \"\"\"Generator yielding ungrouped tokens.\n\n        This method is recursively called for all child tokens.\n        \"\"\"\n    if depth >= MAX_DEPTH:\n        raise SQLParseError('Maximal depth reached')\n        for token in self.tokens:\n            if token.is_group:\n                yield from token.flatten(depth + 1)\n            else:\n                yield token\n```\n\n### Impact\nDenial of Service (the impact depends on the use).\nAnyone parsing a user input with sqlparse.parse() is affected.\n","fixed_in":["0.5.0"],"id":"GHSA-2m57-hf25-phgg","link":"https://osv.dev/vulnerability/GHSA-2m57-hf25-phgg","source":"osv","summary":null,"withdrawn":null}]},"0.2.2":{"info":{"author":"Andi Albrecht","author_email":"albrecht.andi@gmail.com","bugtrack_url":null,"classifiers":["Development Status :: 4 - Beta","Intended Audience :: Developers","License :: OSI Approved :: BSD License","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Topic :: Database","Topic :: Software Development"],"description_content_type":null,"docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/andialbrecht/sqlparse","keywords":"","license":"BSD","maintainer":"","maintainer_email":"","name":"sqlparse","package_url":"https://pypi.org/project/sqlparse/","platform":"","project_url":"https://pypi.org/project/sqlparse/","project_urls":{"Homepage":"https://github.com/andialbrecht/sqlparse"},"provides_extra":null,"release_url":"https://pypi.org/project/sqlparse/0.2.2/","requires_dist":null,"requires_python":"","summary":"Non-validating SQL parser","version":"0.2.2","yanked":false,"yanked_reason":null},"last_serial":24141613,"urls":[{"comment_text":"","digests":{"blake2b_256":"2b2880966610baf3426be60d57341d55aab9ba8a45b0f68d63a382b4d1becc6f","md5":"64527241b917df0dd7731d2e4c6013a7","sha256":"9b61c319b3c7b64681e1b4d554a9c3fe81ed52da00a901ccf3fe72962734e444"},"downloads":-1,"filename":"sqlparse-0.2.2-py2.py3-none-any.whl","has_sig":false,"md5_digest":"64527241b917df0dd7731d2e4c6013a7","packagetype":"bdist_wheel","python_version":"2.7","requires_python":null,"size":38315,"upload_time":"2016-10-22T21:34:27","upload_time_iso_8601":"2016-10-22T21:34:27.679207Z","url":"https://files.pythonhosted.org/packages/2b/28/80966610baf3426be60d57341d55aab9ba8a45b0f68d63a382b4d1becc6f/sqlparse-0.2.2-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"55ce3944e990b03f80f36f0050b407ad46cde192a210d473f0d705b554bddd1d","md5":"ec1bab3438f358b6be72fc1912bbd648","sha256":"d446296b2c26f9466860dd85fa32480bec523ab96bda8879262c38e8e8fbba21"},"downloads":-1,"filename":"sqlparse-0.2.2.tar.gz","has_sig":false,"md5_digest":"ec1bab3438f358b6be72fc1912bbd648","packagetype":"sdist","python_version":"source","requires_python":null,"size":57965,"upload_time":"2016-10-22T21:34:22","upload_time_iso_8601":"2016-10-22T21:34:22.618154Z","url":"https://files.pythonhosted.org/packages/55/ce/3944e990b03f80f36f0050b407ad46cde192a210d473f0d705b554bddd1d/sqlparse-0.2.2.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-30608"],"details":"### Impact\nThe SQL parser contains a regular expression that is vulnerable to [ReDoS](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS) (Regular Expression Denial of Service). The vulnerability may lead to Denial of Service (DoS).\n\n### Patches\nThis issues has been fixed in sqlparse 0.4.4.\n\n### Workarounds\nNone. \n\n### References\nThis issue was discovered and reported by GHSL team member [@erik-krogh (Erik Krogh Kristensen)](https://github.com/erik-krogh).\n- Commit that introduced the vulnerability: e75e35869473832a1eb67772b1adfee2db11b85a\n","fixed_in":["0.4.4"],"id":"GHSA-rrm6-wvj7-cwh2","link":"https://osv.dev/vulnerability/GHSA-rrm6-wvj7-cwh2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-30608","GHSA-rrm6-wvj7-cwh2"],"details":"sqlparse is a non-validating SQL parser module for Python. In affected versions the SQL parser contains a regular expression that is vulnerable to ReDoS (Regular Expression Denial of Service). This issue was introduced by commit `e75e358`. The vulnerability may lead to Denial of Service (DoS). This issues has been fixed in sqlparse 0.4.4 by commit `c457abd5f`. Users are advised to upgrade. There are no known workarounds for this issue.\n","fixed_in":["0.4.4"],"id":"PYSEC-2023-87","link":"https://osv.dev/vulnerability/PYSEC-2023-87","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4340"],"details":"### Summary\nPassing a heavily nested list to sqlparse.parse() leads to a Denial of Service due to RecursionError.\n\n### Details + PoC\nRunning the following code will raise Maximum recursion limit exceeded exception:\n```py\nimport sqlparse\nsqlparse.parse('[' * 10000 + ']' * 10000)\n```\nWe expect a traceback of RecursionError:\n```py\nTraceback (most recent call last):\n  File \"trigger_sqlparse_nested_list.py\", line 3, in <module>\n    sqlparse.parse('[' * 10000 + ']' * 10000)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/__init__.py\", line 30, in parse\n    return tuple(parsestream(sql, encoding))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/filter_stack.py\", line 36, in run\n    stmt = grouping.group(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 428, in group\n    func(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 53, in group_brackets\n    _group_matching(tlist, sql.SquareBrackets)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 48, in _group_matching\n    tlist.group_tokens(cls, open_idx, close_idx)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 328, in group_tokens\n    grp = grp_cls(subtokens)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 161, in __init__\n    super().__init__(None, str(self))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in __str__\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in <genexpr>\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  [Previous line repeated 983 more times]\nRecursionError: maximum recursion depth exceeded\n```\n\n### Fix suggestion\nThe [flatten()](https://github.com/andialbrecht/sqlparse/blob/master/sqlparse/sql.py#L207) function of TokenList class should limit the recursion to a maximal depth:\n```py\nfrom sqlparse.exceptions import SQLParseError\n\nMAX_DEPTH = 100\n\n    def flatten(self, depth=1):\n        \"\"\"Generator yielding ungrouped tokens.\n\n        This method is recursively called for all child tokens.\n        \"\"\"\n    if depth >= MAX_DEPTH:\n        raise SQLParseError('Maximal depth reached')\n        for token in self.tokens:\n            if token.is_group:\n                yield from token.flatten(depth + 1)\n            else:\n                yield token\n```\n\n### Impact\nDenial of Service (the impact depends on the use).\nAnyone parsing a user input with sqlparse.parse() is affected.\n","fixed_in":["0.5.0"],"id":"GHSA-2m57-hf25-phgg","link":"https://osv.dev/vulnerability/GHSA-2m57-hf25-phgg","source":"osv","summary":null,"withdrawn":null}]},"0.2.3":{"info":{"author":"Andi Albrecht","author_email":"albrecht.andi@gmail.com","bugtrack_url":null,"classifiers":["Development Status :: 4 - Beta","Intended Audience :: Developers","License :: OSI Approved :: BSD License","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Topic :: Database","Topic :: Software Development"],"description_content_type":null,"docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/andialbrecht/sqlparse","keywords":"","license":"BSD","maintainer":"","maintainer_email":"","name":"sqlparse","package_url":"https://pypi.org/project/sqlparse/","platform":"","project_url":"https://pypi.org/project/sqlparse/","project_urls":{"Homepage":"https://github.com/andialbrecht/sqlparse"},"provides_extra":null,"release_url":"https://pypi.org/project/sqlparse/0.2.3/","requires_dist":null,"requires_python":"","summary":"Non-validating SQL parser","version":"0.2.3","yanked":false,"yanked_reason":null},"last_serial":24141613,"urls":[{"comment_text":"","digests":{"blake2b_256":"9b57d9d2848e5435c8a53461bb7b95421dc9a82cb31235cb101d28667d1a2104","md5":"22c6a33c2fd79702ea64bee5cff626a0","sha256":"740a023ef38ce11bbb99a9d143856f56ef4ec5b0d7a853f58c02c65b035114c4"},"downloads":-1,"filename":"sqlparse-0.2.3-py2.py3-none-any.whl","has_sig":false,"md5_digest":"22c6a33c2fd79702ea64bee5cff626a0","packagetype":"bdist_wheel","python_version":"2.7","requires_python":null,"size":38438,"upload_time":"2017-03-02T04:48:08","upload_time_iso_8601":"2017-03-02T04:48:08.690747Z","url":"https://files.pythonhosted.org/packages/9b/57/d9d2848e5435c8a53461bb7b95421dc9a82cb31235cb101d28667d1a2104/sqlparse-0.2.3-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"456714bdaeff492e6d03a055fe80502bae10b679891c25a0dc59be2fe51002f8","md5":"69abb3a9181cf0477b3704b152913629","sha256":"becd7cc7cebbdf311de8ceedfcf2bd2403297024418801947f8c953025beeff8"},"downloads":-1,"filename":"sqlparse-0.2.3.tar.gz","has_sig":false,"md5_digest":"69abb3a9181cf0477b3704b152913629","packagetype":"sdist","python_version":"source","requires_python":null,"size":60742,"upload_time":"2017-03-02T04:48:06","upload_time_iso_8601":"2017-03-02T04:48:06.245345Z","url":"https://files.pythonhosted.org/packages/45/67/14bdaeff492e6d03a055fe80502bae10b679891c25a0dc59be2fe51002f8/sqlparse-0.2.3.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-30608"],"details":"### Impact\nThe SQL parser contains a regular expression that is vulnerable to [ReDoS](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS) (Regular Expression Denial of Service). The vulnerability may lead to Denial of Service (DoS).\n\n### Patches\nThis issues has been fixed in sqlparse 0.4.4.\n\n### Workarounds\nNone. \n\n### References\nThis issue was discovered and reported by GHSL team member [@erik-krogh (Erik Krogh Kristensen)](https://github.com/erik-krogh).\n- Commit that introduced the vulnerability: e75e35869473832a1eb67772b1adfee2db11b85a\n","fixed_in":["0.4.4"],"id":"GHSA-rrm6-wvj7-cwh2","link":"https://osv.dev/vulnerability/GHSA-rrm6-wvj7-cwh2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-30608","GHSA-rrm6-wvj7-cwh2"],"details":"sqlparse is a non-validating SQL parser module for Python. In affected versions the SQL parser contains a regular expression that is vulnerable to ReDoS (Regular Expression Denial of Service). This issue was introduced by commit `e75e358`. The vulnerability may lead to Denial of Service (DoS). This issues has been fixed in sqlparse 0.4.4 by commit `c457abd5f`. Users are advised to upgrade. There are no known workarounds for this issue.\n","fixed_in":["0.4.4"],"id":"PYSEC-2023-87","link":"https://osv.dev/vulnerability/PYSEC-2023-87","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4340"],"details":"### Summary\nPassing a heavily nested list to sqlparse.parse() leads to a Denial of Service due to RecursionError.\n\n### Details + PoC\nRunning the following code will raise Maximum recursion limit exceeded exception:\n```py\nimport sqlparse\nsqlparse.parse('[' * 10000 + ']' * 10000)\n```\nWe expect a traceback of RecursionError:\n```py\nTraceback (most recent call last):\n  File \"trigger_sqlparse_nested_list.py\", line 3, in <module>\n    sqlparse.parse('[' * 10000 + ']' * 10000)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/__init__.py\", line 30, in parse\n    return tuple(parsestream(sql, encoding))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/filter_stack.py\", line 36, in run\n    stmt = grouping.group(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 428, in group\n    func(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 53, in group_brackets\n    _group_matching(tlist, sql.SquareBrackets)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 48, in _group_matching\n    tlist.group_tokens(cls, open_idx, close_idx)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 328, in group_tokens\n    grp = grp_cls(subtokens)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 161, in __init__\n    super().__init__(None, str(self))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in __str__\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in <genexpr>\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  [Previous line repeated 983 more times]\nRecursionError: maximum recursion depth exceeded\n```\n\n### Fix suggestion\nThe [flatten()](https://github.com/andialbrecht/sqlparse/blob/master/sqlparse/sql.py#L207) function of TokenList class should limit the recursion to a maximal depth:\n```py\nfrom sqlparse.exceptions import SQLParseError\n\nMAX_DEPTH = 100\n\n    def flatten(self, depth=1):\n        \"\"\"Generator yielding ungrouped tokens.\n\n        This method is recursively called for all child tokens.\n        \"\"\"\n    if depth >= MAX_DEPTH:\n        raise SQLParseError('Maximal depth reached')\n        for token in self.tokens:\n            if token.is_group:\n                yield from token.flatten(depth + 1)\n            else:\n                yield token\n```\n\n### Impact\nDenial of Service (the impact depends on the use).\nAnyone parsing a user input with sqlparse.parse() is affected.\n","fixed_in":["0.5.0"],"id":"GHSA-2m57-hf25-phgg","link":"https://osv.dev/vulnerability/GHSA-2m57-hf25-phgg","source":"osv","summary":null,"withdrawn":null}]},"0.2.4":{"info":{"author":"Andi Albrecht","author_email":"albrecht.andi@gmail.com","bugtrack_url":null,"classifiers":["Development Status :: 4 - Beta","Intended Audience :: Developers","License :: OSI Approved :: BSD License","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Topic :: Database","Topic :: Software Development"],"description_content_type":null,"docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/andialbrecht/sqlparse","keywords":"","license":"BSD","maintainer":"","maintainer_email":"","name":"sqlparse","package_url":"https://pypi.org/project/sqlparse/","platform":"","project_url":"https://pypi.org/project/sqlparse/","project_urls":{"Homepage":"https://github.com/andialbrecht/sqlparse"},"provides_extra":null,"release_url":"https://pypi.org/project/sqlparse/0.2.4/","requires_dist":null,"requires_python":"","summary":"Non-validating SQL parser","version":"0.2.4","yanked":false,"yanked_reason":null},"last_serial":24141613,"urls":[{"comment_text":"","digests":{"blake2b_256":"658520bdd72f4537cf2c4d5d005368d502b2f464ede22982e724a82c86268eda","md5":"f6206be02d016858fe59a6e62db3a469","sha256":"d9cf190f51cbb26da0412247dfe4fb5f4098edb73db84e02f9fc21fdca31fed4"},"downloads":-1,"filename":"sqlparse-0.2.4-py2.py3-none-any.whl","has_sig":false,"md5_digest":"f6206be02d016858fe59a6e62db3a469","packagetype":"bdist_wheel","python_version":"2.7","requires_python":null,"size":38655,"upload_time":"2017-09-27T07:09:49","upload_time_iso_8601":"2017-09-27T07:09:49.928494Z","url":"https://files.pythonhosted.org/packages/65/85/20bdd72f4537cf2c4d5d005368d502b2f464ede22982e724a82c86268eda/sqlparse-0.2.4-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"793c2ad76ba49f9e3d88d2b58e135b7821d93741856d1fe49970171f73529303","md5":"8f753105167f35ea94ae6387e8af152f","sha256":"ce028444cfab83be538752a2ffdb56bc417b7784ff35bb9a3062413717807dec"},"downloads":-1,"filename":"sqlparse-0.2.4.tar.gz","has_sig":false,"md5_digest":"8f753105167f35ea94ae6387e8af152f","packagetype":"sdist","python_version":"source","requires_python":null,"size":61614,"upload_time":"2017-09-27T07:09:37","upload_time_iso_8601":"2017-09-27T07:09:37.934253Z","url":"https://files.pythonhosted.org/packages/79/3c/2ad76ba49f9e3d88d2b58e135b7821d93741856d1fe49970171f73529303/sqlparse-0.2.4.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-30608"],"details":"### Impact\nThe SQL parser contains a regular expression that is vulnerable to [ReDoS](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS) (Regular Expression Denial of Service). The vulnerability may lead to Denial of Service (DoS).\n\n### Patches\nThis issues has been fixed in sqlparse 0.4.4.\n\n### Workarounds\nNone. \n\n### References\nThis issue was discovered and reported by GHSL team member [@erik-krogh (Erik Krogh Kristensen)](https://github.com/erik-krogh).\n- Commit that introduced the vulnerability: e75e35869473832a1eb67772b1adfee2db11b85a\n","fixed_in":["0.4.4"],"id":"GHSA-rrm6-wvj7-cwh2","link":"https://osv.dev/vulnerability/GHSA-rrm6-wvj7-cwh2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-30608","GHSA-rrm6-wvj7-cwh2"],"details":"sqlparse is a non-validating SQL parser module for Python. In affected versions the SQL parser contains a regular expression that is vulnerable to ReDoS (Regular Expression Denial of Service). This issue was introduced by commit `e75e358`. The vulnerability may lead to Denial of Service (DoS). This issues has been fixed in sqlparse 0.4.4 by commit `c457abd5f`. Users are advised to upgrade. There are no known workarounds for this issue.\n","fixed_in":["0.4.4"],"id":"PYSEC-2023-87","link":"https://osv.dev/vulnerability/PYSEC-2023-87","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4340"],"details":"### Summary\nPassing a heavily nested list to sqlparse.parse() leads to a Denial of Service due to RecursionError.\n\n### Details + PoC\nRunning the following code will raise Maximum recursion limit exceeded exception:\n```py\nimport sqlparse\nsqlparse.parse('[' * 10000 + ']' * 10000)\n```\nWe expect a traceback of RecursionError:\n```py\nTraceback (most recent call last):\n  File \"trigger_sqlparse_nested_list.py\", line 3, in <module>\n    sqlparse.parse('[' * 10000 + ']' * 10000)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/__init__.py\", line 30, in parse\n    return tuple(parsestream(sql, encoding))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/filter_stack.py\", line 36, in run\n    stmt = grouping.group(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 428, in group\n    func(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 53, in group_brackets\n    _group_matching(tlist, sql.SquareBrackets)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 48, in _group_matching\n    tlist.group_tokens(cls, open_idx, close_idx)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 328, in group_tokens\n    grp = grp_cls(subtokens)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 161, in __init__\n    super().__init__(None, str(self))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in __str__\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in <genexpr>\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  [Previous line repeated 983 more times]\nRecursionError: maximum recursion depth exceeded\n```\n\n### Fix suggestion\nThe [flatten()](https://github.com/andialbrecht/sqlparse/blob/master/sqlparse/sql.py#L207) function of TokenList class should limit the recursion to a maximal depth:\n```py\nfrom sqlparse.exceptions import SQLParseError\n\nMAX_DEPTH = 100\n\n    def flatten(self, depth=1):\n        \"\"\"Generator yielding ungrouped tokens.\n\n        This method is recursively called for all child tokens.\n        \"\"\"\n    if depth >= MAX_DEPTH:\n        raise SQLParseError('Maximal depth reached')\n        for token in self.tokens:\n            if token.is_group:\n                yield from token.flatten(depth + 1)\n            else:\n                yield token\n```\n\n### Impact\nDenial of Service (the impact depends on the use).\nAnyone parsing a user input with sqlparse.parse() is affected.\n","fixed_in":["0.5.0"],"id":"GHSA-2m57-hf25-phgg","link":"https://osv.dev/vulnerability/GHSA-2m57-hf25-phgg","source":"osv","summary":null,"withdrawn":null}]},"0.3.0":{"info":{"author":"Andi Albrecht","author_email":"albrecht.andi@gmail.com","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Intended Audience :: Developers","License :: OSI Approved :: BSD License","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Topic :: Database","Topic :: Software Development"],"description_content_type":"","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/andialbrecht/sqlparse","keywords":"","license":"BSD","maintainer":"","maintainer_email":"","name":"sqlparse","package_url":"https://pypi.org/project/sqlparse/","platform":"","project_url":"https://pypi.org/project/sqlparse/","project_urls":{"Homepage":"https://github.com/andialbrecht/sqlparse"},"provides_extra":null,"release_url":"https://pypi.org/project/sqlparse/0.3.0/","requires_dist":null,"requires_python":">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*","summary":"Non-validating SQL parser","version":"0.3.0","yanked":false,"yanked_reason":null},"last_serial":24141613,"urls":[{"comment_text":"","digests":{"blake2b_256":"ef53900f7d2a54557c6a37886585a91336520e5539e3ae2423ff1102daf4f3a7","md5":"19aaa5c1cdb4fcae4fd0717f104c524d","sha256":"40afe6b8d4b1117e7dff5504d7a8ce07d9a1b15aeeade8a2d10f130a834f8177"},"downloads":-1,"filename":"sqlparse-0.3.0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"19aaa5c1cdb4fcae4fd0717f104c524d","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*","size":39669,"upload_time":"2019-03-11T18:33:16","upload_time_iso_8601":"2019-03-11T18:33:16.229254Z","url":"https://files.pythonhosted.org/packages/ef/53/900f7d2a54557c6a37886585a91336520e5539e3ae2423ff1102daf4f3a7/sqlparse-0.3.0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"63c8229dfd2d18663b375975d953e2bdc06d0eed714f93dcb7732f39e349c438","md5":"2ce34181d6b7b234c9f3c0ecd1ffb93e","sha256":"7c3dca29c022744e95b547e867cee89f4fce4373f3549ccd8797d8eb52cdb873"},"downloads":-1,"filename":"sqlparse-0.3.0.tar.gz","has_sig":false,"md5_digest":"2ce34181d6b7b234c9f3c0ecd1ffb93e","packagetype":"sdist","python_version":"source","requires_python":">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*","size":64072,"upload_time":"2019-03-11T18:33:17","upload_time_iso_8601":"2019-03-11T18:33:17.789249Z","url":"https://files.pythonhosted.org/packages/63/c8/229dfd2d18663b375975d953e2bdc06d0eed714f93dcb7732f39e349c438/sqlparse-0.3.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-30608"],"details":"### Impact\nThe SQL parser contains a regular expression that is vulnerable to [ReDoS](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS) (Regular Expression Denial of Service). The vulnerability may lead to Denial of Service (DoS).\n\n### Patches\nThis issues has been fixed in sqlparse 0.4.4.\n\n### Workarounds\nNone. \n\n### References\nThis issue was discovered and reported by GHSL team member [@erik-krogh (Erik Krogh Kristensen)](https://github.com/erik-krogh).\n- Commit that introduced the vulnerability: e75e35869473832a1eb67772b1adfee2db11b85a\n","fixed_in":["0.4.4"],"id":"GHSA-rrm6-wvj7-cwh2","link":"https://osv.dev/vulnerability/GHSA-rrm6-wvj7-cwh2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-30608","GHSA-rrm6-wvj7-cwh2"],"details":"sqlparse is a non-validating SQL parser module for Python. In affected versions the SQL parser contains a regular expression that is vulnerable to ReDoS (Regular Expression Denial of Service). This issue was introduced by commit `e75e358`. The vulnerability may lead to Denial of Service (DoS). This issues has been fixed in sqlparse 0.4.4 by commit `c457abd5f`. Users are advised to upgrade. There are no known workarounds for this issue.\n","fixed_in":["0.4.4"],"id":"PYSEC-2023-87","link":"https://osv.dev/vulnerability/PYSEC-2023-87","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4340"],"details":"### Summary\nPassing a heavily nested list to sqlparse.parse() leads to a Denial of Service due to RecursionError.\n\n### Details + PoC\nRunning the following code will raise Maximum recursion limit exceeded exception:\n```py\nimport sqlparse\nsqlparse.parse('[' * 10000 + ']' * 10000)\n```\nWe expect a traceback of RecursionError:\n```py\nTraceback (most recent call last):\n  File \"trigger_sqlparse_nested_list.py\", line 3, in <module>\n    sqlparse.parse('[' * 10000 + ']' * 10000)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/__init__.py\", line 30, in parse\n    return tuple(parsestream(sql, encoding))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/filter_stack.py\", line 36, in run\n    stmt = grouping.group(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 428, in group\n    func(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 53, in group_brackets\n    _group_matching(tlist, sql.SquareBrackets)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 48, in _group_matching\n    tlist.group_tokens(cls, open_idx, close_idx)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 328, in group_tokens\n    grp = grp_cls(subtokens)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 161, in __init__\n    super().__init__(None, str(self))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in __str__\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in <genexpr>\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  [Previous line repeated 983 more times]\nRecursionError: maximum recursion depth exceeded\n```\n\n### Fix suggestion\nThe [flatten()](https://github.com/andialbrecht/sqlparse/blob/master/sqlparse/sql.py#L207) function of TokenList class should limit the recursion to a maximal depth:\n```py\nfrom sqlparse.exceptions import SQLParseError\n\nMAX_DEPTH = 100\n\n    def flatten(self, depth=1):\n        \"\"\"Generator yielding ungrouped tokens.\n\n        This method is recursively called for all child tokens.\n        \"\"\"\n    if depth >= MAX_DEPTH:\n        raise SQLParseError('Maximal depth reached')\n        for token in self.tokens:\n            if token.is_group:\n                yield from token.flatten(depth + 1)\n            else:\n                yield token\n```\n\n### Impact\nDenial of Service (the impact depends on the use).\nAnyone parsing a user input with sqlparse.parse() is affected.\n","fixed_in":["0.5.0"],"id":"GHSA-2m57-hf25-phgg","link":"https://osv.dev/vulnerability/GHSA-2m57-hf25-phgg","source":"osv","summary":null,"withdrawn":null}]},"0.3.1":{"info":{"author":"Andi Albrecht","author_email":"albrecht.andi@gmail.com","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Intended Audience :: Developers","License :: OSI Approved :: BSD License","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Topic :: Database","Topic :: Software Development"],"description_content_type":"","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/andialbrecht/sqlparse","keywords":"","license":"BSD","maintainer":"","maintainer_email":"","name":"sqlparse","package_url":"https://pypi.org/project/sqlparse/","platform":"","project_url":"https://pypi.org/project/sqlparse/","project_urls":{"Homepage":"https://github.com/andialbrecht/sqlparse"},"provides_extra":null,"release_url":"https://pypi.org/project/sqlparse/0.3.1/","requires_dist":null,"requires_python":">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*","summary":"Non-validating SQL parser","version":"0.3.1","yanked":false,"yanked_reason":null},"last_serial":24141613,"urls":[{"comment_text":"","digests":{"blake2b_256":"85ee6e821932f413a5c4b76be9c5936e313e4fc626b33f16e027866e1d60f588","md5":"70f7ca550f636db5db40a5d26daff378","sha256":"022fb9c87b524d1f7862b3037e541f68597a730a8843245c349fc93e1643dc4e"},"downloads":-1,"filename":"sqlparse-0.3.1-py2.py3-none-any.whl","has_sig":false,"md5_digest":"70f7ca550f636db5db40a5d26daff378","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*","size":40759,"upload_time":"2020-02-29T13:05:51","upload_time_iso_8601":"2020-02-29T13:05:51.274945Z","url":"https://files.pythonhosted.org/packages/85/ee/6e821932f413a5c4b76be9c5936e313e4fc626b33f16e027866e1d60f588/sqlparse-0.3.1-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"674b253b6902c1526885af6d361ca8c6b1400292e649f0e9c95ee0d2e8ec8681","md5":"423047887a3590b04dd18f8caf843a2f","sha256":"e162203737712307dfe78860cc56c8da8a852ab2ee33750e33aeadf38d12c548"},"downloads":-1,"filename":"sqlparse-0.3.1.tar.gz","has_sig":false,"md5_digest":"423047887a3590b04dd18f8caf843a2f","packagetype":"sdist","python_version":"source","requires_python":">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*","size":67572,"upload_time":"2020-02-29T13:05:53","upload_time_iso_8601":"2020-02-29T13:05:53.425703Z","url":"https://files.pythonhosted.org/packages/67/4b/253b6902c1526885af6d361ca8c6b1400292e649f0e9c95ee0d2e8ec8681/sqlparse-0.3.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-30608"],"details":"### Impact\nThe SQL parser contains a regular expression that is vulnerable to [ReDoS](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS) (Regular Expression Denial of Service). The vulnerability may lead to Denial of Service (DoS).\n\n### Patches\nThis issues has been fixed in sqlparse 0.4.4.\n\n### Workarounds\nNone. \n\n### References\nThis issue was discovered and reported by GHSL team member [@erik-krogh (Erik Krogh Kristensen)](https://github.com/erik-krogh).\n- Commit that introduced the vulnerability: e75e35869473832a1eb67772b1adfee2db11b85a\n","fixed_in":["0.4.4"],"id":"GHSA-rrm6-wvj7-cwh2","link":"https://osv.dev/vulnerability/GHSA-rrm6-wvj7-cwh2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-30608","GHSA-rrm6-wvj7-cwh2"],"details":"sqlparse is a non-validating SQL parser module for Python. In affected versions the SQL parser contains a regular expression that is vulnerable to ReDoS (Regular Expression Denial of Service). This issue was introduced by commit `e75e358`. The vulnerability may lead to Denial of Service (DoS). This issues has been fixed in sqlparse 0.4.4 by commit `c457abd5f`. Users are advised to upgrade. There are no known workarounds for this issue.\n","fixed_in":["0.4.4"],"id":"PYSEC-2023-87","link":"https://osv.dev/vulnerability/PYSEC-2023-87","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4340"],"details":"### Summary\nPassing a heavily nested list to sqlparse.parse() leads to a Denial of Service due to RecursionError.\n\n### Details + PoC\nRunning the following code will raise Maximum recursion limit exceeded exception:\n```py\nimport sqlparse\nsqlparse.parse('[' * 10000 + ']' * 10000)\n```\nWe expect a traceback of RecursionError:\n```py\nTraceback (most recent call last):\n  File \"trigger_sqlparse_nested_list.py\", line 3, in <module>\n    sqlparse.parse('[' * 10000 + ']' * 10000)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/__init__.py\", line 30, in parse\n    return tuple(parsestream(sql, encoding))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/filter_stack.py\", line 36, in run\n    stmt = grouping.group(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 428, in group\n    func(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 53, in group_brackets\n    _group_matching(tlist, sql.SquareBrackets)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 48, in _group_matching\n    tlist.group_tokens(cls, open_idx, close_idx)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 328, in group_tokens\n    grp = grp_cls(subtokens)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 161, in __init__\n    super().__init__(None, str(self))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in __str__\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in <genexpr>\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  [Previous line repeated 983 more times]\nRecursionError: maximum recursion depth exceeded\n```\n\n### Fix suggestion\nThe [flatten()](https://github.com/andialbrecht/sqlparse/blob/master/sqlparse/sql.py#L207) function of TokenList class should limit the recursion to a maximal depth:\n```py\nfrom sqlparse.exceptions import SQLParseError\n\nMAX_DEPTH = 100\n\n    def flatten(self, depth=1):\n        \"\"\"Generator yielding ungrouped tokens.\n\n        This method is recursively called for all child tokens.\n        \"\"\"\n    if depth >= MAX_DEPTH:\n        raise SQLParseError('Maximal depth reached')\n        for token in self.tokens:\n            if token.is_group:\n                yield from token.flatten(depth + 1)\n            else:\n                yield token\n```\n\n### Impact\nDenial of Service (the impact depends on the use).\nAnyone parsing a user input with sqlparse.parse() is affected.\n","fixed_in":["0.5.0"],"id":"GHSA-2m57-hf25-phgg","link":"https://osv.dev/vulnerability/GHSA-2m57-hf25-phgg","source":"osv","summary":null,"withdrawn":null}]},"0.4.0":{"info":{"author":"Andi Albrecht","author_email":"albrecht.andi@gmail.com","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Intended Audience :: Developers","License :: OSI Approved :: BSD License","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Database","Topic :: Software Development"],"description_content_type":"","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/andialbrecht/sqlparse","keywords":"","license":"BSD-3-Clause","maintainer":"","maintainer_email":"","name":"sqlparse","package_url":"https://pypi.org/project/sqlparse/","platform":"","project_url":"https://pypi.org/project/sqlparse/","project_urls":{"Documentation":"https://sqlparse.readthedocs.io/","Homepage":"https://github.com/andialbrecht/sqlparse","Release Notes":"https://sqlparse.readthedocs.io/en/latest/changes/","Source":"https://github.com/andialbrecht/sqlparse","Tracker":"https://github.com/andialbrecht/sqlparse/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/sqlparse/0.4.0/","requires_dist":null,"requires_python":">=3.5","summary":"A non-validating SQL parser.","version":"0.4.0","yanked":false,"yanked_reason":null},"last_serial":24141613,"urls":[{"comment_text":"","digests":{"blake2b_256":"109636c136013c4a6ecb8c6aa3eed66e6dcea838f85fd80e1446499f1dabfac7","md5":"65562176d833b5dc6d19a02a6c75a38e","sha256":"0523026398aea9c8b5f7a4a6d5c0829c285b4fbd960c17b5967a369342e21e01"},"downloads":-1,"filename":"sqlparse-0.4.0-py3-none-any.whl","has_sig":false,"md5_digest":"65562176d833b5dc6d19a02a6c75a38e","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.5","size":42233,"upload_time":"2020-10-07T07:04:31","upload_time_iso_8601":"2020-10-07T07:04:31.620635Z","url":"https://files.pythonhosted.org/packages/10/96/36c136013c4a6ecb8c6aa3eed66e6dcea838f85fd80e1446499f1dabfac7/sqlparse-0.4.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"310e67424798bfb5f4216c3c7f49783ddb5fde4f458f08b91d677bb07f7f7a2a","md5":"ebd3655f48192d56aac11847ff18dbe4","sha256":"d59e473424ae7470778fa4dd0dd7bb666ff324f0a6106c29deb5946ea5367f04"},"downloads":-1,"filename":"sqlparse-0.4.0.tar.gz","has_sig":false,"md5_digest":"ebd3655f48192d56aac11847ff18dbe4","packagetype":"sdist","python_version":"source","requires_python":">=3.5","size":67191,"upload_time":"2020-10-07T07:04:35","upload_time_iso_8601":"2020-10-07T07:04:35.071775Z","url":"https://files.pythonhosted.org/packages/31/0e/67424798bfb5f4216c3c7f49783ddb5fde4f458f08b91d677bb07f7f7a2a/sqlparse-0.4.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2021-32839","GHSA-p5w8-wqhj-9hhf"],"details":"sqlparse is a non-validating SQL parser module for Python. In sqlparse versions 0.4.0 and 0.4.1 there is a regular Expression Denial of Service in sqlparse vulnerability. The regular expression may cause exponential backtracking on strings containing many repetitions of '\\r\\n' in SQL comments. Only the formatting feature that removes comments from SQL statements is affected by this regular expression. As a workaround don't use the sqlformat.format function with keyword strip_comments=True or the --strip-comments command line flag when using the sqlformat command line tool. The issues has been fixed in sqlparse 0.4.2.","fixed_in":["0.4.2"],"id":"PYSEC-2021-333","link":"https://osv.dev/vulnerability/PYSEC-2021-333","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2021-32839"],"details":"### Impact\nThe formatter function that strips comments from a SQL contains a regular expression that is vulnerable to [ReDoS](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS) (Regular Expression Denial of Service). The regular expression may cause exponential backtracking on strings containing many repetitions of '\\r\\n' in SQL comments.\n\n### Patches\nThe issues has been fixed in sqlparse 0.4.2.\n\n### Workarounds\nOnly the formatting feature that removes comments from SQL statements is affected by this regular expression. As a workaround don't use the `sqlformat.format` function with keyword `strip_comments=True` or the `--strip-comments` command line flag when using the `sqlformat` command line tool.\n\n### References\nThis issue was discovered by GitHub team members @erik-krogh and @yoff. It was found using a [CodeQL](https://codeql.github.com/) query which identifies inefficient regular expressions. You can see the results of the query on python-sqlparse by following [this link](https://lgtm.com/query/2223658096471222354/). \n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [sqlparse issue tracker](https://github.com/andialbrecht/sqlparse/issues)\n* Email us at [albrecht.andi@gmail.com](mailto:albrecht.andi@gmail.com)\n","fixed_in":["0.4.2"],"id":"GHSA-p5w8-wqhj-9hhf","link":"https://osv.dev/vulnerability/GHSA-p5w8-wqhj-9hhf","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-30608"],"details":"### Impact\nThe SQL parser contains a regular expression that is vulnerable to [ReDoS](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS) (Regular Expression Denial of Service). The vulnerability may lead to Denial of Service (DoS).\n\n### Patches\nThis issues has been fixed in sqlparse 0.4.4.\n\n### Workarounds\nNone. \n\n### References\nThis issue was discovered and reported by GHSL team member [@erik-krogh (Erik Krogh Kristensen)](https://github.com/erik-krogh).\n- Commit that introduced the vulnerability: e75e35869473832a1eb67772b1adfee2db11b85a\n","fixed_in":["0.4.4"],"id":"GHSA-rrm6-wvj7-cwh2","link":"https://osv.dev/vulnerability/GHSA-rrm6-wvj7-cwh2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-30608","GHSA-rrm6-wvj7-cwh2"],"details":"sqlparse is a non-validating SQL parser module for Python. In affected versions the SQL parser contains a regular expression that is vulnerable to ReDoS (Regular Expression Denial of Service). This issue was introduced by commit `e75e358`. The vulnerability may lead to Denial of Service (DoS). This issues has been fixed in sqlparse 0.4.4 by commit `c457abd5f`. Users are advised to upgrade. There are no known workarounds for this issue.\n","fixed_in":["0.4.4"],"id":"PYSEC-2023-87","link":"https://osv.dev/vulnerability/PYSEC-2023-87","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4340"],"details":"### Summary\nPassing a heavily nested list to sqlparse.parse() leads to a Denial of Service due to RecursionError.\n\n### Details + PoC\nRunning the following code will raise Maximum recursion limit exceeded exception:\n```py\nimport sqlparse\nsqlparse.parse('[' * 10000 + ']' * 10000)\n```\nWe expect a traceback of RecursionError:\n```py\nTraceback (most recent call last):\n  File \"trigger_sqlparse_nested_list.py\", line 3, in <module>\n    sqlparse.parse('[' * 10000 + ']' * 10000)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/__init__.py\", line 30, in parse\n    return tuple(parsestream(sql, encoding))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/filter_stack.py\", line 36, in run\n    stmt = grouping.group(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 428, in group\n    func(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 53, in group_brackets\n    _group_matching(tlist, sql.SquareBrackets)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 48, in _group_matching\n    tlist.group_tokens(cls, open_idx, close_idx)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 328, in group_tokens\n    grp = grp_cls(subtokens)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 161, in __init__\n    super().__init__(None, str(self))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in __str__\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in <genexpr>\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  [Previous line repeated 983 more times]\nRecursionError: maximum recursion depth exceeded\n```\n\n### Fix suggestion\nThe [flatten()](https://github.com/andialbrecht/sqlparse/blob/master/sqlparse/sql.py#L207) function of TokenList class should limit the recursion to a maximal depth:\n```py\nfrom sqlparse.exceptions import SQLParseError\n\nMAX_DEPTH = 100\n\n    def flatten(self, depth=1):\n        \"\"\"Generator yielding ungrouped tokens.\n\n        This method is recursively called for all child tokens.\n        \"\"\"\n    if depth >= MAX_DEPTH:\n        raise SQLParseError('Maximal depth reached')\n        for token in self.tokens:\n            if token.is_group:\n                yield from token.flatten(depth + 1)\n            else:\n                yield token\n```\n\n### Impact\nDenial of Service (the impact depends on the use).\nAnyone parsing a user input with sqlparse.parse() is affected.\n","fixed_in":["0.5.0"],"id":"GHSA-2m57-hf25-phgg","link":"https://osv.dev/vulnerability/GHSA-2m57-hf25-phgg","source":"osv","summary":null,"withdrawn":null}]},"0.4.1":{"info":{"author":"Andi Albrecht","author_email":"albrecht.andi@gmail.com","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Intended Audience :: Developers","License :: OSI Approved :: BSD License","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Database","Topic :: Software Development"],"description_content_type":"","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/andialbrecht/sqlparse","keywords":"","license":"BSD-3-Clause","maintainer":"","maintainer_email":"","name":"sqlparse","package_url":"https://pypi.org/project/sqlparse/","platform":"","project_url":"https://pypi.org/project/sqlparse/","project_urls":{"Documentation":"https://sqlparse.readthedocs.io/","Homepage":"https://github.com/andialbrecht/sqlparse","Release Notes":"https://sqlparse.readthedocs.io/en/latest/changes/","Source":"https://github.com/andialbrecht/sqlparse","Tracker":"https://github.com/andialbrecht/sqlparse/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/sqlparse/0.4.1/","requires_dist":null,"requires_python":">=3.5","summary":"A non-validating SQL parser.","version":"0.4.1","yanked":false,"yanked_reason":null},"last_serial":24141613,"urls":[{"comment_text":"","digests":{"blake2b_256":"14056e8eb62ca685b10e34051a80d7ea94b7137369d8c0be5c3b9d9b6e3f5dae","md5":"8e8e7586f9dc6c75ed613f823367eb17","sha256":"017cde379adbd6a1f15a61873f43e8274179378e95ef3fede90b5aa64d304ed0"},"downloads":-1,"filename":"sqlparse-0.4.1-py3-none-any.whl","has_sig":false,"md5_digest":"8e8e7586f9dc6c75ed613f823367eb17","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.5","size":42220,"upload_time":"2020-10-08T06:00:07","upload_time_iso_8601":"2020-10-08T06:00:07.345064Z","url":"https://files.pythonhosted.org/packages/14/05/6e8eb62ca685b10e34051a80d7ea94b7137369d8c0be5c3b9d9b6e3f5dae/sqlparse-0.4.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"a254da10f9a0235681179144a5ca02147428f955745e9393f859dec8d0d05b41","md5":"eebbc6b5f1033054873033e54b0c1266","sha256":"0f91fd2e829c44362cbcfab3e9ae12e22badaa8a29ad5ff599f9ec109f0454e8"},"downloads":-1,"filename":"sqlparse-0.4.1.tar.gz","has_sig":false,"md5_digest":"eebbc6b5f1033054873033e54b0c1266","packagetype":"sdist","python_version":"source","requires_python":">=3.5","size":67228,"upload_time":"2020-10-08T06:00:09","upload_time_iso_8601":"2020-10-08T06:00:09.414804Z","url":"https://files.pythonhosted.org/packages/a2/54/da10f9a0235681179144a5ca02147428f955745e9393f859dec8d0d05b41/sqlparse-0.4.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2021-32839","GHSA-p5w8-wqhj-9hhf"],"details":"sqlparse is a non-validating SQL parser module for Python. In sqlparse versions 0.4.0 and 0.4.1 there is a regular Expression Denial of Service in sqlparse vulnerability. The regular expression may cause exponential backtracking on strings containing many repetitions of '\\r\\n' in SQL comments. Only the formatting feature that removes comments from SQL statements is affected by this regular expression. As a workaround don't use the sqlformat.format function with keyword strip_comments=True or the --strip-comments command line flag when using the sqlformat command line tool. The issues has been fixed in sqlparse 0.4.2.","fixed_in":["0.4.2"],"id":"PYSEC-2021-333","link":"https://osv.dev/vulnerability/PYSEC-2021-333","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2021-32839"],"details":"### Impact\nThe formatter function that strips comments from a SQL contains a regular expression that is vulnerable to [ReDoS](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS) (Regular Expression Denial of Service). The regular expression may cause exponential backtracking on strings containing many repetitions of '\\r\\n' in SQL comments.\n\n### Patches\nThe issues has been fixed in sqlparse 0.4.2.\n\n### Workarounds\nOnly the formatting feature that removes comments from SQL statements is affected by this regular expression. As a workaround don't use the `sqlformat.format` function with keyword `strip_comments=True` or the `--strip-comments` command line flag when using the `sqlformat` command line tool.\n\n### References\nThis issue was discovered by GitHub team members @erik-krogh and @yoff. It was found using a [CodeQL](https://codeql.github.com/) query which identifies inefficient regular expressions. You can see the results of the query on python-sqlparse by following [this link](https://lgtm.com/query/2223658096471222354/). \n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [sqlparse issue tracker](https://github.com/andialbrecht/sqlparse/issues)\n* Email us at [albrecht.andi@gmail.com](mailto:albrecht.andi@gmail.com)\n","fixed_in":["0.4.2"],"id":"GHSA-p5w8-wqhj-9hhf","link":"https://osv.dev/vulnerability/GHSA-p5w8-wqhj-9hhf","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-30608"],"details":"### Impact\nThe SQL parser contains a regular expression that is vulnerable to [ReDoS](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS) (Regular Expression Denial of Service). The vulnerability may lead to Denial of Service (DoS).\n\n### Patches\nThis issues has been fixed in sqlparse 0.4.4.\n\n### Workarounds\nNone. \n\n### References\nThis issue was discovered and reported by GHSL team member [@erik-krogh (Erik Krogh Kristensen)](https://github.com/erik-krogh).\n- Commit that introduced the vulnerability: e75e35869473832a1eb67772b1adfee2db11b85a\n","fixed_in":["0.4.4"],"id":"GHSA-rrm6-wvj7-cwh2","link":"https://osv.dev/vulnerability/GHSA-rrm6-wvj7-cwh2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-30608","GHSA-rrm6-wvj7-cwh2"],"details":"sqlparse is a non-validating SQL parser module for Python. In affected versions the SQL parser contains a regular expression that is vulnerable to ReDoS (Regular Expression Denial of Service). This issue was introduced by commit `e75e358`. The vulnerability may lead to Denial of Service (DoS). This issues has been fixed in sqlparse 0.4.4 by commit `c457abd5f`. Users are advised to upgrade. There are no known workarounds for this issue.\n","fixed_in":["0.4.4"],"id":"PYSEC-2023-87","link":"https://osv.dev/vulnerability/PYSEC-2023-87","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4340"],"details":"### Summary\nPassing a heavily nested list to sqlparse.parse() leads to a Denial of Service due to RecursionError.\n\n### Details + PoC\nRunning the following code will raise Maximum recursion limit exceeded exception:\n```py\nimport sqlparse\nsqlparse.parse('[' * 10000 + ']' * 10000)\n```\nWe expect a traceback of RecursionError:\n```py\nTraceback (most recent call last):\n  File \"trigger_sqlparse_nested_list.py\", line 3, in <module>\n    sqlparse.parse('[' * 10000 + ']' * 10000)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/__init__.py\", line 30, in parse\n    return tuple(parsestream(sql, encoding))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/filter_stack.py\", line 36, in run\n    stmt = grouping.group(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 428, in group\n    func(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 53, in group_brackets\n    _group_matching(tlist, sql.SquareBrackets)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 48, in _group_matching\n    tlist.group_tokens(cls, open_idx, close_idx)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 328, in group_tokens\n    grp = grp_cls(subtokens)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 161, in __init__\n    super().__init__(None, str(self))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in __str__\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in <genexpr>\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  [Previous line repeated 983 more times]\nRecursionError: maximum recursion depth exceeded\n```\n\n### Fix suggestion\nThe [flatten()](https://github.com/andialbrecht/sqlparse/blob/master/sqlparse/sql.py#L207) function of TokenList class should limit the recursion to a maximal depth:\n```py\nfrom sqlparse.exceptions import SQLParseError\n\nMAX_DEPTH = 100\n\n    def flatten(self, depth=1):\n        \"\"\"Generator yielding ungrouped tokens.\n\n        This method is recursively called for all child tokens.\n        \"\"\"\n    if depth >= MAX_DEPTH:\n        raise SQLParseError('Maximal depth reached')\n        for token in self.tokens:\n            if token.is_group:\n                yield from token.flatten(depth + 1)\n            else:\n                yield token\n```\n\n### Impact\nDenial of Service (the impact depends on the use).\nAnyone parsing a user input with sqlparse.parse() is affected.\n","fixed_in":["0.5.0"],"id":"GHSA-2m57-hf25-phgg","link":"https://osv.dev/vulnerability/GHSA-2m57-hf25-phgg","source":"osv","summary":null,"withdrawn":null}]},"0.4.2":{"info":{"author":"Andi Albrecht","author_email":"albrecht.andi@gmail.com","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Intended Audience :: Developers","License :: OSI Approved :: BSD License","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Database","Topic :: Software Development"],"description_content_type":"","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/andialbrecht/sqlparse","keywords":"","license":"BSD-3-Clause","maintainer":"","maintainer_email":"","name":"sqlparse","package_url":"https://pypi.org/project/sqlparse/","platform":"","project_url":"https://pypi.org/project/sqlparse/","project_urls":{"Documentation":"https://sqlparse.readthedocs.io/","Homepage":"https://github.com/andialbrecht/sqlparse","Release Notes":"https://sqlparse.readthedocs.io/en/latest/changes/","Source":"https://github.com/andialbrecht/sqlparse","Tracker":"https://github.com/andialbrecht/sqlparse/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/sqlparse/0.4.2/","requires_dist":null,"requires_python":">=3.5","summary":"A non-validating SQL parser.","version":"0.4.2","yanked":false,"yanked_reason":null},"last_serial":24141613,"urls":[{"comment_text":"","digests":{"blake2b_256":"0540d836d55fb3f467243ee839ab7b814822fda522cd395fa41e282684e71ee5","md5":"7ba95d1ee3802ec2bb6b88d04e06fbfd","sha256":"48719e356bb8b42991bdbb1e8b83223757b93789c00910a616a071910ca4a64d"},"downloads":-1,"filename":"sqlparse-0.4.2-py3-none-any.whl","has_sig":false,"md5_digest":"7ba95d1ee3802ec2bb6b88d04e06fbfd","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.5","size":42309,"upload_time":"2021-09-10T06:51:56","upload_time_iso_8601":"2021-09-10T06:51:56.892895Z","url":"https://files.pythonhosted.org/packages/05/40/d836d55fb3f467243ee839ab7b814822fda522cd395fa41e282684e71ee5/sqlparse-0.4.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"32fe8a8575debfd924c8160295686a7ea661107fc34d831429cce212b6442edb","md5":"66dce30d92823589f5e5e043f90b4f16","sha256":"0c00730c74263a94e5a9919ade150dfc3b19c574389985446148402998287dae"},"downloads":-1,"filename":"sqlparse-0.4.2.tar.gz","has_sig":false,"md5_digest":"66dce30d92823589f5e5e043f90b4f16","packagetype":"sdist","python_version":"source","requires_python":">=3.5","size":67771,"upload_time":"2021-09-10T06:51:58","upload_time_iso_8601":"2021-09-10T06:51:58.920075Z","url":"https://files.pythonhosted.org/packages/32/fe/8a8575debfd924c8160295686a7ea661107fc34d831429cce212b6442edb/sqlparse-0.4.2.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-30608"],"details":"### Impact\nThe SQL parser contains a regular expression that is vulnerable to [ReDoS](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS) (Regular Expression Denial of Service). The vulnerability may lead to Denial of Service (DoS).\n\n### Patches\nThis issues has been fixed in sqlparse 0.4.4.\n\n### Workarounds\nNone. \n\n### References\nThis issue was discovered and reported by GHSL team member [@erik-krogh (Erik Krogh Kristensen)](https://github.com/erik-krogh).\n- Commit that introduced the vulnerability: e75e35869473832a1eb67772b1adfee2db11b85a\n","fixed_in":["0.4.4"],"id":"GHSA-rrm6-wvj7-cwh2","link":"https://osv.dev/vulnerability/GHSA-rrm6-wvj7-cwh2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-30608","GHSA-rrm6-wvj7-cwh2"],"details":"sqlparse is a non-validating SQL parser module for Python. In affected versions the SQL parser contains a regular expression that is vulnerable to ReDoS (Regular Expression Denial of Service). This issue was introduced by commit `e75e358`. The vulnerability may lead to Denial of Service (DoS). This issues has been fixed in sqlparse 0.4.4 by commit `c457abd5f`. Users are advised to upgrade. There are no known workarounds for this issue.\n","fixed_in":["0.4.4"],"id":"PYSEC-2023-87","link":"https://osv.dev/vulnerability/PYSEC-2023-87","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4340"],"details":"### Summary\nPassing a heavily nested list to sqlparse.parse() leads to a Denial of Service due to RecursionError.\n\n### Details + PoC\nRunning the following code will raise Maximum recursion limit exceeded exception:\n```py\nimport sqlparse\nsqlparse.parse('[' * 10000 + ']' * 10000)\n```\nWe expect a traceback of RecursionError:\n```py\nTraceback (most recent call last):\n  File \"trigger_sqlparse_nested_list.py\", line 3, in <module>\n    sqlparse.parse('[' * 10000 + ']' * 10000)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/__init__.py\", line 30, in parse\n    return tuple(parsestream(sql, encoding))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/filter_stack.py\", line 36, in run\n    stmt = grouping.group(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 428, in group\n    func(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 53, in group_brackets\n    _group_matching(tlist, sql.SquareBrackets)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 48, in _group_matching\n    tlist.group_tokens(cls, open_idx, close_idx)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 328, in group_tokens\n    grp = grp_cls(subtokens)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 161, in __init__\n    super().__init__(None, str(self))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in __str__\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in <genexpr>\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  [Previous line repeated 983 more times]\nRecursionError: maximum recursion depth exceeded\n```\n\n### Fix suggestion\nThe [flatten()](https://github.com/andialbrecht/sqlparse/blob/master/sqlparse/sql.py#L207) function of TokenList class should limit the recursion to a maximal depth:\n```py\nfrom sqlparse.exceptions import SQLParseError\n\nMAX_DEPTH = 100\n\n    def flatten(self, depth=1):\n        \"\"\"Generator yielding ungrouped tokens.\n\n        This method is recursively called for all child tokens.\n        \"\"\"\n    if depth >= MAX_DEPTH:\n        raise SQLParseError('Maximal depth reached')\n        for token in self.tokens:\n            if token.is_group:\n                yield from token.flatten(depth + 1)\n            else:\n                yield token\n```\n\n### Impact\nDenial of Service (the impact depends on the use).\nAnyone parsing a user input with sqlparse.parse() is affected.\n","fixed_in":["0.5.0"],"id":"GHSA-2m57-hf25-phgg","link":"https://osv.dev/vulnerability/GHSA-2m57-hf25-phgg","source":"osv","summary":null,"withdrawn":null}]},"0.4.3":{"info":{"author":"Andi Albrecht","author_email":"albrecht.andi@gmail.com","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Intended Audience :: Developers","License :: OSI Approved :: BSD License","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Database","Topic :: Software Development"],"description_content_type":"","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/andialbrecht/sqlparse","keywords":"","license":"BSD-3-Clause","maintainer":"","maintainer_email":"","name":"sqlparse","package_url":"https://pypi.org/project/sqlparse/","platform":null,"project_url":"https://pypi.org/project/sqlparse/","project_urls":{"Documentation":"https://sqlparse.readthedocs.io/","Homepage":"https://github.com/andialbrecht/sqlparse","Release Notes":"https://sqlparse.readthedocs.io/en/latest/changes/","Source":"https://github.com/andialbrecht/sqlparse","Tracker":"https://github.com/andialbrecht/sqlparse/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/sqlparse/0.4.3/","requires_dist":null,"requires_python":">=3.5","summary":"A non-validating SQL parser.","version":"0.4.3","yanked":false,"yanked_reason":null},"last_serial":24141613,"urls":[{"comment_text":"","digests":{"blake2b_256":"97d331dd2c3e48fc2060819f4acb0686248250a0f2326356306b38a42e059144","md5":"7f21dd4bc74215d68702b8de53dd92a3","sha256":"0323c0ec29cd52bceabc1b4d9d579e311f3e4961b98d174201d5622a23b85e34"},"downloads":-1,"filename":"sqlparse-0.4.3-py3-none-any.whl","has_sig":false,"md5_digest":"7f21dd4bc74215d68702b8de53dd92a3","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.5","size":42768,"upload_time":"2022-09-23T18:41:20","upload_time_iso_8601":"2022-09-23T18:41:20.351878Z","url":"https://files.pythonhosted.org/packages/97/d3/31dd2c3e48fc2060819f4acb0686248250a0f2326356306b38a42e059144/sqlparse-0.4.3-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"bafa5b7662b04b69f3a34b8867877e4dbf2a37b7f2a5c0bbb5a9eed64efd1ad1","md5":"180fb4e11a3f79b119868d7c102d7816","sha256":"69ca804846bb114d2ec380e4360a8a340db83f0ccf3afceeb1404df028f57268"},"downloads":-1,"filename":"sqlparse-0.4.3.tar.gz","has_sig":false,"md5_digest":"180fb4e11a3f79b119868d7c102d7816","packagetype":"sdist","python_version":"source","requires_python":">=3.5","size":70771,"upload_time":"2022-09-23T18:41:23","upload_time_iso_8601":"2022-09-23T18:41:23.241733Z","url":"https://files.pythonhosted.org/packages/ba/fa/5b7662b04b69f3a34b8867877e4dbf2a37b7f2a5c0bbb5a9eed64efd1ad1/sqlparse-0.4.3.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-30608"],"details":"### Impact\nThe SQL parser contains a regular expression that is vulnerable to [ReDoS](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS) (Regular Expression Denial of Service). The vulnerability may lead to Denial of Service (DoS).\n\n### Patches\nThis issues has been fixed in sqlparse 0.4.4.\n\n### Workarounds\nNone. \n\n### References\nThis issue was discovered and reported by GHSL team member [@erik-krogh (Erik Krogh Kristensen)](https://github.com/erik-krogh).\n- Commit that introduced the vulnerability: e75e35869473832a1eb67772b1adfee2db11b85a\n","fixed_in":["0.4.4"],"id":"GHSA-rrm6-wvj7-cwh2","link":"https://osv.dev/vulnerability/GHSA-rrm6-wvj7-cwh2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-30608","GHSA-rrm6-wvj7-cwh2"],"details":"sqlparse is a non-validating SQL parser module for Python. In affected versions the SQL parser contains a regular expression that is vulnerable to ReDoS (Regular Expression Denial of Service). This issue was introduced by commit `e75e358`. The vulnerability may lead to Denial of Service (DoS). This issues has been fixed in sqlparse 0.4.4 by commit `c457abd5f`. Users are advised to upgrade. There are no known workarounds for this issue.\n","fixed_in":["0.4.4"],"id":"PYSEC-2023-87","link":"https://osv.dev/vulnerability/PYSEC-2023-87","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4340"],"details":"### Summary\nPassing a heavily nested list to sqlparse.parse() leads to a Denial of Service due to RecursionError.\n\n### Details + PoC\nRunning the following code will raise Maximum recursion limit exceeded exception:\n```py\nimport sqlparse\nsqlparse.parse('[' * 10000 + ']' * 10000)\n```\nWe expect a traceback of RecursionError:\n```py\nTraceback (most recent call last):\n  File \"trigger_sqlparse_nested_list.py\", line 3, in <module>\n    sqlparse.parse('[' * 10000 + ']' * 10000)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/__init__.py\", line 30, in parse\n    return tuple(parsestream(sql, encoding))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/filter_stack.py\", line 36, in run\n    stmt = grouping.group(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 428, in group\n    func(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 53, in group_brackets\n    _group_matching(tlist, sql.SquareBrackets)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 48, in _group_matching\n    tlist.group_tokens(cls, open_idx, close_idx)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 328, in group_tokens\n    grp = grp_cls(subtokens)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 161, in __init__\n    super().__init__(None, str(self))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in __str__\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in <genexpr>\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  [Previous line repeated 983 more times]\nRecursionError: maximum recursion depth exceeded\n```\n\n### Fix suggestion\nThe [flatten()](https://github.com/andialbrecht/sqlparse/blob/master/sqlparse/sql.py#L207) function of TokenList class should limit the recursion to a maximal depth:\n```py\nfrom sqlparse.exceptions import SQLParseError\n\nMAX_DEPTH = 100\n\n    def flatten(self, depth=1):\n        \"\"\"Generator yielding ungrouped tokens.\n\n        This method is recursively called for all child tokens.\n        \"\"\"\n    if depth >= MAX_DEPTH:\n        raise SQLParseError('Maximal depth reached')\n        for token in self.tokens:\n            if token.is_group:\n                yield from token.flatten(depth + 1)\n            else:\n                yield token\n```\n\n### Impact\nDenial of Service (the impact depends on the use).\nAnyone parsing a user input with sqlparse.parse() is affected.\n","fixed_in":["0.5.0"],"id":"GHSA-2m57-hf25-phgg","link":"https://osv.dev/vulnerability/GHSA-2m57-hf25-phgg","source":"osv","summary":null,"withdrawn":null}]},"0.4.4":{"info":{"author":"","author_email":"Andi Albrecht <albrecht.andi@gmail.com>","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Intended Audience :: Developers","License :: OSI Approved :: BSD License","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Database","Topic :: Software Development"],"description_content_type":"text/x-rst","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"sqlparse","package_url":"https://pypi.org/project/sqlparse/","platform":null,"project_url":"https://pypi.org/project/sqlparse/","project_urls":{"Documentation":"https://sqlparse.readthedocs.io/","Home":"https://github.com/andialbrecht/sqlparse","Release Notes":"https://sqlparse.readthedocs.io/en/latest/changes/","Source":"https://github.com/andialbrecht/sqlparse","Tracker":"https://github.com/andialbrecht/sqlparse/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/sqlparse/0.4.4/","requires_dist":["flake8 ; extra == \"dev\"","build ; extra == \"dev\"","sphinx ; extra == \"doc\"","pytest ; extra == \"test\"","pytest-cov ; extra == \"test\""],"requires_python":">=3.5","summary":"A non-validating SQL parser.","version":"0.4.4","yanked":false,"yanked_reason":null},"last_serial":24141613,"urls":[{"comment_text":"","digests":{"blake2b_256":"985a66d7c9305baa9f11857f247d4ba761402cea75db6058ff850ed7128957b7","md5":"1c30ac6faaef1d750454841a54d9d9a9","sha256":"5430a4fe2ac7d0f93e66f1efc6e1338a41884b7ddf2a350cedd20ccc4d9d28f3"},"downloads":-1,"filename":"sqlparse-0.4.4-py3-none-any.whl","has_sig":false,"md5_digest":"1c30ac6faaef1d750454841a54d9d9a9","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.5","size":41183,"upload_time":"2023-04-18T08:30:36","upload_time_iso_8601":"2023-04-18T08:30:36.960446Z","url":"https://files.pythonhosted.org/packages/98/5a/66d7c9305baa9f11857f247d4ba761402cea75db6058ff850ed7128957b7/sqlparse-0.4.4-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"651610f170ec641ed852611b6c9441b23d10b5702ab5288371feab3d36de2574","md5":"67798c7a0dae90f263d20e9ecf62c8cd","sha256":"d446183e84b8349fa3061f0fe7f06ca94ba65b426946ffebe6e3e8295332420c"},"downloads":-1,"filename":"sqlparse-0.4.4.tar.gz","has_sig":false,"md5_digest":"67798c7a0dae90f263d20e9ecf62c8cd","packagetype":"sdist","python_version":"source","requires_python":">=3.5","size":72383,"upload_time":"2023-04-18T08:30:41","upload_time_iso_8601":"2023-04-18T08:30:41.994541Z","url":"https://files.pythonhosted.org/packages/65/16/10f170ec641ed852611b6c9441b23d10b5702ab5288371feab3d36de2574/sqlparse-0.4.4.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4340"],"details":"### Summary\nPassing a heavily nested list to sqlparse.parse() leads to a Denial of Service due to RecursionError.\n\n### Details + PoC\nRunning the following code will raise Maximum recursion limit exceeded exception:\n```py\nimport sqlparse\nsqlparse.parse('[' * 10000 + ']' * 10000)\n```\nWe expect a traceback of RecursionError:\n```py\nTraceback (most recent call last):\n  File \"trigger_sqlparse_nested_list.py\", line 3, in <module>\n    sqlparse.parse('[' * 10000 + ']' * 10000)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/__init__.py\", line 30, in parse\n    return tuple(parsestream(sql, encoding))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/filter_stack.py\", line 36, in run\n    stmt = grouping.group(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 428, in group\n    func(stmt)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 53, in group_brackets\n    _group_matching(tlist, sql.SquareBrackets)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py\", line 48, in _group_matching\n    tlist.group_tokens(cls, open_idx, close_idx)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 328, in group_tokens\n    grp = grp_cls(subtokens)\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 161, in __init__\n    super().__init__(None, str(self))\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in __str__\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 165, in <genexpr>\n    return ''.join(token.value for token in self.flatten())\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  File \"/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py\", line 214, in flatten\n    yield from token.flatten()\n  [Previous line repeated 983 more times]\nRecursionError: maximum recursion depth exceeded\n```\n\n### Fix suggestion\nThe [flatten()](https://github.com/andialbrecht/sqlparse/blob/master/sqlparse/sql.py#L207) function of TokenList class should limit the recursion to a maximal depth:\n```py\nfrom sqlparse.exceptions import SQLParseError\n\nMAX_DEPTH = 100\n\n    def flatten(self, depth=1):\n        \"\"\"Generator yielding ungrouped tokens.\n\n        This method is recursively called for all child tokens.\n        \"\"\"\n    if depth >= MAX_DEPTH:\n        raise SQLParseError('Maximal depth reached')\n        for token in self.tokens:\n            if token.is_group:\n                yield from token.flatten(depth + 1)\n            else:\n                yield token\n```\n\n### Impact\nDenial of Service (the impact depends on the use).\nAnyone parsing a user input with sqlparse.parse() is affected.\n","fixed_in":["0.5.0"],"id":"GHSA-2m57-hf25-phgg","link":"https://osv.dev/vulnerability/GHSA-2m57-hf25-phgg","source":"osv","summary":null,"withdrawn":null}]},"0.5.0":{"info":{"author":null,"author_email":"Andi Albrecht <albrecht.andi@gmail.com>","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Intended Audience :: Developers","License :: OSI Approved :: BSD License","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Database","Topic :: Software Development"],"description_content_type":"text/x-rst","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":null,"license":null,"maintainer":null,"maintainer_email":null,"name":"sqlparse","package_url":"https://pypi.org/project/sqlparse/","platform":null,"project_url":"https://pypi.org/project/sqlparse/","project_urls":{"Documentation":"https://sqlparse.readthedocs.io/","Home":"https://github.com/andialbrecht/sqlparse","Release Notes":"https://sqlparse.readthedocs.io/en/latest/changes/","Source":"https://github.com/andialbrecht/sqlparse","Tracker":"https://github.com/andialbrecht/sqlparse/issues"},"provides_extra":["dev","doc"],"release_url":"https://pypi.org/project/sqlparse/0.5.0/","requires_dist":["build; extra == \"dev\"","hatch; extra == \"dev\"","sphinx; extra == \"doc\""],"requires_python":">=3.8","summary":"A non-validating SQL parser.","version":"0.5.0","yanked":false,"yanked_reason":null},"last_serial":24141613,"urls":[{"comment_text":null,"digests":{"blake2b_256":"435da0fdd88fd486b39ae1fd1a75ff75b4e29a0df96c0304d462fd407b82efe0","md5":"f22879a0ed4eb42d721e3c2c57c6a29c","sha256":"c204494cd97479d0e39f28c93d46c0b2d5959c7b9ab904762ea6c7af211c8663"},"downloads":-1,"filename":"sqlparse-0.5.0-py3-none-any.whl","has_sig":false,"md5_digest":"f22879a0ed4eb42d721e3c2c57c6a29c","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":43971,"upload_time":"2024-04-13T12:37:11","upload_time_iso_8601":"2024-04-13T12:37:11.177304Z","url":"https://files.pythonhosted.org/packages/43/5d/a0fdd88fd486b39ae1fd1a75ff75b4e29a0df96c0304d462fd407b82efe0/sqlparse-0.5.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":null,"digests":{"blake2b_256":"50265da251cd090ccd580f5cfaa7d36cdd8b2471e49fffce60ed520afc27f4bc","md5":"cc677bad6c6724a8b0b4aa178cbdacb7","sha256":"714d0a4932c059d16189f58ef5411ec2287a4360f17cdd0edd2d09d4c5087c93"},"downloads":-1,"filename":"sqlparse-0.5.0.tar.gz","has_sig":false,"md5_digest":"cc677bad6c6724a8b0b4aa178cbdacb7","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":83475,"upload_time":"2024-04-13T12:37:09","upload_time_iso_8601":"2024-04-13T12:37:09.316071Z","url":"https://files.pythonhosted.org/packages/50/26/5da251cd090ccd580f5cfaa7d36cdd8b2471e49fffce60ed520afc27f4bc/sqlparse-0.5.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"0.5.1":{"info":{"author":null,"author_email":"Andi Albrecht <albrecht.andi@gmail.com>","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Intended Audience :: Developers","License :: OSI Approved :: BSD License","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Database","Topic :: Software Development"],"description_content_type":"text/x-rst","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":null,"license":null,"maintainer":null,"maintainer_email":null,"name":"sqlparse","package_url":"https://pypi.org/project/sqlparse/","platform":null,"project_url":"https://pypi.org/project/sqlparse/","project_urls":{"Documentation":"https://sqlparse.readthedocs.io/","Home":"https://github.com/andialbrecht/sqlparse","Release Notes":"https://sqlparse.readthedocs.io/en/latest/changes.html","Source":"https://github.com/andialbrecht/sqlparse","Tracker":"https://github.com/andialbrecht/sqlparse/issues"},"provides_extra":["dev","doc"],"release_url":"https://pypi.org/project/sqlparse/0.5.1/","requires_dist":["build; extra == \"dev\"","hatch; extra == \"dev\"","sphinx; extra == \"doc\""],"requires_python":">=3.8","summary":"A non-validating SQL parser.","version":"0.5.1","yanked":false,"yanked_reason":null},"last_serial":24141613,"urls":[{"comment_text":null,"digests":{"blake2b_256":"5da5b2860373aa8de1e626b2bdfdd6df4355f0565b47e51f7d0c54fe70faf8fe","md5":"f902026f43bc7f4ebfca936d3b8d2a64","sha256":"773dcbf9a5ab44a090f3441e2180efe2560220203dc2f8c0b0fa141e18b505e4"},"downloads":-1,"filename":"sqlparse-0.5.1-py3-none-any.whl","has_sig":false,"md5_digest":"f902026f43bc7f4ebfca936d3b8d2a64","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":44156,"upload_time":"2024-07-15T19:30:25","upload_time_iso_8601":"2024-07-15T19:30:25.033682Z","url":"https://files.pythonhosted.org/packages/5d/a5/b2860373aa8de1e626b2bdfdd6df4355f0565b47e51f7d0c54fe70faf8fe/sqlparse-0.5.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":null,"digests":{"blake2b_256":"7382dfa23ec2cbed08a801deab02fe7c904bfb00765256b155941d789a338c68","md5":"969a64f03d7da1144fc74aad390f9db4","sha256":"bb6b4df465655ef332548e24f08e205afc81b9ab86cb1c45657a7ff173a3a00e"},"downloads":-1,"filename":"sqlparse-0.5.1.tar.gz","has_sig":false,"md5_digest":"969a64f03d7da1144fc74aad390f9db4","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":84502,"upload_time":"2024-07-15T19:30:27","upload_time_iso_8601":"2024-07-15T19:30:27.085098Z","url":"https://files.pythonhosted.org/packages/73/82/dfa23ec2cbed08a801deab02fe7c904bfb00765256b155941d789a338c68/sqlparse-0.5.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}}