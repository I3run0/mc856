{"1.1.10":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.10/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.10","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"65360f8cc6220d3eb8a73a4525456f3276567629c1fe6619047caa9a3a8985e1","md5":"f69d37645d6605a704a371ea8018c12d","sha256":"4233744a26d43228b753e095f985a8862a172f15027fa3797792f8ab0e7c8b8b"},"downloads":-1,"filename":"lollms-1.1.10-py3-none-any.whl","has_sig":false,"md5_digest":"f69d37645d6605a704a371ea8018c12d","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":17475341,"upload_time":"2023-06-04T21:38:19","upload_time_iso_8601":"2023-06-04T21:38:19.107042Z","url":"https://files.pythonhosted.org/packages/65/36/0f8cc6220d3eb8a73a4525456f3276567629c1fe6619047caa9a3a8985e1/lollms-1.1.10-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"b21d9fd09d1b31570408ad4427f1313bdd21e049dd862c9149634bfc3e30b3b6","md5":"41cbbe720cfe1ed3852d08eb983fa093","sha256":"da7f0bac37f1e75e5369c72e1531ef4e9a2e85ecc21015c7345f2641842fffe1"},"downloads":-1,"filename":"lollms-1.1.10.tar.gz","has_sig":false,"md5_digest":"41cbbe720cfe1ed3852d08eb983fa093","packagetype":"sdist","python_version":"source","requires_python":null,"size":17355485,"upload_time":"2023-06-04T21:39:06","upload_time_iso_8601":"2023-06-04T21:39:06.852029Z","url":"https://files.pythonhosted.org/packages/b2/1d/9fd09d1b31570408ad4427f1313bdd21e049dd862c9149634bfc3e30b3b6/lollms-1.1.10.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.11":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.11/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.11","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"f1179c18a9d28127c69caf7e3d6c683e8dacbe2ace94b9bf6e4d6e87f070e761","md5":"0af98424b88634595d3ed8cf98e03b20","sha256":"da789f55be13691e7a1c07059a67d5e33fb0aa4bde75287811d84411d660b74e"},"downloads":-1,"filename":"lollms-1.1.11-py3-none-any.whl","has_sig":false,"md5_digest":"0af98424b88634595d3ed8cf98e03b20","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":17475362,"upload_time":"2023-06-04T23:19:48","upload_time_iso_8601":"2023-06-04T23:19:48.914505Z","url":"https://files.pythonhosted.org/packages/f1/17/9c18a9d28127c69caf7e3d6c683e8dacbe2ace94b9bf6e4d6e87f070e761/lollms-1.1.11-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"95fe6e2c051cb7dd2294b498887d8fd1c8e70005eda61ed98c1c7b88bde8f739","md5":"a1e3e23e0252606d6c0827e0a54d250f","sha256":"82ca38cd514157903ba5ae751b1b275b0196bdd441a0e3f0fda155ebd671617e"},"downloads":-1,"filename":"lollms-1.1.11.tar.gz","has_sig":false,"md5_digest":"a1e3e23e0252606d6c0827e0a54d250f","packagetype":"sdist","python_version":"source","requires_python":null,"size":17355476,"upload_time":"2023-06-04T23:20:25","upload_time_iso_8601":"2023-06-04T23:20:25.164509Z","url":"https://files.pythonhosted.org/packages/95/fe/6e2c051cb7dd2294b498887d8fd1c8e70005eda61ed98c1c7b88bde8f739/lollms-1.1.11.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.12":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.12/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.12","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"25ec7c3727637d14219be40e5243623e2debc6f757347108198d008dc36ac674","md5":"b748dcb07308840dea1d537877ebe97e","sha256":"948f8a40f7c9a5561e5cbf4db5b5164b8493857ed67c63ff1721918420e05d25"},"downloads":-1,"filename":"lollms-1.1.12-py3-none-any.whl","has_sig":false,"md5_digest":"b748dcb07308840dea1d537877ebe97e","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":17475699,"upload_time":"2023-06-05T16:22:19","upload_time_iso_8601":"2023-06-05T16:22:19.007170Z","url":"https://files.pythonhosted.org/packages/25/ec/7c3727637d14219be40e5243623e2debc6f757347108198d008dc36ac674/lollms-1.1.12-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"661afda735b744aefe0230c40ca6508fc83a29935f0d9e2e1c33e1f80794a1ea","md5":"69c07685df3dd91c985545e54c41df1d","sha256":"93011e1b61425d4d9b5b10def724a20be759665937d2f3f029a9a091ca6d79f6"},"downloads":-1,"filename":"lollms-1.1.12.tar.gz","has_sig":false,"md5_digest":"69c07685df3dd91c985545e54c41df1d","packagetype":"sdist","python_version":"source","requires_python":null,"size":17355984,"upload_time":"2023-06-05T16:22:53","upload_time_iso_8601":"2023-06-05T16:22:53.109378Z","url":"https://files.pythonhosted.org/packages/66/1a/fda735b744aefe0230c40ca6508fc83a29935f0d9e2e1c33e1f80794a1ea/lollms-1.1.12.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.13":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.13/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.13","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"0d59eaa71c434bbf7903d87e081b1b4a0b1982a59f03ea16a29a12fa5ccb91f3","md5":"6af4ef5edda77bb8efe48f8301d12058","sha256":"007292b76ee17d187aff8ce441e4588bbd4b8c6c6ced30197fbe4eb24e44f49f"},"downloads":-1,"filename":"lollms-1.1.13-py3-none-any.whl","has_sig":false,"md5_digest":"6af4ef5edda77bb8efe48f8301d12058","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":17477069,"upload_time":"2023-06-05T16:28:44","upload_time_iso_8601":"2023-06-05T16:28:44.688680Z","url":"https://files.pythonhosted.org/packages/0d/59/eaa71c434bbf7903d87e081b1b4a0b1982a59f03ea16a29a12fa5ccb91f3/lollms-1.1.13-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"ade52d4eab73bf27fdb73d412aaeb56181824e3e0bc41e2b4e17e6139bf353d7","md5":"ed36c5bf4e9d130fbea56d004239ac5e","sha256":"fd3477e2e6e918b2020cc5adedec00c5d5ae6bc585aa551199422731e51489cc"},"downloads":-1,"filename":"lollms-1.1.13.tar.gz","has_sig":false,"md5_digest":"ed36c5bf4e9d130fbea56d004239ac5e","packagetype":"sdist","python_version":"source","requires_python":null,"size":17356347,"upload_time":"2023-06-05T16:28:49","upload_time_iso_8601":"2023-06-05T16:28:49.589953Z","url":"https://files.pythonhosted.org/packages/ad/e5/2d4eab73bf27fdb73d412aaeb56181824e3e0bc41e2b4e17e6139bf353d7/lollms-1.1.13.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.14":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.14/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.14","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"eaa849c09778ef2cc66183c5a24970dc9a80176b5e8c49b083ad35bf4ad57fd0","md5":"277b1dc491dbe36d5ae567fb420ba344","sha256":"393195fe98a40911e73e37a0b38dc61e8e5536c42b2dce6e73db57ef8fc560aa"},"downloads":-1,"filename":"lollms-1.1.14-py3-none-any.whl","has_sig":false,"md5_digest":"277b1dc491dbe36d5ae567fb420ba344","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":17477899,"upload_time":"2023-06-05T17:52:04","upload_time_iso_8601":"2023-06-05T17:52:04.139824Z","url":"https://files.pythonhosted.org/packages/ea/a8/49c09778ef2cc66183c5a24970dc9a80176b5e8c49b083ad35bf4ad57fd0/lollms-1.1.14-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"999701739e5b8e10ae6a516ff4d7bc228a8aaa383ac00f93ae8418552e0798f2","md5":"41de5bfd37d28a5f85cc355815301127","sha256":"7d7cae667e158bd2df730a4ea9d8fbcaa4764deeb73397b6af7f120fb47677e1"},"downloads":-1,"filename":"lollms-1.1.14.tar.gz","has_sig":false,"md5_digest":"41de5bfd37d28a5f85cc355815301127","packagetype":"sdist","python_version":"source","requires_python":null,"size":17357601,"upload_time":"2023-06-05T17:52:45","upload_time_iso_8601":"2023-06-05T17:52:45.753310Z","url":"https://files.pythonhosted.org/packages/99/97/01739e5b8e10ae6a516ff4d7bc228a8aaa383ac00f93ae8418552e0798f2/lollms-1.1.14.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.15":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.15/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.15","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"a22893c171856db4500c6a6acbaf6b6414338451b7143fce64e295698668d852","md5":"3f04024da74d535e99ff28415fb5669f","sha256":"1e249ae8440e96d1dde4f2b2663528afd62a6312d2efde3cbc6461cbf71eba2d"},"downloads":-1,"filename":"lollms-1.1.15-py3-none-any.whl","has_sig":false,"md5_digest":"3f04024da74d535e99ff28415fb5669f","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":17477913,"upload_time":"2023-06-05T18:01:06","upload_time_iso_8601":"2023-06-05T18:01:06.472460Z","url":"https://files.pythonhosted.org/packages/a2/28/93c171856db4500c6a6acbaf6b6414338451b7143fce64e295698668d852/lollms-1.1.15-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"39a02d88c0261c8fbe1cf9231072d0ce1c9eb0008a86c98ad660a08b92e75549","md5":"84996c3fb4ad3b2478fc4b42d0360c19","sha256":"9a516739740e9f4f88d970a9db543c17a7d64d928eb25b11215e7e544cd5e009"},"downloads":-1,"filename":"lollms-1.1.15.tar.gz","has_sig":false,"md5_digest":"84996c3fb4ad3b2478fc4b42d0360c19","packagetype":"sdist","python_version":"source","requires_python":null,"size":17357354,"upload_time":"2023-06-05T18:01:15","upload_time_iso_8601":"2023-06-05T18:01:15.686096Z","url":"https://files.pythonhosted.org/packages/39/a0/2d88c0261c8fbe1cf9231072d0ce1c9eb0008a86c98ad660a08b92e75549/lollms-1.1.15.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.16":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.16/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.16","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"3bcd7cee1e90353bbec0193acf469cef66096117ea4e4aa98dccbac54af6a6dd","md5":"596719c49773035e49f676689e4fed93","sha256":"dad47c7c328519687ac9b712598a79aed9a13d8c173042a76d62f039e3ff5c98"},"downloads":-1,"filename":"lollms-1.1.16-py3-none-any.whl","has_sig":false,"md5_digest":"596719c49773035e49f676689e4fed93","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":17477888,"upload_time":"2023-06-05T18:59:36","upload_time_iso_8601":"2023-06-05T18:59:36.114425Z","url":"https://files.pythonhosted.org/packages/3b/cd/7cee1e90353bbec0193acf469cef66096117ea4e4aa98dccbac54af6a6dd/lollms-1.1.16-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"6c8e280f1a8843ae14a64586943d7569e87d94026fa5b5395282ce003a3470ce","md5":"f3723ea7ec9495ee7e74548d8c27420a","sha256":"b4d43597588799b8a2671dfa6d2fc9fdb3afa7b9b24d08fdb19e01cf7081ba36"},"downloads":-1,"filename":"lollms-1.1.16.tar.gz","has_sig":false,"md5_digest":"f3723ea7ec9495ee7e74548d8c27420a","packagetype":"sdist","python_version":"source","requires_python":null,"size":17357928,"upload_time":"2023-06-05T18:59:48","upload_time_iso_8601":"2023-06-05T18:59:48.956410Z","url":"https://files.pythonhosted.org/packages/6c/8e/280f1a8843ae14a64586943d7569e87d94026fa5b5395282ce003a3470ce/lollms-1.1.16.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.17":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.17/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.17","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"34d6d2b8ce7a1bb8f162245a4ae83ed6ee0eec585b6e202f5e2ad1e1ea9b4898","md5":"95c0e1cfed87deb5214f98808220c70a","sha256":"109e1fe50e66bf31f6ec79804e0e5e7a199b3c3009124c7106923ede13c239fe"},"downloads":-1,"filename":"lollms-1.1.17-py3-none-any.whl","has_sig":false,"md5_digest":"95c0e1cfed87deb5214f98808220c70a","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":17477962,"upload_time":"2023-06-05T19:16:10","upload_time_iso_8601":"2023-06-05T19:16:10.140016Z","url":"https://files.pythonhosted.org/packages/34/d6/d2b8ce7a1bb8f162245a4ae83ed6ee0eec585b6e202f5e2ad1e1ea9b4898/lollms-1.1.17-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f296f71d109f86ebc27b84422c9834252c89df10e9d03a04bfc9742ee50916aa","md5":"cf9267b6138b0bda0f05246888b726d3","sha256":"8523d7617f123593a47731c34520a5edeb97cee7842162d450008c6ac9e14061"},"downloads":-1,"filename":"lollms-1.1.17.tar.gz","has_sig":false,"md5_digest":"cf9267b6138b0bda0f05246888b726d3","packagetype":"sdist","python_version":"source","requires_python":null,"size":17357664,"upload_time":"2023-06-05T19:16:14","upload_time_iso_8601":"2023-06-05T19:16:14.458871Z","url":"https://files.pythonhosted.org/packages/f2/96/f71d109f86ebc27b84422c9834252c89df10e9d03a04bfc9742ee50916aa/lollms-1.1.17.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.18":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.18/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.18","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"d43dd421d8e63b79fdf23a49f15d2f57a7e440d581e33a0e6feee4c652d392a0","md5":"77fad219e5bd0ab12bf87630ad4e667b","sha256":"f0573d130dd2f3349b6e5a793b2bc8fd2eefa670f48fce6f2b26dcb05a4096ec"},"downloads":-1,"filename":"lollms-1.1.18-py3-none-any.whl","has_sig":false,"md5_digest":"77fad219e5bd0ab12bf87630ad4e667b","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":17478566,"upload_time":"2023-06-05T21:00:32","upload_time_iso_8601":"2023-06-05T21:00:32.834002Z","url":"https://files.pythonhosted.org/packages/d4/3d/d421d8e63b79fdf23a49f15d2f57a7e440d581e33a0e6feee4c652d392a0/lollms-1.1.18-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"727d37bc93ca7403ac08373991499d9f12f8cd0f288e8ebde809d1ca0f1f71e1","md5":"d5fd40ab26fbb6d396c4d3a770ade0cc","sha256":"e0abbaebced47c3c5fc91d19c8cbf122ef2720e4135a161ca14130769bba1928"},"downloads":-1,"filename":"lollms-1.1.18.tar.gz","has_sig":false,"md5_digest":"d5fd40ab26fbb6d396c4d3a770ade0cc","packagetype":"sdist","python_version":"source","requires_python":null,"size":17359268,"upload_time":"2023-06-05T21:00:36","upload_time_iso_8601":"2023-06-05T21:00:36.943454Z","url":"https://files.pythonhosted.org/packages/72/7d/37bc93ca7403ac08373991499d9f12f8cd0f288e8ebde809d1ca0f1f71e1/lollms-1.1.18.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.19":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.19/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.19","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"0362819f8b149b3ed8f6449809aa59172af88e047f5fd62d88cb7a9435090460","md5":"94575675dd9024a5c172f6b940993df8","sha256":"2585a6bd5e0db9c05de0cbdf61ded94f12c35852ff606a14035bada0b80193db"},"downloads":-1,"filename":"lollms-1.1.19-py3-none-any.whl","has_sig":false,"md5_digest":"94575675dd9024a5c172f6b940993df8","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":17478604,"upload_time":"2023-06-05T21:06:45","upload_time_iso_8601":"2023-06-05T21:06:45.448990Z","url":"https://files.pythonhosted.org/packages/03/62/819f8b149b3ed8f6449809aa59172af88e047f5fd62d88cb7a9435090460/lollms-1.1.19-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"40f2368ec59e638ba2dccb444b8c88a5d095042f4bed91fa7bf18a6b6d3b51c6","md5":"662af2cb534e0746859cf8832cb3053d","sha256":"919676ebb7c55ee0a7bcc879d598aef23e44c66474dc2d48aa600f7c2c72d751"},"downloads":-1,"filename":"lollms-1.1.19.tar.gz","has_sig":false,"md5_digest":"662af2cb534e0746859cf8832cb3053d","packagetype":"sdist","python_version":"source","requires_python":null,"size":17359274,"upload_time":"2023-06-05T21:06:54","upload_time_iso_8601":"2023-06-05T21:06:54.709788Z","url":"https://files.pythonhosted.org/packages/40/f2/368ec59e638ba2dccb444b8c88a5d095042f4bed91fa7bf18a6b6d3b51c6/lollms-1.1.19.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.20":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.20/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.20","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"c85028e27e87844cf901fa7177afacce949825ba58147af451106b62710f9c73","md5":"8697527f5595d4659125b851dbbe9216","sha256":"1a4ba02033f4fa6849afb7fc31151cc9c9f68ac0cc06b801525df35ca93df740"},"downloads":-1,"filename":"lollms-1.1.20-py3-none-any.whl","has_sig":false,"md5_digest":"8697527f5595d4659125b851dbbe9216","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":17478186,"upload_time":"2023-06-05T21:48:33","upload_time_iso_8601":"2023-06-05T21:48:33.950559Z","url":"https://files.pythonhosted.org/packages/c8/50/28e27e87844cf901fa7177afacce949825ba58147af451106b62710f9c73/lollms-1.1.20-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"453e0c76b96d6cf38f0a0e6b92a13caa815e1fc8f94a4d54fa9f820232f474f4","md5":"55e08590677bda186471ff41eded948e","sha256":"27b51987e70a64619c10037d3465e5053d740e672630df649d034d9837beeb0c"},"downloads":-1,"filename":"lollms-1.1.20.tar.gz","has_sig":false,"md5_digest":"55e08590677bda186471ff41eded948e","packagetype":"sdist","python_version":"source","requires_python":null,"size":17358888,"upload_time":"2023-06-05T21:48:38","upload_time_iso_8601":"2023-06-05T21:48:38.905633Z","url":"https://files.pythonhosted.org/packages/45/3e/0c76b96d6cf38f0a0e6b92a13caa815e1fc8f94a4d54fa9f820232f474f4/lollms-1.1.20.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.21":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.21/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.21","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"2a7438f40160bdef29c8cad2f5c185437c01f7c2507d9f877860f2313da4c876","md5":"6d8e6e709f9be62ed6841f378c447e6a","sha256":"e63a92c74252cc7eabda5b2d2711e11c8b3387699cf15f76cb4d986f127a8b9d"},"downloads":-1,"filename":"lollms-1.1.21-py3-none-any.whl","has_sig":false,"md5_digest":"6d8e6e709f9be62ed6841f378c447e6a","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":17505329,"upload_time":"2023-06-06T15:53:42","upload_time_iso_8601":"2023-06-06T15:53:42.492238Z","url":"https://files.pythonhosted.org/packages/2a/74/38f40160bdef29c8cad2f5c185437c01f7c2507d9f877860f2313da4c876/lollms-1.1.21-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"76eb3c72fc4298d4e433bb195561bf9be5dcc1994e9fb736e199bf55377158f5","md5":"260b78f720bee9dfe3301615de177f76","sha256":"985e5d0b448f17bec46bcd1f69345d58127aa85163046127fc0da6b45570eb68"},"downloads":-1,"filename":"lollms-1.1.21.tar.gz","has_sig":false,"md5_digest":"260b78f720bee9dfe3301615de177f76","packagetype":"sdist","python_version":"source","requires_python":null,"size":17384940,"upload_time":"2023-06-06T15:53:46","upload_time_iso_8601":"2023-06-06T15:53:46.978986Z","url":"https://files.pythonhosted.org/packages/76/eb/3c72fc4298d4e433bb195561bf9be5dcc1994e9fb736e199bf55377158f5/lollms-1.1.21.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.22":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.22/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.22","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"3ee8f1524f02f99f351da843d987cb435bc7b2cfb98875ee392e6b822f33d9fc","md5":"08a14d6d6a9d4deed33fa9ee169d7245","sha256":"d4d4c61c1433ab379d6846070a4126474d52e95f6735a5062e2cf9a1f930142e"},"downloads":-1,"filename":"lollms-1.1.22-py3-none-any.whl","has_sig":false,"md5_digest":"08a14d6d6a9d4deed33fa9ee169d7245","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":17505417,"upload_time":"2023-06-06T18:54:05","upload_time_iso_8601":"2023-06-06T18:54:05.337111Z","url":"https://files.pythonhosted.org/packages/3e/e8/f1524f02f99f351da843d987cb435bc7b2cfb98875ee392e6b822f33d9fc/lollms-1.1.22-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"94f3575419014043b3e3d6fd5a40e376437022a47269b70523af3a7e81975cee","md5":"b3a87ac62370d2512fab1f957f5d9a9c","sha256":"fdb3c48bdfd4bba741148fd817275ab09426efd59bc206a860ceaf8ae8528432"},"downloads":-1,"filename":"lollms-1.1.22.tar.gz","has_sig":false,"md5_digest":"b3a87ac62370d2512fab1f957f5d9a9c","packagetype":"sdist","python_version":"source","requires_python":null,"size":17385731,"upload_time":"2023-06-06T18:54:12","upload_time_iso_8601":"2023-06-06T18:54:12.627782Z","url":"https://files.pythonhosted.org/packages/94/f3/575419014043b3e3d6fd5a40e376437022a47269b70523af3a7e81975cee/lollms-1.1.22.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.25":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.25/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.25","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"cdb7dd0fbe6ef68271e72f570bbcc4a159b4a41608652d0ac5c34a04e6284b3e","md5":"46080ebda0c1d7262596fa4add054fcd","sha256":"37993a8e937bcf8e077b68ce03b411ab24344aab9eb4b22b771fdb6715db411d"},"downloads":-1,"filename":"lollms-1.1.25-py3-none-any.whl","has_sig":false,"md5_digest":"46080ebda0c1d7262596fa4add054fcd","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":17714889,"upload_time":"2023-06-07T17:45:18","upload_time_iso_8601":"2023-06-07T17:45:18.966869Z","url":"https://files.pythonhosted.org/packages/cd/b7/dd0fbe6ef68271e72f570bbcc4a159b4a41608652d0ac5c34a04e6284b3e/lollms-1.1.25-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"ef770f78f6988ab999d8978f1c79d156cda6160967fcae4c39b4b1dd44fafbee","md5":"460255a6695758fb4f6fe4f6536a8864","sha256":"3492bcb83099e736f297ebf14da971c971f6a4f39482ffa676f505e68635b56a"},"downloads":-1,"filename":"lollms-1.1.25.tar.gz","has_sig":false,"md5_digest":"460255a6695758fb4f6fe4f6536a8864","packagetype":"sdist","python_version":"source","requires_python":null,"size":17595585,"upload_time":"2023-06-07T17:45:24","upload_time_iso_8601":"2023-06-07T17:45:24.401408Z","url":"https://files.pythonhosted.org/packages/ef/77/0f78f6988ab999d8978f1c79d156cda6160967fcae4c39b4b1dd44fafbee/lollms-1.1.25.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.26":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.26/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.26","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"07b27e9b4e22f0466b2aac1bf9557db0fc0340ad4ed93990cdcf176d7fca8e4f","md5":"6de3e6da6d1a26a9a154b8467e2f4e69","sha256":"f92573249089f5d8057b521dbd27e4e8b4eedfb111cf324bdd2546ed7ff2872f"},"downloads":-1,"filename":"lollms-1.1.26-py3-none-any.whl","has_sig":false,"md5_digest":"6de3e6da6d1a26a9a154b8467e2f4e69","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":17715388,"upload_time":"2023-06-07T22:25:28","upload_time_iso_8601":"2023-06-07T22:25:28.683302Z","url":"https://files.pythonhosted.org/packages/07/b2/7e9b4e22f0466b2aac1bf9557db0fc0340ad4ed93990cdcf176d7fca8e4f/lollms-1.1.26-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"4c88f49e40b7a3abe1b79aa4fd39a85bf62b5aa076f48ce8d733e5b01e62a5fc","md5":"e6c7ca0c34dfe1c8e4009c852bf3be95","sha256":"25d3cafcc0765348059d0709cebce0d5c1fbd7cde4e3bb687a70541d2aa79d27"},"downloads":-1,"filename":"lollms-1.1.26.tar.gz","has_sig":false,"md5_digest":"e6c7ca0c34dfe1c8e4009c852bf3be95","packagetype":"sdist","python_version":"source","requires_python":null,"size":17595775,"upload_time":"2023-06-07T22:25:42","upload_time_iso_8601":"2023-06-07T22:25:42.547869Z","url":"https://files.pythonhosted.org/packages/4c/88/f49e40b7a3abe1b79aa4fd39a85bf62b5aa076f48ce8d733e5b01e62a5fc/lollms-1.1.26.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.27":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.27/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.27","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"7c9b190d7f0a81b8270703a91b15790b636b9ef899f157d1a8b483e2ff68c4be","md5":"ddfdde533c9e3c09125edbc91bc29fcb","sha256":"2a852842c2010c8b45f956d34717b19993f75541e95d27fc0fd79c953120300c"},"downloads":-1,"filename":"lollms-1.1.27-py3-none-any.whl","has_sig":false,"md5_digest":"ddfdde533c9e3c09125edbc91bc29fcb","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":17925057,"upload_time":"2023-06-08T20:53:03","upload_time_iso_8601":"2023-06-08T20:53:03.640373Z","url":"https://files.pythonhosted.org/packages/7c/9b/190d7f0a81b8270703a91b15790b636b9ef899f157d1a8b483e2ff68c4be/lollms-1.1.27-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c6935386b858eeadfd1b96c07b9b807381eb5f4cdeee05cf70d527c5ee5561d7","md5":"b6c7c35952832e95fcd223e5c2f1bded","sha256":"27c5d6854b3b9f43da30d16e3d5cf4d5c2652b32554d14b626dd864a151b3123"},"downloads":-1,"filename":"lollms-1.1.27.tar.gz","has_sig":false,"md5_digest":"b6c7c35952832e95fcd223e5c2f1bded","packagetype":"sdist","python_version":"source","requires_python":null,"size":17597508,"upload_time":"2023-06-08T20:53:11","upload_time_iso_8601":"2023-06-08T20:53:11.298124Z","url":"https://files.pythonhosted.org/packages/c6/93/5386b858eeadfd1b96c07b9b807381eb5f4cdeee05cf70d527c5ee5561d7/lollms-1.1.27.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.28":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.28/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.28","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"05c088371a95db79eac6fe36f79ecc0c76996630539fca1d1d6d162c9cd5a2f4","md5":"0a923db75352819aba987bf59e84bab4","sha256":"7e451b958ea8db0fc90972c006fcd9260231b3d13bca5a091422078c17da9957"},"downloads":-1,"filename":"lollms-1.1.28-py3-none-any.whl","has_sig":false,"md5_digest":"0a923db75352819aba987bf59e84bab4","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":18290074,"upload_time":"2023-06-09T22:44:52","upload_time_iso_8601":"2023-06-09T22:44:52.545269Z","url":"https://files.pythonhosted.org/packages/05/c0/88371a95db79eac6fe36f79ecc0c76996630539fca1d1d6d162c9cd5a2f4/lollms-1.1.28-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"b4544dd848c635d10f44b32570630c61baa2ae77aa48fc78405fa47f8a15b597","md5":"abb44dd140f854458f20133bf1e95434","sha256":"8c205600dd5da07867a2778209bde5ef81e8c75ce83153146f45b9a2988da37b"},"downloads":-1,"filename":"lollms-1.1.28.tar.gz","has_sig":false,"md5_digest":"abb44dd140f854458f20133bf1e95434","packagetype":"sdist","python_version":"source","requires_python":null,"size":18170438,"upload_time":"2023-06-09T22:45:03","upload_time_iso_8601":"2023-06-09T22:45:03.215023Z","url":"https://files.pythonhosted.org/packages/b4/54/4dd848c635d10f44b32570630c61baa2ae77aa48fc78405fa47f8a15b597/lollms-1.1.28.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.29":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.29/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.29","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"79829ce46d7618cb54eb49e4706a6b5d748ba75d82063f469491fec8bd64381f","md5":"d579cadfcaa44c2fa740d9ab5e21a2af","sha256":"c9431c85fb10a090b5f37b0a1caacc3f3883bbe399acbdb0cc0612e9182aa33c"},"downloads":-1,"filename":"lollms-1.1.29-py3-none-any.whl","has_sig":false,"md5_digest":"d579cadfcaa44c2fa740d9ab5e21a2af","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":18290079,"upload_time":"2023-06-09T23:34:17","upload_time_iso_8601":"2023-06-09T23:34:17.979612Z","url":"https://files.pythonhosted.org/packages/79/82/9ce46d7618cb54eb49e4706a6b5d748ba75d82063f469491fec8bd64381f/lollms-1.1.29-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"a95c897dc9cfec03c8919487c9971ed797d405f4dce94ec9dcbe71898a5b0c79","md5":"613c4522e7459e083cda6a92dd6fdb6c","sha256":"469d8457babcafbffc630026dadb5afeb288d901f291c570950765d767e7f5a9"},"downloads":-1,"filename":"lollms-1.1.29.tar.gz","has_sig":false,"md5_digest":"613c4522e7459e083cda6a92dd6fdb6c","packagetype":"sdist","python_version":"source","requires_python":null,"size":18170243,"upload_time":"2023-06-09T23:34:24","upload_time_iso_8601":"2023-06-09T23:34:24.539320Z","url":"https://files.pythonhosted.org/packages/a9/5c/897dc9cfec03c8919487c9971ed797d405f4dce94ec9dcbe71898a5b0c79/lollms-1.1.29.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.3":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.3/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.3","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"a92a26024d997e471d59f075ae953f53b8b43dfa977e1a05c47e0c53bae5eee4","md5":"533820a59c1e34163bab7a40826a8ca7","sha256":"5caebbfd3289d9bccfadd96ff38a0cb478f7e23bc5037b818d063e762d5e628d"},"downloads":-1,"filename":"lollms-1.1.3-py3-none-any.whl","has_sig":false,"md5_digest":"533820a59c1e34163bab7a40826a8ca7","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":502471,"upload_time":"2023-06-04T00:29:50","upload_time_iso_8601":"2023-06-04T00:29:50.306536Z","url":"https://files.pythonhosted.org/packages/a9/2a/26024d997e471d59f075ae953f53b8b43dfa977e1a05c47e0c53bae5eee4/lollms-1.1.3-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"92c24bd858e645adb744cff609f9e08619e7f3ab0224cd23832e945077f85893","md5":"ad9d0f9fa5fca46e3b7b48383f21bb59","sha256":"733a85b287ddd9dc8861f1a18bb78bdd1317b1ed97c691a2dbbe515374ea7a5c"},"downloads":-1,"filename":"lollms-1.1.3.tar.gz","has_sig":false,"md5_digest":"ad9d0f9fa5fca46e3b7b48383f21bb59","packagetype":"sdist","python_version":"source","requires_python":null,"size":23732,"upload_time":"2023-06-04T00:29:55","upload_time_iso_8601":"2023-06-04T00:29:55.351665Z","url":"https://files.pythonhosted.org/packages/92/c2/4bd858e645adb744cff609f9e08619e7f3ab0224cd23832e945077f85893/lollms-1.1.3.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.30":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.30/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.30","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"1270ae31ebd5b2aeab9b7ddc909aa1c5662778fdd2185b73a12eab2a27442374","md5":"3365835d5ff4516213081d7ae4a09b6f","sha256":"9ec02f11fc31fd8c72d60fa1d2f149af9a6d2db4432b64999cd88f434a7a1571"},"downloads":-1,"filename":"lollms-1.1.30-py3-none-any.whl","has_sig":false,"md5_digest":"3365835d5ff4516213081d7ae4a09b6f","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":18290226,"upload_time":"2023-06-10T07:19:15","upload_time_iso_8601":"2023-06-10T07:19:15.579443Z","url":"https://files.pythonhosted.org/packages/12/70/ae31ebd5b2aeab9b7ddc909aa1c5662778fdd2185b73a12eab2a27442374/lollms-1.1.30-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"334787dc1cfdb11d5d1c3e7883fe1f984c1c0ab0ec1fce8eab6834ff13eb8fb7","md5":"aa0604d4ab22cdb10ab95a24f804f857","sha256":"dc52b6394e85b22d284b06c22b7fadcef0ee31b9c6363f43ee2a0a49a260e965"},"downloads":-1,"filename":"lollms-1.1.30.tar.gz","has_sig":false,"md5_digest":"aa0604d4ab22cdb10ab95a24f804f857","packagetype":"sdist","python_version":"source","requires_python":null,"size":18170640,"upload_time":"2023-06-10T07:20:40","upload_time_iso_8601":"2023-06-10T07:20:40.283102Z","url":"https://files.pythonhosted.org/packages/33/47/87dc1cfdb11d5d1c3e7883fe1f984c1c0ab0ec1fce8eab6834ff13eb8fb7/lollms-1.1.30.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.31":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.31/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.31","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"c6f8f7c278362f2377d293ea408d763775849eed2e9a8685f9291cbf37e26634","md5":"047388cb0339fde0ccb525def4205cf6","sha256":"1bb5532789887c6f19212e4db3e65e71137bf39593e17a9a7315dacc92577fa1"},"downloads":-1,"filename":"lollms-1.1.31-py3-none-any.whl","has_sig":false,"md5_digest":"047388cb0339fde0ccb525def4205cf6","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":18292947,"upload_time":"2023-06-10T12:24:47","upload_time_iso_8601":"2023-06-10T12:24:47.968953Z","url":"https://files.pythonhosted.org/packages/c6/f8/f7c278362f2377d293ea408d763775849eed2e9a8685f9291cbf37e26634/lollms-1.1.31-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"ccfcacc17fd722caedfb4a5934b2828dd6c96ac6c2c5855dcf202e274c155fda","md5":"dd19c0279380b203a141fd01f8262902","sha256":"f573bfa71ecc8d83514d5fedcf4e30ed305566ae2a3ec62d1cbecfc3c5994820"},"downloads":-1,"filename":"lollms-1.1.31.tar.gz","has_sig":false,"md5_digest":"dd19c0279380b203a141fd01f8262902","packagetype":"sdist","python_version":"source","requires_python":null,"size":18172812,"upload_time":"2023-06-10T12:24:54","upload_time_iso_8601":"2023-06-10T12:24:54.127160Z","url":"https://files.pythonhosted.org/packages/cc/fc/acc17fd722caedfb4a5934b2828dd6c96ac6c2c5855dcf202e274c155fda/lollms-1.1.31.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.32":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.32/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.32","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"22d76a18c17302a7d6aa79b5bc587b215a0aa6d496f174f6da5c59300e07f156","md5":"b84441c185fb9a7cfee5c133ea87f806","sha256":"0a4bac8fa553a20557d8871b5605ac4d8e9bfd556bb93909988c70fa75e690bd"},"downloads":-1,"filename":"lollms-1.1.32-py3-none-any.whl","has_sig":false,"md5_digest":"b84441c185fb9a7cfee5c133ea87f806","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":18292986,"upload_time":"2023-06-10T13:02:39","upload_time_iso_8601":"2023-06-10T13:02:39.842363Z","url":"https://files.pythonhosted.org/packages/22/d7/6a18c17302a7d6aa79b5bc587b215a0aa6d496f174f6da5c59300e07f156/lollms-1.1.32-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"81e3a46531c860d944ca49b25cb88d28899f412a201ce04343dd0e683e9d19cc","md5":"caf942aeecec8d8c76fe3cc6bc735df6","sha256":"dbed166a0e3de8c8a859b796d33f7749faa8727c2c25a9c05ea3212ed236db39"},"downloads":-1,"filename":"lollms-1.1.32.tar.gz","has_sig":false,"md5_digest":"caf942aeecec8d8c76fe3cc6bc735df6","packagetype":"sdist","python_version":"source","requires_python":null,"size":18172374,"upload_time":"2023-06-10T13:02:44","upload_time_iso_8601":"2023-06-10T13:02:44.947496Z","url":"https://files.pythonhosted.org/packages/81/e3/a46531c860d944ca49b25cb88d28899f412a201ce04343dd0e683e9d19cc/lollms-1.1.32.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.33":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.33/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.33","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"235eca0562a4b4f9d21264515c50ce1ac62cda708fb5bf4ef28e925223e4ae63","md5":"5b6c4c9c45b8407c506c4de966da9d3d","sha256":"76340060910dc25ee0ffe12c0dcb479728086eacb85670facf64d6d45f39a824"},"downloads":-1,"filename":"lollms-1.1.33-py3-none-any.whl","has_sig":false,"md5_digest":"5b6c4c9c45b8407c506c4de966da9d3d","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":18292983,"upload_time":"2023-06-10T13:12:30","upload_time_iso_8601":"2023-06-10T13:12:30.604695Z","url":"https://files.pythonhosted.org/packages/23/5e/ca0562a4b4f9d21264515c50ce1ac62cda708fb5bf4ef28e925223e4ae63/lollms-1.1.33-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"551399d7064c403a905c5d18fcb1db0bc22a7d2490e91618c0c07da7256f765b","md5":"05c01134c01824479683827ae93a9285","sha256":"79e57a2457579550f0eaecafd113997b9fe59cd0867bafa1c625c19ca3809fff"},"downloads":-1,"filename":"lollms-1.1.33.tar.gz","has_sig":false,"md5_digest":"05c01134c01824479683827ae93a9285","packagetype":"sdist","python_version":"source","requires_python":null,"size":18172463,"upload_time":"2023-06-10T13:12:38","upload_time_iso_8601":"2023-06-10T13:12:38.800694Z","url":"https://files.pythonhosted.org/packages/55/13/99d7064c403a905c5d18fcb1db0bc22a7d2490e91618c0c07da7256f765b/lollms-1.1.33.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.34":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.34/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.34","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"9a01e98d92e74dfe5c997918e464f2d510ab6a87e188bc5c1584ddf39705c6f1","md5":"7ec9ff8f137a5f644d95d481dcffdc90","sha256":"0e125b495542db21e36180039321c4bd3187d2c8e62a24da69233314ddd689d7"},"downloads":-1,"filename":"lollms-1.1.34-py3-none-any.whl","has_sig":false,"md5_digest":"7ec9ff8f137a5f644d95d481dcffdc90","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":18292144,"upload_time":"2023-06-10T13:34:15","upload_time_iso_8601":"2023-06-10T13:34:15.089081Z","url":"https://files.pythonhosted.org/packages/9a/01/e98d92e74dfe5c997918e464f2d510ab6a87e188bc5c1584ddf39705c6f1/lollms-1.1.34-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f4b78a6caabdd66302d63e50b557bf7830878635ea89f1723d95fe2c89b8bf9a","md5":"59f54b4c4992f4e87f91a77a8371cbf2","sha256":"421c86f5f71971bec5cf61a797012f48340d40ca8b01c155e380b88a4a273c65"},"downloads":-1,"filename":"lollms-1.1.34.tar.gz","has_sig":false,"md5_digest":"59f54b4c4992f4e87f91a77a8371cbf2","packagetype":"sdist","python_version":"source","requires_python":null,"size":18172661,"upload_time":"2023-06-10T13:34:21","upload_time_iso_8601":"2023-06-10T13:34:21.114382Z","url":"https://files.pythonhosted.org/packages/f4/b7/8a6caabdd66302d63e50b557bf7830878635ea89f1723d95fe2c89b8bf9a/lollms-1.1.34.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.35":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.35/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.35","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"4850f809bbf37bd77923518f0e62f3b8cd4c86f6438ada1aa8ad40395e6fd0ed","md5":"7307e6118bef333894e4a82a19317cc2","sha256":"65e3f4d28b681d6631d4865111f2f61c11ea52b4b8acfe5eeb680c5ef0b19269"},"downloads":-1,"filename":"lollms-1.1.35-py3-none-any.whl","has_sig":false,"md5_digest":"7307e6118bef333894e4a82a19317cc2","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":18292513,"upload_time":"2023-06-10T17:04:57","upload_time_iso_8601":"2023-06-10T17:04:57.359888Z","url":"https://files.pythonhosted.org/packages/48/50/f809bbf37bd77923518f0e62f3b8cd4c86f6438ada1aa8ad40395e6fd0ed/lollms-1.1.35-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"1c22b64d4574ff0175ca62af334adccc131a0a7e31670e7098433f34eafda289","md5":"14308ce91bfbc67cd296f7a25ce10dbb","sha256":"3745d57d2b8278fed539e9ef4792c854e2adc8582cedbcf542f28abd6a83274c"},"downloads":-1,"filename":"lollms-1.1.35.tar.gz","has_sig":false,"md5_digest":"14308ce91bfbc67cd296f7a25ce10dbb","packagetype":"sdist","python_version":"source","requires_python":null,"size":18173321,"upload_time":"2023-06-10T17:05:39","upload_time_iso_8601":"2023-06-10T17:05:39.616805Z","url":"https://files.pythonhosted.org/packages/1c/22/b64d4574ff0175ca62af334adccc131a0a7e31670e7098433f34eafda289/lollms-1.1.35.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.36":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.36/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.36","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"566051ca76043de18e48687c67201f2714b637dcea21ba55b9629e6f2c6f53c4","md5":"7ddbff841ffc45a3f0b8775615ef48da","sha256":"d9eff3992f7dea2a49fd8ebbd0de34731710d0f573785e5b920cc85d2ace0d4a"},"downloads":-1,"filename":"lollms-1.1.36-py3-none-any.whl","has_sig":false,"md5_digest":"7ddbff841ffc45a3f0b8775615ef48da","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":18292685,"upload_time":"2023-06-10T17:29:03","upload_time_iso_8601":"2023-06-10T17:29:03.401464Z","url":"https://files.pythonhosted.org/packages/56/60/51ca76043de18e48687c67201f2714b637dcea21ba55b9629e6f2c6f53c4/lollms-1.1.36-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"a1757fd5dc5590463b40ae1f13aa7a2ea822d0710b092c86e0253ee7b33eb9ab","md5":"0f9b388e59da8ab82613dc4a1364834a","sha256":"28a09ea2a41460e3aa76a90958761dc211878e7647110602cf2072124bd3d923"},"downloads":-1,"filename":"lollms-1.1.36.tar.gz","has_sig":false,"md5_digest":"0f9b388e59da8ab82613dc4a1364834a","packagetype":"sdist","python_version":"source","requires_python":null,"size":18172484,"upload_time":"2023-06-10T17:29:16","upload_time_iso_8601":"2023-06-10T17:29:16.237508Z","url":"https://files.pythonhosted.org/packages/a1/75/7fd5dc5590463b40ae1f13aa7a2ea822d0710b092c86e0253ee7b33eb9ab/lollms-1.1.36.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.37":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.37/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.37","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"bfcc1693751545ff3f7d2901d9944a81e515c30884aca641b6a51e471084def3","md5":"a5894bd2490f278d751c6d06f93508c4","sha256":"26d019cac5d2458ec2843698bd901eda8daff0e20d46dd8c141d1cbd5d881f2c"},"downloads":-1,"filename":"lollms-1.1.37-py3-none-any.whl","has_sig":false,"md5_digest":"a5894bd2490f278d751c6d06f93508c4","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":18111199,"upload_time":"2023-06-10T18:33:26","upload_time_iso_8601":"2023-06-10T18:33:26.115597Z","url":"https://files.pythonhosted.org/packages/bf/cc/1693751545ff3f7d2901d9944a81e515c30884aca641b6a51e471084def3/lollms-1.1.37-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"395be3b77abecd32fc98aa365fc6376e2384c632e4332b6a7d9f6ad1b909e1a7","md5":"219939c159a5d9005fc6d2d350fa47c7","sha256":"65245e3b880c093adeef04ae63ff162a4e78e3917849c6e2714cddebaa7697fd"},"downloads":-1,"filename":"lollms-1.1.37.tar.gz","has_sig":false,"md5_digest":"219939c159a5d9005fc6d2d350fa47c7","packagetype":"sdist","python_version":"source","requires_python":null,"size":17991008,"upload_time":"2023-06-10T18:33:31","upload_time_iso_8601":"2023-06-10T18:33:31.590919Z","url":"https://files.pythonhosted.org/packages/39/5b/e3b77abecd32fc98aa365fc6376e2384c632e4332b6a7d9f6ad1b909e1a7/lollms-1.1.37.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.38":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.38/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.38","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"e0f6c2e460eadd1c3cf7a98d5e23973a6323138eeb15267d525f6e8a2858e265","md5":"739a6d915b0f02b5ae5ab6ace1a862ed","sha256":"b95398d5d803506b048aaa14cd52504c0b287a44a97e4ddfe4978bf450d9ffc7"},"downloads":-1,"filename":"lollms-1.1.38-py3-none-any.whl","has_sig":false,"md5_digest":"739a6d915b0f02b5ae5ab6ace1a862ed","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":18111355,"upload_time":"2023-06-10T18:38:45","upload_time_iso_8601":"2023-06-10T18:38:45.100304Z","url":"https://files.pythonhosted.org/packages/e0/f6/c2e460eadd1c3cf7a98d5e23973a6323138eeb15267d525f6e8a2858e265/lollms-1.1.38-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"86a16e85e6fceca611e518c738b34b1a188ccfce655bb98a63885d8bad1900e2","md5":"aee760dab4ab7e58ea5ebba5d8496bb1","sha256":"11c458661e34833dbe940fba2642be2d85dd852a36dc11ec0f44cc73a5ac6777"},"downloads":-1,"filename":"lollms-1.1.38.tar.gz","has_sig":false,"md5_digest":"aee760dab4ab7e58ea5ebba5d8496bb1","packagetype":"sdist","python_version":"source","requires_python":null,"size":17991252,"upload_time":"2023-06-10T18:39:23","upload_time_iso_8601":"2023-06-10T18:39:23.796077Z","url":"https://files.pythonhosted.org/packages/86/a1/6e85e6fceca611e518c738b34b1a188ccfce655bb98a63885d8bad1900e2/lollms-1.1.38.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.45":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.45/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.45","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"4601f15576fa1b4c24e5ab9ed92e52a9aa38a36989d4013ae89e21bfb6b80845","md5":"56a125334c90167498a16243fbb8b40d","sha256":"24f046dfd187c4cb08a30d1dff8eb63bb26f67b9f3a036fb9dae74b8234aa09d"},"downloads":-1,"filename":"lollms-1.1.45-py3-none-any.whl","has_sig":false,"md5_digest":"56a125334c90167498a16243fbb8b40d","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":24058212,"upload_time":"2023-06-11T16:44:02","upload_time_iso_8601":"2023-06-11T16:44:02.778340Z","url":"https://files.pythonhosted.org/packages/46/01/f15576fa1b4c24e5ab9ed92e52a9aa38a36989d4013ae89e21bfb6b80845/lollms-1.1.45-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"cd6a13e3a8c7c71cfeb2dc1c21d9d05a672ae2a8f5f0e525a41bd6d68ef0aebf","md5":"8df8d2ff8ec2dc3d1760b0465737451c","sha256":"09b6abbb5c5b415b2cf935378105bc178a91b240d47810944cecabc5c7ef4c0c"},"downloads":-1,"filename":"lollms-1.1.45.tar.gz","has_sig":false,"md5_digest":"8df8d2ff8ec2dc3d1760b0465737451c","packagetype":"sdist","python_version":"source","requires_python":null,"size":23946550,"upload_time":"2023-06-11T16:44:39","upload_time_iso_8601":"2023-06-11T16:44:39.842658Z","url":"https://files.pythonhosted.org/packages/cd/6a/13e3a8c7c71cfeb2dc1c21d9d05a672ae2a8f5f0e525a41bd6d68ef0aebf/lollms-1.1.45.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.46":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.46/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.46","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"370336d1aeb3cad5bc865447406b9a07edcce05952c31491daa7be6f9e6031ef","md5":"dcfc5216c03d25180a980a5d8dbfda52","sha256":"3fa8d17f1f32f243324ad4db8994cfd2582ccdc7dec34b00438b3696611e936d"},"downloads":-1,"filename":"lollms-1.1.46-py3-none-any.whl","has_sig":false,"md5_digest":"dcfc5216c03d25180a980a5d8dbfda52","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":24058367,"upload_time":"2023-06-11T18:41:30","upload_time_iso_8601":"2023-06-11T18:41:30.683876Z","url":"https://files.pythonhosted.org/packages/37/03/36d1aeb3cad5bc865447406b9a07edcce05952c31491daa7be6f9e6031ef/lollms-1.1.46-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"420a33beffcdbbb770803e8eb0c42075fc6433275f4515be2fff7e246e440da4","md5":"032bf192662d6cfa9eb6b38c0356fece","sha256":"ee7ffc538cd2e4c0560b75870eeadd3b5e4a57d446626bb4e653c1653560caee"},"downloads":-1,"filename":"lollms-1.1.46.tar.gz","has_sig":false,"md5_digest":"032bf192662d6cfa9eb6b38c0356fece","packagetype":"sdist","python_version":"source","requires_python":null,"size":23946890,"upload_time":"2023-06-11T18:41:40","upload_time_iso_8601":"2023-06-11T18:41:40.327779Z","url":"https://files.pythonhosted.org/packages/42/0a/33beffcdbbb770803e8eb0c42075fc6433275f4515be2fff7e246e440da4/lollms-1.1.46.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.47":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.47/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.47","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"218e3bf9ce82f104824c23027383f1f75c084da1012b738ecad74522df14fca8","md5":"cdb8f44b354d053363ba58ad521010b8","sha256":"fee13588e82e9d5431501cbe9d529dc4971ef228da4165c5eb3ea46b8dab608d"},"downloads":-1,"filename":"lollms-1.1.47-py3-none-any.whl","has_sig":false,"md5_digest":"cdb8f44b354d053363ba58ad521010b8","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":24058366,"upload_time":"2023-06-11T18:51:16","upload_time_iso_8601":"2023-06-11T18:51:16.159459Z","url":"https://files.pythonhosted.org/packages/21/8e/3bf9ce82f104824c23027383f1f75c084da1012b738ecad74522df14fca8/lollms-1.1.47-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"13020e1c763b346279ba28c2f11f515d2a346b65cfca5f780101e1d33a965f92","md5":"b2e345fa577477b1c0c016d5a6864797","sha256":"be09a6f8cf9384e0ffc3fcbb66d2fdb97695ee681e0c38f78dd59459939133b1"},"downloads":-1,"filename":"lollms-1.1.47.tar.gz","has_sig":false,"md5_digest":"b2e345fa577477b1c0c016d5a6864797","packagetype":"sdist","python_version":"source","requires_python":null,"size":23946578,"upload_time":"2023-06-11T18:51:35","upload_time_iso_8601":"2023-06-11T18:51:35.619448Z","url":"https://files.pythonhosted.org/packages/13/02/0e1c763b346279ba28c2f11f515d2a346b65cfca5f780101e1d33a965f92/lollms-1.1.47.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.48":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.48/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.48","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"e1347922f7f0e3d82c1c67c94c3c6703ebd01ee3f13a91204728152ccc8f6a94","md5":"4980d623f6998dc65a93d80ea6d29953","sha256":"f43a82b0deabe6ea903639a996d34d84e4d520394d695160ba873a1af9e946d7"},"downloads":-1,"filename":"lollms-1.1.48-py3-none-any.whl","has_sig":false,"md5_digest":"4980d623f6998dc65a93d80ea6d29953","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":24058307,"upload_time":"2023-06-11T19:01:28","upload_time_iso_8601":"2023-06-11T19:01:28.741788Z","url":"https://files.pythonhosted.org/packages/e1/34/7922f7f0e3d82c1c67c94c3c6703ebd01ee3f13a91204728152ccc8f6a94/lollms-1.1.48-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"aa8e2dc5789ecbf096e01c0dd506ec6e29346975f049469440e58cdc3f53ce6c","md5":"cfaf9fed20cedffccb731926bb299c0b","sha256":"931d9b1eb1c3475332032a68a129ba433cb3a30b756e2c63c582e9ecd5c9dcd9"},"downloads":-1,"filename":"lollms-1.1.48.tar.gz","has_sig":false,"md5_digest":"cfaf9fed20cedffccb731926bb299c0b","packagetype":"sdist","python_version":"source","requires_python":null,"size":23946530,"upload_time":"2023-06-11T19:01:34","upload_time_iso_8601":"2023-06-11T19:01:34.852026Z","url":"https://files.pythonhosted.org/packages/aa/8e/2dc5789ecbf096e01c0dd506ec6e29346975f049469440e58cdc3f53ce6c/lollms-1.1.48.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.49":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.49/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.49","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"1e30d5bb3d306f7d52511f0ca77b8babb647670626548fcf749538f297734f70","md5":"b4fa1396d6118ead8031a94638385413","sha256":"d62d5a49a01c66276454e9e26a821ae48565a495ab2e35aba8f6f869e287618d"},"downloads":-1,"filename":"lollms-1.1.49-py3-none-any.whl","has_sig":false,"md5_digest":"b4fa1396d6118ead8031a94638385413","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":24058260,"upload_time":"2023-06-11T19:17:15","upload_time_iso_8601":"2023-06-11T19:17:15.432552Z","url":"https://files.pythonhosted.org/packages/1e/30/d5bb3d306f7d52511f0ca77b8babb647670626548fcf749538f297734f70/lollms-1.1.49-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"8976a0fd94463ddcacf2d58b780d277ca76d080e82e3dd0e82aea02b16308f84","md5":"14807c3f75aa572661e87417a03445a9","sha256":"ee190264c4719a6feb95d41812bf11aac091a7ba6010ba2ec216d0e0a46cde87"},"downloads":-1,"filename":"lollms-1.1.49.tar.gz","has_sig":false,"md5_digest":"14807c3f75aa572661e87417a03445a9","packagetype":"sdist","python_version":"source","requires_python":null,"size":23946644,"upload_time":"2023-06-11T19:17:26","upload_time_iso_8601":"2023-06-11T19:17:26.738031Z","url":"https://files.pythonhosted.org/packages/89/76/a0fd94463ddcacf2d58b780d277ca76d080e82e3dd0e82aea02b16308f84/lollms-1.1.49.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.5":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.5/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.5","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"4301611bbcf6632b58f4bba44bef5b6485c57492ff234ecac5c6072e1a7a0de8","md5":"68cd7783d73b3c043991b79e826aa02f","sha256":"052d638f47670f3c197cf3045b590f86aa0bc96f19b6900ad864e5643fae2e5b"},"downloads":-1,"filename":"lollms-1.1.5-py3-none-any.whl","has_sig":false,"md5_digest":"68cd7783d73b3c043991b79e826aa02f","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":17483991,"upload_time":"2023-06-04T01:00:59","upload_time_iso_8601":"2023-06-04T01:00:59.468667Z","url":"https://files.pythonhosted.org/packages/43/01/611bbcf6632b58f4bba44bef5b6485c57492ff234ecac5c6072e1a7a0de8/lollms-1.1.5-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"d9a392ee6bf9c0337bf61b4e247557eea88debb0ace96ba93f5c3904ab77088e","md5":"2a1e900313011095afcdd7b6ca7db3f3","sha256":"af5a95272d9a320f3814e1a2c145e9bf1ad5e2c3db7e9c9794e026787c7902a7"},"downloads":-1,"filename":"lollms-1.1.5.tar.gz","has_sig":false,"md5_digest":"2a1e900313011095afcdd7b6ca7db3f3","packagetype":"sdist","python_version":"source","requires_python":null,"size":17358579,"upload_time":"2023-06-04T01:01:04","upload_time_iso_8601":"2023-06-04T01:01:04.095947Z","url":"https://files.pythonhosted.org/packages/d9/a3/92ee6bf9c0337bf61b4e247557eea88debb0ace96ba93f5c3904ab77088e/lollms-1.1.5.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.50":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.50/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.50","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"f58e7bab59abea47ede1f354685870d60774715e82385774aed82d6878838cba","md5":"37bf5f5a2157f3fc23a7026a1068e8a5","sha256":"010967f64b166d7a5395c366adce3858e72097d3536e3c740928dfca2469010b"},"downloads":-1,"filename":"lollms-1.1.50-py3-none-any.whl","has_sig":false,"md5_digest":"37bf5f5a2157f3fc23a7026a1068e8a5","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":24058252,"upload_time":"2023-06-11T20:24:33","upload_time_iso_8601":"2023-06-11T20:24:33.903796Z","url":"https://files.pythonhosted.org/packages/f5/8e/7bab59abea47ede1f354685870d60774715e82385774aed82d6878838cba/lollms-1.1.50-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"6231184f78fb75d27b6a33ef16f5f4884745f08fdf5f06f45b4597f265442c7c","md5":"a023f0d50ef74d6bab6b89884df1a2ad","sha256":"e3da0c26b863fdadd53f7e980b1f12aac20b8a9df904fc55117b792fdf592552"},"downloads":-1,"filename":"lollms-1.1.50.tar.gz","has_sig":false,"md5_digest":"a023f0d50ef74d6bab6b89884df1a2ad","packagetype":"sdist","python_version":"source","requires_python":null,"size":23946492,"upload_time":"2023-06-11T20:25:12","upload_time_iso_8601":"2023-06-11T20:25:12.480106Z","url":"https://files.pythonhosted.org/packages/62/31/184f78fb75d27b6a33ef16f5f4884745f08fdf5f06f45b4597f265442c7c/lollms-1.1.50.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.51":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.51/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.51","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"e780c826e5155df73f8a578846cb86295a9c6560d4ea260590fe737023602842","md5":"c0d8ffda777dfefefcd1767414c9a95a","sha256":"73928b1654bd66f7cf1c0824eb87aea83fd1a151e12ccaed43fa146e335571ee"},"downloads":-1,"filename":"lollms-1.1.51-py3-none-any.whl","has_sig":false,"md5_digest":"c0d8ffda777dfefefcd1767414c9a95a","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":24058496,"upload_time":"2023-06-11T21:44:37","upload_time_iso_8601":"2023-06-11T21:44:37.109848Z","url":"https://files.pythonhosted.org/packages/e7/80/c826e5155df73f8a578846cb86295a9c6560d4ea260590fe737023602842/lollms-1.1.51-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"fd3f058c82aea2086a476951e89b30f7bd8b58aae208d8b2144b1e94f0e5de77","md5":"a82f6a94c4dd34d186e685078cd58276","sha256":"730a240da2cb1ea8fd013830ac2bdd4e90d62988ed9d219fa15d41489291b9dc"},"downloads":-1,"filename":"lollms-1.1.51.tar.gz","has_sig":false,"md5_digest":"a82f6a94c4dd34d186e685078cd58276","packagetype":"sdist","python_version":"source","requires_python":null,"size":23946845,"upload_time":"2023-06-11T21:44:45","upload_time_iso_8601":"2023-06-11T21:44:45.873569Z","url":"https://files.pythonhosted.org/packages/fd/3f/058c82aea2086a476951e89b30f7bd8b58aae208d8b2144b1e94f0e5de77/lollms-1.1.51.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.52":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.52/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.52","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"b9335910be8f4b49c1b03b77e37c13538924c78fe9948c7893f201bd88a477e8","md5":"9ff0ef58f1d79836a9ad7e8a073b2112","sha256":"455ad04c97bb0357f97327bb55fd5de7c117e2f7330fc4de8e7d9e3d5083ee81"},"downloads":-1,"filename":"lollms-1.1.52-py3-none-any.whl","has_sig":false,"md5_digest":"9ff0ef58f1d79836a9ad7e8a073b2112","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":24058648,"upload_time":"2023-06-11T21:57:47","upload_time_iso_8601":"2023-06-11T21:57:47.813865Z","url":"https://files.pythonhosted.org/packages/b9/33/5910be8f4b49c1b03b77e37c13538924c78fe9948c7893f201bd88a477e8/lollms-1.1.52-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"84a47d977e75badcf651add03e2f04be0e5289c1a6622262206dd0940001f919","md5":"37a8f29fe9dde601888b8ce3f7842e18","sha256":"6691864d8eec5a8f47c1248ddf7f23a37ea62f60e22be985dd492ca6674ff771"},"downloads":-1,"filename":"lollms-1.1.52.tar.gz","has_sig":false,"md5_digest":"37a8f29fe9dde601888b8ce3f7842e18","packagetype":"sdist","python_version":"source","requires_python":null,"size":23947044,"upload_time":"2023-06-11T21:57:56","upload_time_iso_8601":"2023-06-11T21:57:56.981535Z","url":"https://files.pythonhosted.org/packages/84/a4/7d977e75badcf651add03e2f04be0e5289c1a6622262206dd0940001f919/lollms-1.1.52.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.53":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.53/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.53","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"8f7d369ae9e632f3a6ca1e2b8c79fb93e9cadadeaf3710f92417395878ab4c03","md5":"aa7d884a663ede5838dc638e1e98a08b","sha256":"b06e9cc940ff969f1c5ff196230b8226456abdb122ae28fdc4bf54853bf2cd7a"},"downloads":-1,"filename":"lollms-1.1.53-py3-none-any.whl","has_sig":false,"md5_digest":"aa7d884a663ede5838dc638e1e98a08b","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":24056912,"upload_time":"2023-06-11T22:08:35","upload_time_iso_8601":"2023-06-11T22:08:35.076925Z","url":"https://files.pythonhosted.org/packages/8f/7d/369ae9e632f3a6ca1e2b8c79fb93e9cadadeaf3710f92417395878ab4c03/lollms-1.1.53-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"06108fad48914cbc7aa5e7713ea164b623336829ce5013b964624991c0388c74","md5":"047615b05366c5d85e1ca3152fa8977f","sha256":"a20fe1b6e7dc97aa4781530e1ae3cbe643e2ba1ca72ceee567946b1bec387086"},"downloads":-1,"filename":"lollms-1.1.53.tar.gz","has_sig":false,"md5_digest":"047615b05366c5d85e1ca3152fa8977f","packagetype":"sdist","python_version":"source","requires_python":null,"size":23944982,"upload_time":"2023-06-11T22:11:06","upload_time_iso_8601":"2023-06-11T22:11:06.220478Z","url":"https://files.pythonhosted.org/packages/06/10/8fad48914cbc7aa5e7713ea164b623336829ce5013b964624991c0388c74/lollms-1.1.53.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.55":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.55/","requires_dist":["tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.55","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"e092e64d2056be933f0138ed2ae3756698e914d8fa3eb34dbe34ea50a5b0c9f3","md5":"637dccef112b57847b520c9a9e487637","sha256":"b9a422a667a0acde26520a387dec6fa9d15e6290c9b84dcbd29fba08622b58e0"},"downloads":-1,"filename":"lollms-1.1.55-py3-none-any.whl","has_sig":false,"md5_digest":"637dccef112b57847b520c9a9e487637","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":24056924,"upload_time":"2023-06-11T22:28:39","upload_time_iso_8601":"2023-06-11T22:28:39.529863Z","url":"https://files.pythonhosted.org/packages/e0/92/e64d2056be933f0138ed2ae3756698e914d8fa3eb34dbe34ea50a5b0c9f3/lollms-1.1.55-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"857cb175077796605667c5712176d24abc9aec0c609f189ba760ca089f654c68","md5":"349fb20f9e56763dd5c8cb0a00629ea8","sha256":"1900119e202dd5b6c94481a200f0f1b0dc53bb81e75e64c0b5c1cb47aeb77ba1"},"downloads":-1,"filename":"lollms-1.1.55.tar.gz","has_sig":false,"md5_digest":"349fb20f9e56763dd5c8cb0a00629ea8","packagetype":"sdist","python_version":"source","requires_python":null,"size":23945132,"upload_time":"2023-06-11T22:29:18","upload_time_iso_8601":"2023-06-11T22:29:18.991345Z","url":"https://files.pythonhosted.org/packages/85/7c/b175077796605667c5712176d24abc9aec0c609f189ba760ca089f654c68/lollms-1.1.55.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.56":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.56/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.56","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"f101bd23ecdd4358f8a0057894f29050689e9caefa20bdfe53afea05d6f151ac","md5":"4264342665d996016c0689c86ff4f6b1","sha256":"fea808fca9afab25e14202b62ef3cd2ff4d900ae4af67fe0e964199f8d8b3e9a"},"downloads":-1,"filename":"lollms-1.1.56-py3-none-any.whl","has_sig":false,"md5_digest":"4264342665d996016c0689c86ff4f6b1","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":24057381,"upload_time":"2023-06-12T07:05:00","upload_time_iso_8601":"2023-06-12T07:05:00.687554Z","url":"https://files.pythonhosted.org/packages/f1/01/bd23ecdd4358f8a0057894f29050689e9caefa20bdfe53afea05d6f151ac/lollms-1.1.56-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"8ffe482261ab37e861455cd2d36d4fa884d7385ca1534a2672daaa4fc33744c2","md5":"736529b12e6b6165e3f269dde8477700","sha256":"e21749a96b23ffd2374e2869b80ae0accfe0956328f5bfb4d3c8fd661f48ae45"},"downloads":-1,"filename":"lollms-1.1.56.tar.gz","has_sig":false,"md5_digest":"736529b12e6b6165e3f269dde8477700","packagetype":"sdist","python_version":"source","requires_python":null,"size":23945344,"upload_time":"2023-06-12T07:05:08","upload_time_iso_8601":"2023-06-12T07:05:08.014800Z","url":"https://files.pythonhosted.org/packages/8f/fe/482261ab37e861455cd2d36d4fa884d7385ca1534a2672daaa4fc33744c2/lollms-1.1.56.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.57":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.57/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.57","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"0d3889d5bba00cb1e5c6996ea68b0c335af448eb7e04b8a4d18377b5d84b0497","md5":"867728c4af303855fa633ee616dea0a3","sha256":"e8b60caca817db53a516750634d86c7bd8104a9aa2f5d70ca528a696a5a2b49b"},"downloads":-1,"filename":"lollms-1.1.57-py3-none-any.whl","has_sig":false,"md5_digest":"867728c4af303855fa633ee616dea0a3","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":24057456,"upload_time":"2023-06-12T08:12:24","upload_time_iso_8601":"2023-06-12T08:12:24.631465Z","url":"https://files.pythonhosted.org/packages/0d/38/89d5bba00cb1e5c6996ea68b0c335af448eb7e04b8a4d18377b5d84b0497/lollms-1.1.57-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"b9339791e0ca0402124a31fdfb48c1580f4072fe7239c09fb4bcec9c9d96c0c5","md5":"cb46afacb429244edba4033191babecd","sha256":"b32fb235dcd0f747df049fcc40f7a426562d7ad49d1853f324fba5421a17f310"},"downloads":-1,"filename":"lollms-1.1.57.tar.gz","has_sig":false,"md5_digest":"cb46afacb429244edba4033191babecd","packagetype":"sdist","python_version":"source","requires_python":null,"size":23945315,"upload_time":"2023-06-12T08:12:38","upload_time_iso_8601":"2023-06-12T08:12:38.378646Z","url":"https://files.pythonhosted.org/packages/b9/33/9791e0ca0402124a31fdfb48c1580f4072fe7239c09fb4bcec9c9d96c0c5/lollms-1.1.57.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.58":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.58/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.58","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"18407f7e4ca997580fe9086e5d93c63ea0bd16bba0da60bd2a9ddb49b040d5c5","md5":"75dcc4277988919fd6f166330cd46cdc","sha256":"d91c812b3b06fe2fdfc61ad4565fbfb19c413918465d04d29d6e807092a13389"},"downloads":-1,"filename":"lollms-1.1.58-py3-none-any.whl","has_sig":false,"md5_digest":"75dcc4277988919fd6f166330cd46cdc","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":24059526,"upload_time":"2023-06-12T09:25:50","upload_time_iso_8601":"2023-06-12T09:25:50.145349Z","url":"https://files.pythonhosted.org/packages/18/40/7f7e4ca997580fe9086e5d93c63ea0bd16bba0da60bd2a9ddb49b040d5c5/lollms-1.1.58-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"e34e627e721130441d70285b14540fbfe2d04e3f816216658c42a4d692eccfb5","md5":"124e6decb5d6f6dc059fa54098ebe7b8","sha256":"ed564d23a5ffd9645a157addd4ce9bd1dc5e321b4d66404a71acd35e63094279"},"downloads":-1,"filename":"lollms-1.1.58.tar.gz","has_sig":false,"md5_digest":"124e6decb5d6f6dc059fa54098ebe7b8","packagetype":"sdist","python_version":"source","requires_python":null,"size":23946170,"upload_time":"2023-06-12T09:26:30","upload_time_iso_8601":"2023-06-12T09:26:30.404696Z","url":"https://files.pythonhosted.org/packages/e3/4e/627e721130441d70285b14540fbfe2d04e3f816216658c42a4d692eccfb5/lollms-1.1.58.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.59":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.59/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.59","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"1c98982de4c19d326d6e63f18c777292100f619e708e971548a88ed1ec3eeb21","md5":"698a736be553ca8cc62e158b8ee5685a","sha256":"087cbc1380ab86f74428e3b5f00debe516adb53842801f3a32022742007a35df"},"downloads":-1,"filename":"lollms-1.1.59-py3-none-any.whl","has_sig":false,"md5_digest":"698a736be553ca8cc62e158b8ee5685a","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":24059532,"upload_time":"2023-06-12T13:55:51","upload_time_iso_8601":"2023-06-12T13:55:51.125582Z","url":"https://files.pythonhosted.org/packages/1c/98/982de4c19d326d6e63f18c777292100f619e708e971548a88ed1ec3eeb21/lollms-1.1.59-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"e9646d1631c3661bc4febb0f70a3ca19ee92de756b142d7851cbf37820ad8d93","md5":"a866d0c90d62b6962e950da8f6999c16","sha256":"b86cda2f312751774bac10836a5c6f741b43e4659b7809ede11eec31e811af2c"},"downloads":-1,"filename":"lollms-1.1.59.tar.gz","has_sig":false,"md5_digest":"a866d0c90d62b6962e950da8f6999c16","packagetype":"sdist","python_version":"source","requires_python":null,"size":23946118,"upload_time":"2023-06-12T13:56:03","upload_time_iso_8601":"2023-06-12T13:56:03.948893Z","url":"https://files.pythonhosted.org/packages/e9/64/6d1631c3661bc4febb0f70a3ca19ee92de756b142d7851cbf37820ad8d93/lollms-1.1.59.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.6":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.6/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.6","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"6f04ff7dc9d9225ec95db82d19e1f813ff7727ac3d02bf26fdef32ab56a469b6","md5":"c1c313d030dffdf10afbb8e2b6bf6390","sha256":"5089cf96fbfcf2491709f8ac18ef6a985a322ea160966fd539e24816ee80b8fd"},"downloads":-1,"filename":"lollms-1.1.6-py3-none-any.whl","has_sig":false,"md5_digest":"c1c313d030dffdf10afbb8e2b6bf6390","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":17485686,"upload_time":"2023-06-04T01:10:51","upload_time_iso_8601":"2023-06-04T01:10:51.631893Z","url":"https://files.pythonhosted.org/packages/6f/04/ff7dc9d9225ec95db82d19e1f813ff7727ac3d02bf26fdef32ab56a469b6/lollms-1.1.6-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"3cfb58a5fb5e1c378451d63a18cfe7211d588f69fae3425afda3f31846b82e9b","md5":"f4cd28113f4d62f8b2ddb2f440830a90","sha256":"0c0c916766aada9143e9582fc205ae6d62a715b238271aab0efa60b9de165f92"},"downloads":-1,"filename":"lollms-1.1.6.tar.gz","has_sig":false,"md5_digest":"f4cd28113f4d62f8b2ddb2f440830a90","packagetype":"sdist","python_version":"source","requires_python":null,"size":17358417,"upload_time":"2023-06-04T01:11:00","upload_time_iso_8601":"2023-06-04T01:11:00.802207Z","url":"https://files.pythonhosted.org/packages/3c/fb/58a5fb5e1c378451d63a18cfe7211d588f69fae3425afda3f31846b82e9b/lollms-1.1.6.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.60":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.60/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.60","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"c01bf82501b4698b08326a788319948cde512fc841be48484efbaaa519d0884a","md5":"2d9cb9bdc4261fabbda2b939f115dc4d","sha256":"003a0803670366271b582ec034dd7398fd068c4fe059ff9caaafecaa3d197ad7"},"downloads":-1,"filename":"lollms-1.1.60-py3-none-any.whl","has_sig":false,"md5_digest":"2d9cb9bdc4261fabbda2b939f115dc4d","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":24059560,"upload_time":"2023-06-12T14:20:13","upload_time_iso_8601":"2023-06-12T14:20:13.266579Z","url":"https://files.pythonhosted.org/packages/c0/1b/f82501b4698b08326a788319948cde512fc841be48484efbaaa519d0884a/lollms-1.1.60-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"7df7af00ebe82036feb0a7203fcf82e2c8f60b50075863c51d8e60bfb5fff4ad","md5":"ae397b1458bbb496198fbe8890661ab9","sha256":"22682e6c6e6bdc8acefbee9eb02d3095aa66aab1e2ecaf34785c782ec7e32e35"},"downloads":-1,"filename":"lollms-1.1.60.tar.gz","has_sig":false,"md5_digest":"ae397b1458bbb496198fbe8890661ab9","packagetype":"sdist","python_version":"source","requires_python":null,"size":23946270,"upload_time":"2023-06-12T14:20:24","upload_time_iso_8601":"2023-06-12T14:20:24.592285Z","url":"https://files.pythonhosted.org/packages/7d/f7/af00ebe82036feb0a7203fcf82e2c8f60b50075863c51d8e60bfb5fff4ad/lollms-1.1.60.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.61":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.61/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.61","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"d1b8f89ad64514d6e37b64d44450fa14cdad7d7257c05c4cf38c6e66b5888080","md5":"4eee007171138e4f7d11681d0adfd25f","sha256":"c4f2daf88ec229bd95583d5cf584919c05948ece8d19d60fb9f9abf886709552"},"downloads":-1,"filename":"lollms-1.1.61-py3-none-any.whl","has_sig":false,"md5_digest":"4eee007171138e4f7d11681d0adfd25f","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":24061670,"upload_time":"2023-06-12T21:42:04","upload_time_iso_8601":"2023-06-12T21:42:04.847316Z","url":"https://files.pythonhosted.org/packages/d1/b8/f89ad64514d6e37b64d44450fa14cdad7d7257c05c4cf38c6e66b5888080/lollms-1.1.61-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"e735dc3e6519891195d893c7b896a1baaac67812f6111d0b25c5e8dc14c71c9e","md5":"04c60d33a1876ae7c2d893ccb538b87c","sha256":"a74be827bc21ca53b4ddbb3eb9eb09056730e93433708270e7fd1c88f67d2d58"},"downloads":-1,"filename":"lollms-1.1.61.tar.gz","has_sig":false,"md5_digest":"04c60d33a1876ae7c2d893ccb538b87c","packagetype":"sdist","python_version":"source","requires_python":null,"size":23948205,"upload_time":"2023-06-12T21:42:12","upload_time_iso_8601":"2023-06-12T21:42:12.097569Z","url":"https://files.pythonhosted.org/packages/e7/35/dc3e6519891195d893c7b896a1baaac67812f6111d0b25c5e8dc14c71c9e/lollms-1.1.61.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.62":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.62/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.62","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"a0abc8b572e1cfa19b1d1df7aece670c81ecdc06c34d977632f6b9589d198d26","md5":"36281990e47973ea10b4cf6100e22660","sha256":"57aa645650b09ae57f23bf61d76ebd052addec58b2485d998db2ed9380c2c8be"},"downloads":-1,"filename":"lollms-1.1.62-py3-none-any.whl","has_sig":false,"md5_digest":"36281990e47973ea10b4cf6100e22660","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":24061773,"upload_time":"2023-06-12T21:48:57","upload_time_iso_8601":"2023-06-12T21:48:57.466209Z","url":"https://files.pythonhosted.org/packages/a0/ab/c8b572e1cfa19b1d1df7aece670c81ecdc06c34d977632f6b9589d198d26/lollms-1.1.62-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"835d3b62ed160c172c9f0353a9b2b9f45fa4871ed0fdd6806e4714e00d9eea34","md5":"47b6ff687436f87be5f1b18ca652ed26","sha256":"44a338407635b4544267aea027f82de5b834da301bd613c87539941e0daadb5f"},"downloads":-1,"filename":"lollms-1.1.62.tar.gz","has_sig":false,"md5_digest":"47b6ff687436f87be5f1b18ca652ed26","packagetype":"sdist","python_version":"source","requires_python":null,"size":23948083,"upload_time":"2023-06-12T21:49:08","upload_time_iso_8601":"2023-06-12T21:49:08.604454Z","url":"https://files.pythonhosted.org/packages/83/5d/3b62ed160c172c9f0353a9b2b9f45fa4871ed0fdd6806e4714e00d9eea34/lollms-1.1.62.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.63":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.63/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.63","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"d48801797bf4184a342b90b4dda201450a3bdbc160dc4ec4be3e44692e795ff2","md5":"ae51041503fd693926377e7d7d9cd81b","sha256":"2727f706ed352ef7be0983a5e8dc78d9085d4a2bab539876a98ec958b3ae9af6"},"downloads":-1,"filename":"lollms-1.1.63-py3-none-any.whl","has_sig":false,"md5_digest":"ae51041503fd693926377e7d7d9cd81b","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":23593863,"upload_time":"2023-06-13T14:35:50","upload_time_iso_8601":"2023-06-13T14:35:50.940998Z","url":"https://files.pythonhosted.org/packages/d4/88/01797bf4184a342b90b4dda201450a3bdbc160dc4ec4be3e44692e795ff2/lollms-1.1.63-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"a3979e4e547c8ae2b45ca4b223a1caaac408e0e02423a729ba8f5e490e78b64b","md5":"7b8c2b8320bf7d56922e0c08dd42d685","sha256":"56c608af8efd930da9a9bd6d301eace382023bfd9ba996cc904563463bd4f8b8"},"downloads":-1,"filename":"lollms-1.1.63.tar.gz","has_sig":false,"md5_digest":"7b8c2b8320bf7d56922e0c08dd42d685","packagetype":"sdist","python_version":"source","requires_python":null,"size":23479670,"upload_time":"2023-06-13T14:36:43","upload_time_iso_8601":"2023-06-13T14:36:43.242422Z","url":"https://files.pythonhosted.org/packages/a3/97/9e4e547c8ae2b45ca4b223a1caaac408e0e02423a729ba8f5e490e78b64b/lollms-1.1.63.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.64":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.64/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.64","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"32d479c6eb418ed82e78f1fd3b2909bfbec4e4c61fdb13ab90289c9d06254242","md5":"dc5b7f16438a08a5597d5c2cf64cb333","sha256":"f84ef55f2e962efb2103df7fce3385fd840c5014b13a2282573331ca34504278"},"downloads":-1,"filename":"lollms-1.1.64-py3-none-any.whl","has_sig":false,"md5_digest":"dc5b7f16438a08a5597d5c2cf64cb333","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":24064658,"upload_time":"2023-06-13T16:04:43","upload_time_iso_8601":"2023-06-13T16:04:43.602271Z","url":"https://files.pythonhosted.org/packages/32/d4/79c6eb418ed82e78f1fd3b2909bfbec4e4c61fdb13ab90289c9d06254242/lollms-1.1.64-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"6e3e4d40f4bccf946b26ca724047ddb33cea6f56f82d21d084a9a81f15ffd7b2","md5":"32c92e46559108f0079ed2fe2da6a67d","sha256":"c0e26bb6211e89784f95f6f726943aae86f408a297fc259a539cd3644ab6b6d2"},"downloads":-1,"filename":"lollms-1.1.64.tar.gz","has_sig":false,"md5_digest":"32c92e46559108f0079ed2fe2da6a67d","packagetype":"sdist","python_version":"source","requires_python":null,"size":23950552,"upload_time":"2023-06-13T16:05:18","upload_time_iso_8601":"2023-06-13T16:05:18.327283Z","url":"https://files.pythonhosted.org/packages/6e/3e/4d40f4bccf946b26ca724047ddb33cea6f56f82d21d084a9a81f15ffd7b2/lollms-1.1.64.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.65":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.65/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.65","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"19f27a0b4861e095401a312b83e12411f0229cd0e693a2a902fa7f5e897c1dc8","md5":"8b307ed70aae2c0fd95a8a3282ef844a","sha256":"9576f18a1991ccb3b30f7a93492c74b7f4bc362112a9edd66cee6099bd19559f"},"downloads":-1,"filename":"lollms-1.1.65-py3-none-any.whl","has_sig":false,"md5_digest":"8b307ed70aae2c0fd95a8a3282ef844a","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":24064687,"upload_time":"2023-06-13T16:09:42","upload_time_iso_8601":"2023-06-13T16:09:42.950783Z","url":"https://files.pythonhosted.org/packages/19/f2/7a0b4861e095401a312b83e12411f0229cd0e693a2a902fa7f5e897c1dc8/lollms-1.1.65-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"9ec9a6320723f920c53315529a5835d920268afeabea227c9fda5d20d9bfe822","md5":"2ba592352fd277b26d292504a40a668f","sha256":"c9995df1f04e933967471f494f7505fd264000836b78bf7e454e1f7452e4ec80"},"downloads":-1,"filename":"lollms-1.1.65.tar.gz","has_sig":false,"md5_digest":"2ba592352fd277b26d292504a40a668f","packagetype":"sdist","python_version":"source","requires_python":null,"size":23950272,"upload_time":"2023-06-13T16:09:49","upload_time_iso_8601":"2023-06-13T16:09:49.591346Z","url":"https://files.pythonhosted.org/packages/9e/c9/a6320723f920c53315529a5835d920268afeabea227c9fda5d20d9bfe822/lollms-1.1.65.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.66":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.66/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.66","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"5cd1d21227adfc0db65fa4619c2a7a32883dc0a487ff714c5b805a0548b68709","md5":"29099bb9e368197d279c54b38a06c0c5","sha256":"99749f037b9c9f035da07af8af2385c17d00167a93a462faf9d5e2000df9204e"},"downloads":-1,"filename":"lollms-1.1.66-py3-none-any.whl","has_sig":false,"md5_digest":"29099bb9e368197d279c54b38a06c0c5","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":25245251,"upload_time":"2023-06-13T19:05:05","upload_time_iso_8601":"2023-06-13T19:05:05.712440Z","url":"https://files.pythonhosted.org/packages/5c/d1/d21227adfc0db65fa4619c2a7a32883dc0a487ff714c5b805a0548b68709/lollms-1.1.66-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"d24f93c397d55ade175905e1b41ef1300c3cd6de71a0f993de61837cca9672a5","md5":"9927b10d403b45b47e5efed25d5c8b56","sha256":"0492d4f629054f2df7cffdb668bbaad0b411168cb8515c2bbf59b0285e99eb0c"},"downloads":-1,"filename":"lollms-1.1.66.tar.gz","has_sig":false,"md5_digest":"9927b10d403b45b47e5efed25d5c8b56","packagetype":"sdist","python_version":"source","requires_python":null,"size":25133581,"upload_time":"2023-06-13T19:05:41","upload_time_iso_8601":"2023-06-13T19:05:41.586523Z","url":"https://files.pythonhosted.org/packages/d2/4f/93c397d55ade175905e1b41ef1300c3cd6de71a0f993de61837cca9672a5/lollms-1.1.66.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.67":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.67/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.67","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"24790887b57ae4a0c81dbfa2e838b2ca984d293398a9df98bc0ea6c24ff3af14","md5":"51454cb08666cf6c08e25094028ffb73","sha256":"3cc5823194c0d27030e03cd46168716d3c7d3c5f1bec5c3cff4130ec0a4376bb"},"downloads":-1,"filename":"lollms-1.1.67-py3-none-any.whl","has_sig":false,"md5_digest":"51454cb08666cf6c08e25094028ffb73","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":25245611,"upload_time":"2023-06-13T19:20:54","upload_time_iso_8601":"2023-06-13T19:20:54.192754Z","url":"https://files.pythonhosted.org/packages/24/79/0887b57ae4a0c81dbfa2e838b2ca984d293398a9df98bc0ea6c24ff3af14/lollms-1.1.67-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"bd0a657e0a25e8ad451a259ae5b88034a979c1c1abca8e79b9f49126a166d1c6","md5":"dc28f0ff14d84040e1c6ff371e5bea60","sha256":"afbc854f05703c1414d133fbb3eaf734c7b4f8b5d1a7867f40a0a51b794415ee"},"downloads":-1,"filename":"lollms-1.1.67.tar.gz","has_sig":false,"md5_digest":"dc28f0ff14d84040e1c6ff371e5bea60","packagetype":"sdist","python_version":"source","requires_python":null,"size":25133868,"upload_time":"2023-06-13T19:21:34","upload_time_iso_8601":"2023-06-13T19:21:34.084962Z","url":"https://files.pythonhosted.org/packages/bd/0a/657e0a25e8ad451a259ae5b88034a979c1c1abca8e79b9f49126a166d1c6/lollms-1.1.67.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.68":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.68/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.68","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"baabcc880e70855fc17cf5b3d643307fbb041b2927563570c2b62462bc7a5859","md5":"f444e718228b92b26821cfd7e1a92af0","sha256":"49b7db8ec74cb8d007c48b8964f174e21c1d2b262c81796f5b05572731803d0a"},"downloads":-1,"filename":"lollms-1.1.68-py3-none-any.whl","has_sig":false,"md5_digest":"f444e718228b92b26821cfd7e1a92af0","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":25245616,"upload_time":"2023-06-13T19:25:19","upload_time_iso_8601":"2023-06-13T19:25:19.879386Z","url":"https://files.pythonhosted.org/packages/ba/ab/cc880e70855fc17cf5b3d643307fbb041b2927563570c2b62462bc7a5859/lollms-1.1.68-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"bd2be84d13aa204e46fcefd079a662014eb3b0d8811e3b7cea18a2a9c7d196e8","md5":"66cb71e761131f0b5472df3daff62bf0","sha256":"f12be0543d17aef22095ae024c759a79aac0675fd7807bcac04730c48a598010"},"downloads":-1,"filename":"lollms-1.1.68.tar.gz","has_sig":false,"md5_digest":"66cb71e761131f0b5472df3daff62bf0","packagetype":"sdist","python_version":"source","requires_python":null,"size":25133853,"upload_time":"2023-06-13T19:25:24","upload_time_iso_8601":"2023-06-13T19:25:24.664135Z","url":"https://files.pythonhosted.org/packages/bd/2b/e84d13aa204e46fcefd079a662014eb3b0d8811e3b7cea18a2a9c7d196e8/lollms-1.1.68.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.69":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.69/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.69","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"88a19293b407d647491d2cbc829ab623c0ecb49e1bf56e3f70ff724246a5c208","md5":"e1bc510db5b1ec757869e4fb895acf3b","sha256":"5c6a906717b4bec5695aa5f8063917acd0d31583beb4f900c2fd7e67257c5ff5"},"downloads":-1,"filename":"lollms-1.1.69-py3-none-any.whl","has_sig":false,"md5_digest":"e1bc510db5b1ec757869e4fb895acf3b","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":25245521,"upload_time":"2023-06-13T19:29:31","upload_time_iso_8601":"2023-06-13T19:29:31.111810Z","url":"https://files.pythonhosted.org/packages/88/a1/9293b407d647491d2cbc829ab623c0ecb49e1bf56e3f70ff724246a5c208/lollms-1.1.69-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"26ee1fb203f17fc1e01b5b6f7dcbd0c686d95d4cfcef832d98af5849e0a58c9c","md5":"f691e0ba00767c3024da28ea3e9dfa24","sha256":"2ea7963382c6ec11366f23b52bfe9b3fda118935ee4d1c69ced767ade3d0e509"},"downloads":-1,"filename":"lollms-1.1.69.tar.gz","has_sig":false,"md5_digest":"f691e0ba00767c3024da28ea3e9dfa24","packagetype":"sdist","python_version":"source","requires_python":null,"size":25133750,"upload_time":"2023-06-13T19:29:36","upload_time_iso_8601":"2023-06-13T19:29:36.114104Z","url":"https://files.pythonhosted.org/packages/26/ee/1fb203f17fc1e01b5b6f7dcbd0c686d95d4cfcef832d98af5849e0a58c9c/lollms-1.1.69.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.7":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.7/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.7","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"ef2528d0fd7b1ab1c857dc0e988f10fe5a9711bac9972efb7cd9947c093a3008","md5":"9fd14595a816d39e6f1301c3d303e8de","sha256":"1d3d58a36a0478a9aae21d243f9a7a054a44aa4dc8e4f74deb132799735c5a7e"},"downloads":-1,"filename":"lollms-1.1.7-py3-none-any.whl","has_sig":false,"md5_digest":"9fd14595a816d39e6f1301c3d303e8de","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":17470260,"upload_time":"2023-06-04T01:45:02","upload_time_iso_8601":"2023-06-04T01:45:02.511262Z","url":"https://files.pythonhosted.org/packages/ef/25/28d0fd7b1ab1c857dc0e988f10fe5a9711bac9972efb7cd9947c093a3008/lollms-1.1.7-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"3d635860743c06fbd44180fc9469d6a01bbc0644f8be5bc965843b7c2864a173","md5":"d37e369583d3c05c7a2052ba74c38cfe","sha256":"921da1812f8f42e23254aa4957764ea85feef3ec3f327ee8ee94a168baa6b807"},"downloads":-1,"filename":"lollms-1.1.7.tar.gz","has_sig":false,"md5_digest":"d37e369583d3c05c7a2052ba74c38cfe","packagetype":"sdist","python_version":"source","requires_python":null,"size":17349845,"upload_time":"2023-06-04T01:45:08","upload_time_iso_8601":"2023-06-04T01:45:08.647462Z","url":"https://files.pythonhosted.org/packages/3d/63/5860743c06fbd44180fc9469d6a01bbc0644f8be5bc965843b7c2864a173/lollms-1.1.7.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.70":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.70/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.70","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"9483eeec7897a88867fbdc74818d205893e2d064e5cbaf4913cd649c79946f37","md5":"30d71518a0a6f8b07fd52b847f2cc465","sha256":"c146805474995ab2912f016fd2f352018627caaf8028af5fcd95b44aa2d7c812"},"downloads":-1,"filename":"lollms-1.1.70-py3-none-any.whl","has_sig":false,"md5_digest":"30d71518a0a6f8b07fd52b847f2cc465","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":25245578,"upload_time":"2023-06-13T19:46:25","upload_time_iso_8601":"2023-06-13T19:46:25.001694Z","url":"https://files.pythonhosted.org/packages/94/83/eeec7897a88867fbdc74818d205893e2d064e5cbaf4913cd649c79946f37/lollms-1.1.70-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"e31a7759ba82b7501f02e01de60769409c8f26655d65b2a6ec1a263096d1dc87","md5":"91ebd8c69f4463c545865afd0acba10a","sha256":"89ce714742c9371f1d2c042e59a282227afd021d94a1168a386db25cc318f66a"},"downloads":-1,"filename":"lollms-1.1.70.tar.gz","has_sig":false,"md5_digest":"91ebd8c69f4463c545865afd0acba10a","packagetype":"sdist","python_version":"source","requires_python":null,"size":25133673,"upload_time":"2023-06-13T19:46:56","upload_time_iso_8601":"2023-06-13T19:46:56.535747Z","url":"https://files.pythonhosted.org/packages/e3/1a/7759ba82b7501f02e01de60769409c8f26655d65b2a6ec1a263096d1dc87/lollms-1.1.70.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.71":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.71/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.71","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"624c19a0d4fc5882ead6f8d00f9a59cedd6767565cefab9b08b072976fcc0959","md5":"143192d7049e7c717bb1a20204c25ab9","sha256":"6d45e2e9af716b7992c06c507306d3f026a21c41b4969db73e10969919cf7084"},"downloads":-1,"filename":"lollms-1.1.71-py3-none-any.whl","has_sig":false,"md5_digest":"143192d7049e7c717bb1a20204c25ab9","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":25245580,"upload_time":"2023-06-13T19:50:00","upload_time_iso_8601":"2023-06-13T19:50:00.884190Z","url":"https://files.pythonhosted.org/packages/62/4c/19a0d4fc5882ead6f8d00f9a59cedd6767565cefab9b08b072976fcc0959/lollms-1.1.71-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"169eea9b797ef86208c7ef239801f8dcbb20ccc88963a3d79eff1c62b3a932b2","md5":"34814af04f8caa706b8c3d04d97bab90","sha256":"15bda2b6319485b3dd60c3e5bb92875eeb38ee1ad97463cb64f7c1b6cee259f4"},"downloads":-1,"filename":"lollms-1.1.71.tar.gz","has_sig":false,"md5_digest":"34814af04f8caa706b8c3d04d97bab90","packagetype":"sdist","python_version":"source","requires_python":null,"size":25133892,"upload_time":"2023-06-13T19:51:01","upload_time_iso_8601":"2023-06-13T19:51:01.894226Z","url":"https://files.pythonhosted.org/packages/16/9e/ea9b797ef86208c7ef239801f8dcbb20ccc88963a3d79eff1c62b3a932b2/lollms-1.1.71.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.73":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.73/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.73","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"fefecbba8333aca6c678bee539ce37c63072805158d65c06fc431758b3d4bf59","md5":"d799e41c35eca5531f6f06dbc476fbb1","sha256":"4285925b2e4779546a430295375445ae3c830fb4ff1f082fb75cedbf9cf541d6"},"downloads":-1,"filename":"lollms-1.1.73-py3-none-any.whl","has_sig":false,"md5_digest":"d799e41c35eca5531f6f06dbc476fbb1","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":26997227,"upload_time":"2023-06-13T22:35:02","upload_time_iso_8601":"2023-06-13T22:35:02.888592Z","url":"https://files.pythonhosted.org/packages/fe/fe/cbba8333aca6c678bee539ce37c63072805158d65c06fc431758b3d4bf59/lollms-1.1.73-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"a50dbec25bf13049885895ccf2da43acb1b3853ff82855f846ee0504e1f70ea7","md5":"3daafc53542dc0df7982de356b57b1ee","sha256":"3b84034f1bd2144962acc13c8c75f83a7db06a4b59ec4dce13ba14d3c9ae2af0"},"downloads":-1,"filename":"lollms-1.1.73.tar.gz","has_sig":false,"md5_digest":"3daafc53542dc0df7982de356b57b1ee","packagetype":"sdist","python_version":"source","requires_python":null,"size":26889654,"upload_time":"2023-06-13T22:35:09","upload_time_iso_8601":"2023-06-13T22:35:09.531226Z","url":"https://files.pythonhosted.org/packages/a5/0d/bec25bf13049885895ccf2da43acb1b3853ff82855f846ee0504e1f70ea7/lollms-1.1.73.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.74":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.74/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.74","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"710433f25e070c1e0c9f52082e1721e9f2c741c22bd2189608ff5d100aebadb1","md5":"5ae687dcbfa56a877565a6a2ba466c73","sha256":"9650f9c08c2f24e8ff1842b563ef498c78017ceb4f9e6c9188f62b9b42004194"},"downloads":-1,"filename":"lollms-1.1.74-py3-none-any.whl","has_sig":false,"md5_digest":"5ae687dcbfa56a877565a6a2ba466c73","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":27692371,"upload_time":"2023-06-13T22:40:19","upload_time_iso_8601":"2023-06-13T22:40:19.919960Z","url":"https://files.pythonhosted.org/packages/71/04/33f25e070c1e0c9f52082e1721e9f2c741c22bd2189608ff5d100aebadb1/lollms-1.1.74-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"97f1acac6e10ea2cd1223dede236f02ba3d40db053ed3b3a15163c06b83b0d72","md5":"c547221391ad7f6e6624ab8cb69543fb","sha256":"d6efbb071be9db5f21491aa4a0ffb4db32e245f640c886819a5fcd5006465761"},"downloads":-1,"filename":"lollms-1.1.74.tar.gz","has_sig":false,"md5_digest":"c547221391ad7f6e6624ab8cb69543fb","packagetype":"sdist","python_version":"source","requires_python":null,"size":27186356,"upload_time":"2023-06-13T22:40:26","upload_time_iso_8601":"2023-06-13T22:40:26.708305Z","url":"https://files.pythonhosted.org/packages/97/f1/acac6e10ea2cd1223dede236f02ba3d40db053ed3b3a15163c06b83b0d72/lollms-1.1.74.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.75":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.75/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.75","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"f63e9cb20b44cfe200d430cf729fc959bbe8b85b5040fda41c908f8ba3c4b578","md5":"80b89076088c26a52251ae96381de783","sha256":"142d1ddcd9fdadf1df9feb46e3d1e355615392060ce8abdb39835110f66b44e7"},"downloads":-1,"filename":"lollms-1.1.75-py3-none-any.whl","has_sig":false,"md5_digest":"80b89076088c26a52251ae96381de783","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":28499587,"upload_time":"2023-06-14T09:16:21","upload_time_iso_8601":"2023-06-14T09:16:21.663947Z","url":"https://files.pythonhosted.org/packages/f6/3e/9cb20b44cfe200d430cf729fc959bbe8b85b5040fda41c908f8ba3c4b578/lollms-1.1.75-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"05edf4a6cfeb824cba520facd50204ee9ae0608f6b0f115f51dd46aced3d78b5","md5":"f15c783fdfb4ac319c7a808f00d42dff","sha256":"dd930016d4b47c3f6fb38214dc1fe8e351d3de6827405c61ae399db0b39eeb49"},"downloads":-1,"filename":"lollms-1.1.75.tar.gz","has_sig":false,"md5_digest":"f15c783fdfb4ac319c7a808f00d42dff","packagetype":"sdist","python_version":"source","requires_python":null,"size":28394576,"upload_time":"2023-06-14T09:16:26","upload_time_iso_8601":"2023-06-14T09:16:26.421276Z","url":"https://files.pythonhosted.org/packages/05/ed/f4a6cfeb824cba520facd50204ee9ae0608f6b0f115f51dd46aced3d78b5/lollms-1.1.75.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.76":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.76/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.76","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"ee1770362d3aee857f46b6aa675971c154d4008068c140659ecdd776d358ae2f","md5":"43214b13ac41f4d3515aa75aaf59f803","sha256":"74a3318219f1fe880dea5108789b220662476a044bf90c54b26a3a7771f84b87"},"downloads":-1,"filename":"lollms-1.1.76-py3-none-any.whl","has_sig":false,"md5_digest":"43214b13ac41f4d3515aa75aaf59f803","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":28499585,"upload_time":"2023-06-14T11:18:50","upload_time_iso_8601":"2023-06-14T11:18:50.073355Z","url":"https://files.pythonhosted.org/packages/ee/17/70362d3aee857f46b6aa675971c154d4008068c140659ecdd776d358ae2f/lollms-1.1.76-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f4ba4c3093d733db3316ba38cc1cc2d13c3a8f6adbfc133b265a1dbf820e3681","md5":"6862b2efe9b8370cd8d181883329a4d9","sha256":"c74cc1725ff7a2aa679fd949927c860c6e09e0d87e5d1d4a1d6c485b65a70c71"},"downloads":-1,"filename":"lollms-1.1.76.tar.gz","has_sig":false,"md5_digest":"6862b2efe9b8370cd8d181883329a4d9","packagetype":"sdist","python_version":"source","requires_python":null,"size":28394984,"upload_time":"2023-06-14T11:20:32","upload_time_iso_8601":"2023-06-14T11:20:32.705353Z","url":"https://files.pythonhosted.org/packages/f4/ba/4c3093d733db3316ba38cc1cc2d13c3a8f6adbfc133b265a1dbf820e3681/lollms-1.1.76.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.77":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.77/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.77","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"8107d5dc361d0595efa8732f164b3085a6564235d0073cc975bfbce5458d0b09","md5":"2b9900400792c1f8a90ba8114cb64cfb","sha256":"c497b1c6aa6eb1e8f555c63c7e770d5265f0e4e74e22c61e876e643b05acfd3d"},"downloads":-1,"filename":"lollms-1.1.77-py3-none-any.whl","has_sig":false,"md5_digest":"2b9900400792c1f8a90ba8114cb64cfb","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":28029497,"upload_time":"2023-06-14T12:57:53","upload_time_iso_8601":"2023-06-14T12:57:53.827743Z","url":"https://files.pythonhosted.org/packages/81/07/d5dc361d0595efa8732f164b3085a6564235d0073cc975bfbce5458d0b09/lollms-1.1.77-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f722ebc9c3fbbcb73f8d1a2ba0e9aa43ce6a343e8c615715674efd05048afba3","md5":"4fab068622a5bb37331ff56c69a1201f","sha256":"b5818371df232d10d312cbe1edc96468a7860aee85000dfb6c385cd9e19d41b8"},"downloads":-1,"filename":"lollms-1.1.77.tar.gz","has_sig":false,"md5_digest":"4fab068622a5bb37331ff56c69a1201f","packagetype":"sdist","python_version":"source","requires_python":null,"size":27921727,"upload_time":"2023-06-14T12:58:05","upload_time_iso_8601":"2023-06-14T12:58:05.275304Z","url":"https://files.pythonhosted.org/packages/f7/22/ebc9c3fbbcb73f8d1a2ba0e9aa43ce6a343e8c615715674efd05048afba3/lollms-1.1.77.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.78":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.78/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.78","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"90a5cfc5de5248908486ac5976142a0474556420d8394a178c1f03acdddef3ed","md5":"515523306dee3a40b633d643601f6e01","sha256":"eef3be284820751efec7c0c4182ba67f1b4e5a49df992831433600a7b76e051e"},"downloads":-1,"filename":"lollms-1.1.78-py3-none-any.whl","has_sig":false,"md5_digest":"515523306dee3a40b633d643601f6e01","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":28308777,"upload_time":"2023-06-14T15:12:32","upload_time_iso_8601":"2023-06-14T15:12:32.571637Z","url":"https://files.pythonhosted.org/packages/90/a5/cfc5de5248908486ac5976142a0474556420d8394a178c1f03acdddef3ed/lollms-1.1.78-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"1632d3f94f55d2c9f12016665a90aad66748cd19326eca7cd2561d0b4bada380","md5":"3afaf331ee44b610e64372a51b18b93f","sha256":"dc40a3558ed890f1f0d63ec8b06388159ac694a916988c33ca3c7bcb2ac3c1ad"},"downloads":-1,"filename":"lollms-1.1.78.tar.gz","has_sig":false,"md5_digest":"3afaf331ee44b610e64372a51b18b93f","packagetype":"sdist","python_version":"source","requires_python":null,"size":28201241,"upload_time":"2023-06-14T15:12:40","upload_time_iso_8601":"2023-06-14T15:12:40.893484Z","url":"https://files.pythonhosted.org/packages/16/32/d3f94f55d2c9f12016665a90aad66748cd19326eca7cd2561d0b4bada380/lollms-1.1.78.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.79":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.79/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.79","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"315721bdb0b26f460c22e47ceba490636ca6bfccfcd4ec2b2ead7afc683047ea","md5":"55e279943873b2eeea1b42b2bbe766dc","sha256":"9f0f398e304610076a97fed575abc8afb1bf67ac49fb9fbe17ea6f88017c35ab"},"downloads":-1,"filename":"lollms-1.1.79-py3-none-any.whl","has_sig":false,"md5_digest":"55e279943873b2eeea1b42b2bbe766dc","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":28779509,"upload_time":"2023-06-14T20:09:25","upload_time_iso_8601":"2023-06-14T20:09:25.398590Z","url":"https://files.pythonhosted.org/packages/31/57/21bdb0b26f460c22e47ceba490636ca6bfccfcd4ec2b2ead7afc683047ea/lollms-1.1.79-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"7e0fc655a7960f011427831a0ec400a765a0121d5e01c9c726107a3327ec0617","md5":"48310546144e9eb9163c2305a5360c01","sha256":"ae5e73b8a4831e4ce753f2f318df764caea03669e99d451d4e9489dc0c7ba84a"},"downloads":-1,"filename":"lollms-1.1.79.tar.gz","has_sig":false,"md5_digest":"48310546144e9eb9163c2305a5360c01","packagetype":"sdist","python_version":"source","requires_python":null,"size":28673425,"upload_time":"2023-06-14T20:09:33","upload_time_iso_8601":"2023-06-14T20:09:33.092027Z","url":"https://files.pythonhosted.org/packages/7e/0f/c655a7960f011427831a0ec400a765a0121d5e01c9c726107a3327ec0617/lollms-1.1.79.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.80":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.80/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.80","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"3aa4468b549285053e87560dda1a622bb2726e925a7c35f2510a8fd5dd7a6511","md5":"01417b296657ce32a6d85a747da74578","sha256":"651a99308a4dcb2863445731aeed1356da914fa495590e48e31eb38b40e19e08"},"downloads":-1,"filename":"lollms-1.1.80-py3-none-any.whl","has_sig":false,"md5_digest":"01417b296657ce32a6d85a747da74578","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":28779562,"upload_time":"2023-06-14T21:52:27","upload_time_iso_8601":"2023-06-14T21:52:27.684980Z","url":"https://files.pythonhosted.org/packages/3a/a4/468b549285053e87560dda1a622bb2726e925a7c35f2510a8fd5dd7a6511/lollms-1.1.80-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"8894b622e86d9bf67dd76748f583d1ec645f2933c623721ff81aeda1b501b997","md5":"102585e4610c42f5eff8db63df42beb8","sha256":"119d314e7a782050b6e39bbc2fac12b206922df9443ac5ca6084e5a2cb924f25"},"downloads":-1,"filename":"lollms-1.1.80.tar.gz","has_sig":false,"md5_digest":"102585e4610c42f5eff8db63df42beb8","packagetype":"sdist","python_version":"source","requires_python":null,"size":28673745,"upload_time":"2023-06-14T21:53:19","upload_time_iso_8601":"2023-06-14T21:53:19.143842Z","url":"https://files.pythonhosted.org/packages/88/94/b622e86d9bf67dd76748f583d1ec645f2933c623721ff81aeda1b501b997/lollms-1.1.80.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.82":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.82/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.82","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"fb117b53d1e92f4611a440cab2712bfc96cf1459c1940aa8fec02b5f881191e6","md5":"e8b7c420ade5e8dd9d41a36cbc773eec","sha256":"6a82846c0f441e123f22660348ab99a94d43f308f048a18a3eac4f09758de1d9"},"downloads":-1,"filename":"lollms-1.1.82-py3-none-any.whl","has_sig":false,"md5_digest":"e8b7c420ade5e8dd9d41a36cbc773eec","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":28309323,"upload_time":"2023-06-15T10:19:23","upload_time_iso_8601":"2023-06-15T10:19:23.901837Z","url":"https://files.pythonhosted.org/packages/fb/11/7b53d1e92f4611a440cab2712bfc96cf1459c1940aa8fec02b5f881191e6/lollms-1.1.82-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"beef30362f10299913a614c9b734af75cff7511a06a3c12e2fff09a4ddba839f","md5":"f497fff35c5d06a984cb123535e5637a","sha256":"fc44417c23545678f8ab609bf96562c0672d42073c759bf2140628d25d02675d"},"downloads":-1,"filename":"lollms-1.1.82.tar.gz","has_sig":false,"md5_digest":"f497fff35c5d06a984cb123535e5637a","packagetype":"sdist","python_version":"source","requires_python":null,"size":28201669,"upload_time":"2023-06-15T10:19:33","upload_time_iso_8601":"2023-06-15T10:19:33.625414Z","url":"https://files.pythonhosted.org/packages/be/ef/30362f10299913a614c9b734af75cff7511a06a3c12e2fff09a4ddba839f/lollms-1.1.82.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.83":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.83/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.83","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"e35f800a9e07c67cf2edfd25b2c4928a64d230a8e6be6a1a661dec176a3629a9","md5":"d69b79fbea8af125d9d3f8da20a18163","sha256":"9f387518bcbb9f3e128c2dca7eb5bb083ab04ab638dfea674e1a8091f6f8df0c"},"downloads":-1,"filename":"lollms-1.1.83-py3-none-any.whl","has_sig":false,"md5_digest":"d69b79fbea8af125d9d3f8da20a18163","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":28986974,"upload_time":"2023-06-15T12:51:43","upload_time_iso_8601":"2023-06-15T12:51:43.004216Z","url":"https://files.pythonhosted.org/packages/e3/5f/800a9e07c67cf2edfd25b2c4928a64d230a8e6be6a1a661dec176a3629a9/lollms-1.1.83-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"814c66bf960f7e47b3c2c872a581b4870b6cc2f0b15c92e108cd851989a0def2","md5":"ba6c4da98fc12c03e07fbfae06e1d5d3","sha256":"01045d9ada815240d6babf9d8f0fefc7ed4fabd2c870d99be537e00d4f8bba44"},"downloads":-1,"filename":"lollms-1.1.83.tar.gz","has_sig":false,"md5_digest":"ba6c4da98fc12c03e07fbfae06e1d5d3","packagetype":"sdist","python_version":"source","requires_python":null,"size":27945830,"upload_time":"2023-06-15T12:52:45","upload_time_iso_8601":"2023-06-15T12:52:45.054568Z","url":"https://files.pythonhosted.org/packages/81/4c/66bf960f7e47b3c2c872a581b4870b6cc2f0b15c92e108cd851989a0def2/lollms-1.1.83.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.84":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.84/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.84","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"54c2c7bcea9f60581c1815ce6c18f3a8553d2ca91f09e9c5dc1771a5fc2b0ce8","md5":"861e5b0bc36a2f412603394711f09e6c","sha256":"4a108dc27e91ae5cae56013bccd7bc41f4e64e13d7525c4f4edf7732a24b8f23"},"downloads":-1,"filename":"lollms-1.1.84-py3-none-any.whl","has_sig":false,"md5_digest":"861e5b0bc36a2f412603394711f09e6c","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":28055158,"upload_time":"2023-06-15T14:44:13","upload_time_iso_8601":"2023-06-15T14:44:13.089286Z","url":"https://files.pythonhosted.org/packages/54/c2/c7bcea9f60581c1815ce6c18f3a8553d2ca91f09e9c5dc1771a5fc2b0ce8/lollms-1.1.84-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"11893476b64ebd33fcc7d027ebbcde597353d00a164a9733d3bae7656884a356","md5":"5150edbe9ac05e4f0d712bad07575f87","sha256":"3b50a4977b8b9aa3889703c88a713ac3944c40fdb61caf6f959b4cd176fed851"},"downloads":-1,"filename":"lollms-1.1.84.tar.gz","has_sig":false,"md5_digest":"5150edbe9ac05e4f0d712bad07575f87","packagetype":"sdist","python_version":"source","requires_python":null,"size":27948292,"upload_time":"2023-06-15T14:45:07","upload_time_iso_8601":"2023-06-15T14:45:07.909733Z","url":"https://files.pythonhosted.org/packages/11/89/3476b64ebd33fcc7d027ebbcde597353d00a164a9733d3bae7656884a356/lollms-1.1.84.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.85":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.85/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.85","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"3e3d5464afb837803bdf54bf4c2f96b1a01354ad4b29b050e27a03d5ff670fd0","md5":"fe2454d5d12ca6647a8a6f4f425feee7","sha256":"2a669f4aaeedcdbd3152913a0cc9c51c1023f682078a825ad0032fc5cf5813d6"},"downloads":-1,"filename":"lollms-1.1.85-py3-none-any.whl","has_sig":false,"md5_digest":"fe2454d5d12ca6647a8a6f4f425feee7","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":28526009,"upload_time":"2023-06-15T19:09:13","upload_time_iso_8601":"2023-06-15T19:09:13.254813Z","url":"https://files.pythonhosted.org/packages/3e/3d/5464afb837803bdf54bf4c2f96b1a01354ad4b29b050e27a03d5ff670fd0/lollms-1.1.85-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"a37678f402633aa4ea5cd5ae202cc8136fa853cd168686a7ade2afd422529450","md5":"bcd60631c9b56ff570fd9e4a68de731b","sha256":"e3dd6162cbdeba56658dfb40d84a758859086e03e42f26528523ccb4b201b3d1"},"downloads":-1,"filename":"lollms-1.1.85.tar.gz","has_sig":false,"md5_digest":"bcd60631c9b56ff570fd9e4a68de731b","packagetype":"sdist","python_version":"source","requires_python":null,"size":28419305,"upload_time":"2023-06-15T19:10:15","upload_time_iso_8601":"2023-06-15T19:10:15.556489Z","url":"https://files.pythonhosted.org/packages/a3/76/78f402633aa4ea5cd5ae202cc8136fa853cd168686a7ade2afd422529450/lollms-1.1.85.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.86":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.86/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.86","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"3ce8fb4bd9f82aac0b1da272e7831d3eb4292dd472a1673c2aefc3ada07a25e3","md5":"84996e73f621c8595b77694ab5cf6115","sha256":"0998676cab7eb40d3b0779f66a0292c8512a6a5774a97a3e3e21e9aa73b11f68"},"downloads":-1,"filename":"lollms-1.1.86-py3-none-any.whl","has_sig":false,"md5_digest":"84996e73f621c8595b77694ab5cf6115","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":28526009,"upload_time":"2023-06-15T19:24:39","upload_time_iso_8601":"2023-06-15T19:24:39.017323Z","url":"https://files.pythonhosted.org/packages/3c/e8/fb4bd9f82aac0b1da272e7831d3eb4292dd472a1673c2aefc3ada07a25e3/lollms-1.1.86-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"b11cf79671d736ad40eb0c8ccbf70fcedc25be1e4dc9b73171e55196862a158b","md5":"785a3a8766a8d5f91ea135bb85c03f9c","sha256":"f031e5f0fc351f6d9b2e42065ef64da0d40fb4976147fe0fe010cd0df7dedf00"},"downloads":-1,"filename":"lollms-1.1.86.tar.gz","has_sig":false,"md5_digest":"785a3a8766a8d5f91ea135bb85c03f9c","packagetype":"sdist","python_version":"source","requires_python":null,"size":28419290,"upload_time":"2023-06-15T19:25:37","upload_time_iso_8601":"2023-06-15T19:25:37.438315Z","url":"https://files.pythonhosted.org/packages/b1/1c/f79671d736ad40eb0c8ccbf70fcedc25be1e4dc9b73171e55196862a158b/lollms-1.1.86.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.9":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.9/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.9","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"09e44b736b96cc3ad58c50d3636d07c45526ed338719e8f40a73366a02715e24","md5":"7d15a3b59250a5b4b2cfe0cabf1ae55c","sha256":"e9e02674c8a12582f3445c2a45d2b69ab60923331360c682ce62cd42e047b500"},"downloads":-1,"filename":"lollms-1.1.9-py3-none-any.whl","has_sig":false,"md5_digest":"7d15a3b59250a5b4b2cfe0cabf1ae55c","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":17475295,"upload_time":"2023-06-04T20:32:40","upload_time_iso_8601":"2023-06-04T20:32:40.490005Z","url":"https://files.pythonhosted.org/packages/09/e4/4b736b96cc3ad58c50d3636d07c45526ed338719e8f40a73366a02715e24/lollms-1.1.9-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"e77a63b84a7e539cfe8145463749af63a3f75f12a6b22bf21a673c717e610fc6","md5":"1c923ed5cdaad8270901b557a112ae4f","sha256":"b2a07ecca4ea50e6692caade097d3bd3ff0b19ae9331acf767a8d58027d1efae"},"downloads":-1,"filename":"lollms-1.1.9.tar.gz","has_sig":false,"md5_digest":"1c923ed5cdaad8270901b557a112ae4f","packagetype":"sdist","python_version":"source","requires_python":null,"size":17354991,"upload_time":"2023-06-04T20:32:46","upload_time_iso_8601":"2023-06-04T20:32:46.206810Z","url":"https://files.pythonhosted.org/packages/e7/7a/63b84a7e539cfe8145463749af63a3f75f12a6b22bf21a673c717e610fc6/lollms-1.1.9.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.90":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.90/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.90","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"94d79eff47c383d9f26184981cb038d505df6ba2868ce52ed41c0f32274e1905","md5":"8177f0ca0f9f47527fe3b114515f3131","sha256":"6564296e919fba4e08f596769414853a8c3d2095daab197e42e7c3c181dba243"},"downloads":-1,"filename":"lollms-1.1.90-py3-none-any.whl","has_sig":false,"md5_digest":"8177f0ca0f9f47527fe3b114515f3131","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":28376225,"upload_time":"2023-06-16T08:05:01","upload_time_iso_8601":"2023-06-16T08:05:01.191464Z","url":"https://files.pythonhosted.org/packages/94/d7/9eff47c383d9f26184981cb038d505df6ba2868ce52ed41c0f32274e1905/lollms-1.1.90-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"e0b7e1a5bef1b2551c383162e9199cdb1c74d11857a63b8c3807e2459dccb380","md5":"84d1d21aec4ccfb491c9488a0dbb7c4b","sha256":"1ed99ed248da69e012ee107dd75fa2e4eb0c385368ceb9fd0a1fd6ecf5fae05c"},"downloads":-1,"filename":"lollms-1.1.90.tar.gz","has_sig":false,"md5_digest":"84d1d21aec4ccfb491c9488a0dbb7c4b","packagetype":"sdist","python_version":"source","requires_python":null,"size":27948341,"upload_time":"2023-06-16T08:05:13","upload_time_iso_8601":"2023-06-16T08:05:13.512334Z","url":"https://files.pythonhosted.org/packages/e0/b7/e1a5bef1b2551c383162e9199cdb1c74d11857a63b8c3807e2459dccb380/lollms-1.1.90.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.91":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.91/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.91","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"5991a5218381faddad1957392fa77ded501db5916ad8891656b9baab0bf0d7a1","md5":"d5d062dc9c15b0a0b2df2f32374a8cae","sha256":"fff462b73ad47f7d37a16898bb42ff1959da69ac3383866d774583d7e924035a"},"downloads":-1,"filename":"lollms-1.1.91-py3-none-any.whl","has_sig":false,"md5_digest":"d5d062dc9c15b0a0b2df2f32374a8cae","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":28376289,"upload_time":"2023-06-16T08:17:11","upload_time_iso_8601":"2023-06-16T08:17:11.638728Z","url":"https://files.pythonhosted.org/packages/59/91/a5218381faddad1957392fa77ded501db5916ad8891656b9baab0bf0d7a1/lollms-1.1.91-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"475fa0d8d8c11d16e2e9fb9eb065f0f1656cd55ada096c659f274b28c608e0da","md5":"7594f1ac345e8ce2b3bdd5e03684586f","sha256":"9579f85d4a8df33dad8cf24789c29e806814cb238a2ef27e85e5130d40cf42c9"},"downloads":-1,"filename":"lollms-1.1.91.tar.gz","has_sig":false,"md5_digest":"7594f1ac345e8ce2b3bdd5e03684586f","packagetype":"sdist","python_version":"source","requires_python":null,"size":27948510,"upload_time":"2023-06-16T08:20:26","upload_time_iso_8601":"2023-06-16T08:20:26.213123Z","url":"https://files.pythonhosted.org/packages/47/5f/a0d8d8c11d16e2e9fb9eb065f0f1656cd55ada096c659f274b28c608e0da/lollms-1.1.91.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.1.92":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.1.92/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.1.92","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"2ce852fa6efe135cf7985c3694eb1ce6abdafe4bd69bb955659cd9f07bd721f0","md5":"d60459ebfcfd4a1422d2211283022f9b","sha256":"c6efbf225a7b97b57bc3a1b79429da704fd4543a8a42d75ca822cc417f932b55"},"downloads":-1,"filename":"lollms-1.1.92-py3-none-any.whl","has_sig":false,"md5_digest":"d60459ebfcfd4a1422d2211283022f9b","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":28525924,"upload_time":"2023-06-16T19:12:56","upload_time_iso_8601":"2023-06-16T19:12:56.589840Z","url":"https://files.pythonhosted.org/packages/2c/e8/52fa6efe135cf7985c3694eb1ce6abdafe4bd69bb955659cd9f07bd721f0/lollms-1.1.92-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"4c451bda1a06ebd2f4247c025f7a6ecb5c28da604e22dd8e114179b7cbd2d120","md5":"6c5edbacf5af5e3ac14f4c087ec7cd2b","sha256":"f9aadc9096950d9ca2563d7bc108e721e1b6126637bee675dc3519fe6c5a6318"},"downloads":-1,"filename":"lollms-1.1.92.tar.gz","has_sig":false,"md5_digest":"6c5edbacf5af5e3ac14f4c087ec7cd2b","packagetype":"sdist","python_version":"source","requires_python":null,"size":28419518,"upload_time":"2023-06-16T19:13:04","upload_time_iso_8601":"2023-06-16T19:13:04.838764Z","url":"https://files.pythonhosted.org/packages/4c/45/1bda1a06ebd2f4247c025f7a6ecb5c28da604e22dd8e114179b7cbd2d120/lollms-1.1.92.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.2.0":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.2.0/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.2.0","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"ca160cd266b62ecbecb3df9e95a6403c03ff33a9bf5cb3f3a1b35fe4255a64df","md5":"7b46106f7966378053be5b08cea650a8","sha256":"61ec16da4328e407e143e38664aee4ca9d1c96d586f805592e3f7248c568eefc"},"downloads":-1,"filename":"lollms-1.2.0-py3-none-any.whl","has_sig":false,"md5_digest":"7b46106f7966378053be5b08cea650a8","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":31887435,"upload_time":"2023-06-18T16:26:58","upload_time_iso_8601":"2023-06-18T16:26:58.133036Z","url":"https://files.pythonhosted.org/packages/ca/16/0cd266b62ecbecb3df9e95a6403c03ff33a9bf5cb3f3a1b35fe4255a64df/lollms-1.2.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"329a411cd0db116d85c23ea361d01aaa66a784cb88d2bd2cc5068ba0cf95e871","md5":"c76ac8ebcde860a31578fe8552a61e79","sha256":"8d6e1e2e35244ac6266978707edd4b99a4619e2d46500932eb25875b173ba8c4"},"downloads":-1,"filename":"lollms-1.2.0.tar.gz","has_sig":false,"md5_digest":"c76ac8ebcde860a31578fe8552a61e79","packagetype":"sdist","python_version":"source","requires_python":null,"size":31794620,"upload_time":"2023-06-18T16:27:04","upload_time_iso_8601":"2023-06-18T16:27:04.313938Z","url":"https://files.pythonhosted.org/packages/32/9a/411cd0db116d85c23ea361d01aaa66a784cb88d2bd2cc5068ba0cf95e871/lollms-1.2.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.2.1":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.2.1/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.2.1","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"d9d97bff24b6afd4d6f59b9853b33e7de515bbbf003d89138aca54999e810857","md5":"ed2966dfaebcada1a275e817697e9b3a","sha256":"b817d96e3337332b6672e8ff85df293b3296bde7569e31fb151b2f766c2daf7b"},"downloads":-1,"filename":"lollms-1.2.1-py3-none-any.whl","has_sig":false,"md5_digest":"ed2966dfaebcada1a275e817697e9b3a","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":31888064,"upload_time":"2023-06-18T18:31:28","upload_time_iso_8601":"2023-06-18T18:31:28.640003Z","url":"https://files.pythonhosted.org/packages/d9/d9/7bff24b6afd4d6f59b9853b33e7de515bbbf003d89138aca54999e810857/lollms-1.2.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"930b7d41a2a213c0207b623ba128ebaf85b0ce66f86c87da6ef47852825aa6cc","md5":"6c938cdf3f77b8bd5da933a768a97ad1","sha256":"1e2a0bb2ea8ff4e2058be1a84731d63fbc6922acc0e324a1fae5d843eee10260"},"downloads":-1,"filename":"lollms-1.2.1.tar.gz","has_sig":false,"md5_digest":"6c938cdf3f77b8bd5da933a768a97ad1","packagetype":"sdist","python_version":"source","requires_python":null,"size":31795562,"upload_time":"2023-06-18T18:32:08","upload_time_iso_8601":"2023-06-18T18:32:08.468889Z","url":"https://files.pythonhosted.org/packages/93/0b/7d41a2a213c0207b623ba128ebaf85b0ce66f86c87da6ef47852825aa6cc/lollms-1.2.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.2.10":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.2.10/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.2.10","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"71fdd46e0332dc29995893522b99d2bcc0dfad4bd147b174c2a61123ded04c1a","md5":"9802601cb8bcc847e668f033dde4622f","sha256":"c4830997c382b79f0c12a3b0408498373d159f07a4dec284e82f07be886a451f"},"downloads":-1,"filename":"lollms-1.2.10-py3-none-any.whl","has_sig":false,"md5_digest":"9802601cb8bcc847e668f033dde4622f","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":31888404,"upload_time":"2023-06-19T22:58:37","upload_time_iso_8601":"2023-06-19T22:58:37.743801Z","url":"https://files.pythonhosted.org/packages/71/fd/d46e0332dc29995893522b99d2bcc0dfad4bd147b174c2a61123ded04c1a/lollms-1.2.10-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"e43239b2b1fc323fd3a895997d3766ed153e32e96a90ca98331ec8f90f836291","md5":"2fe101c1493646ea1a8e3b29d3344e09","sha256":"886d9d3dd58570d2016ddea2346252ced9fb83b8307c36e833f8aa733c4dc32d"},"downloads":-1,"filename":"lollms-1.2.10.tar.gz","has_sig":false,"md5_digest":"2fe101c1493646ea1a8e3b29d3344e09","packagetype":"sdist","python_version":"source","requires_python":null,"size":31796136,"upload_time":"2023-06-19T22:58:44","upload_time_iso_8601":"2023-06-19T22:58:44.261088Z","url":"https://files.pythonhosted.org/packages/e4/32/39b2b1fc323fd3a895997d3766ed153e32e96a90ca98331ec8f90f836291/lollms-1.2.10.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.2.11":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.2.11/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.2.11","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"a7694c1879532117895fd747539237909496351e4934740f91090d4c98e4bba6","md5":"d4eaa145297652d377c1a5c30347c82d","sha256":"4b045f01a486467785a0ac7c492013be13a5e38401a2a827e1b64819e77d3351"},"downloads":-1,"filename":"lollms-1.2.11-py3-none-any.whl","has_sig":false,"md5_digest":"d4eaa145297652d377c1a5c30347c82d","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":31417818,"upload_time":"2023-06-20T10:09:54","upload_time_iso_8601":"2023-06-20T10:09:54.507218Z","url":"https://files.pythonhosted.org/packages/a7/69/4c1879532117895fd747539237909496351e4934740f91090d4c98e4bba6/lollms-1.2.11-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"3ee7875ab7ee76d7f7f2894d6fb8bb03676de6f03d365017b255d81a4ccbbe26","md5":"2ba954103ec6cebf3256a5614e6a63c5","sha256":"c368dbe18fee33f83e9d8403ef299262dc46f407f957e5887871af414b3546bd"},"downloads":-1,"filename":"lollms-1.2.11.tar.gz","has_sig":false,"md5_digest":"2ba954103ec6cebf3256a5614e6a63c5","packagetype":"sdist","python_version":"source","requires_python":null,"size":31322709,"upload_time":"2023-06-20T10:10:04","upload_time_iso_8601":"2023-06-20T10:10:04.919197Z","url":"https://files.pythonhosted.org/packages/3e/e7/875ab7ee76d7f7f2894d6fb8bb03676de6f03d365017b255d81a4ccbbe26/lollms-1.2.11.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.2.12":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.2.12/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.2.12","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"1ba89b02a45c6c5982dcd0176aec5b44163c87fb2b83fb7a9ca1f27e4a526f47","md5":"2acf731f88e74027ed8605325ad8c3df","sha256":"49b1f08fe39a058a7e0f992b552716f82f0fccb335119a7a81573cfed9946626"},"downloads":-1,"filename":"lollms-1.2.12-py3-none-any.whl","has_sig":false,"md5_digest":"2acf731f88e74027ed8605325ad8c3df","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":31417820,"upload_time":"2023-06-20T10:12:16","upload_time_iso_8601":"2023-06-20T10:12:16.802680Z","url":"https://files.pythonhosted.org/packages/1b/a8/9b02a45c6c5982dcd0176aec5b44163c87fb2b83fb7a9ca1f27e4a526f47/lollms-1.2.12-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"0cd030e48795d4e3a3268ffa72128bec0f0adc699b2be9e7323283a3fc2b3f19","md5":"033864826687ff864d66d3e6b83ee472","sha256":"580d9a096ee30bd94adb67d954b175c7a04d9fc4171b5f390ac36def7f015847"},"downloads":-1,"filename":"lollms-1.2.12.tar.gz","has_sig":false,"md5_digest":"033864826687ff864d66d3e6b83ee472","packagetype":"sdist","python_version":"source","requires_python":null,"size":31322887,"upload_time":"2023-06-20T10:12:26","upload_time_iso_8601":"2023-06-20T10:12:26.432801Z","url":"https://files.pythonhosted.org/packages/0c/d0/30e48795d4e3a3268ffa72128bec0f0adc699b2be9e7323283a3fc2b3f19/lollms-1.2.12.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.2.14":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.2.14/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.2.14","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"2c6273ee32ff4afc86b4afb38acdf143fc0f9bf78c3d422a441a3eadcb2809d8","md5":"5824808925d36a52a3558903331ee9ef","sha256":"9418c5250ad46b42eb2b70bf5579e3ffc96f8c4e125374895f6b6d6afbc302ca"},"downloads":-1,"filename":"lollms-1.2.14-py3-none-any.whl","has_sig":false,"md5_digest":"5824808925d36a52a3558903331ee9ef","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":31888237,"upload_time":"2023-06-21T06:29:47","upload_time_iso_8601":"2023-06-21T06:29:47.729648Z","url":"https://files.pythonhosted.org/packages/2c/62/73ee32ff4afc86b4afb38acdf143fc0f9bf78c3d422a441a3eadcb2809d8/lollms-1.2.14-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"812f48ab570d181419373d2e40fdf1d3c646aa1fdad5ba08673278aa950ff8a5","md5":"ee25afa2a4ae9a5553b2443e2cc9817b","sha256":"8ab76b0618e3d4b2cd873d4c941bd433fe816580f19289081b61988910c67f7c"},"downloads":-1,"filename":"lollms-1.2.14.tar.gz","has_sig":false,"md5_digest":"ee25afa2a4ae9a5553b2443e2cc9817b","packagetype":"sdist","python_version":"source","requires_python":null,"size":31796879,"upload_time":"2023-06-21T06:29:55","upload_time_iso_8601":"2023-06-21T06:29:55.625594Z","url":"https://files.pythonhosted.org/packages/81/2f/48ab570d181419373d2e40fdf1d3c646aa1fdad5ba08673278aa950ff8a5/lollms-1.2.14.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.2.3":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.2.3/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.2.3","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"4739e8c2e5be35d6ce11e84f6abd1b99e682c3a57103af1533982a2208795770","md5":"19ea41727e8e89c519257677311867bf","sha256":"bfe351a96bf371eb57c891d258bafef9d2281b02227de8fec888cdf17ac78ec7"},"downloads":-1,"filename":"lollms-1.2.3-py3-none-any.whl","has_sig":false,"md5_digest":"19ea41727e8e89c519257677311867bf","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":31888089,"upload_time":"2023-06-18T20:10:16","upload_time_iso_8601":"2023-06-18T20:10:16.932368Z","url":"https://files.pythonhosted.org/packages/47/39/e8c2e5be35d6ce11e84f6abd1b99e682c3a57103af1533982a2208795770/lollms-1.2.3-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"e5a4f1c3c93c4d583864c6873cc02891bc9eab17a22fa8dffbf79aa952c20a2f","md5":"58bd22b3a0e1f048e551616281236477","sha256":"4dae26b2f87080bf8b268666ae3041deb391814bc0530a5f59abe9b7546f72c2"},"downloads":-1,"filename":"lollms-1.2.3.tar.gz","has_sig":false,"md5_digest":"58bd22b3a0e1f048e551616281236477","packagetype":"sdist","python_version":"source","requires_python":null,"size":31795737,"upload_time":"2023-06-18T20:12:31","upload_time_iso_8601":"2023-06-18T20:12:31.637862Z","url":"https://files.pythonhosted.org/packages/e5/a4/f1c3c93c4d583864c6873cc02891bc9eab17a22fa8dffbf79aa952c20a2f/lollms-1.2.3.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.2.4":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.2.4/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.2.4","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"84a1135bb430241f890a31b73d02fb17629e0e0105e7e707519520e52c741403","md5":"cd3bf6536b7fceb6a3d31e255d42b029","sha256":"2b818fd8840f7815450535faa3e17b256c89d5257cbc5f2c380b8add7ffc7d47"},"downloads":-1,"filename":"lollms-1.2.4-py3-none-any.whl","has_sig":false,"md5_digest":"cd3bf6536b7fceb6a3d31e255d42b029","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":31888089,"upload_time":"2023-06-18T20:13:31","upload_time_iso_8601":"2023-06-18T20:13:31.100560Z","url":"https://files.pythonhosted.org/packages/84/a1/135bb430241f890a31b73d02fb17629e0e0105e7e707519520e52c741403/lollms-1.2.4-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"48e6b0fb218f19210cd462f5d00195a34f87362ca6ee4b9e69d68fde32e19ea3","md5":"03c394f8293b5b33f4a76fe4fc67f61e","sha256":"0cb77d532db331425ff0a1f9f96f561902835c455bcf9b733542a5f143a2cbd3"},"downloads":-1,"filename":"lollms-1.2.4.tar.gz","has_sig":false,"md5_digest":"03c394f8293b5b33f4a76fe4fc67f61e","packagetype":"sdist","python_version":"source","requires_python":null,"size":31795667,"upload_time":"2023-06-18T20:13:40","upload_time_iso_8601":"2023-06-18T20:13:40.966696Z","url":"https://files.pythonhosted.org/packages/48/e6/b0fb218f19210cd462f5d00195a34f87362ca6ee4b9e69d68fde32e19ea3/lollms-1.2.4.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.2.6":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.2.6/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.2.6","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"78e8fd7b6b177a8ef21b69d206beaeba2920577054a9913582bb264852fa709b","md5":"cec87e9b0f06fe98cef5fb81b59ee7fa","sha256":"79de48a03a3ccbad2c846384f06767ae46fdff5d07cdc285c6bc40d165d5d8db"},"downloads":-1,"filename":"lollms-1.2.6-py3-none-any.whl","has_sig":false,"md5_digest":"cec87e9b0f06fe98cef5fb81b59ee7fa","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":31887933,"upload_time":"2023-06-18T21:52:59","upload_time_iso_8601":"2023-06-18T21:52:59.595850Z","url":"https://files.pythonhosted.org/packages/78/e8/fd7b6b177a8ef21b69d206beaeba2920577054a9913582bb264852fa709b/lollms-1.2.6-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"1d8677f5fd6196070a2decf901c094067c5822449dd43f9fea7c1b9862c458f2","md5":"c1c841ac6f1faa7f88d457d1c394f771","sha256":"019470816efe59782777d6519aec08ad3f39bf7e418f937997da32927579c78a"},"downloads":-1,"filename":"lollms-1.2.6.tar.gz","has_sig":false,"md5_digest":"c1c841ac6f1faa7f88d457d1c394f771","packagetype":"sdist","python_version":"source","requires_python":null,"size":31795189,"upload_time":"2023-06-18T21:53:53","upload_time_iso_8601":"2023-06-18T21:53:53.936269Z","url":"https://files.pythonhosted.org/packages/1d/86/77f5fd6196070a2decf901c094067c5822449dd43f9fea7c1b9862c458f2/lollms-1.2.6.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.2.7":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.2.7/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.2.7","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"d770943b83f58faf12f330a4501edcf0aff6f0a0a4ecc6d11a62bf634e50f4a0","md5":"c51b419afc1c70dd2d6bb22655499180","sha256":"6c1893e4c816bd32bc1917680e89b2b6c500fb0eabeb9c7a606840077cdda58e"},"downloads":-1,"filename":"lollms-1.2.7-py3-none-any.whl","has_sig":false,"md5_digest":"c51b419afc1c70dd2d6bb22655499180","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":31417461,"upload_time":"2023-06-19T10:04:13","upload_time_iso_8601":"2023-06-19T10:04:13.906057Z","url":"https://files.pythonhosted.org/packages/d7/70/943b83f58faf12f330a4501edcf0aff6f0a0a4ecc6d11a62bf634e50f4a0/lollms-1.2.7-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"eadc8315eaf6fd6140c4b223e6a39dbbcdabf29ae021c2d7cc4a1297b00fdf34","md5":"c36fe9c3122acfe8ea1e540aa78b37f2","sha256":"9bc676924010a84d1dad07cce336e91e73736378359646787f18657dddd6cbaf"},"downloads":-1,"filename":"lollms-1.2.7.tar.gz","has_sig":false,"md5_digest":"c36fe9c3122acfe8ea1e540aa78b37f2","packagetype":"sdist","python_version":"source","requires_python":null,"size":31321961,"upload_time":"2023-06-19T10:04:23","upload_time_iso_8601":"2023-06-19T10:04:23.206281Z","url":"https://files.pythonhosted.org/packages/ea/dc/8315eaf6fd6140c4b223e6a39dbbcdabf29ae021c2d7cc4a1297b00fdf34/lollms-1.2.7.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.2.8":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.2.8/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.2.8","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"432c4943c5cc2a959da82154cd02bc6d2931a83eb21061f2f8fb1eaa6fafeb44","md5":"7c4cfcf21cb1acfd1b04716adacec6b8","sha256":"8f8df3dede637c689170c758b5be550976eb0b2f7ad91c8192719aeb81bdabd2"},"downloads":-1,"filename":"lollms-1.2.8-py3-none-any.whl","has_sig":false,"md5_digest":"7c4cfcf21cb1acfd1b04716adacec6b8","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":31417486,"upload_time":"2023-06-19T10:44:21","upload_time_iso_8601":"2023-06-19T10:44:21.652253Z","url":"https://files.pythonhosted.org/packages/43/2c/4943c5cc2a959da82154cd02bc6d2931a83eb21061f2f8fb1eaa6fafeb44/lollms-1.2.8-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"0ad79a9371ce1d129955fbd70fecc02198b70fe85eeb9e073d27d4608fbe5d57","md5":"3cb670219bb4cfbead9f98c08ef4e25d","sha256":"b2b924ceba0c35af412ebcf1df48e7ad1aefad36d8e2a2e826894962ac3c7043"},"downloads":-1,"filename":"lollms-1.2.8.tar.gz","has_sig":false,"md5_digest":"3cb670219bb4cfbead9f98c08ef4e25d","packagetype":"sdist","python_version":"source","requires_python":null,"size":31321967,"upload_time":"2023-06-19T10:44:30","upload_time_iso_8601":"2023-06-19T10:44:30.888374Z","url":"https://files.pythonhosted.org/packages/0a/d7/9a9371ce1d129955fbd70fecc02198b70fe85eeb9e073d27d4608fbe5d57/lollms-1.2.8.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"1.2.9":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/1.2.9/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"1.2.9","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"b4f7ea24a3eccf72993669738b452faa990311f9249d1dd8ccae1b230a9b69c5","md5":"f7d5118a4746ab0713dcadb572ef7e62","sha256":"469e71bac6ce67d26b6c9804ef84a3439c6fb40caceb43a449306ed999b58859"},"downloads":-1,"filename":"lollms-1.2.9-py3-none-any.whl","has_sig":false,"md5_digest":"f7d5118a4746ab0713dcadb572ef7e62","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":31417562,"upload_time":"2023-06-19T12:38:22","upload_time_iso_8601":"2023-06-19T12:38:22.372632Z","url":"https://files.pythonhosted.org/packages/b4/f7/ea24a3eccf72993669738b452faa990311f9249d1dd8ccae1b230a9b69c5/lollms-1.2.9-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"2e2c24c97af26bba4721526a57633312561a01aa6ad0c86535b29d9b6165c5aa","md5":"125d342a3b5191ede1844ca578ef7520","sha256":"0f3cf82fe5deeead6932ac34157dfc4fbd3774e510c00c6999e2706c65e88983"},"downloads":-1,"filename":"lollms-1.2.9.tar.gz","has_sig":false,"md5_digest":"125d342a3b5191ede1844ca578ef7520","packagetype":"sdist","python_version":"source","requires_python":null,"size":31322181,"upload_time":"2023-06-19T12:38:57","upload_time_iso_8601":"2023-06-19T12:38:57.310156Z","url":"https://files.pythonhosted.org/packages/2e/2c/24c97af26bba4721526a57633312561a01aa6ad0c86535b29d9b6165c5aa/lollms-1.2.9.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.0.0":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.0.0/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.0.0","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"8c66152b8e0cb842a3f2fc4ec14cc1f13c40388923d01edb76cd61e030b736d3","md5":"65878c8d198729099e2e56c61f2535cc","sha256":"430ef0e2d75363095c840bda303ff09bee5f82098ad23e472f8a43038e84c500"},"downloads":-1,"filename":"lollms-2.0.0-py3-none-any.whl","has_sig":false,"md5_digest":"65878c8d198729099e2e56c61f2535cc","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":31883401,"upload_time":"2023-06-21T11:03:22","upload_time_iso_8601":"2023-06-21T11:03:22.913017Z","url":"https://files.pythonhosted.org/packages/8c/66/152b8e0cb842a3f2fc4ec14cc1f13c40388923d01edb76cd61e030b736d3/lollms-2.0.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"fb6303d326a7ca73f32e93d12c08165656367f6048f1065f7193eceee4b945f2","md5":"a73d243e4c07fba5368bd53a9b717212","sha256":"7044f3610c6b8f450722b139e55a7653f0d3c00e6b8095b51b6e8a9d227d6de2"},"downloads":-1,"filename":"lollms-2.0.0.tar.gz","has_sig":false,"md5_digest":"a73d243e4c07fba5368bd53a9b717212","packagetype":"sdist","python_version":"source","requires_python":null,"size":31795167,"upload_time":"2023-06-21T11:03:41","upload_time_iso_8601":"2023-06-21T11:03:41.163347Z","url":"https://files.pythonhosted.org/packages/fb/63/03d326a7ca73f32e93d12c08165656367f6048f1065f7193eceee4b945f2/lollms-2.0.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.0.1":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.0.1/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.0.1","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"ee797a415f4575571d4c8f3561ac9387d6df02cfc3d5f6c6aee1c9df72d2ef8d","md5":"23a98f5f0797a83e657c97f1f0fadb61","sha256":"30dafe7f7618765ec7a558ea34795b123d6dc38c8ffeed0aaa84560f4409f87f"},"downloads":-1,"filename":"lollms-2.0.1-py3-none-any.whl","has_sig":false,"md5_digest":"23a98f5f0797a83e657c97f1f0fadb61","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":31428912,"upload_time":"2023-06-21T12:39:34","upload_time_iso_8601":"2023-06-21T12:39:34.343919Z","url":"https://files.pythonhosted.org/packages/ee/79/7a415f4575571d4c8f3561ac9387d6df02cfc3d5f6c6aee1c9df72d2ef8d/lollms-2.0.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"1cafed824b55ff709e0704da2e5e5f4151d37f77e99cdd323eedfc2951cec75f","md5":"d2fc45dfeff993033495d901be3f7bc2","sha256":"e2e0e71b9022e1e755ad37ce1d0e23f7e1c59e010b0e77444c07deafeb3db209"},"downloads":-1,"filename":"lollms-2.0.1.tar.gz","has_sig":false,"md5_digest":"d2fc45dfeff993033495d901be3f7bc2","packagetype":"sdist","python_version":"source","requires_python":null,"size":31322687,"upload_time":"2023-06-21T12:39:49","upload_time_iso_8601":"2023-06-21T12:39:49.915053Z","url":"https://files.pythonhosted.org/packages/1c/af/ed824b55ff709e0704da2e5e5f4151d37f77e99cdd323eedfc2951cec75f/lollms-2.0.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.0.10":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.0.10/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.0.10","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"c2aa14d15e9e839fd3dec7dafa1e478ce0c2d72f1fc1de0cbc58953b751bdda0","md5":"00b4126fe85f60ce01488b488a903ce3","sha256":"7cff79f781b5a25598ecc2f9077a4757f4bc1488dcd5993ac7793b78765eda8d"},"downloads":-1,"filename":"lollms-2.0.10-py3-none-any.whl","has_sig":false,"md5_digest":"00b4126fe85f60ce01488b488a903ce3","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":32253818,"upload_time":"2023-06-22T08:45:31","upload_time_iso_8601":"2023-06-22T08:45:31.750215Z","url":"https://files.pythonhosted.org/packages/c2/aa/14d15e9e839fd3dec7dafa1e478ce0c2d72f1fc1de0cbc58953b751bdda0/lollms-2.0.10-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"d56beae724fb68075c5efe23f641caeb6f835c3cb3a40951a6d46543bc66d9c7","md5":"bc889e7dcdcd91a9a358cce0b9e9f161","sha256":"c95c0ae043e16d9e3b9122b26f58826236c7551e8c2b7e2600ffbb1e0a817fa9"},"downloads":-1,"filename":"lollms-2.0.10.tar.gz","has_sig":false,"md5_digest":"bc889e7dcdcd91a9a358cce0b9e9f161","packagetype":"sdist","python_version":"source","requires_python":null,"size":32166509,"upload_time":"2023-06-22T08:45:43","upload_time_iso_8601":"2023-06-22T08:45:43.464836Z","url":"https://files.pythonhosted.org/packages/d5/6b/eae724fb68075c5efe23f641caeb6f835c3cb3a40951a6d46543bc66d9c7/lollms-2.0.10.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.0.11":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.0.11/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.0.11","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"d22da0e6b606c1dd115f4a2a86d98cbfb6cdaaae9717e1b5d4b5c53344dd6c88","md5":"a9723196f18e6b41e9234539eea114a2","sha256":"39fd047f9f92b2ff5f586fbbf432af02fa133b34c0db43fba7ae8798aad7f325"},"downloads":-1,"filename":"lollms-2.0.11-py3-none-any.whl","has_sig":false,"md5_digest":"a9723196f18e6b41e9234539eea114a2","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":32254295,"upload_time":"2023-06-22T09:29:35","upload_time_iso_8601":"2023-06-22T09:29:35.393148Z","url":"https://files.pythonhosted.org/packages/d2/2d/a0e6b606c1dd115f4a2a86d98cbfb6cdaaae9717e1b5d4b5c53344dd6c88/lollms-2.0.11-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"6d1d94945efbc1601c00e51da16870f590e56ec2b4b2194f8c560555682c887f","md5":"df34a372fd6915b24f917744e43bc90c","sha256":"4a41bf25290a69fe05661f86440e5cb3f91d604925940bdfc6cf0809ccc6a8d9"},"downloads":-1,"filename":"lollms-2.0.11.tar.gz","has_sig":false,"md5_digest":"df34a372fd6915b24f917744e43bc90c","packagetype":"sdist","python_version":"source","requires_python":null,"size":32166817,"upload_time":"2023-06-22T09:29:51","upload_time_iso_8601":"2023-06-22T09:29:51.008644Z","url":"https://files.pythonhosted.org/packages/6d/1d/94945efbc1601c00e51da16870f590e56ec2b4b2194f8c560555682c887f/lollms-2.0.11.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.0.12":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.0.12/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.0.12","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"0fc3ffb860e1ca8988857af0de2aaefe645b5dc22848cb9e82bb2a23c8bb1b11","md5":"25fee6e380953f3e526bc51ae917c861","sha256":"cc1c09acae4d761891ed7877989269fef6a0bac245d01a48fedbffcf5c1ed164"},"downloads":-1,"filename":"lollms-2.0.12-py3-none-any.whl","has_sig":false,"md5_digest":"25fee6e380953f3e526bc51ae917c861","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":32252612,"upload_time":"2023-06-22T09:37:27","upload_time_iso_8601":"2023-06-22T09:37:27.083619Z","url":"https://files.pythonhosted.org/packages/0f/c3/ffb860e1ca8988857af0de2aaefe645b5dc22848cb9e82bb2a23c8bb1b11/lollms-2.0.12-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"29038058efbd6048d420e6c2b3e1d636a4df8b589268950aeac33faab68a76c1","md5":"2c88442288a85c96dbedb2ac5ca80b4e","sha256":"ff9119b9eaaf993d36cd3bfb5a8f165b0fa8f1215c7066508680ddd0acebd6a2"},"downloads":-1,"filename":"lollms-2.0.12.tar.gz","has_sig":false,"md5_digest":"2c88442288a85c96dbedb2ac5ca80b4e","packagetype":"sdist","python_version":"source","requires_python":null,"size":32164694,"upload_time":"2023-06-22T09:37:48","upload_time_iso_8601":"2023-06-22T09:37:48.551826Z","url":"https://files.pythonhosted.org/packages/29/03/8058efbd6048d420e6c2b3e1d636a4df8b589268950aeac33faab68a76c1/lollms-2.0.12.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.0.13":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.0.13/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.0.13","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"b037577392e578fabfafa4c1c33bef1ef67e1eb9fcfd5d2bb1181335a90c22fe","md5":"7ad36814932e24c76fa9e6edeed53b87","sha256":"a0d294a99e00fd40193a69701fea0d9f9c11255c1eb1dc44bdb26c83682286b6"},"downloads":-1,"filename":"lollms-2.0.13-py3-none-any.whl","has_sig":false,"md5_digest":"7ad36814932e24c76fa9e6edeed53b87","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":32252597,"upload_time":"2023-06-22T09:41:49","upload_time_iso_8601":"2023-06-22T09:41:49.520627Z","url":"https://files.pythonhosted.org/packages/b0/37/577392e578fabfafa4c1c33bef1ef67e1eb9fcfd5d2bb1181335a90c22fe/lollms-2.0.13-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"5bc661722ff203cb1954ae3a22953ca04b2defec3705428bc5f609c0f6900428","md5":"516bc2beb7598e0f475a27a98dddbe0d","sha256":"447106ba4dbf235e2a12edfdb01f34f23f20cb9ad7bd7a00404dffd5531a5755"},"downloads":-1,"filename":"lollms-2.0.13.tar.gz","has_sig":false,"md5_digest":"516bc2beb7598e0f475a27a98dddbe0d","packagetype":"sdist","python_version":"source","requires_python":null,"size":32164815,"upload_time":"2023-06-22T09:41:58","upload_time_iso_8601":"2023-06-22T09:41:58.205463Z","url":"https://files.pythonhosted.org/packages/5b/c6/61722ff203cb1954ae3a22953ca04b2defec3705428bc5f609c0f6900428/lollms-2.0.13.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.0.14":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.0.14/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.0.14","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"8266b1e4dd330b2a9a03b5d1f88a0bef0e8c1809aa2fe6f26d67f8d02b221153","md5":"6aea0670868b2b4441ef26ac95db9cdc","sha256":"636078c7da1fef1ae922131da5dbb52bb1c1675686854c42f277ea2aa0ea2333"},"downloads":-1,"filename":"lollms-2.0.14-py3-none-any.whl","has_sig":false,"md5_digest":"6aea0670868b2b4441ef26ac95db9cdc","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":32252592,"upload_time":"2023-06-22T09:47:27","upload_time_iso_8601":"2023-06-22T09:47:27.276026Z","url":"https://files.pythonhosted.org/packages/82/66/b1e4dd330b2a9a03b5d1f88a0bef0e8c1809aa2fe6f26d67f8d02b221153/lollms-2.0.14-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"0b4d363ce018147ac764c1ed78f9899b79c54d341d582f0fbb5fc68dce6113b1","md5":"90ff18a132b69347e912262fa35655c2","sha256":"1d8b31eecd437ec2a42e64957feecf9a7ebefa9ff4b272c0e27d9ade4f8c77ff"},"downloads":-1,"filename":"lollms-2.0.14.tar.gz","has_sig":false,"md5_digest":"90ff18a132b69347e912262fa35655c2","packagetype":"sdist","python_version":"source","requires_python":null,"size":32164912,"upload_time":"2023-06-22T09:47:45","upload_time_iso_8601":"2023-06-22T09:47:45.765462Z","url":"https://files.pythonhosted.org/packages/0b/4d/363ce018147ac764c1ed78f9899b79c54d341d582f0fbb5fc68dce6113b1/lollms-2.0.14.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.0.15":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.0.15/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.0.15","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"743c6bfd94bbb4e59380dc2355f54c9601b9b6b1dd30621611432c97be673a1c","md5":"41b70a7632f6a0ef06c2545250deef8f","sha256":"798ecd37f5f8d48b8052dd03b2e4c40eea761949e9e9ac4f26c8ef603a023715"},"downloads":-1,"filename":"lollms-2.0.15-py3-none-any.whl","has_sig":false,"md5_digest":"41b70a7632f6a0ef06c2545250deef8f","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":32251407,"upload_time":"2023-06-22T10:35:16","upload_time_iso_8601":"2023-06-22T10:35:16.964378Z","url":"https://files.pythonhosted.org/packages/74/3c/6bfd94bbb4e59380dc2355f54c9601b9b6b1dd30621611432c97be673a1c/lollms-2.0.15-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"675fa070ce0cec3af7721ea3250c92d8fe08a9b58e065084288120c493b6504c","md5":"8d1a0bef22e1f119dfd08ebd369a37e1","sha256":"dc38af343d4114279a54c1519e4cedf4d697fbf0fcc01ebd1c02b4ca7decdd82"},"downloads":-1,"filename":"lollms-2.0.15.tar.gz","has_sig":false,"md5_digest":"8d1a0bef22e1f119dfd08ebd369a37e1","packagetype":"sdist","python_version":"source","requires_python":null,"size":32164855,"upload_time":"2023-06-22T10:35:29","upload_time_iso_8601":"2023-06-22T10:35:29.121597Z","url":"https://files.pythonhosted.org/packages/67/5f/a070ce0cec3af7721ea3250c92d8fe08a9b58e065084288120c493b6504c/lollms-2.0.15.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.0.16":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.0.16/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.0.16","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"3bf00d1f6cc881eec705d3dbec7e13f6f041f0c1663955a5f7889782714866fe","md5":"0acfb5e42eeb52cbc1803bf0c9355a3b","sha256":"3c5ee0a20af2973e7ebab467c6677222400174adadfee3190bce5917c36263f3"},"downloads":-1,"filename":"lollms-2.0.16-py3-none-any.whl","has_sig":false,"md5_digest":"0acfb5e42eeb52cbc1803bf0c9355a3b","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":33529498,"upload_time":"2023-06-22T13:50:57","upload_time_iso_8601":"2023-06-22T13:50:57.872962Z","url":"https://files.pythonhosted.org/packages/3b/f0/0d1f6cc881eec705d3dbec7e13f6f041f0c1663955a5f7889782714866fe/lollms-2.0.16-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"3f6458df3fc705ce6f3cc7ad541fbf76e0bcf3cc1a6beebe7638366fe7a6dc3a","md5":"590473d77f5b1eadfeda5f5b459492dc","sha256":"ffcd78cad192f974a017c0b8b391203284175cd12abf2d88730af8b0ce42f10a"},"downloads":-1,"filename":"lollms-2.0.16.tar.gz","has_sig":false,"md5_digest":"590473d77f5b1eadfeda5f5b459492dc","packagetype":"sdist","python_version":"source","requires_python":null,"size":33443399,"upload_time":"2023-06-22T13:51:14","upload_time_iso_8601":"2023-06-22T13:51:14.940253Z","url":"https://files.pythonhosted.org/packages/3f/64/58df3fc705ce6f3cc7ad541fbf76e0bcf3cc1a6beebe7638366fe7a6dc3a/lollms-2.0.16.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.0.17":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.0.17/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.0.17","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"83ea7a8c709349d3fc8392e95b331ec954c93065686fd630ed15e02adf221cc0","md5":"d9caf164089028569cb82d43d37ff109","sha256":"403e74afbd2cfc29b2d6a4f3fca6931be7fc16511107205051428b6195cc786e"},"downloads":-1,"filename":"lollms-2.0.17-py3-none-any.whl","has_sig":false,"md5_digest":"d9caf164089028569cb82d43d37ff109","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":33530595,"upload_time":"2023-06-22T14:39:05","upload_time_iso_8601":"2023-06-22T14:39:05.683637Z","url":"https://files.pythonhosted.org/packages/83/ea/7a8c709349d3fc8392e95b331ec954c93065686fd630ed15e02adf221cc0/lollms-2.0.17-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"278de0bcefa4552d563dafa618ba7f11316874c25c556daa01499dd499bef829","md5":"25ac5db20bd2eb3abfe358c41659f5b4","sha256":"6c9cfcb052419add8131969a702379b2215334c2314276bc7bd8c986cf7708d9"},"downloads":-1,"filename":"lollms-2.0.17.tar.gz","has_sig":false,"md5_digest":"25ac5db20bd2eb3abfe358c41659f5b4","packagetype":"sdist","python_version":"source","requires_python":null,"size":33444751,"upload_time":"2023-06-22T14:39:15","upload_time_iso_8601":"2023-06-22T14:39:15.561124Z","url":"https://files.pythonhosted.org/packages/27/8d/e0bcefa4552d563dafa618ba7f11316874c25c556daa01499dd499bef829/lollms-2.0.17.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.0.18":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.0.18/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.0.18","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"92a4eca9e6ee26dba8766939b8fcf8cb1ff8e73a42d565599f18d867feed0b15","md5":"e043455a868aea9dc3a27149e3194606","sha256":"8920d9f0177e941337382a9a1ac349a441696081d6280ccc3510f413b2d8f531"},"downloads":-1,"filename":"lollms-2.0.18-py3-none-any.whl","has_sig":false,"md5_digest":"e043455a868aea9dc3a27149e3194606","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":33530659,"upload_time":"2023-06-22T14:43:27","upload_time_iso_8601":"2023-06-22T14:43:27.806994Z","url":"https://files.pythonhosted.org/packages/92/a4/eca9e6ee26dba8766939b8fcf8cb1ff8e73a42d565599f18d867feed0b15/lollms-2.0.18-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"7797801c6db1ce85d02736507788dd59d82c21bbf6de04a118ab885764d1e95c","md5":"69a5eaffe553b803bf78b5deb9fd4552","sha256":"876c87888bc5f6f70515898e74ef3f8ccf609d6fd2ac77db4daaec7c3dce5fe7"},"downloads":-1,"filename":"lollms-2.0.18.tar.gz","has_sig":false,"md5_digest":"69a5eaffe553b803bf78b5deb9fd4552","packagetype":"sdist","python_version":"source","requires_python":null,"size":33444774,"upload_time":"2023-06-22T14:43:46","upload_time_iso_8601":"2023-06-22T14:43:46.389716Z","url":"https://files.pythonhosted.org/packages/77/97/801c6db1ce85d02736507788dd59d82c21bbf6de04a118ab885764d1e95c/lollms-2.0.18.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.0.19":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.0.19/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.0.19","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"2a19d2138861011d4096039293b78bc2d1b6ee42e0d8e8485af829cc92a20250","md5":"9dec2b6b9de7e50cc40a3cdc9936bf7a","sha256":"82bb4c96894ac5f02268bcbff28c77f0ef29f820659e7c162ce6df59dc97374c"},"downloads":-1,"filename":"lollms-2.0.19-py3-none-any.whl","has_sig":false,"md5_digest":"9dec2b6b9de7e50cc40a3cdc9936bf7a","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":518116,"upload_time":"2023-06-22T18:23:33","upload_time_iso_8601":"2023-06-22T18:23:33.955542Z","url":"https://files.pythonhosted.org/packages/2a/19/d2138861011d4096039293b78bc2d1b6ee42e0d8e8485af829cc92a20250/lollms-2.0.19-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"19c77d721d36aced0d3afe3bfb8c5e720dda2a8bfbbbfd3af43293d6a2ab9a85","md5":"ba2c820299d4ea59f8cb46e70692b50a","sha256":"7a1dbdc160227524e3e2eaff4b7575339d78e059f17125b117e7de24596693b4"},"downloads":-1,"filename":"lollms-2.0.19.tar.gz","has_sig":false,"md5_digest":"ba2c820299d4ea59f8cb46e70692b50a","packagetype":"sdist","python_version":"source","requires_python":null,"size":518688,"upload_time":"2023-06-22T18:23:36","upload_time_iso_8601":"2023-06-22T18:23:36.420223Z","url":"https://files.pythonhosted.org/packages/19/c7/7d721d36aced0d3afe3bfb8c5e720dda2a8bfbbbfd3af43293d6a2ab9a85/lollms-2.0.19.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.0.2":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.0.2/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.0.2","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"43a570241d811b65a0d5083b4d4751299ddbc5c052639db62db9c9d568946583","md5":"eaaa81edd94999dbcae9f7b163c0978b","sha256":"17b577dfc31fd008227096c30a83497eac693df7d18e95d6307073524aedadc4"},"downloads":-1,"filename":"lollms-2.0.2-py3-none-any.whl","has_sig":false,"md5_digest":"eaaa81edd94999dbcae9f7b163c0978b","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":31407656,"upload_time":"2023-06-21T14:48:58","upload_time_iso_8601":"2023-06-21T14:48:58.968671Z","url":"https://files.pythonhosted.org/packages/43/a5/70241d811b65a0d5083b4d4751299ddbc5c052639db62db9c9d568946583/lollms-2.0.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f0abf037e513aa52ef5ed91eb707ab0612bf4c4491633e357f7f7e4f45c5a342","md5":"408e6ce0f749b893cd0b2b1c72ee4485","sha256":"991db6d354aa057b23850d3d88c0c706984770b03902557f1c6481d29dab6038"},"downloads":-1,"filename":"lollms-2.0.2.tar.gz","has_sig":false,"md5_digest":"408e6ce0f749b893cd0b2b1c72ee4485","packagetype":"sdist","python_version":"source","requires_python":null,"size":31319769,"upload_time":"2023-06-21T14:49:10","upload_time_iso_8601":"2023-06-21T14:49:10.328222Z","url":"https://files.pythonhosted.org/packages/f0/ab/f037e513aa52ef5ed91eb707ab0612bf4c4491633e357f7f7e4f45c5a342/lollms-2.0.2.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.0.20":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.0.20/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.0.20","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"bb284514d3eecb31e1a04b0138d2b40e096cdc3b9870bc4cd3c0694c3d474e2a","md5":"1fdbd327b6e9ad81fde405f7c67fc3b1","sha256":"89049e3ac63f00550c69cd6e735a67f2933cc6bb3394fe341ee77e88eafdc8aa"},"downloads":-1,"filename":"lollms-2.0.20-py3-none-any.whl","has_sig":false,"md5_digest":"1fdbd327b6e9ad81fde405f7c67fc3b1","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":518105,"upload_time":"2023-06-22T20:15:53","upload_time_iso_8601":"2023-06-22T20:15:53.800223Z","url":"https://files.pythonhosted.org/packages/bb/28/4514d3eecb31e1a04b0138d2b40e096cdc3b9870bc4cd3c0694c3d474e2a/lollms-2.0.20-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"a92f03fed336c0d8ebaec3f873c47c50f8ce7ccfafc33cf44e3e410756acdf2e","md5":"5b1fda1d86f9618d87c2d318117836a0","sha256":"7e4b314c40afd2c27206104bee75dce228e7889d0bdd57c6fe6b996e6c0da9eb"},"downloads":-1,"filename":"lollms-2.0.20.tar.gz","has_sig":false,"md5_digest":"5b1fda1d86f9618d87c2d318117836a0","packagetype":"sdist","python_version":"source","requires_python":null,"size":518669,"upload_time":"2023-06-22T20:15:56","upload_time_iso_8601":"2023-06-22T20:15:56.028506Z","url":"https://files.pythonhosted.org/packages/a9/2f/03fed336c0d8ebaec3f873c47c50f8ce7ccfafc33cf44e3e410756acdf2e/lollms-2.0.20.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.0.21":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.0.21/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.0.21","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"2a49c0eb540e0722f89c7eb18a750bfe628754681dcc6578bf1e2ec02a29914b","md5":"b4061de026d7ac1e8528feef1dbda44a","sha256":"db939c0a1897c9fb6e2d74da58d45487ca9b317e97e3e062b3710e1e8bd05215"},"downloads":-1,"filename":"lollms-2.0.21-py3-none-any.whl","has_sig":false,"md5_digest":"b4061de026d7ac1e8528feef1dbda44a","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":518122,"upload_time":"2023-06-22T21:02:51","upload_time_iso_8601":"2023-06-22T21:02:51.810228Z","url":"https://files.pythonhosted.org/packages/2a/49/c0eb540e0722f89c7eb18a750bfe628754681dcc6578bf1e2ec02a29914b/lollms-2.0.21-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"b85396d65fb560d904a759bba9346ce4c42316593ec05d76204f7be54ab85761","md5":"0acf0895bb8653d30842fe20a924eb85","sha256":"dc2c4512fd7367efe578a6aa488d4f078ce6760cdaa1ce162ca925efdc74cd9d"},"downloads":-1,"filename":"lollms-2.0.21.tar.gz","has_sig":false,"md5_digest":"0acf0895bb8653d30842fe20a924eb85","packagetype":"sdist","python_version":"source","requires_python":null,"size":518702,"upload_time":"2023-06-22T21:02:54","upload_time_iso_8601":"2023-06-22T21:02:54.564727Z","url":"https://files.pythonhosted.org/packages/b8/53/96d65fb560d904a759bba9346ce4c42316593ec05d76204f7be54ab85761/lollms-2.0.21.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.0.22":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.0.22/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.0.22","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"2c9e5c3f473831093a8edb37eb73e60a683441ea648943a6730133e2223eda8c","md5":"e936a7265c227c9504d88a74b0afd0fc","sha256":"065e2ab12c2d4568ffa5e21771b20733480b5db36eade09334b3690fb48d0715"},"downloads":-1,"filename":"lollms-2.0.22-py3-none-any.whl","has_sig":false,"md5_digest":"e936a7265c227c9504d88a74b0afd0fc","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":518139,"upload_time":"2023-06-22T22:36:29","upload_time_iso_8601":"2023-06-22T22:36:29.426006Z","url":"https://files.pythonhosted.org/packages/2c/9e/5c3f473831093a8edb37eb73e60a683441ea648943a6730133e2223eda8c/lollms-2.0.22-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c10ff0f67869f45d4c7760390016a5c9657278f842ae9de525c2424755791501","md5":"4c4a9026aafc65da3165eedf13a9b2ca","sha256":"02f8b381ba698b562c37f9e49490b3e7dd7b947a7a6cb77d725de6218f7100c4"},"downloads":-1,"filename":"lollms-2.0.22.tar.gz","has_sig":false,"md5_digest":"4c4a9026aafc65da3165eedf13a9b2ca","packagetype":"sdist","python_version":"source","requires_python":null,"size":518718,"upload_time":"2023-06-22T22:36:33","upload_time_iso_8601":"2023-06-22T22:36:33.107461Z","url":"https://files.pythonhosted.org/packages/c1/0f/f0f67869f45d4c7760390016a5c9657278f842ae9de525c2424755791501/lollms-2.0.22.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.0.23":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.0.23/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.0.23","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"50ea98ca976f42ad56e246d5b4be2b4beb6985e2eca4e8674ae2b5d33f212c6c","md5":"0e9498ca45f4ae82726e2552f578995b","sha256":"418c42e1869f120c4e823bbff519c2ecd4f9be79bb2fabd7d1fdc643b0511bcf"},"downloads":-1,"filename":"lollms-2.0.23-py3-none-any.whl","has_sig":false,"md5_digest":"0e9498ca45f4ae82726e2552f578995b","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":518040,"upload_time":"2023-06-22T22:43:18","upload_time_iso_8601":"2023-06-22T22:43:18.697083Z","url":"https://files.pythonhosted.org/packages/50/ea/98ca976f42ad56e246d5b4be2b4beb6985e2eca4e8674ae2b5d33f212c6c/lollms-2.0.23-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"17e23da8d77c8db86545ddb1652506e21a7d9fea184e3da07a8cee601a70448e","md5":"b48123b0487e959f291a571012d19218","sha256":"60c804dcfda46627c5b4e1f37f796c07f4399ccc7de4f728743510041f086a9c"},"downloads":-1,"filename":"lollms-2.0.23.tar.gz","has_sig":false,"md5_digest":"b48123b0487e959f291a571012d19218","packagetype":"sdist","python_version":"source","requires_python":null,"size":518618,"upload_time":"2023-06-22T22:43:22","upload_time_iso_8601":"2023-06-22T22:43:22.450296Z","url":"https://files.pythonhosted.org/packages/17/e2/3da8d77c8db86545ddb1652506e21a7d9fea184e3da07a8cee601a70448e/lollms-2.0.23.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.0.24":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.0.24/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.0.24","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"732d9d07ab0de2f7a5eebfa70e53a3eefdbaab1bd329cfeefe59773728902b8b","md5":"57f7470434a746fa4589810317a3e2db","sha256":"d9ae5b6f4587813f014a144f4084a9bae394bdcc296bd67a175e23b179395107"},"downloads":-1,"filename":"lollms-2.0.24-py3-none-any.whl","has_sig":false,"md5_digest":"57f7470434a746fa4589810317a3e2db","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":33530822,"upload_time":"2023-06-23T09:32:51","upload_time_iso_8601":"2023-06-23T09:32:51.624733Z","url":"https://files.pythonhosted.org/packages/73/2d/9d07ab0de2f7a5eebfa70e53a3eefdbaab1bd329cfeefe59773728902b8b/lollms-2.0.24-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"550ee958eef8dfb63a58d46ce1b6353620277cd57d172b3588e24179888b5253","md5":"f5eaaa883d09f5f9dfeb393b1e634a36","sha256":"7db244b816ede8e55234e78399e9410ee8745340ee54648cef6279dc09e8cf57"},"downloads":-1,"filename":"lollms-2.0.24.tar.gz","has_sig":false,"md5_digest":"f5eaaa883d09f5f9dfeb393b1e634a36","packagetype":"sdist","python_version":"source","requires_python":null,"size":46463,"upload_time":"2023-06-23T09:33:13","upload_time_iso_8601":"2023-06-23T09:33:13.451304Z","url":"https://files.pythonhosted.org/packages/55/0e/e958eef8dfb63a58d46ce1b6353620277cd57d172b3588e24179888b5253/lollms-2.0.24.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.0.25":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.0.25/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.0.25","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"f0a26996f7ac006667c997e163c7dd5f14d3e5b73bead55b40d039227ce3e007","md5":"c0e7a84e28bdfa4272c98abfbfc9e2f9","sha256":"d3ea048053769132a4733d83367933819640e130450d93fa0bf5ecaec5b0380d"},"downloads":-1,"filename":"lollms-2.0.25-py3-none-any.whl","has_sig":false,"md5_digest":"c0e7a84e28bdfa4272c98abfbfc9e2f9","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":47373,"upload_time":"2023-06-23T10:09:58","upload_time_iso_8601":"2023-06-23T10:09:58.724940Z","url":"https://files.pythonhosted.org/packages/f0/a2/6996f7ac006667c997e163c7dd5f14d3e5b73bead55b40d039227ce3e007/lollms-2.0.25-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"b1c2cfd061f788ac0ace95c8bc500d4512cc34c826e000bfae0c98ed83ee71ed","md5":"120d82cdb784735f6b70ac75cddea5c2","sha256":"8af39290040ca2842cccb4253d691ba93eb18263d35f0b741f222347f2f75909"},"downloads":-1,"filename":"lollms-2.0.25.tar.gz","has_sig":false,"md5_digest":"120d82cdb784735f6b70ac75cddea5c2","packagetype":"sdist","python_version":"source","requires_python":null,"size":46458,"upload_time":"2023-06-23T10:10:01","upload_time_iso_8601":"2023-06-23T10:10:01.532642Z","url":"https://files.pythonhosted.org/packages/b1/c2/cfd061f788ac0ace95c8bc500d4512cc34c826e000bfae0c98ed83ee71ed/lollms-2.0.25.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.0.26":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.0.26/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.0.26","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"cf0cdefaf62e835db70d3dbd46328d620f7b2a06004cc4cdb09eb944e4502702","md5":"3682f0fc98a09880623db0b35fc63299","sha256":"e0d5360f081393c2015c7c3581aca64d7ae058e0a6e9aa415b7d7146ba7e5307"},"downloads":-1,"filename":"lollms-2.0.26-py3-none-any.whl","has_sig":false,"md5_digest":"3682f0fc98a09880623db0b35fc63299","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":518423,"upload_time":"2023-06-25T17:32:03","upload_time_iso_8601":"2023-06-25T17:32:03.776949Z","url":"https://files.pythonhosted.org/packages/cf/0c/defaf62e835db70d3dbd46328d620f7b2a06004cc4cdb09eb944e4502702/lollms-2.0.26-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"61492e7d403c822371912e6f598a94de7ed700a9bb9aaed6b5160353b819742e","md5":"e2d1e669f8e6988e8725940667c303b1","sha256":"ab172ce5b3ff352a8822c3260a0cfe60db5fe17ddb07f7bbf762d9ced126267b"},"downloads":-1,"filename":"lollms-2.0.26.tar.gz","has_sig":false,"md5_digest":"e2d1e669f8e6988e8725940667c303b1","packagetype":"sdist","python_version":"source","requires_python":null,"size":519001,"upload_time":"2023-06-25T17:32:05","upload_time_iso_8601":"2023-06-25T17:32:05.962297Z","url":"https://files.pythonhosted.org/packages/61/49/2e7d403c822371912e6f598a94de7ed700a9bb9aaed6b5160353b819742e/lollms-2.0.26.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.0.27":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.0.27/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.0.27","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"cc6589fd491057e01dc3706c4d45130f685696ed53f5b3cf8aec9911e802b17e","md5":"3be160c4ba44f0e9e297b7225f77a86d","sha256":"6823b511c564a45f99f9174eca38ab5e1ca1e7d289a5dcb1f2b4208d6b14f9cf"},"downloads":-1,"filename":"lollms-2.0.27-py3-none-any.whl","has_sig":false,"md5_digest":"3be160c4ba44f0e9e297b7225f77a86d","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":47458,"upload_time":"2023-06-27T09:12:12","upload_time_iso_8601":"2023-06-27T09:12:12.921123Z","url":"https://files.pythonhosted.org/packages/cc/65/89fd491057e01dc3706c4d45130f685696ed53f5b3cf8aec9911e802b17e/lollms-2.0.27-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"ad4b5ad79758efc56b36631f389614be339bb54e560dbbb176204f1e995c3c14","md5":"ff30dac8072c73b3473169150f4e13b0","sha256":"c2016e5d4d48a71d1b6ebf5d778ab8cd7270d68a4e1fc4081cea2d7a5ccc04e1"},"downloads":-1,"filename":"lollms-2.0.27.tar.gz","has_sig":false,"md5_digest":"ff30dac8072c73b3473169150f4e13b0","packagetype":"sdist","python_version":"source","requires_python":null,"size":46539,"upload_time":"2023-06-27T09:12:15","upload_time_iso_8601":"2023-06-27T09:12:15.428579Z","url":"https://files.pythonhosted.org/packages/ad/4b/5ad79758efc56b36631f389614be339bb54e560dbbb176204f1e995c3c14/lollms-2.0.27.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.0.28":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.0.28/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.0.28","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"0f3178f6ea6de0ba98a7dbec8bdc1d239ea916fa06c1bc1a921deb24701770e3","md5":"188d4e6169676b63f2b35f919b4d2ed6","sha256":"f2768c73a1144b0ddb9ca240cb0ced472b2e6ba161d0c2b18c2b281a57a6326c"},"downloads":-1,"filename":"lollms-2.0.28-py3-none-any.whl","has_sig":false,"md5_digest":"188d4e6169676b63f2b35f919b4d2ed6","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":518573,"upload_time":"2023-06-28T21:32:08","upload_time_iso_8601":"2023-06-28T21:32:08.739852Z","url":"https://files.pythonhosted.org/packages/0f/31/78f6ea6de0ba98a7dbec8bdc1d239ea916fa06c1bc1a921deb24701770e3/lollms-2.0.28-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"8b2d5abe4bdf8abc542eca4c59d9b36d1ce703860a9beebccd67d66c459ef22a","md5":"4fbc379707d288eeda9cebfa727f583b","sha256":"0d1fd4fd5d74c4aaa0f320342c9819ada87f9dd6bad73c70791607dfed698cdf"},"downloads":-1,"filename":"lollms-2.0.28.tar.gz","has_sig":false,"md5_digest":"4fbc379707d288eeda9cebfa727f583b","packagetype":"sdist","python_version":"source","requires_python":null,"size":519097,"upload_time":"2023-06-28T21:32:11","upload_time_iso_8601":"2023-06-28T21:32:11.334191Z","url":"https://files.pythonhosted.org/packages/8b/2d/5abe4bdf8abc542eca4c59d9b36d1ce703860a9beebccd67d66c459ef22a/lollms-2.0.28.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.0.3":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.0.3/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.0.3","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"2efa986ec821eabf78b3bb4d4d106e6e62954899b2dfe0ea2c173340d426f6f1","md5":"bb6b2cfeb1112f1926726fb16af96cf6","sha256":"86b4c015e908b30aaa242a3dae444537b832d1bde8d35dcb536c91e142e30a45"},"downloads":-1,"filename":"lollms-2.0.3-py3-none-any.whl","has_sig":false,"md5_digest":"bb6b2cfeb1112f1926726fb16af96cf6","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":31407659,"upload_time":"2023-06-21T15:25:33","upload_time_iso_8601":"2023-06-21T15:25:33.079247Z","url":"https://files.pythonhosted.org/packages/2e/fa/986ec821eabf78b3bb4d4d106e6e62954899b2dfe0ea2c173340d426f6f1/lollms-2.0.3-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"be9bf327aac885f57a384c7ff6a9407af8a9a498eaeb243c78d6a5095ad9e043","md5":"ba278763b7c0e289e657a13f042281e1","sha256":"b664bbfe4f67b67d2617f755ac1cee0c86bde1e09314d26c342c1bd314c500a8"},"downloads":-1,"filename":"lollms-2.0.3.tar.gz","has_sig":false,"md5_digest":"ba278763b7c0e289e657a13f042281e1","packagetype":"sdist","python_version":"source","requires_python":null,"size":31319831,"upload_time":"2023-06-21T15:25:44","upload_time_iso_8601":"2023-06-21T15:25:44.354105Z","url":"https://files.pythonhosted.org/packages/be/9b/f327aac885f57a384c7ff6a9407af8a9a498eaeb243c78d6a5095ad9e043/lollms-2.0.3.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.0.30":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.0.30/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.0.30","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"79bbc9c76a1abdd2ae4086c44033154c2c0ff0318cf932f3151e3dfda0212f25","md5":"bbbfb8db08f0bd3a337313095f371758","sha256":"34f36a998f98d30cca036cb18639639ac959ae1a72cb3f5ed7cfced71fe42760"},"downloads":-1,"filename":"lollms-2.0.30-py3-none-any.whl","has_sig":false,"md5_digest":"bbbfb8db08f0bd3a337313095f371758","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":47791,"upload_time":"2023-06-29T09:32:48","upload_time_iso_8601":"2023-06-29T09:32:48.460669Z","url":"https://files.pythonhosted.org/packages/79/bb/c9c76a1abdd2ae4086c44033154c2c0ff0318cf932f3151e3dfda0212f25/lollms-2.0.30-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"bd4a4836b51025d1d1249980aa7b901b5c11e7b45fac238e73fe75cf90cd6184","md5":"53c90bfadb9c9e18698daedb6f9b9195","sha256":"495c3f2957a5b4479b8f38d931c2bac1075dade47d05c4dd6c1e96e1bd24af63"},"downloads":-1,"filename":"lollms-2.0.30.tar.gz","has_sig":false,"md5_digest":"53c90bfadb9c9e18698daedb6f9b9195","packagetype":"sdist","python_version":"source","requires_python":null,"size":46863,"upload_time":"2023-06-29T09:32:56","upload_time_iso_8601":"2023-06-29T09:32:56.056183Z","url":"https://files.pythonhosted.org/packages/bd/4a/4836b51025d1d1249980aa7b901b5c11e7b45fac238e73fe75cf90cd6184/lollms-2.0.30.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.0.31":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.0.31/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.0.31","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"3fdfe5eece21cc0678a8b3444e72cc79662619661df351eac8b294c52fc1d7f0","md5":"a803a3d11b82fb125536dfed44d3b691","sha256":"8940657d0f76ce024286189a9fa4db283d6abaa95060a2f528d2a35a300d92ca"},"downloads":-1,"filename":"lollms-2.0.31-py3-none-any.whl","has_sig":false,"md5_digest":"a803a3d11b82fb125536dfed44d3b691","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":47798,"upload_time":"2023-06-29T09:33:51","upload_time_iso_8601":"2023-06-29T09:33:51.322299Z","url":"https://files.pythonhosted.org/packages/3f/df/e5eece21cc0678a8b3444e72cc79662619661df351eac8b294c52fc1d7f0/lollms-2.0.31-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"251e1964e6a0dd888e3c12822e9da85d6e69c49ce33eb563acdef4dae8ed234a","md5":"9a876b25dead9a6e9360c5987ca76bd5","sha256":"12b1caccb73198b9812a9e169311d9d1557805ff2ede5909500f09f8b5c01600"},"downloads":-1,"filename":"lollms-2.0.31.tar.gz","has_sig":false,"md5_digest":"9a876b25dead9a6e9360c5987ca76bd5","packagetype":"sdist","python_version":"source","requires_python":null,"size":46881,"upload_time":"2023-06-29T09:33:56","upload_time_iso_8601":"2023-06-29T09:33:56.603003Z","url":"https://files.pythonhosted.org/packages/25/1e/1964e6a0dd888e3c12822e9da85d6e69c49ce33eb563acdef4dae8ed234a/lollms-2.0.31.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.0.32":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.0.32/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.0.32","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"bd15483e7de4a466d3d8499dbb31d9a9585322ceb75c3b9df89cc1506540cc2c","md5":"0ab9b687a54e3b9b74b341768abf14a5","sha256":"ecae7f24e91eb0ba6e987b7c8f43b910926b263979731ff9b059c45439096b3c"},"downloads":-1,"filename":"lollms-2.0.32-py3-none-any.whl","has_sig":false,"md5_digest":"0ab9b687a54e3b9b74b341768abf14a5","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":47812,"upload_time":"2023-06-29T12:47:52","upload_time_iso_8601":"2023-06-29T12:47:52.669462Z","url":"https://files.pythonhosted.org/packages/bd/15/483e7de4a466d3d8499dbb31d9a9585322ceb75c3b9df89cc1506540cc2c/lollms-2.0.32-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"64957ada4f1cecc5dc65c6e9495d348136d15fd8c0c6ccedfdc991c2171c1026","md5":"3541b69ed204dd9bcbf47cdb800bb67a","sha256":"93d0ce6af951addc754554899edcc79f7031f8b6f15e434d6c13232ecd78b9a2"},"downloads":-1,"filename":"lollms-2.0.32.tar.gz","has_sig":false,"md5_digest":"3541b69ed204dd9bcbf47cdb800bb67a","packagetype":"sdist","python_version":"source","requires_python":null,"size":46880,"upload_time":"2023-06-29T12:47:54","upload_time_iso_8601":"2023-06-29T12:47:54.854620Z","url":"https://files.pythonhosted.org/packages/64/95/7ada4f1cecc5dc65c6e9495d348136d15fd8c0c6ccedfdc991c2171c1026/lollms-2.0.32.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.0.4":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.0.4/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.0.4","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"eff98d14b714f38f450a805a12c6c02e1f8db65c7d7f890d1c8cc4d040f77d62","md5":"abd41ff133e7e60da4857c4a8742cafd","sha256":"0071019162060b5076fb894c107c1e14b2de1520aab9fa20207d5f73338e1de6"},"downloads":-1,"filename":"lollms-2.0.4-py3-none-any.whl","has_sig":false,"md5_digest":"abd41ff133e7e60da4857c4a8742cafd","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":31407665,"upload_time":"2023-06-21T15:32:34","upload_time_iso_8601":"2023-06-21T15:32:34.270471Z","url":"https://files.pythonhosted.org/packages/ef/f9/8d14b714f38f450a805a12c6c02e1f8db65c7d7f890d1c8cc4d040f77d62/lollms-2.0.4-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"3696a1744a72af7fca05d526893d74b168c569533b645869a642c6e1b80b1243","md5":"b7431a25e5f1b8a300d59ddae0d5c2c8","sha256":"0a8b912a108f9e30c2621ab3e8f9d16b2d3b69eea3dfab73c4fe963737b59976"},"downloads":-1,"filename":"lollms-2.0.4.tar.gz","has_sig":false,"md5_digest":"b7431a25e5f1b8a300d59ddae0d5c2c8","packagetype":"sdist","python_version":"source","requires_python":null,"size":31319848,"upload_time":"2023-06-21T15:32:46","upload_time_iso_8601":"2023-06-21T15:32:46.318325Z","url":"https://files.pythonhosted.org/packages/36/96/a1744a72af7fca05d526893d74b168c569533b645869a642c6e1b80b1243/lollms-2.0.4.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.0.5":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.0.5/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.0.5","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"131220a6be4963163eb5b2b8189cbad8ce7f15f3289cd283d07cd2d042ca617a","md5":"c6a5db664f3ee421f5f86a2a9c4f0a53","sha256":"16e2c9f4d5cbc8cdcbb4eb96b725d09071c63f68ae7c25a4c953b05827c788ff"},"downloads":-1,"filename":"lollms-2.0.5-py3-none-any.whl","has_sig":false,"md5_digest":"c6a5db664f3ee421f5f86a2a9c4f0a53","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":31407663,"upload_time":"2023-06-21T15:37:55","upload_time_iso_8601":"2023-06-21T15:37:55.637037Z","url":"https://files.pythonhosted.org/packages/13/12/20a6be4963163eb5b2b8189cbad8ce7f15f3289cd283d07cd2d042ca617a/lollms-2.0.5-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c6e2e79f7191ab6b6717cc398aac37dc3cb341a3ff86bfe64b6cadd6f1c997fd","md5":"e6bbee53256f9fbffffb61c940394645","sha256":"55c1fde111d079996b0c0644ff7d07770a153b1291d741e2a71b415a00994806"},"downloads":-1,"filename":"lollms-2.0.5.tar.gz","has_sig":false,"md5_digest":"e6bbee53256f9fbffffb61c940394645","packagetype":"sdist","python_version":"source","requires_python":null,"size":31319839,"upload_time":"2023-06-21T15:38:12","upload_time_iso_8601":"2023-06-21T15:38:12.153544Z","url":"https://files.pythonhosted.org/packages/c6/e2/e79f7191ab6b6717cc398aac37dc3cb341a3ff86bfe64b6cadd6f1c997fd/lollms-2.0.5.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.0.6":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.0.6/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.0.6","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"a24ec4bc49c0161edd1d8be2ce4811d2f8dfd8a54b3b18bca17815b1f74d7a2d","md5":"b1c50272b1d4f713b0b5edd02f00b4b8","sha256":"be5faa80c1ac0db01e477a85ff3c2963eca2c12ec1f69abd0015b885abb622db"},"downloads":-1,"filename":"lollms-2.0.6-py3-none-any.whl","has_sig":false,"md5_digest":"b1c50272b1d4f713b0b5edd02f00b4b8","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":31884148,"upload_time":"2023-06-21T20:33:24","upload_time_iso_8601":"2023-06-21T20:33:24.150714Z","url":"https://files.pythonhosted.org/packages/a2/4e/c4bc49c0161edd1d8be2ce4811d2f8dfd8a54b3b18bca17815b1f74d7a2d/lollms-2.0.6-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"5de0393d8d71f524c8880a12e0f01644a9ff4fcada670da05b236cf32499cb47","md5":"74fb722b6f246f0b6f11075f695af92f","sha256":"0dfcec1b245c1aa0f2880e92909eae89748b5cde6481c367432ce87568eaee85"},"downloads":-1,"filename":"lollms-2.0.6.tar.gz","has_sig":false,"md5_digest":"74fb722b6f246f0b6f11075f695af92f","packagetype":"sdist","python_version":"source","requires_python":null,"size":31791309,"upload_time":"2023-06-21T20:33:36","upload_time_iso_8601":"2023-06-21T20:33:36.802509Z","url":"https://files.pythonhosted.org/packages/5d/e0/393d8d71f524c8880a12e0f01644a9ff4fcada670da05b236cf32499cb47/lollms-2.0.6.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.0.8":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.0.8/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.0.8","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"0fb31e893bd76bc6ff6a966f4cc48057ae5c64da379bf1fd0f450894d7fe9c44","md5":"924a7130f7d3bbfbf0c7579236af2d7c","sha256":"5a38cb7ddf9ac188a87154855bc7c2eda3a325e86b53c86a42f58f72bba531e6"},"downloads":-1,"filename":"lollms-2.0.8-py3-none-any.whl","has_sig":false,"md5_digest":"924a7130f7d3bbfbf0c7579236af2d7c","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":31884147,"upload_time":"2023-06-21T23:37:36","upload_time_iso_8601":"2023-06-21T23:37:36.217155Z","url":"https://files.pythonhosted.org/packages/0f/b3/1e893bd76bc6ff6a966f4cc48057ae5c64da379bf1fd0f450894d7fe9c44/lollms-2.0.8-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"fe3d85cbf5d99367a136ba4a9f76c11b9b36b75a37c1f317ca08c18bb879251d","md5":"533e076787fe1e336ed2674703305972","sha256":"093923901886eca051f6a28c724e47e60e422d01505afed87353b7424e20f968"},"downloads":-1,"filename":"lollms-2.0.8.tar.gz","has_sig":false,"md5_digest":"533e076787fe1e336ed2674703305972","packagetype":"sdist","python_version":"source","requires_python":null,"size":31791875,"upload_time":"2023-06-21T23:38:22","upload_time_iso_8601":"2023-06-21T23:38:22.016968Z","url":"https://files.pythonhosted.org/packages/fe/3d/85cbf5d99367a136ba4a9f76c11b9b36b75a37c1f317ca08c18bb879251d/lollms-2.0.8.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.0.9":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.0.9/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.0.9","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"6abe32cea5208b810dccd20084c623cc6459bff3824f2e4762a7f0a5cab34fd0","md5":"f81292241d87622a2cb25059f484dd11","sha256":"06a2444478a836301e15b1f51f28dddf29c6e1a38ffc67c7ca53d5102bc3a865"},"downloads":-1,"filename":"lollms-2.0.9-py3-none-any.whl","has_sig":false,"md5_digest":"f81292241d87622a2cb25059f484dd11","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":31743435,"upload_time":"2023-06-22T07:52:49","upload_time_iso_8601":"2023-06-22T07:52:49.470680Z","url":"https://files.pythonhosted.org/packages/6a/be/32cea5208b810dccd20084c623cc6459bff3824f2e4762a7f0a5cab34fd0/lollms-2.0.9-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f72359924eb30ff925f9b89b804b50c44e31e449c84b197afa54dc9cd6c58eee","md5":"d379180920d29b59781d57bfd281ca18","sha256":"764602589fe21f43cc3839a66755e9224ddfc2a486c23a4f605f3753ece03478"},"downloads":-1,"filename":"lollms-2.0.9.tar.gz","has_sig":false,"md5_digest":"d379180920d29b59781d57bfd281ca18","packagetype":"sdist","python_version":"source","requires_python":null,"size":31655142,"upload_time":"2023-06-22T07:53:00","upload_time_iso_8601":"2023-06-22T07:53:00.707195Z","url":"https://files.pythonhosted.org/packages/f7/23/59924eb30ff925f9b89b804b50c44e31e449c84b197afa54dc9cd6c58eee/lollms-2.0.9.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.0":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.0/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.0","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"a21ab13a364c50b7d26c5899620e90e439ed9b649838c87c21932d3b412aeea5","md5":"0673d03961e00a6238f52a9649ea4560","sha256":"bb6a1310814da94976a11da49c92f60cfc01259173c044405b52bd7640804958"},"downloads":-1,"filename":"lollms-2.1.0-py3-none-any.whl","has_sig":false,"md5_digest":"0673d03961e00a6238f52a9649ea4560","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":518937,"upload_time":"2023-06-29T21:26:36","upload_time_iso_8601":"2023-06-29T21:26:36.190445Z","url":"https://files.pythonhosted.org/packages/a2/1a/b13a364c50b7d26c5899620e90e439ed9b649838c87c21932d3b412aeea5/lollms-2.1.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"50fcc13d39e964cb72d858cc0b0d10019a75a210a25802e174c504e03c8568d7","md5":"1ba1a7b71f151371b4a56fe7dacf44d7","sha256":"937f708d10a8ebb84a610e6729e5bf9daa21e317de9936fa179bde9e6641219c"},"downloads":-1,"filename":"lollms-2.1.0.tar.gz","has_sig":false,"md5_digest":"1ba1a7b71f151371b4a56fe7dacf44d7","packagetype":"sdist","python_version":"source","requires_python":null,"size":519410,"upload_time":"2023-06-29T21:26:39","upload_time_iso_8601":"2023-06-29T21:26:39.801344Z","url":"https://files.pythonhosted.org/packages/50/fc/c13d39e964cb72d858cc0b0d10019a75a210a25802e174c504e03c8568d7/lollms-2.1.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.1":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.1/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.1","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"236a39fec7c6faa4dc95e9bf39193fee65d9c6387f8cc365304b74a3b9fb841a","md5":"9201a665a1a70c5aab8b1d6215b57f63","sha256":"f0d103087f4430ab772c22e9070cca70a5103408b96ef7a951d6204f32203df7"},"downloads":-1,"filename":"lollms-2.1.1-py3-none-any.whl","has_sig":false,"md5_digest":"9201a665a1a70c5aab8b1d6215b57f63","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":518968,"upload_time":"2023-06-29T21:34:57","upload_time_iso_8601":"2023-06-29T21:34:57.804375Z","url":"https://files.pythonhosted.org/packages/23/6a/39fec7c6faa4dc95e9bf39193fee65d9c6387f8cc365304b74a3b9fb841a/lollms-2.1.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"15748f7bd990ba10e69b130eef228e7ff8df1dc2862b50a2a3c66fe896adb33c","md5":"ae8a29e99a29dd131bff2b0e048db8f7","sha256":"4b03bb633e1145dcd2477a4b964a0a94cac95f009a12c00a73c67202a5375769"},"downloads":-1,"filename":"lollms-2.1.1.tar.gz","has_sig":false,"md5_digest":"ae8a29e99a29dd131bff2b0e048db8f7","packagetype":"sdist","python_version":"source","requires_python":null,"size":519444,"upload_time":"2023-06-29T21:34:59","upload_time_iso_8601":"2023-06-29T21:34:59.963607Z","url":"https://files.pythonhosted.org/packages/15/74/8f7bd990ba10e69b130eef228e7ff8df1dc2862b50a2a3c66fe896adb33c/lollms-2.1.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.10":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.10/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.10","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"c016e358221ed420ee07f8a1dbd57ef28211cf27bb6501a555898e2740f1a388","md5":"93a658382c131075f73f3e0550cf5d90","sha256":"2d2c560aac89876cf51310c560523c286b05789140c3231cc6c16446eb657e33"},"downloads":-1,"filename":"lollms-2.1.10-py3-none-any.whl","has_sig":false,"md5_digest":"93a658382c131075f73f3e0550cf5d90","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":519072,"upload_time":"2023-06-29T22:46:48","upload_time_iso_8601":"2023-06-29T22:46:48.601266Z","url":"https://files.pythonhosted.org/packages/c0/16/e358221ed420ee07f8a1dbd57ef28211cf27bb6501a555898e2740f1a388/lollms-2.1.10-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"61814322bc22cb892569a3c1eba861d66f65d0ed909d7f07997ecca2f93f0583","md5":"abffbfbf9153907c92276afdb1d9b8cf","sha256":"764d51d3de6f83c86c74134d6d19c516cbdf22fb4403fd419674762b143f6dae"},"downloads":-1,"filename":"lollms-2.1.10.tar.gz","has_sig":false,"md5_digest":"abffbfbf9153907c92276afdb1d9b8cf","packagetype":"sdist","python_version":"source","requires_python":null,"size":519502,"upload_time":"2023-06-29T22:46:53","upload_time_iso_8601":"2023-06-29T22:46:53.092032Z","url":"https://files.pythonhosted.org/packages/61/81/4322bc22cb892569a3c1eba861d66f65d0ed909d7f07997ecca2f93f0583/lollms-2.1.10.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.11":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.11/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.11","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"209d577c8d2ccb1cbdbf12999e3db29ea7459a74f733bdd6aaf91cde21a604d1","md5":"130003e4938173a734b3d3f5058eadf3","sha256":"a07074ff049ab788f5347f7caf3bd1ec232c1410e907b9a846eb296aa8dbc94b"},"downloads":-1,"filename":"lollms-2.1.11-py3-none-any.whl","has_sig":false,"md5_digest":"130003e4938173a734b3d3f5058eadf3","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":519206,"upload_time":"2023-06-30T19:38:35","upload_time_iso_8601":"2023-06-30T19:38:35.370872Z","url":"https://files.pythonhosted.org/packages/20/9d/577c8d2ccb1cbdbf12999e3db29ea7459a74f733bdd6aaf91cde21a604d1/lollms-2.1.11-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c9bc186cd8209b057711f42fbfa46975a6d465bb1c32ed72bc44f39b98d4e172","md5":"ee9898b3c12f6438381bb79f501e9399","sha256":"7b294f6a0e5f37ff004b11cc1893ad93767d93c6442a9b5960382467eb6bc8a9"},"downloads":-1,"filename":"lollms-2.1.11.tar.gz","has_sig":false,"md5_digest":"ee9898b3c12f6438381bb79f501e9399","packagetype":"sdist","python_version":"source","requires_python":null,"size":519618,"upload_time":"2023-06-30T19:38:40","upload_time_iso_8601":"2023-06-30T19:38:40.897199Z","url":"https://files.pythonhosted.org/packages/c9/bc/186cd8209b057711f42fbfa46975a6d465bb1c32ed72bc44f39b98d4e172/lollms-2.1.11.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.12":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.12/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.12","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"3aab4b1f2f98d9c2aa8a6db367a14982743c7983125aa986dfb7608fe41cc6f8","md5":"53658b5f46700e0e3f8a49d8e49edc21","sha256":"8be9d1780befe0995c08a8ad058468e690739bf4b5f3544740098d58ba1c60f8"},"downloads":-1,"filename":"lollms-2.1.12-py3-none-any.whl","has_sig":false,"md5_digest":"53658b5f46700e0e3f8a49d8e49edc21","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":520516,"upload_time":"2023-07-02T17:52:28","upload_time_iso_8601":"2023-07-02T17:52:28.606154Z","url":"https://files.pythonhosted.org/packages/3a/ab/4b1f2f98d9c2aa8a6db367a14982743c7983125aa986dfb7608fe41cc6f8/lollms-2.1.12-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"48ceb1015f58a49b377dbea0449d3b733c96d65fccea62806768c9bd14706088","md5":"f6a11b1953d10fcb1a07cc4633f6887e","sha256":"083295bb5ccf3afa56fee227ee2c6a06cfb15a28839615615e7f368f108e399f"},"downloads":-1,"filename":"lollms-2.1.12.tar.gz","has_sig":false,"md5_digest":"f6a11b1953d10fcb1a07cc4633f6887e","packagetype":"sdist","python_version":"source","requires_python":null,"size":520755,"upload_time":"2023-07-02T17:52:35","upload_time_iso_8601":"2023-07-02T17:52:35.396040Z","url":"https://files.pythonhosted.org/packages/48/ce/b1015f58a49b377dbea0449d3b733c96d65fccea62806768c9bd14706088/lollms-2.1.12.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.13":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.13/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.13","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"9984353e43f4381a82a6503369b2a23f7ee4df086435ae52218aeb41b6325757","md5":"e303f6ae4d36b56717b7ce79c14736b0","sha256":"19d4bb5609646b4bf9e4e60090a03fd4a57f614fc0cb9318b6bbaf3e7427ffda"},"downloads":-1,"filename":"lollms-2.1.13-py3-none-any.whl","has_sig":false,"md5_digest":"e303f6ae4d36b56717b7ce79c14736b0","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":520558,"upload_time":"2023-07-02T20:16:43","upload_time_iso_8601":"2023-07-02T20:16:43.198295Z","url":"https://files.pythonhosted.org/packages/99/84/353e43f4381a82a6503369b2a23f7ee4df086435ae52218aeb41b6325757/lollms-2.1.13-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"b02c037d59208a8e60926c50322cf4ad7669669e5536a34c9c7c37bedc5271ad","md5":"507c529c8c3a7d6294d147b67b156417","sha256":"cc5ef35f0a13a96da5ad52cbeb8146a5802bcca79d4a1e88c0b6d8dcabc4932c"},"downloads":-1,"filename":"lollms-2.1.13.tar.gz","has_sig":false,"md5_digest":"507c529c8c3a7d6294d147b67b156417","packagetype":"sdist","python_version":"source","requires_python":null,"size":520833,"upload_time":"2023-07-02T20:16:49","upload_time_iso_8601":"2023-07-02T20:16:49.764359Z","url":"https://files.pythonhosted.org/packages/b0/2c/037d59208a8e60926c50322cf4ad7669669e5536a34c9c7c37bedc5271ad/lollms-2.1.13.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.14":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.14/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.14","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"11edb9a1717278e27bdf2c1e4bdba5812ea31932d7e7d7b6906b1d254b31f601","md5":"4a21c96f1e5238d79c50969612d8f3f1","sha256":"46f7fabbbdea5a34866b1e7fe46a0901306a810176e3c22324d7c44f0dca7a75"},"downloads":-1,"filename":"lollms-2.1.14-py3-none-any.whl","has_sig":false,"md5_digest":"4a21c96f1e5238d79c50969612d8f3f1","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":520561,"upload_time":"2023-07-02T20:42:19","upload_time_iso_8601":"2023-07-02T20:42:19.699850Z","url":"https://files.pythonhosted.org/packages/11/ed/b9a1717278e27bdf2c1e4bdba5812ea31932d7e7d7b6906b1d254b31f601/lollms-2.1.14-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"72933984bbc5e7893b1b1ec5c05780fe48618e99eacbeb56323df074cd5baec6","md5":"22f129118b493a1868ba58d6b1fe6281","sha256":"ad563c1184cdd5bbf4254041aa2a0b9b20b71c0b063382c765c8a18e73adc56a"},"downloads":-1,"filename":"lollms-2.1.14.tar.gz","has_sig":false,"md5_digest":"22f129118b493a1868ba58d6b1fe6281","packagetype":"sdist","python_version":"source","requires_python":null,"size":520852,"upload_time":"2023-07-02T20:42:26","upload_time_iso_8601":"2023-07-02T20:42:26.719491Z","url":"https://files.pythonhosted.org/packages/72/93/3984bbc5e7893b1b1ec5c05780fe48618e99eacbeb56323df074cd5baec6/lollms-2.1.14.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.15":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.15/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.15","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"13a339e41454867ca497281fcc063b565a05b121393320cb2016f2003f8de034","md5":"e56acc3879e01172846bcf10efcd01ad","sha256":"0ebfac188c1a010851a081400e79d1065fceab00d497096810ae950c255b558b"},"downloads":-1,"filename":"lollms-2.1.15-py3-none-any.whl","has_sig":false,"md5_digest":"e56acc3879e01172846bcf10efcd01ad","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":522249,"upload_time":"2023-07-03T23:38:06","upload_time_iso_8601":"2023-07-03T23:38:06.152436Z","url":"https://files.pythonhosted.org/packages/13/a3/39e41454867ca497281fcc063b565a05b121393320cb2016f2003f8de034/lollms-2.1.15-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"a46ced6f800ea4cfa39db576510a7bc7f769ab84295b4dd4905f5b5c270d4001","md5":"a36b4f237a14a29feca070584a3eb213","sha256":"b63039cd752b535926f369773ed55a9b0b2024fd248d51b2970f47348c4d073e"},"downloads":-1,"filename":"lollms-2.1.15.tar.gz","has_sig":false,"md5_digest":"a36b4f237a14a29feca070584a3eb213","packagetype":"sdist","python_version":"source","requires_python":null,"size":521774,"upload_time":"2023-07-03T23:38:13","upload_time_iso_8601":"2023-07-03T23:38:13.850847Z","url":"https://files.pythonhosted.org/packages/a4/6c/ed6f800ea4cfa39db576510a7bc7f769ab84295b4dd4905f5b5c270d4001/lollms-2.1.15.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.16":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.16/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.16","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"99fe82e84e78e64c466a4c04748d02200d79d749ccac3b6527039f943703d59e","md5":"cb4db903fcc04b7f6a47cc7b88d229e7","sha256":"69e17549c7fd3f9dc206952a92a36e5b484a6aad9833a99ab39ea6af01083bc2"},"downloads":-1,"filename":"lollms-2.1.16-py3-none-any.whl","has_sig":false,"md5_digest":"cb4db903fcc04b7f6a47cc7b88d229e7","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":522256,"upload_time":"2023-07-04T00:01:28","upload_time_iso_8601":"2023-07-04T00:01:28.731464Z","url":"https://files.pythonhosted.org/packages/99/fe/82e84e78e64c466a4c04748d02200d79d749ccac3b6527039f943703d59e/lollms-2.1.16-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"2ce5d323f3f335c51c3cee1e80de31bd5ec96cc67ff1ad370bd30917fe1251ef","md5":"bbdaffd79de5f30e954b1ccc69ee61ba","sha256":"fcd606c090e0783ea630f9de2b67f5fb8212f161ed5f3fac067ab70275c909b3"},"downloads":-1,"filename":"lollms-2.1.16.tar.gz","has_sig":false,"md5_digest":"bbdaffd79de5f30e954b1ccc69ee61ba","packagetype":"sdist","python_version":"source","requires_python":null,"size":521774,"upload_time":"2023-07-04T00:01:37","upload_time_iso_8601":"2023-07-04T00:01:37.946106Z","url":"https://files.pythonhosted.org/packages/2c/e5/d323f3f335c51c3cee1e80de31bd5ec96cc67ff1ad370bd30917fe1251ef/lollms-2.1.16.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.17":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.17/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.17","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"cf6d57064ea0f9a26b7ba015caceda0bab41be6eac1dbddb0243626c5a6cde3c","md5":"7c3ffbd77a55a76e9dd9d41616631aff","sha256":"65ff35745593a9d58355bd57e7aef052ee0424da906465cb37b54d30ba042e1a"},"downloads":-1,"filename":"lollms-2.1.17-py3-none-any.whl","has_sig":false,"md5_digest":"7c3ffbd77a55a76e9dd9d41616631aff","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":522268,"upload_time":"2023-07-04T00:05:40","upload_time_iso_8601":"2023-07-04T00:05:40.261240Z","url":"https://files.pythonhosted.org/packages/cf/6d/57064ea0f9a26b7ba015caceda0bab41be6eac1dbddb0243626c5a6cde3c/lollms-2.1.17-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"e9930d98752577b0dc923322e1a278fdfa4108c8b5ef3e54ad74f297b9e79e80","md5":"70c8a3eb4e146bfb627cceb6a4ae8d0e","sha256":"bbbd7d461a1a7f62636909692bafc383a69f6bc5eae775c8bf32e06247e33dc6"},"downloads":-1,"filename":"lollms-2.1.17.tar.gz","has_sig":false,"md5_digest":"70c8a3eb4e146bfb627cceb6a4ae8d0e","packagetype":"sdist","python_version":"source","requires_python":null,"size":521804,"upload_time":"2023-07-04T00:05:50","upload_time_iso_8601":"2023-07-04T00:05:50.084403Z","url":"https://files.pythonhosted.org/packages/e9/93/0d98752577b0dc923322e1a278fdfa4108c8b5ef3e54ad74f297b9e79e80/lollms-2.1.17.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.18":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.18/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.18","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"df2fd074970e4af36a2116aee3c515ad68ac2ec7cbce552d27bb1cb21534c0f4","md5":"8eb768c1320d4726c8d0c6458842871c","sha256":"528d35ed0562a7780d59da7effb2f290bdbaf12c79c33bc59a2be790dac59faa"},"downloads":-1,"filename":"lollms-2.1.18-py3-none-any.whl","has_sig":false,"md5_digest":"8eb768c1320d4726c8d0c6458842871c","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":51595,"upload_time":"2023-07-04T08:49:04","upload_time_iso_8601":"2023-07-04T08:49:04.545018Z","url":"https://files.pythonhosted.org/packages/df/2f/d074970e4af36a2116aee3c515ad68ac2ec7cbce552d27bb1cb21534c0f4/lollms-2.1.18-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"37d69708b2a34513c16ce0e3a4a8e389ebd2be4f20a9590c6d97634f2633ff5a","md5":"a015ad0f1e79f6890a9bde12bbba10b1","sha256":"bb4671656747c0ff6dfcf9a9917796c702573f910f2f782659139e5b3839dd2b"},"downloads":-1,"filename":"lollms-2.1.18.tar.gz","has_sig":false,"md5_digest":"a015ad0f1e79f6890a9bde12bbba10b1","packagetype":"sdist","python_version":"source","requires_python":null,"size":48989,"upload_time":"2023-07-04T08:49:06","upload_time_iso_8601":"2023-07-04T08:49:06.934292Z","url":"https://files.pythonhosted.org/packages/37/d6/9708b2a34513c16ce0e3a4a8e389ebd2be4f20a9590c6d97634f2633ff5a/lollms-2.1.18.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.19":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.19/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.19","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"0efdb6182e45533dd1c7d39233d1ca39f6a22b6ad96c96523b41e155d0ac5793","md5":"37c2e5429376a69641a604ea2284bf11","sha256":"18d2a1f8c319f80ccfc359579cce4138f79a3026466d52e0aa682807d3ba46e4"},"downloads":-1,"filename":"lollms-2.1.19-py3-none-any.whl","has_sig":false,"md5_digest":"37c2e5429376a69641a604ea2284bf11","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":51622,"upload_time":"2023-07-05T13:29:46","upload_time_iso_8601":"2023-07-05T13:29:46.898348Z","url":"https://files.pythonhosted.org/packages/0e/fd/b6182e45533dd1c7d39233d1ca39f6a22b6ad96c96523b41e155d0ac5793/lollms-2.1.19-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"554a4d5decd8096b066739b42f53f85ec10c9f8ab93396ecbe991fa3bc9566b9","md5":"83ec64e5afe13334ca168e132cc046ee","sha256":"dd4f5a20e4c53c8c3435ca6593e8dfadc3a486556efb11ffd2327dda6697f9cf"},"downloads":-1,"filename":"lollms-2.1.19.tar.gz","has_sig":false,"md5_digest":"83ec64e5afe13334ca168e132cc046ee","packagetype":"sdist","python_version":"source","requires_python":null,"size":49007,"upload_time":"2023-07-05T13:29:50","upload_time_iso_8601":"2023-07-05T13:29:50.272271Z","url":"https://files.pythonhosted.org/packages/55/4a/4d5decd8096b066739b42f53f85ec10c9f8ab93396ecbe991fa3bc9566b9/lollms-2.1.19.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.2":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.2/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.2","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"5377d96757f9ebf4defb1da1e67a9cbcc58b76a9cdb1788a0acf0b54a4e67e1c","md5":"e00b81743f53283645731ec318115209","sha256":"88cb84f99c06ae796ca20abbb3c42a3258d6bcdb0d7f2f3da04ad1f3bd3bbc99"},"downloads":-1,"filename":"lollms-2.1.2-py3-none-any.whl","has_sig":false,"md5_digest":"e00b81743f53283645731ec318115209","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":518969,"upload_time":"2023-06-29T21:37:03","upload_time_iso_8601":"2023-06-29T21:37:03.498430Z","url":"https://files.pythonhosted.org/packages/53/77/d96757f9ebf4defb1da1e67a9cbcc58b76a9cdb1788a0acf0b54a4e67e1c/lollms-2.1.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"2d746beb3525ee5205a80f47c9c2dbb28024585d61fab5aaa1e79610ceb0f786","md5":"c5bb4e75ffe207491af08e4e023e3bc1","sha256":"c140fcaf341a7f70a598ca22e18e7a48cb6027e55c8259f7d5579177dae8c4f9"},"downloads":-1,"filename":"lollms-2.1.2.tar.gz","has_sig":false,"md5_digest":"c5bb4e75ffe207491af08e4e023e3bc1","packagetype":"sdist","python_version":"source","requires_python":null,"size":519460,"upload_time":"2023-06-29T21:37:06","upload_time_iso_8601":"2023-06-29T21:37:06.087393Z","url":"https://files.pythonhosted.org/packages/2d/74/6beb3525ee5205a80f47c9c2dbb28024585d61fab5aaa1e79610ceb0f786/lollms-2.1.2.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.20":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.20/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.20","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"15a2d8d869a27caaf67f670e0dcbca51d173715ce85129b90e2110caa05e5925","md5":"88b1215eede0806346d6ad81345b1b9b","sha256":"c1d21da6844cd3982a2e5f22c9199ec6a18ccf4eb0372ac23bd55a49d755768b"},"downloads":-1,"filename":"lollms-2.1.20-py3-none-any.whl","has_sig":false,"md5_digest":"88b1215eede0806346d6ad81345b1b9b","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":51623,"upload_time":"2023-07-05T14:55:22","upload_time_iso_8601":"2023-07-05T14:55:22.107036Z","url":"https://files.pythonhosted.org/packages/15/a2/d8d869a27caaf67f670e0dcbca51d173715ce85129b90e2110caa05e5925/lollms-2.1.20-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"587921ddf0c0c98b7bb5274f1a4b298f0663beb813d9ace1185d3fa99b56c343","md5":"3fbc7f1fe7ff948ceafb7e960102615d","sha256":"0f784a3001e331d46435f151a0696dda8769f4f474d255c644f4afd4d06afe05"},"downloads":-1,"filename":"lollms-2.1.20.tar.gz","has_sig":false,"md5_digest":"3fbc7f1fe7ff948ceafb7e960102615d","packagetype":"sdist","python_version":"source","requires_python":null,"size":49018,"upload_time":"2023-07-05T14:55:26","upload_time_iso_8601":"2023-07-05T14:55:26.196576Z","url":"https://files.pythonhosted.org/packages/58/79/21ddf0c0c98b7bb5274f1a4b298f0663beb813d9ace1185d3fa99b56c343/lollms-2.1.20.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.21":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.21/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.21","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"17d0e91d57fd159875795c08b6e612df4a9b6bf48dd56457bd7b3f60178d0122","md5":"e68b15726f7f281a688411197eff852f","sha256":"8735256eade94883aa1528dc83d38b88dea6c6457c4b69f7777af1fcfb7b2c9c"},"downloads":-1,"filename":"lollms-2.1.21-py3-none-any.whl","has_sig":false,"md5_digest":"e68b15726f7f281a688411197eff852f","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":51950,"upload_time":"2023-07-05T15:24:59","upload_time_iso_8601":"2023-07-05T15:24:59.173935Z","url":"https://files.pythonhosted.org/packages/17/d0/e91d57fd159875795c08b6e612df4a9b6bf48dd56457bd7b3f60178d0122/lollms-2.1.21-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"4bb4df97561b9bd751e6753f6fa309fe1fe7442f83a3f3c922ef271a7f0fb43e","md5":"e763f657fecd4a6bc2743c6e749f7177","sha256":"8a38b4e5dc6b6ef13ccef4bc95bbadc72e9c80209416424453469133ff6d3302"},"downloads":-1,"filename":"lollms-2.1.21.tar.gz","has_sig":false,"md5_digest":"e763f657fecd4a6bc2743c6e749f7177","packagetype":"sdist","python_version":"source","requires_python":null,"size":49389,"upload_time":"2023-07-05T15:25:04","upload_time_iso_8601":"2023-07-05T15:25:04.652900Z","url":"https://files.pythonhosted.org/packages/4b/b4/df97561b9bd751e6753f6fa309fe1fe7442f83a3f3c922ef271a7f0fb43e/lollms-2.1.21.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.22":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.22/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.22","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"c327116291093cc9847c1c4f3ee61e4eefd69138ceeb79eac9b3243a8fdd49ba","md5":"e2c86e38a0cfe235ef8fefd85e0bc5ba","sha256":"57a349ac236660394d696079323086d63fd6682adb544e0d8386caae12d22872"},"downloads":-1,"filename":"lollms-2.1.22-py3-none-any.whl","has_sig":false,"md5_digest":"e2c86e38a0cfe235ef8fefd85e0bc5ba","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":522669,"upload_time":"2023-07-05T21:02:34","upload_time_iso_8601":"2023-07-05T21:02:34.906840Z","url":"https://files.pythonhosted.org/packages/c3/27/116291093cc9847c1c4f3ee61e4eefd69138ceeb79eac9b3243a8fdd49ba/lollms-2.1.22-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"4d3b2749b9031dae7493e33ba99a221b13e5546e684a5b36be73fba022513e60","md5":"df24beab215fdf37901685c12da10f33","sha256":"563640ff0fe141ff683675bb7fd9ce60d30dc4c01b84d5c330077bb0ea6a4a56"},"downloads":-1,"filename":"lollms-2.1.22.tar.gz","has_sig":false,"md5_digest":"df24beab215fdf37901685c12da10f33","packagetype":"sdist","python_version":"source","requires_python":null,"size":522287,"upload_time":"2023-07-05T21:02:37","upload_time_iso_8601":"2023-07-05T21:02:37.326220Z","url":"https://files.pythonhosted.org/packages/4d/3b/2749b9031dae7493e33ba99a221b13e5546e684a5b36be73fba022513e60/lollms-2.1.22.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.23":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.23/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.23","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"bc23b2f85153d79d70bc578a53bafc0c4e53281483d584d00554a402a070889f","md5":"ed105867c2a8d481533ed1e41d4afb9a","sha256":"322751e9ff2ebad8a55acd47d51975fa0dd88f8e8472ef9b6142df58725d6b71"},"downloads":-1,"filename":"lollms-2.1.23-py3-none-any.whl","has_sig":false,"md5_digest":"ed105867c2a8d481533ed1e41d4afb9a","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":522683,"upload_time":"2023-07-06T06:12:45","upload_time_iso_8601":"2023-07-06T06:12:45.307507Z","url":"https://files.pythonhosted.org/packages/bc/23/b2f85153d79d70bc578a53bafc0c4e53281483d584d00554a402a070889f/lollms-2.1.23-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"9728a50381342e55322a7f8ade9addb661d3987176450b5735549344ef8a0c84","md5":"dacd9237a245111b59e17042ddefc6ed","sha256":"274f9c6ab6f3d2d6d05f2ec2ff56a5fbaf3fcf4e04adaba99db0280162fbd8fa"},"downloads":-1,"filename":"lollms-2.1.23.tar.gz","has_sig":false,"md5_digest":"dacd9237a245111b59e17042ddefc6ed","packagetype":"sdist","python_version":"source","requires_python":null,"size":522316,"upload_time":"2023-07-06T06:12:48","upload_time_iso_8601":"2023-07-06T06:12:48.992710Z","url":"https://files.pythonhosted.org/packages/97/28/a50381342e55322a7f8ade9addb661d3987176450b5735549344ef8a0c84/lollms-2.1.23.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.24":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.24/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.24","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"9883e1e1e76828dac5bcd1f5e2be50d9bbe682ec6354600e9dc6e60c7fc0dfe8","md5":"46799772f509058f9c915f6fcd3e34cd","sha256":"88f75cc6df7826e40700d58d1c6d4cb142fa07b79c690ed811c2ff5e7183dc57"},"downloads":-1,"filename":"lollms-2.1.24-py3-none-any.whl","has_sig":false,"md5_digest":"46799772f509058f9c915f6fcd3e34cd","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":522690,"upload_time":"2023-07-06T06:14:16","upload_time_iso_8601":"2023-07-06T06:14:16.789119Z","url":"https://files.pythonhosted.org/packages/98/83/e1e1e76828dac5bcd1f5e2be50d9bbe682ec6354600e9dc6e60c7fc0dfe8/lollms-2.1.24-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"7f95bf1a225dda26631d1a07207fc889c27528649bca9847c2e44a3d436fe1dd","md5":"a29461194afa8c52fed0d9763765be1c","sha256":"2365b15a36fe12e0241341a1a7a1d2206614f819b478dc4da56bf6bd891e427d"},"downloads":-1,"filename":"lollms-2.1.24.tar.gz","has_sig":false,"md5_digest":"a29461194afa8c52fed0d9763765be1c","packagetype":"sdist","python_version":"source","requires_python":null,"size":522328,"upload_time":"2023-07-06T06:14:19","upload_time_iso_8601":"2023-07-06T06:14:19.750837Z","url":"https://files.pythonhosted.org/packages/7f/95/bf1a225dda26631d1a07207fc889c27528649bca9847c2e44a3d436fe1dd/lollms-2.1.24.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.25":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.25/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.25","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"acb3f7b0cdce8ae8d6d5118e0134fef1e71fc6eb1f0f7fc108b2fa24bf09a084","md5":"7977eb9a051a7e8ab7391c7b6a37c01e","sha256":"2f16625bb61aa9c1a6410ed657cb147d5cb0d7ff88d00106c923c8873dbc9e75"},"downloads":-1,"filename":"lollms-2.1.25-py3-none-any.whl","has_sig":false,"md5_digest":"7977eb9a051a7e8ab7391c7b6a37c01e","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":522699,"upload_time":"2023-07-06T06:21:07","upload_time_iso_8601":"2023-07-06T06:21:07.263101Z","url":"https://files.pythonhosted.org/packages/ac/b3/f7b0cdce8ae8d6d5118e0134fef1e71fc6eb1f0f7fc108b2fa24bf09a084/lollms-2.1.25-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"ac08ebd7fe1c7ccb336cc455f50f61a98033a8d0102d33c79e6c6b37484cf619","md5":"694057bd28778ec2b51e963fa74382ed","sha256":"6b3ceee14bdec3ceb20a9cece119ef4c59805e5cba99319be274bff8db560605"},"downloads":-1,"filename":"lollms-2.1.25.tar.gz","has_sig":false,"md5_digest":"694057bd28778ec2b51e963fa74382ed","packagetype":"sdist","python_version":"source","requires_python":null,"size":522337,"upload_time":"2023-07-06T06:21:11","upload_time_iso_8601":"2023-07-06T06:21:11.691386Z","url":"https://files.pythonhosted.org/packages/ac/08/ebd7fe1c7ccb336cc455f50f61a98033a8d0102d33c79e6c6b37484cf619/lollms-2.1.25.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.26":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.26/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.26","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"5cafc80208b77ffcf52904d2b81cf0e4cba55a7354976c559393c7a3f4492c8f","md5":"8de28caed9266a909f8a1d187f2ddf82","sha256":"79fd95e870387fc35ab16d7478063662c8f8cc6906495eb1a44cacfdfb5fb983"},"downloads":-1,"filename":"lollms-2.1.26-py3-none-any.whl","has_sig":false,"md5_digest":"8de28caed9266a909f8a1d187f2ddf82","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":522767,"upload_time":"2023-07-06T06:25:26","upload_time_iso_8601":"2023-07-06T06:25:26.158634Z","url":"https://files.pythonhosted.org/packages/5c/af/c80208b77ffcf52904d2b81cf0e4cba55a7354976c559393c7a3f4492c8f/lollms-2.1.26-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"378c96c5c8bcdca5199675923b9d1637dc343575d7426e8ca91c6fcfcc5d1d6f","md5":"ee2bca8eaffe1e4dfcb7dfd0e05bf6d4","sha256":"0657aefef2d42ec8d4ae2fe3b9633282293ffb218f4f6698ff832f4c55801847"},"downloads":-1,"filename":"lollms-2.1.26.tar.gz","has_sig":false,"md5_digest":"ee2bca8eaffe1e4dfcb7dfd0e05bf6d4","packagetype":"sdist","python_version":"source","requires_python":null,"size":522416,"upload_time":"2023-07-06T06:25:32","upload_time_iso_8601":"2023-07-06T06:25:32.487477Z","url":"https://files.pythonhosted.org/packages/37/8c/96c5c8bcdca5199675923b9d1637dc343575d7426e8ca91c6fcfcc5d1d6f/lollms-2.1.26.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.27":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.27/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.27","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"c23d8ccd91b081019a43dc804615a2d785cc4ef96af145cb24abf4da0a28b5ec","md5":"0a9b01ce1061495c6a3aa1598ccfad4a","sha256":"e7bba627328a4b454658380aad7c3cb86d16b02ee274f8cf5342f009246b9e9f"},"downloads":-1,"filename":"lollms-2.1.27-py3-none-any.whl","has_sig":false,"md5_digest":"0a9b01ce1061495c6a3aa1598ccfad4a","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":522794,"upload_time":"2023-07-06T06:28:50","upload_time_iso_8601":"2023-07-06T06:28:50.213312Z","url":"https://files.pythonhosted.org/packages/c2/3d/8ccd91b081019a43dc804615a2d785cc4ef96af145cb24abf4da0a28b5ec/lollms-2.1.27-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"19d2a3de2109b4cc788bb02c0b17ca4f766c1ab776f13337de61db8921bf63ef","md5":"e73ca4f5b036ff38a2fa00ef77f5e6e4","sha256":"9c0ad52f9ce16b86244b937905fdd3c25f024becf95a788d388ba7e7fb20d583"},"downloads":-1,"filename":"lollms-2.1.27.tar.gz","has_sig":false,"md5_digest":"e73ca4f5b036ff38a2fa00ef77f5e6e4","packagetype":"sdist","python_version":"source","requires_python":null,"size":522419,"upload_time":"2023-07-06T06:28:56","upload_time_iso_8601":"2023-07-06T06:28:56.375744Z","url":"https://files.pythonhosted.org/packages/19/d2/a3de2109b4cc788bb02c0b17ca4f766c1ab776f13337de61db8921bf63ef/lollms-2.1.27.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.28":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.28/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.28","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"c98169a5a875bfcbd536545c7fb0eb3039ef2649ad6f752506c04bbe8573ab12","md5":"fafbb034bfafc8cddf76ffcef1e25f8a","sha256":"6fd756d941520b910c5f52bc07d84020f03200ed28edc98480e6dcd8190d6d19"},"downloads":-1,"filename":"lollms-2.1.28-py3-none-any.whl","has_sig":false,"md5_digest":"fafbb034bfafc8cddf76ffcef1e25f8a","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":522938,"upload_time":"2023-07-06T06:39:53","upload_time_iso_8601":"2023-07-06T06:39:53.804893Z","url":"https://files.pythonhosted.org/packages/c9/81/69a5a875bfcbd536545c7fb0eb3039ef2649ad6f752506c04bbe8573ab12/lollms-2.1.28-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"db772c5dfedd0d7a2934ca853f0fada00e53fdcc7d470d20dbb219e616fdfb73","md5":"d5bff596449a922c0eb536d53f4d3c2c","sha256":"1a8e667649e388729053bcec9c0c142ec1d221630f677b6f80550d98021313df"},"downloads":-1,"filename":"lollms-2.1.28.tar.gz","has_sig":false,"md5_digest":"d5bff596449a922c0eb536d53f4d3c2c","packagetype":"sdist","python_version":"source","requires_python":null,"size":522556,"upload_time":"2023-07-06T06:40:00","upload_time_iso_8601":"2023-07-06T06:40:00.974143Z","url":"https://files.pythonhosted.org/packages/db/77/2c5dfedd0d7a2934ca853f0fada00e53fdcc7d470d20dbb219e616fdfb73/lollms-2.1.28.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.29":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.29/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.29","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"4720d7317abd0d6eb2e0fe870a355ab9edd8058d262aaa32f21b661e45385a33","md5":"e0a0f3367ad51de96836c9784c3f14c7","sha256":"e8c28b227acd47a66bd5c7a115dce13e2c491ab982861e8c0f41662608dbe4ea"},"downloads":-1,"filename":"lollms-2.1.29-py3-none-any.whl","has_sig":false,"md5_digest":"e0a0f3367ad51de96836c9784c3f14c7","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":52443,"upload_time":"2023-07-06T12:59:39","upload_time_iso_8601":"2023-07-06T12:59:39.625605Z","url":"https://files.pythonhosted.org/packages/47/20/d7317abd0d6eb2e0fe870a355ab9edd8058d262aaa32f21b661e45385a33/lollms-2.1.29-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"b40233a235b5b8bcc686e813fcac83a53323ed4bdc619d6a3ad3e96e0a3e5f61","md5":"0778db3ce14c5a40197266b1df555b89","sha256":"82c283c776206d68aed813683691bc9b4344297bdb43d2c64f1f080ae758ddf0"},"downloads":-1,"filename":"lollms-2.1.29.tar.gz","has_sig":false,"md5_digest":"0778db3ce14c5a40197266b1df555b89","packagetype":"sdist","python_version":"source","requires_python":null,"size":49888,"upload_time":"2023-07-06T12:59:44","upload_time_iso_8601":"2023-07-06T12:59:44.879462Z","url":"https://files.pythonhosted.org/packages/b4/02/33a235b5b8bcc686e813fcac83a53323ed4bdc619d6a3ad3e96e0a3e5f61/lollms-2.1.29.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.3":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.3/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.3","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"552b4765cce483c8e301a64e191bda4c219640bfad7a7284fbbbd1d9008e38e8","md5":"165c9b0f6323926785e5767568ee3e46","sha256":"8094f5efcc29a59f554516d8b90589a03daf405867e8409198e82514c1251b70"},"downloads":-1,"filename":"lollms-2.1.3-py3-none-any.whl","has_sig":false,"md5_digest":"165c9b0f6323926785e5767568ee3e46","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":518972,"upload_time":"2023-06-29T21:39:00","upload_time_iso_8601":"2023-06-29T21:39:00.403628Z","url":"https://files.pythonhosted.org/packages/55/2b/4765cce483c8e301a64e191bda4c219640bfad7a7284fbbbd1d9008e38e8/lollms-2.1.3-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"13f2dc26b66be07ab67eca51878feb1b0ad38e281aa75f752448a242c3a7b08f","md5":"6b8cd9ce74f01c76b02874b9ff45a5a8","sha256":"907030618bb39731a0e07ad282ec75f5213917bce3b17e2689e781a755ef5119"},"downloads":-1,"filename":"lollms-2.1.3.tar.gz","has_sig":false,"md5_digest":"6b8cd9ce74f01c76b02874b9ff45a5a8","packagetype":"sdist","python_version":"source","requires_python":null,"size":519468,"upload_time":"2023-06-29T21:39:03","upload_time_iso_8601":"2023-06-29T21:39:03.891410Z","url":"https://files.pythonhosted.org/packages/13/f2/dc26b66be07ab67eca51878feb1b0ad38e281aa75f752448a242c3a7b08f/lollms-2.1.3.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.30":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.30/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.30","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"64ed1d8bb3cfdbcc7b1a238272531ab3173bd58587e6d878ca50b52ccf14b19b","md5":"20e0c227fe67853f7d6c7465ddb407ba","sha256":"244de47a80da26ea3577d85efbb6ea6d74277558e6e4f344e783d2593039fede"},"downloads":-1,"filename":"lollms-2.1.30-py3-none-any.whl","has_sig":false,"md5_digest":"20e0c227fe67853f7d6c7465ddb407ba","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":52555,"upload_time":"2023-07-06T18:10:32","upload_time_iso_8601":"2023-07-06T18:10:32.174292Z","url":"https://files.pythonhosted.org/packages/64/ed/1d8bb3cfdbcc7b1a238272531ab3173bd58587e6d878ca50b52ccf14b19b/lollms-2.1.30-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"7d708697342f066a6da9263fcd5e5b23c7321118d33170386746aa3af59e1bf3","md5":"ff9e801b14093d49c9b6218d96fa13fc","sha256":"f50ffaa9f0adb17006372b1ec6f6712c9aca7323391ab09651d1c3f33f028c48"},"downloads":-1,"filename":"lollms-2.1.30.tar.gz","has_sig":false,"md5_digest":"ff9e801b14093d49c9b6218d96fa13fc","packagetype":"sdist","python_version":"source","requires_python":null,"size":49994,"upload_time":"2023-07-06T18:10:34","upload_time_iso_8601":"2023-07-06T18:10:34.122119Z","url":"https://files.pythonhosted.org/packages/7d/70/8697342f066a6da9263fcd5e5b23c7321118d33170386746aa3af59e1bf3/lollms-2.1.30.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.31":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.31/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.31","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"070209d2335cd52666fe316806c681107f52b35808d79af4c2c99c01891fcac8","md5":"355e1f2ed087512eb8f807b70b93303f","sha256":"392a52da4cffdd06b0f541129cd6a3807b09da24ec881081c62c44f9ce2ab546"},"downloads":-1,"filename":"lollms-2.1.31-py3-none-any.whl","has_sig":false,"md5_digest":"355e1f2ed087512eb8f807b70b93303f","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":52563,"upload_time":"2023-07-06T18:20:36","upload_time_iso_8601":"2023-07-06T18:20:36.939096Z","url":"https://files.pythonhosted.org/packages/07/02/09d2335cd52666fe316806c681107f52b35808d79af4c2c99c01891fcac8/lollms-2.1.31-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"b6a274a4a32b3f4ab2d05ca2208a67cf1c928ace26219061be1887eab6c932ff","md5":"30253719774ad7f11514ea32fb74db1f","sha256":"f944715280ed1866fccb15d9bf32605f2bb70a2165a8be9db2f25efd93ffeb22"},"downloads":-1,"filename":"lollms-2.1.31.tar.gz","has_sig":false,"md5_digest":"30253719774ad7f11514ea32fb74db1f","packagetype":"sdist","python_version":"source","requires_python":null,"size":49996,"upload_time":"2023-07-06T18:20:39","upload_time_iso_8601":"2023-07-06T18:20:39.518494Z","url":"https://files.pythonhosted.org/packages/b6/a2/74a4a32b3f4ab2d05ca2208a67cf1c928ace26219061be1887eab6c932ff/lollms-2.1.31.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.32":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.32/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.32","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"ccad083b272a127668552599a8e439efcd59ca5d3d6e5ad4dd14709069e5e24c","md5":"ac5e976eea9df41b178fa21c5986518a","sha256":"4b4fd4f3579aef76dd786501504bf0593dd2a5aee2d5e2e849a42c655faace30"},"downloads":-1,"filename":"lollms-2.1.32-py3-none-any.whl","has_sig":false,"md5_digest":"ac5e976eea9df41b178fa21c5986518a","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":523361,"upload_time":"2023-07-07T08:00:22","upload_time_iso_8601":"2023-07-07T08:00:22.251673Z","url":"https://files.pythonhosted.org/packages/cc/ad/083b272a127668552599a8e439efcd59ca5d3d6e5ad4dd14709069e5e24c/lollms-2.1.32-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"de0cee9a3622c167c2bc61d77269a82ee3c1898aa6b9306f4b81bb9b206a19b0","md5":"60179635c3931fbd18c17a79eff47c31","sha256":"48cbc2c75b2fa63408577208c6e2eb6726ba40095a0e7180177d2d72e5be8277"},"downloads":-1,"filename":"lollms-2.1.32.tar.gz","has_sig":false,"md5_digest":"60179635c3931fbd18c17a79eff47c31","packagetype":"sdist","python_version":"source","requires_python":null,"size":522923,"upload_time":"2023-07-07T08:00:24","upload_time_iso_8601":"2023-07-07T08:00:24.797374Z","url":"https://files.pythonhosted.org/packages/de/0c/ee9a3622c167c2bc61d77269a82ee3c1898aa6b9306f4b81bb9b206a19b0/lollms-2.1.32.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.34":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.34/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.34","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"8dc4a5aeeae8e5459c25869c01eff62a2ecfa0f4c2cf6f8b1f471f16ec68ba28","md5":"e269c6b9f909409f232e083553a67d29","sha256":"2a1c1cf11d111fd5f5c98ae5bb7e9d20a7a33f55820cb45f701ec8b9444ce037"},"downloads":-1,"filename":"lollms-2.1.34-py3-none-any.whl","has_sig":false,"md5_digest":"e269c6b9f909409f232e083553a67d29","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":523359,"upload_time":"2023-07-09T10:47:28","upload_time_iso_8601":"2023-07-09T10:47:28.013518Z","url":"https://files.pythonhosted.org/packages/8d/c4/a5aeeae8e5459c25869c01eff62a2ecfa0f4c2cf6f8b1f471f16ec68ba28/lollms-2.1.34-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"8662055f09d0b6fd233a86bf16dc4369c1ca07a0df13da3f4efc38f53dd4a1c1","md5":"3680e35e0b9d3ca0fa27e676469139ad","sha256":"fa9c75405100082406e2850a6fc91c9a29d943b70fc9da4e057313b0d9085c70"},"downloads":-1,"filename":"lollms-2.1.34.tar.gz","has_sig":false,"md5_digest":"3680e35e0b9d3ca0fa27e676469139ad","packagetype":"sdist","python_version":"source","requires_python":null,"size":522914,"upload_time":"2023-07-09T10:47:30","upload_time_iso_8601":"2023-07-09T10:47:30.449232Z","url":"https://files.pythonhosted.org/packages/86/62/055f09d0b6fd233a86bf16dc4369c1ca07a0df13da3f4efc38f53dd4a1c1/lollms-2.1.34.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.35":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.35/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.35","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"484302d890ca5266bf554c0cc488f0af9c9f531e241c38281ec18a560dcec141","md5":"2410f44260dd60f902868b8137353a69","sha256":"4f803556e054036dcad886213bdf808d2d579960a298b91c6be9943974c64be2"},"downloads":-1,"filename":"lollms-2.1.35-py3-none-any.whl","has_sig":false,"md5_digest":"2410f44260dd60f902868b8137353a69","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":523868,"upload_time":"2023-07-10T22:15:35","upload_time_iso_8601":"2023-07-10T22:15:35.260881Z","url":"https://files.pythonhosted.org/packages/48/43/02d890ca5266bf554c0cc488f0af9c9f531e241c38281ec18a560dcec141/lollms-2.1.35-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"fc0fa03584e5a3684b4b8e7d2a065137f86469bcb8ef26938c372e76f3bad492","md5":"33da430c6886dba16f49fb359dbba601","sha256":"0b4de96dc09d7591274d1ba0f973c00b341047dcc26bab93839d12deeb2c4694"},"downloads":-1,"filename":"lollms-2.1.35.tar.gz","has_sig":false,"md5_digest":"33da430c6886dba16f49fb359dbba601","packagetype":"sdist","python_version":"source","requires_python":null,"size":523376,"upload_time":"2023-07-10T22:15:37","upload_time_iso_8601":"2023-07-10T22:15:37.670645Z","url":"https://files.pythonhosted.org/packages/fc/0f/a03584e5a3684b4b8e7d2a065137f86469bcb8ef26938c372e76f3bad492/lollms-2.1.35.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.36":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.36/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.36","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"228d3fa6fcd9de82edc95448c975d566b45c904bf802e8b2423b06a452e8777e","md5":"089562810e96fceb2185084cb51c4f3b","sha256":"e5144d83aea0e41aaa5e146ff8d8d25047daad61b3e9bf02de88e400b4832e6a"},"downloads":-1,"filename":"lollms-2.1.36-py3-none-any.whl","has_sig":false,"md5_digest":"089562810e96fceb2185084cb51c4f3b","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":53314,"upload_time":"2023-07-11T12:58:17","upload_time_iso_8601":"2023-07-11T12:58:17.918199Z","url":"https://files.pythonhosted.org/packages/22/8d/3fa6fcd9de82edc95448c975d566b45c904bf802e8b2423b06a452e8777e/lollms-2.1.36-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"82a10162ec66ebcbf762132744e9f30e9da0cf05321faaaed73c7b63b31ca072","md5":"22ade6c2ed920b9e92f4fbdbc2462469","sha256":"83fa407201314b03548aa0a314af2bdc7ce94d064372d9ac01b43895f17cb5a8"},"downloads":-1,"filename":"lollms-2.1.36.tar.gz","has_sig":false,"md5_digest":"22ade6c2ed920b9e92f4fbdbc2462469","packagetype":"sdist","python_version":"source","requires_python":null,"size":50683,"upload_time":"2023-07-11T12:58:20","upload_time_iso_8601":"2023-07-11T12:58:20.406750Z","url":"https://files.pythonhosted.org/packages/82/a1/0162ec66ebcbf762132744e9f30e9da0cf05321faaaed73c7b63b31ca072/lollms-2.1.36.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.37":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.37/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.37","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"d82a87fe55f4f3a429491763cfdab9711dbbeef5410aa57a70a00dc7ad9238a5","md5":"bfc9e90b26193920454018f7b79de710","sha256":"0582987207d13eba5cde8704ceacbe0c6739584b590254f0e5e43c2d57a54766"},"downloads":-1,"filename":"lollms-2.1.37-py3-none-any.whl","has_sig":false,"md5_digest":"bfc9e90b26193920454018f7b79de710","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":524018,"upload_time":"2023-07-15T16:03:24","upload_time_iso_8601":"2023-07-15T16:03:24.838035Z","url":"https://files.pythonhosted.org/packages/d8/2a/87fe55f4f3a429491763cfdab9711dbbeef5410aa57a70a00dc7ad9238a5/lollms-2.1.37-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"3e88ffc02afc7543c6e532b7ed971c966287987bd09f083b202018a921f0bff7","md5":"f7c922c3c8767e5ec1d9e2606a9942b4","sha256":"7792d3e0d2b02155ae86ea91eb5604eb84dea81df8ba7f0104b759da41299eda"},"downloads":-1,"filename":"lollms-2.1.37.tar.gz","has_sig":false,"md5_digest":"f7c922c3c8767e5ec1d9e2606a9942b4","packagetype":"sdist","python_version":"source","requires_python":null,"size":523528,"upload_time":"2023-07-15T16:03:27","upload_time_iso_8601":"2023-07-15T16:03:27.382311Z","url":"https://files.pythonhosted.org/packages/3e/88/ffc02afc7543c6e532b7ed971c966287987bd09f083b202018a921f0bff7/lollms-2.1.37.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.38":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.38/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.38","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"0c2b848fc352a845bb6771f9c8cf5ee746313f4e09a67a5e18db7ce16c3e7029","md5":"77492035f054f3b1e26cdd1e8faa8829","sha256":"a10d803b3bdf7b5f47027cb3f7fe21f7c7bc6df139d5c15a39f3cf5de714a17d"},"downloads":-1,"filename":"lollms-2.1.38-py3-none-any.whl","has_sig":false,"md5_digest":"77492035f054f3b1e26cdd1e8faa8829","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":524050,"upload_time":"2023-07-15T16:28:10","upload_time_iso_8601":"2023-07-15T16:28:10.102396Z","url":"https://files.pythonhosted.org/packages/0c/2b/848fc352a845bb6771f9c8cf5ee746313f4e09a67a5e18db7ce16c3e7029/lollms-2.1.38-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"9cb97994c0d363db038879b03e371a41af797ed8295c0c5111072b87bd1861c2","md5":"13a2d5f54b0d273738e96bbeb99c666f","sha256":"f7d830e5e707a0ed37f48ae24b223ace37b4fec8a161f0d950aa989f65778bba"},"downloads":-1,"filename":"lollms-2.1.38.tar.gz","has_sig":false,"md5_digest":"13a2d5f54b0d273738e96bbeb99c666f","packagetype":"sdist","python_version":"source","requires_python":null,"size":523580,"upload_time":"2023-07-15T16:28:13","upload_time_iso_8601":"2023-07-15T16:28:13.305879Z","url":"https://files.pythonhosted.org/packages/9c/b9/7994c0d363db038879b03e371a41af797ed8295c0c5111072b87bd1861c2/lollms-2.1.38.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.39":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.39/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.39","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"434ad922e7585b14f9b71dc7d75c6cc8b877991ee6752a9e45550747b3d9b4cf","md5":"b8abf1a55211ca9726f90ea306e63d87","sha256":"0653abfb38043cac2cc0cc45d210de054344a608fe0f4b3114c910c20f8d714b"},"downloads":-1,"filename":"lollms-2.1.39-py3-none-any.whl","has_sig":false,"md5_digest":"b8abf1a55211ca9726f90ea306e63d87","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":524053,"upload_time":"2023-07-16T00:20:41","upload_time_iso_8601":"2023-07-16T00:20:41.357681Z","url":"https://files.pythonhosted.org/packages/43/4a/d922e7585b14f9b71dc7d75c6cc8b877991ee6752a9e45550747b3d9b4cf/lollms-2.1.39-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"dcf16dc6935aea2eeba613c690e3af81954f32edfacb432d4df89925c3fa1c8f","md5":"021eced46355ba374ba59d174f4a2e3c","sha256":"d228534664fe4ad2da6740cfb455aabf894a57f44e24ba4197a21d7eeb02583b"},"downloads":-1,"filename":"lollms-2.1.39.tar.gz","has_sig":false,"md5_digest":"021eced46355ba374ba59d174f4a2e3c","packagetype":"sdist","python_version":"source","requires_python":null,"size":523595,"upload_time":"2023-07-16T00:20:43","upload_time_iso_8601":"2023-07-16T00:20:43.844660Z","url":"https://files.pythonhosted.org/packages/dc/f1/6dc6935aea2eeba613c690e3af81954f32edfacb432d4df89925c3fa1c8f/lollms-2.1.39.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.4":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.4/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.4","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"aeb415ef04c216f4b8766e0ffae4a035601b12090d59271fffe935490b2ace4c","md5":"24bbf7632f4510c36d2fb5db8a496aed","sha256":"d7e09e133e14e5e37a3c1247f1ff18c902376c957fb1951e9fe13e0842a6e183"},"downloads":-1,"filename":"lollms-2.1.4-py3-none-any.whl","has_sig":false,"md5_digest":"24bbf7632f4510c36d2fb5db8a496aed","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":518976,"upload_time":"2023-06-29T21:41:25","upload_time_iso_8601":"2023-06-29T21:41:25.021738Z","url":"https://files.pythonhosted.org/packages/ae/b4/15ef04c216f4b8766e0ffae4a035601b12090d59271fffe935490b2ace4c/lollms-2.1.4-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"5d5f5000040211dfae5b52477db61641ef13c4958abaf88b0f0d65cbe3746240","md5":"dd7e6236f10cd140c5b42bff1f440648","sha256":"8fac88a4f1cda7832039a57c9de54a2507c433c840fb5d47e680dfc827dc00a0"},"downloads":-1,"filename":"lollms-2.1.4.tar.gz","has_sig":false,"md5_digest":"dd7e6236f10cd140c5b42bff1f440648","packagetype":"sdist","python_version":"source","requires_python":null,"size":519485,"upload_time":"2023-06-29T21:41:29","upload_time_iso_8601":"2023-06-29T21:41:29.714598Z","url":"https://files.pythonhosted.org/packages/5d/5f/5000040211dfae5b52477db61641ef13c4958abaf88b0f0d65cbe3746240/lollms-2.1.4.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.40":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.40/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.40","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"082289a66531eb396d643826534bf575f90237d1e760a004a3984ec6833ac16b","md5":"6673d929619b0245312bd86446a0d761","sha256":"3bb63c0167aa5222e2028db04d6d83ae6f530a2f2ccb1be5c8bfcf468fd4bdf3"},"downloads":-1,"filename":"lollms-2.1.40-py3-none-any.whl","has_sig":false,"md5_digest":"6673d929619b0245312bd86446a0d761","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":525717,"upload_time":"2023-07-16T16:51:20","upload_time_iso_8601":"2023-07-16T16:51:20.947472Z","url":"https://files.pythonhosted.org/packages/08/22/89a66531eb396d643826534bf575f90237d1e760a004a3984ec6833ac16b/lollms-2.1.40-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"ccce056daebc418c000eebbde1614e4eae8599f11fceed8c612e2f0e423fa249","md5":"bff9f158fd6887825da2401926bed914","sha256":"2fdac710349a9bd817e967acf35a1725902f6534f3e5dd867aff1b164d751fc2"},"downloads":-1,"filename":"lollms-2.1.40.tar.gz","has_sig":false,"md5_digest":"bff9f158fd6887825da2401926bed914","packagetype":"sdist","python_version":"source","requires_python":null,"size":515569,"upload_time":"2023-07-16T16:51:24","upload_time_iso_8601":"2023-07-16T16:51:24.251474Z","url":"https://files.pythonhosted.org/packages/cc/ce/056daebc418c000eebbde1614e4eae8599f11fceed8c612e2f0e423fa249/lollms-2.1.40.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.42":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.42/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.42","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"fad3d471a7f570257c0397dfa60fe0de6af58197ef657b8e2735362516fc3a70","md5":"ad3b2c72d797719b081c2583c32561b0","sha256":"227c315f9b0dea56745f0014888595a1039558b62fc66d0b5421c6a3c8b02fb5"},"downloads":-1,"filename":"lollms-2.1.42-py3-none-any.whl","has_sig":false,"md5_digest":"ad3b2c72d797719b081c2583c32561b0","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":525747,"upload_time":"2023-07-17T09:00:12","upload_time_iso_8601":"2023-07-17T09:00:12.340792Z","url":"https://files.pythonhosted.org/packages/fa/d3/d471a7f570257c0397dfa60fe0de6af58197ef657b8e2735362516fc3a70/lollms-2.1.42-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"dbd05c470709303739eaf2f1ace374b25b76719684b0da880f83c376d78b2fd1","md5":"bc34be9847f2b657665cfac3cc56bd2b","sha256":"273ad17c2ca25e001957754675cbc039b32bf08338c64ff1754e0609912d0b67"},"downloads":-1,"filename":"lollms-2.1.42.tar.gz","has_sig":false,"md5_digest":"bc34be9847f2b657665cfac3cc56bd2b","packagetype":"sdist","python_version":"source","requires_python":null,"size":515568,"upload_time":"2023-07-17T09:00:16","upload_time_iso_8601":"2023-07-17T09:00:16.410156Z","url":"https://files.pythonhosted.org/packages/db/d0/5c470709303739eaf2f1ace374b25b76719684b0da880f83c376d78b2fd1/lollms-2.1.42.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.43":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.43/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.43","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"7aa8ac3a09eb0d4e84739eb8fb7a620e6c44c8f3fef72afc6a54fb3fe86f2b4b","md5":"f3902a1c25d3a826ff23ebc4e8cb13d4","sha256":"cc8810747482c75549231be9737d87d2b1321b407a617b93c8166968861c2f25"},"downloads":-1,"filename":"lollms-2.1.43-py3-none-any.whl","has_sig":false,"md5_digest":"f3902a1c25d3a826ff23ebc4e8cb13d4","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":525758,"upload_time":"2023-07-17T18:05:44","upload_time_iso_8601":"2023-07-17T18:05:44.524594Z","url":"https://files.pythonhosted.org/packages/7a/a8/ac3a09eb0d4e84739eb8fb7a620e6c44c8f3fef72afc6a54fb3fe86f2b4b/lollms-2.1.43-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"eadd6bdff838e2c33a765f08775f1f511e1bb36631506d9e05b13eb81856fea7","md5":"29bd2018781f900de44ed1a46c8918b8","sha256":"c0e6c55c31e3bfe9124034635a734b28bdb082df4094bcd52ede49f3d19b9279"},"downloads":-1,"filename":"lollms-2.1.43.tar.gz","has_sig":false,"md5_digest":"29bd2018781f900de44ed1a46c8918b8","packagetype":"sdist","python_version":"source","requires_python":null,"size":515563,"upload_time":"2023-07-17T18:05:48","upload_time_iso_8601":"2023-07-17T18:05:48.609756Z","url":"https://files.pythonhosted.org/packages/ea/dd/6bdff838e2c33a765f08775f1f511e1bb36631506d9e05b13eb81856fea7/lollms-2.1.43.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.44":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.44/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.44","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"515512e9b2aa8fa1b82e959d192f7d7ac80b2f063453546bd55800f5509bea52","md5":"e08a30d96112bd0252e9d5219fd29a08","sha256":"373924733d24a328c27263935c3e75db544b4e1469c4880709bf090a06899f2c"},"downloads":-1,"filename":"lollms-2.1.44-py3-none-any.whl","has_sig":false,"md5_digest":"e08a30d96112bd0252e9d5219fd29a08","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":525774,"upload_time":"2023-07-17T18:41:26","upload_time_iso_8601":"2023-07-17T18:41:26.480580Z","url":"https://files.pythonhosted.org/packages/51/55/12e9b2aa8fa1b82e959d192f7d7ac80b2f063453546bd55800f5509bea52/lollms-2.1.44-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"b704049cc3d49873516d39022f4182893a04ae87dfee51a2d283af03a427a0d0","md5":"15912db68e626cfccf9688a21e679e56","sha256":"8e9a83a31170fabf34c4b2fe179d07056746bf37a071a05901ee9d58f23028e9"},"downloads":-1,"filename":"lollms-2.1.44.tar.gz","has_sig":false,"md5_digest":"15912db68e626cfccf9688a21e679e56","packagetype":"sdist","python_version":"source","requires_python":null,"size":515590,"upload_time":"2023-07-17T18:41:30","upload_time_iso_8601":"2023-07-17T18:41:30.914338Z","url":"https://files.pythonhosted.org/packages/b7/04/049cc3d49873516d39022f4182893a04ae87dfee51a2d283af03a427a0d0/lollms-2.1.44.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.45":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.45/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.45","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"7ca5960cceb738a8a06e92d1a8a56871a910689785d894b7c999526510e92e86","md5":"98b16bae8fee32cb2d92c6570bb7fc9e","sha256":"4db57cbc017eccd129fa140a8f904376b024afbd675640a540fbe2dc91e0e7c0"},"downloads":-1,"filename":"lollms-2.1.45-py3-none-any.whl","has_sig":false,"md5_digest":"98b16bae8fee32cb2d92c6570bb7fc9e","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":514682,"upload_time":"2023-07-19T16:46:11","upload_time_iso_8601":"2023-07-19T16:46:11.622474Z","url":"https://files.pythonhosted.org/packages/7c/a5/960cceb738a8a06e92d1a8a56871a910689785d894b7c999526510e92e86/lollms-2.1.45-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"e85f23a1c0bd3ccf3ed6c9d20bba813a75c912608b620d5752a3d4e6933aa31f","md5":"9a49253f0281c4725258b200daa8cee5","sha256":"9565ebde445e1b4085e68290523fc225fe957a0eddaaa528b7952969c7cbda75"},"downloads":-1,"filename":"lollms-2.1.45.tar.gz","has_sig":false,"md5_digest":"9a49253f0281c4725258b200daa8cee5","packagetype":"sdist","python_version":"source","requires_python":null,"size":515732,"upload_time":"2023-07-19T16:46:14","upload_time_iso_8601":"2023-07-19T16:46:14.107731Z","url":"https://files.pythonhosted.org/packages/e8/5f/23a1c0bd3ccf3ed6c9d20bba813a75c912608b620d5752a3d4e6933aa31f/lollms-2.1.45.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.46":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.46/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.46","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"510543a869a6f23904031eb92e5dd3429086981c70d971743b9fd9f3b6c075b4","md5":"9f43fea39041681198b2005b76988ae1","sha256":"0fe83a278d21309eebec336db491faf58efe6a1fe708440c69a9ecdc8398e43b"},"downloads":-1,"filename":"lollms-2.1.46-py3-none-any.whl","has_sig":false,"md5_digest":"9f43fea39041681198b2005b76988ae1","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":526778,"upload_time":"2023-07-19T16:50:31","upload_time_iso_8601":"2023-07-19T16:50:31.219496Z","url":"https://files.pythonhosted.org/packages/51/05/43a869a6f23904031eb92e5dd3429086981c70d971743b9fd9f3b6c075b4/lollms-2.1.46-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"b25c1c3dd52565d044854471430044fc6135414e93a8acaa7bc3d6d7ae0a94db","md5":"851dd0f63f4b6a6b79baf553ab653c03","sha256":"3655d2969332e14cbe155d15e909c64e8daabe33d5726e7bfb817cf20063b308"},"downloads":-1,"filename":"lollms-2.1.46.tar.gz","has_sig":false,"md5_digest":"851dd0f63f4b6a6b79baf553ab653c03","packagetype":"sdist","python_version":"source","requires_python":null,"size":526580,"upload_time":"2023-07-19T16:50:33","upload_time_iso_8601":"2023-07-19T16:50:33.845969Z","url":"https://files.pythonhosted.org/packages/b2/5c/1c3dd52565d044854471430044fc6135414e93a8acaa7bc3d6d7ae0a94db/lollms-2.1.46.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.47":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.47/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.47","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"d714ca377c30315427b62b0b498e0d30c890223c76cc6b939b709d5267558929","md5":"a5393185c84dacea81bbb21c7cf9f693","sha256":"82ed580946b7f8743d05b92d777e5ece6d7cc178d02f6c7ce8beeb25b1b510a9"},"downloads":-1,"filename":"lollms-2.1.47-py3-none-any.whl","has_sig":false,"md5_digest":"a5393185c84dacea81bbb21c7cf9f693","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":526783,"upload_time":"2023-07-19T17:05:07","upload_time_iso_8601":"2023-07-19T17:05:07.443811Z","url":"https://files.pythonhosted.org/packages/d7/14/ca377c30315427b62b0b498e0d30c890223c76cc6b939b709d5267558929/lollms-2.1.47-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c9433881e0207e63e4f81ff36ec2f6282f2a1ed6ec01cb14ace674b143026a3d","md5":"d0853d7be0b19ee987570e615d7abdc6","sha256":"873303e60219dd10d4a2fdf77d5d6271caaaee6a6e80eca69a6863ae0d4e6832"},"downloads":-1,"filename":"lollms-2.1.47.tar.gz","has_sig":false,"md5_digest":"d0853d7be0b19ee987570e615d7abdc6","packagetype":"sdist","python_version":"source","requires_python":null,"size":526573,"upload_time":"2023-07-19T17:05:11","upload_time_iso_8601":"2023-07-19T17:05:11.025240Z","url":"https://files.pythonhosted.org/packages/c9/43/3881e0207e63e4f81ff36ec2f6282f2a1ed6ec01cb14ace674b143026a3d/lollms-2.1.47.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.48":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.48/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.48","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"9b810606ac75dd11c000ed45af99d3e79f890032385447e3c709e22bceb2fb22","md5":"8643fad49719e064bbe7607c717dcb64","sha256":"0ed3d3bcbd0346047fa0c2a7a435a03f17e65bc67ac57b0e19a12f2f668f96fb"},"downloads":-1,"filename":"lollms-2.1.48-py3-none-any.whl","has_sig":false,"md5_digest":"8643fad49719e064bbe7607c717dcb64","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":526801,"upload_time":"2023-07-19T17:40:36","upload_time_iso_8601":"2023-07-19T17:40:36.999351Z","url":"https://files.pythonhosted.org/packages/9b/81/0606ac75dd11c000ed45af99d3e79f890032385447e3c709e22bceb2fb22/lollms-2.1.48-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"00afb761c4526b8da1a1ef53192cd69ade33f39d25d8d6fc02c9386621d000a3","md5":"7dcbe6f2d16692698b1dd3043e36aa6c","sha256":"29e4962793cb4fa50dbe61545055c4a7a452f147213a19640592eb8c05110d03"},"downloads":-1,"filename":"lollms-2.1.48.tar.gz","has_sig":false,"md5_digest":"7dcbe6f2d16692698b1dd3043e36aa6c","packagetype":"sdist","python_version":"source","requires_python":null,"size":526605,"upload_time":"2023-07-19T17:40:40","upload_time_iso_8601":"2023-07-19T17:40:40.569139Z","url":"https://files.pythonhosted.org/packages/00/af/b761c4526b8da1a1ef53192cd69ade33f39d25d8d6fc02c9386621d000a3/lollms-2.1.48.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.49":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.49/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.49","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"8228c372baaf3309aa2117267b145beef0014bf1a44287c4c60ea9d464cd809d","md5":"3107542b66f6234406255a50e617af99","sha256":"10b18e5dc50aaa68bb8546bd9a4da6ff657fc76079a8807484ad4a4198fb4e79"},"downloads":-1,"filename":"lollms-2.1.49-py3-none-any.whl","has_sig":false,"md5_digest":"3107542b66f6234406255a50e617af99","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1084314,"upload_time":"2023-07-19T17:47:14","upload_time_iso_8601":"2023-07-19T17:47:14.097335Z","url":"https://files.pythonhosted.org/packages/82/28/c372baaf3309aa2117267b145beef0014bf1a44287c4c60ea9d464cd809d/lollms-2.1.49-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c6a62f4b7c6cfb265597ab1a7ae70f8e2dcc760fd4781f50c2ee784ba335470a","md5":"1f797d2fb98452727efb9bfae9a2b9c5","sha256":"7c18fe58932620addd60cebb70777240d7dca35c80b3aa4666eade4b5bb6b90d"},"downloads":-1,"filename":"lollms-2.1.49.tar.gz","has_sig":false,"md5_digest":"1f797d2fb98452727efb9bfae9a2b9c5","packagetype":"sdist","python_version":"source","requires_python":null,"size":1084385,"upload_time":"2023-07-19T17:47:18","upload_time_iso_8601":"2023-07-19T17:47:18.302329Z","url":"https://files.pythonhosted.org/packages/c6/a6/2f4b7c6cfb265597ab1a7ae70f8e2dcc760fd4781f50c2ee784ba335470a/lollms-2.1.49.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.5":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.5/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.5","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"e4fd9db12302036f8331c6a22b0c536a0a64a32eba180ee919ca161fc2c13dad","md5":"993463f1315db993d542a88d2e0b5b45","sha256":"39f6c65ea186d83f2fb441efde8cb850d20901f750d08ab94c48bfeb8914d47c"},"downloads":-1,"filename":"lollms-2.1.5-py3-none-any.whl","has_sig":false,"md5_digest":"993463f1315db993d542a88d2e0b5b45","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":518991,"upload_time":"2023-06-29T21:48:50","upload_time_iso_8601":"2023-06-29T21:48:50.202324Z","url":"https://files.pythonhosted.org/packages/e4/fd/9db12302036f8331c6a22b0c536a0a64a32eba180ee919ca161fc2c13dad/lollms-2.1.5-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"cb906b2b882ea92103cc087a8054b88f72af101b0d9e7ca4b7e21336ff8b71b7","md5":"fd603f374cb02c7ecb9d0df1b81dc30e","sha256":"90984b2fe9e0191741eddc22ee633f7df8c53d8610a5a2dcd6bb06424ddb8667"},"downloads":-1,"filename":"lollms-2.1.5.tar.gz","has_sig":false,"md5_digest":"fd603f374cb02c7ecb9d0df1b81dc30e","packagetype":"sdist","python_version":"source","requires_python":null,"size":519488,"upload_time":"2023-06-29T21:48:56","upload_time_iso_8601":"2023-06-29T21:48:56.693519Z","url":"https://files.pythonhosted.org/packages/cb/90/6b2b882ea92103cc087a8054b88f72af101b0d9e7ca4b7e21336ff8b71b7/lollms-2.1.5.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.50":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.50/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.50","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"5b033ec8e80eb1a4615075bbc6acda69d4901b31e58548553ad1b25590710907","md5":"66ffe87c808202ac0e259280427ef27f","sha256":"d8f80b60d5601671c5a4abec9fc90141651640fe88e4f9e91bb937b55f7d8bc9"},"downloads":-1,"filename":"lollms-2.1.50-py3-none-any.whl","has_sig":false,"md5_digest":"66ffe87c808202ac0e259280427ef27f","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1007738,"upload_time":"2023-07-20T17:34:27","upload_time_iso_8601":"2023-07-20T17:34:27.769903Z","url":"https://files.pythonhosted.org/packages/5b/03/3ec8e80eb1a4615075bbc6acda69d4901b31e58548553ad1b25590710907/lollms-2.1.50-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"1cb5d58418eab26c6829344de1ecfce5b03a03a34431da7bb9c2a981c3f0edb3","md5":"e8b0c7187820b8ec53b893d45d6ffd01","sha256":"f86965414b327ba62618c895798cd4ba4ef92dac5a615fdcf134803e2dc99c2f"},"downloads":-1,"filename":"lollms-2.1.50.tar.gz","has_sig":false,"md5_digest":"e8b0c7187820b8ec53b893d45d6ffd01","packagetype":"sdist","python_version":"source","requires_python":null,"size":1008515,"upload_time":"2023-07-20T17:34:29","upload_time_iso_8601":"2023-07-20T17:34:29.912638Z","url":"https://files.pythonhosted.org/packages/1c/b5/d58418eab26c6829344de1ecfce5b03a03a34431da7bb9c2a981c3f0edb3/lollms-2.1.50.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.51":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.51/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.51","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"396ba04a5c8518073f68c4c5cb2aacea93a67e221b7f488c43217491062d79d4","md5":"a5d3087a4258bdab90fe905f44f29e16","sha256":"aa44d29ee55a9abebf476f30798352c16609916dd5050a7a485fff3ff08b84b6"},"downloads":-1,"filename":"lollms-2.1.51-py3-none-any.whl","has_sig":false,"md5_digest":"a5d3087a4258bdab90fe905f44f29e16","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":540614,"upload_time":"2023-07-21T07:14:00","upload_time_iso_8601":"2023-07-21T07:14:00.840834Z","url":"https://files.pythonhosted.org/packages/39/6b/a04a5c8518073f68c4c5cb2aacea93a67e221b7f488c43217491062d79d4/lollms-2.1.51-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"e159cd3181b7559bd33f21896df6fcd177cc90ce90c839d323902ce6b8193cfb","md5":"219981e5fca0ee8fd1f8066d4cfa735f","sha256":"1ac617ed43c6f502452c070db8c37945b6d3c7122f2d0eb4b822676201c628e7"},"downloads":-1,"filename":"lollms-2.1.51.tar.gz","has_sig":false,"md5_digest":"219981e5fca0ee8fd1f8066d4cfa735f","packagetype":"sdist","python_version":"source","requires_python":null,"size":539001,"upload_time":"2023-07-21T07:14:04","upload_time_iso_8601":"2023-07-21T07:14:04.009194Z","url":"https://files.pythonhosted.org/packages/e1/59/cd3181b7559bd33f21896df6fcd177cc90ce90c839d323902ce6b8193cfb/lollms-2.1.51.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.53":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.53/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.53","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"b3a651b9fb2ca9daecd9c34735c00bb34cd739794e809f32ea99d77c796e7327","md5":"cca0260cc403a757f0ce2624b68b0965","sha256":"1bb7814ab82295f54e5bbcdefa515671a8415c6b8ad92af4bfc19952ab5af16c"},"downloads":-1,"filename":"lollms-2.1.53-py3-none-any.whl","has_sig":false,"md5_digest":"cca0260cc403a757f0ce2624b68b0965","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":541225,"upload_time":"2023-07-21T14:24:07","upload_time_iso_8601":"2023-07-21T14:24:07.879337Z","url":"https://files.pythonhosted.org/packages/b3/a6/51b9fb2ca9daecd9c34735c00bb34cd739794e809f32ea99d77c796e7327/lollms-2.1.53-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"b7b2a25323b65403d2a9c5b6d2eb0ad3793059fe4b8d5a1cd736951a995911bc","md5":"26172a0e4a28b23cf75e04f19adb62b5","sha256":"4319f4a22fc1d76d6f4f21412ac6ddad8b57106190e2c48c096cd4a4527e428d"},"downloads":-1,"filename":"lollms-2.1.53.tar.gz","has_sig":false,"md5_digest":"26172a0e4a28b23cf75e04f19adb62b5","packagetype":"sdist","python_version":"source","requires_python":null,"size":539657,"upload_time":"2023-07-21T14:24:11","upload_time_iso_8601":"2023-07-21T14:24:11.947857Z","url":"https://files.pythonhosted.org/packages/b7/b2/a25323b65403d2a9c5b6d2eb0ad3793059fe4b8d5a1cd736951a995911bc/lollms-2.1.53.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.54":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.54/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.54","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"c82f0bf73b881d5d101217f614b772b14bb4838f391f7e511dfc789e373d22b9","md5":"68bed8d441751c4cc01852c394fa587d","sha256":"d0bb72b299a2fc992d777c52cb0a5a00361a0a901d5ec49d5f93822edd5ec6b6"},"downloads":-1,"filename":"lollms-2.1.54-py3-none-any.whl","has_sig":false,"md5_digest":"68bed8d441751c4cc01852c394fa587d","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1011926,"upload_time":"2023-07-23T23:20:55","upload_time_iso_8601":"2023-07-23T23:20:55.272334Z","url":"https://files.pythonhosted.org/packages/c8/2f/0bf73b881d5d101217f614b772b14bb4838f391f7e511dfc789e373d22b9/lollms-2.1.54-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f0df39c79570ef22015f5ae99e555c0d66ca9f365b12c0950a8144b8981a1ba4","md5":"862bef620cf4199096bf3acdfc8740b4","sha256":"98b366678549fa183eaf9eb455934bda70189751763712dda1aa5977a09b6531"},"downloads":-1,"filename":"lollms-2.1.54.tar.gz","has_sig":false,"md5_digest":"862bef620cf4199096bf3acdfc8740b4","packagetype":"sdist","python_version":"source","requires_python":null,"size":1012294,"upload_time":"2023-07-23T23:20:57","upload_time_iso_8601":"2023-07-23T23:20:57.539413Z","url":"https://files.pythonhosted.org/packages/f0/df/39c79570ef22015f5ae99e555c0d66ca9f365b12c0950a8144b8981a1ba4/lollms-2.1.54.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.55":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.55/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.55","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"af597b22fe0bed138fb242719ac9e297ea1a78c14d3668dfb84236cbf98c50be","md5":"de5aaab39b6f102fcc9e30022bda261e","sha256":"840acb6f659f79420e30711a2185766dad143be551de35f4d4f0dd3f1a17aad8"},"downloads":-1,"filename":"lollms-2.1.55-py3-none-any.whl","has_sig":false,"md5_digest":"de5aaab39b6f102fcc9e30022bda261e","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1011964,"upload_time":"2023-07-26T21:50:47","upload_time_iso_8601":"2023-07-26T21:50:47.641578Z","url":"https://files.pythonhosted.org/packages/af/59/7b22fe0bed138fb242719ac9e297ea1a78c14d3668dfb84236cbf98c50be/lollms-2.1.55-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"5cb329093e64bcc55b5688a4081f54fefc4a875d3c6ffe4ae95f325743aea1f4","md5":"1b4facb826051deae94ff94e89a1ce3f","sha256":"d71df4303155f884fa0a630a40e21ce246a97f85061931205c26ad422c39daa6"},"downloads":-1,"filename":"lollms-2.1.55.tar.gz","has_sig":false,"md5_digest":"1b4facb826051deae94ff94e89a1ce3f","packagetype":"sdist","python_version":"source","requires_python":null,"size":1012332,"upload_time":"2023-07-26T21:50:50","upload_time_iso_8601":"2023-07-26T21:50:50.724272Z","url":"https://files.pythonhosted.org/packages/5c/b3/29093e64bcc55b5688a4081f54fefc4a875d3c6ffe4ae95f325743aea1f4/lollms-2.1.55.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.56":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.56/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.56","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"01284333a0234cd66b346f13b871a34ff87ef012a7be7b04a5a931b98a19037e","md5":"22bda0b87118b8ffaa18645e9e6d34a7","sha256":"38b20fade800a4205a5aec143bab07f8e57f1cabe01baefeea1007899bc22523"},"downloads":-1,"filename":"lollms-2.1.56-py3-none-any.whl","has_sig":false,"md5_digest":"22bda0b87118b8ffaa18645e9e6d34a7","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1012081,"upload_time":"2023-07-26T22:02:45","upload_time_iso_8601":"2023-07-26T22:02:45.757319Z","url":"https://files.pythonhosted.org/packages/01/28/4333a0234cd66b346f13b871a34ff87ef012a7be7b04a5a931b98a19037e/lollms-2.1.56-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"6fccc8f249b73c73d39ac6e98367048574ff667e3265516cd629c2141f2ef5cc","md5":"c61f19037c8250a9abacd26d3c91d6bf","sha256":"bca3b665949792fd12c11e46bcbe6256635d92c0b3e8cd057102b73494d6eb8e"},"downloads":-1,"filename":"lollms-2.1.56.tar.gz","has_sig":false,"md5_digest":"c61f19037c8250a9abacd26d3c91d6bf","packagetype":"sdist","python_version":"source","requires_python":null,"size":1012464,"upload_time":"2023-07-26T22:02:49","upload_time_iso_8601":"2023-07-26T22:02:49.000865Z","url":"https://files.pythonhosted.org/packages/6f/cc/c8f249b73c73d39ac6e98367048574ff667e3265516cd629c2141f2ef5cc/lollms-2.1.56.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.59":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.59/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.59","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"9bb35d21f2f987a5e3fd5a89ffb0c1d0d3426cb2382d3a69f012d6273988e626","md5":"3cb55b3d78bc5ce35349cb56de48bea9","sha256":"f8f091c0ca6ebb492446c4ffcbb483717e8cca86bf27dc1fdaf4723db1c39ae9"},"downloads":-1,"filename":"lollms-2.1.59-py3-none-any.whl","has_sig":false,"md5_digest":"3cb55b3d78bc5ce35349cb56de48bea9","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":543508,"upload_time":"2023-07-27T14:26:57","upload_time_iso_8601":"2023-07-27T14:26:57.901577Z","url":"https://files.pythonhosted.org/packages/9b/b3/5d21f2f987a5e3fd5a89ffb0c1d0d3426cb2382d3a69f012d6273988e626/lollms-2.1.59-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"7e438c553dafca6730b2094aa17de0bd7fe9e23ab83b76abec50339bc2358ee5","md5":"7c661f491e82b68d66f87469e414ffa3","sha256":"11cea859f16ab485ade1327db7a066ad2a159d1376362c54cf8bc597d05a108f"},"downloads":-1,"filename":"lollms-2.1.59.tar.gz","has_sig":false,"md5_digest":"7c661f491e82b68d66f87469e414ffa3","packagetype":"sdist","python_version":"source","requires_python":null,"size":542086,"upload_time":"2023-07-27T14:27:00","upload_time_iso_8601":"2023-07-27T14:27:00.724451Z","url":"https://files.pythonhosted.org/packages/7e/43/8c553dafca6730b2094aa17de0bd7fe9e23ab83b76abec50339bc2358ee5/lollms-2.1.59.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.6":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.6/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.6","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"d037ec3e65993e8cda8d6285fc6f0d6a3d0b98a6a5dc26a1e82f8e64d5b9d452","md5":"c7c1a5e904a8159d42d54c6af1d16146","sha256":"c1d9b21e5e8c69e72918ff97c935bf1411ccf80f986571be434bf9dc36a8482f"},"downloads":-1,"filename":"lollms-2.1.6-py3-none-any.whl","has_sig":false,"md5_digest":"c7c1a5e904a8159d42d54c6af1d16146","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":519009,"upload_time":"2023-06-29T21:54:16","upload_time_iso_8601":"2023-06-29T21:54:16.986868Z","url":"https://files.pythonhosted.org/packages/d0/37/ec3e65993e8cda8d6285fc6f0d6a3d0b98a6a5dc26a1e82f8e64d5b9d452/lollms-2.1.6-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"b95f41a74a5bdf96be6f6d24754fe835d73de0ed2eb880b2e5ec58daf66e411c","md5":"ab478d2890942446b650499f3ba8b087","sha256":"8aaa4cf3f74c592f9b9796e5534c907634e40159bca42d9b39dfa4aad7ff9927"},"downloads":-1,"filename":"lollms-2.1.6.tar.gz","has_sig":false,"md5_digest":"ab478d2890942446b650499f3ba8b087","packagetype":"sdist","python_version":"source","requires_python":null,"size":519475,"upload_time":"2023-06-29T21:54:21","upload_time_iso_8601":"2023-06-29T21:54:21.444317Z","url":"https://files.pythonhosted.org/packages/b9/5f/41a74a5bdf96be6f6d24754fe835d73de0ed2eb880b2e5ec58daf66e411c/lollms-2.1.6.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.60":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.60/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.60","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"a8aea294f2753cafda13ed6ffd68306282f8854affad542407486bf968d9a57c","md5":"ee2cd168c8be87df8d4e105983934a87","sha256":"577e71e0b4e49cdf297a9040b140b32090f93427c41a0c8d37d7ec8e3a76fabc"},"downloads":-1,"filename":"lollms-2.1.60-py3-none-any.whl","has_sig":false,"md5_digest":"ee2cd168c8be87df8d4e105983934a87","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1014384,"upload_time":"2023-07-27T23:15:47","upload_time_iso_8601":"2023-07-27T23:15:47.676662Z","url":"https://files.pythonhosted.org/packages/a8/ae/a294f2753cafda13ed6ffd68306282f8854affad542407486bf968d9a57c/lollms-2.1.60-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"b139df7b30ece70a4de26b58aef60dc6ed9e823c0ccbaa5254aea6403a744723","md5":"163ed3b528522dec44b649c2f7bb6ef0","sha256":"9bb1adc4c75bee38e68dc2e6371143ae8d028b84f8550857dcb701a5d13427bd"},"downloads":-1,"filename":"lollms-2.1.60.tar.gz","has_sig":false,"md5_digest":"163ed3b528522dec44b649c2f7bb6ef0","packagetype":"sdist","python_version":"source","requires_python":null,"size":1014921,"upload_time":"2023-07-27T23:15:50","upload_time_iso_8601":"2023-07-27T23:15:50.099240Z","url":"https://files.pythonhosted.org/packages/b1/39/df7b30ece70a4de26b58aef60dc6ed9e823c0ccbaa5254aea6403a744723/lollms-2.1.60.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.7":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.7/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.7","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"362e63f24ea2a4a8cb43defa8f3a1cedae5c877a7f77c6ce28bcbe24d9adab8c","md5":"0a753ad35978abcd7ddb37e1bf37deb9","sha256":"6c4e3e52c68eeb6f8d54f9e3f6e464b9c751471811356a10b5e68e6cdcddf84b"},"downloads":-1,"filename":"lollms-2.1.7-py3-none-any.whl","has_sig":false,"md5_digest":"0a753ad35978abcd7ddb37e1bf37deb9","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":519014,"upload_time":"2023-06-29T21:59:46","upload_time_iso_8601":"2023-06-29T21:59:46.538141Z","url":"https://files.pythonhosted.org/packages/36/2e/63f24ea2a4a8cb43defa8f3a1cedae5c877a7f77c6ce28bcbe24d9adab8c/lollms-2.1.7-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"11fbedb3d8188f16a3dd1bbebfd94c5b88d19b212721d9d6e126acf4bf412c68","md5":"df89d40301ce719ef87669127f238efe","sha256":"797669c6225153cfb9a9a4b0306bc1efc7dc0fe85d67bde66d6e7873fec055b5"},"downloads":-1,"filename":"lollms-2.1.7.tar.gz","has_sig":false,"md5_digest":"df89d40301ce719ef87669127f238efe","packagetype":"sdist","python_version":"source","requires_python":null,"size":519498,"upload_time":"2023-06-29T21:59:48","upload_time_iso_8601":"2023-06-29T21:59:48.910866Z","url":"https://files.pythonhosted.org/packages/11/fb/edb3d8188f16a3dd1bbebfd94c5b88d19b212721d9d6e126acf4bf412c68/lollms-2.1.7.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.8":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.8/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.8","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"98ff518cbedd5d365ce47b10a614a983de388993647eb36a491c2d2d8656c7b4","md5":"fcf36081f407e8dbed76740c1890aba5","sha256":"9202c43f935c17f32c2a757b5cc7b854ec5487f6eb04fb884e10fea1bc942f37"},"downloads":-1,"filename":"lollms-2.1.8-py3-none-any.whl","has_sig":false,"md5_digest":"fcf36081f407e8dbed76740c1890aba5","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":519012,"upload_time":"2023-06-29T22:05:25","upload_time_iso_8601":"2023-06-29T22:05:25.469546Z","url":"https://files.pythonhosted.org/packages/98/ff/518cbedd5d365ce47b10a614a983de388993647eb36a491c2d2d8656c7b4/lollms-2.1.8-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"558ec10a453677812ff66a65c459737c99f6b99cc00da8cc2e27f3a1f924faa0","md5":"5d48eebbfb8c88840159347fa6bc614e","sha256":"673e1f9ca1d963d8dc2024f7a2d029fc5297187aa3aa19537488fe729a0729ee"},"downloads":-1,"filename":"lollms-2.1.8.tar.gz","has_sig":false,"md5_digest":"5d48eebbfb8c88840159347fa6bc614e","packagetype":"sdist","python_version":"source","requires_python":null,"size":519470,"upload_time":"2023-06-29T22:05:31","upload_time_iso_8601":"2023-06-29T22:05:31.598702Z","url":"https://files.pythonhosted.org/packages/55/8e/c10a453677812ff66a65c459737c99f6b99cc00da8cc2e27f3a1f924faa0/lollms-2.1.8.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.1.9":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.1.9/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.1.9","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"4aa15a869e00ee6e9e4da964ba05087121c9a90c28484ecc24fe08df5ce8b785","md5":"00e4f0127a9908797d10a4a96f3e805d","sha256":"6baefdbb47b5c90b0adbded06fd9e303279ac6db2e39406c39c15174900204ea"},"downloads":-1,"filename":"lollms-2.1.9-py3-none-any.whl","has_sig":false,"md5_digest":"00e4f0127a9908797d10a4a96f3e805d","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":518972,"upload_time":"2023-06-29T22:22:59","upload_time_iso_8601":"2023-06-29T22:22:59.034397Z","url":"https://files.pythonhosted.org/packages/4a/a1/5a869e00ee6e9e4da964ba05087121c9a90c28484ecc24fe08df5ce8b785/lollms-2.1.9-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"6a837745db4a743155e7a857ec418630027696e10e7fb67dfd6805a2496bdb64","md5":"8578dbf28a2073abc0a545ad886c2f43","sha256":"0b215285283bc5c5592f9af33b64ac77554a2f32516128905005b73425af6707"},"downloads":-1,"filename":"lollms-2.1.9.tar.gz","has_sig":false,"md5_digest":"8578dbf28a2073abc0a545ad886c2f43","packagetype":"sdist","python_version":"source","requires_python":null,"size":519405,"upload_time":"2023-06-29T22:23:03","upload_time_iso_8601":"2023-06-29T22:23:03.840732Z","url":"https://files.pythonhosted.org/packages/6a/83/7745db4a743155e7a857ec418630027696e10e7fb67dfd6805a2496bdb64/lollms-2.1.9.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.2.0":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.2.0/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.2.0","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"d7377ca65ff2ff1d48dc47352c76df87e755f8748f848ee299641a81b85fbb88","md5":"31c107c3e8164194c8b66794702145bb","sha256":"ee0822988311d28dc19eb2e7616bfb1360afaa5f5b0617d3be57f8d285ac87a3"},"downloads":-1,"filename":"lollms-2.2.0-py3-none-any.whl","has_sig":false,"md5_digest":"31c107c3e8164194c8b66794702145bb","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1015652,"upload_time":"2023-07-29T00:03:03","upload_time_iso_8601":"2023-07-29T00:03:03.914062Z","url":"https://files.pythonhosted.org/packages/d7/37/7ca65ff2ff1d48dc47352c76df87e755f8748f848ee299641a81b85fbb88/lollms-2.2.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"e1d7f2fe125f357f8458f62bb4dddf52d206aaba2011f34ce878af97f3aaaf92","md5":"7eea50363838e9a65c3203125477fe91","sha256":"9d548267da6c30e896d9e05d2641df80fa4571ca3e60b41957e344a7c555f709"},"downloads":-1,"filename":"lollms-2.2.0.tar.gz","has_sig":false,"md5_digest":"7eea50363838e9a65c3203125477fe91","packagetype":"sdist","python_version":"source","requires_python":null,"size":1016205,"upload_time":"2023-07-29T00:03:05","upload_time_iso_8601":"2023-07-29T00:03:05.879268Z","url":"https://files.pythonhosted.org/packages/e1/d7/f2fe125f357f8458f62bb4dddf52d206aaba2011f34ce878af97f3aaaf92/lollms-2.2.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.2.1":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.2.1/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.2.1","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"24258526b7c57ce9b64ce826cbc972e0e2649c40d38f09a7af815445a233fc88","md5":"bc201468ab6aae6f78034a3c92559c44","sha256":"6e4470d0744cbac86df29979a6866365480a422cf8efe09dfffc66c0198311a3"},"downloads":-1,"filename":"lollms-2.2.1-py3-none-any.whl","has_sig":false,"md5_digest":"bc201468ab6aae6f78034a3c92559c44","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1015830,"upload_time":"2023-07-31T01:13:27","upload_time_iso_8601":"2023-07-31T01:13:27.877344Z","url":"https://files.pythonhosted.org/packages/24/25/8526b7c57ce9b64ce826cbc972e0e2649c40d38f09a7af815445a233fc88/lollms-2.2.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c6bb4c6b27aaa417ba9e35c5d7932d2498df45c3c8615e83f8828b83170f7b32","md5":"6747a01f6757ed9812c978f31bf255da","sha256":"fc494b1336d711513dcceddd975bb93f8a2a630f4804386f11ca6fc287e4492b"},"downloads":-1,"filename":"lollms-2.2.1.tar.gz","has_sig":false,"md5_digest":"6747a01f6757ed9812c978f31bf255da","packagetype":"sdist","python_version":"source","requires_python":null,"size":1016386,"upload_time":"2023-07-31T01:13:30","upload_time_iso_8601":"2023-07-31T01:13:30.313193Z","url":"https://files.pythonhosted.org/packages/c6/bb/4c6b27aaa417ba9e35c5d7932d2498df45c3c8615e83f8828b83170f7b32/lollms-2.2.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.2.2":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.2.2/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.2.2","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"463fe260c4d14106c2f3d2f9b57849f5ee086b4a110c3390e20d6e4288299578","md5":"1993c51af5a81b42a56cea17d374c3d6","sha256":"7baa7f12bd75ade376cdddd870e83ada15847fa3816e18160874430fd7a47aa0"},"downloads":-1,"filename":"lollms-2.2.2-py3-none-any.whl","has_sig":false,"md5_digest":"1993c51af5a81b42a56cea17d374c3d6","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1015844,"upload_time":"2023-07-31T12:21:53","upload_time_iso_8601":"2023-07-31T12:21:53.970414Z","url":"https://files.pythonhosted.org/packages/46/3f/e260c4d14106c2f3d2f9b57849f5ee086b4a110c3390e20d6e4288299578/lollms-2.2.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"1860a3e4acdb7effdf8b4a237804be9bf65bbe37fe00cccb8462112fb09eb084","md5":"0473a8a4fb1af777508c25c9e47991b1","sha256":"c04fa7dc6d8b8d395c0abb7558cfb12e37731f12395355b2a81af7cb2df63031"},"downloads":-1,"filename":"lollms-2.2.2.tar.gz","has_sig":false,"md5_digest":"0473a8a4fb1af777508c25c9e47991b1","packagetype":"sdist","python_version":"source","requires_python":null,"size":1016402,"upload_time":"2023-07-31T12:21:56","upload_time_iso_8601":"2023-07-31T12:21:56.323107Z","url":"https://files.pythonhosted.org/packages/18/60/a3e4acdb7effdf8b4a237804be9bf65bbe37fe00cccb8462112fb09eb084/lollms-2.2.2.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.2.3":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.2.3/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.2.3","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"7942daab715bb79390bc4884d80d20653b1cfb32626ad3f38c05ff04b16600a2","md5":"497318c160cb886be61f6ee487e55cf8","sha256":"a2a1c0247534dcadf5f2624c51eaf87198bf958c95e7f30e0f6acbb5135aefff"},"downloads":-1,"filename":"lollms-2.2.3-py3-none-any.whl","has_sig":false,"md5_digest":"497318c160cb886be61f6ee487e55cf8","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1015853,"upload_time":"2023-07-31T20:05:34","upload_time_iso_8601":"2023-07-31T20:05:34.033439Z","url":"https://files.pythonhosted.org/packages/79/42/daab715bb79390bc4884d80d20653b1cfb32626ad3f38c05ff04b16600a2/lollms-2.2.3-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"64622c29e6d060a96843adbc792bef0b7aca14f12b3bf7ee6fd50e191e4dce33","md5":"da99912cd2677a07854853f11ed0c620","sha256":"e9ffe0871b0b904c59385307bab9079ecdfafdc8f48ffe700fde82afd2686fb2"},"downloads":-1,"filename":"lollms-2.2.3.tar.gz","has_sig":false,"md5_digest":"da99912cd2677a07854853f11ed0c620","packagetype":"sdist","python_version":"source","requires_python":null,"size":1016408,"upload_time":"2023-07-31T20:05:36","upload_time_iso_8601":"2023-07-31T20:05:36.463461Z","url":"https://files.pythonhosted.org/packages/64/62/2c29e6d060a96843adbc792bef0b7aca14f12b3bf7ee6fd50e191e4dce33/lollms-2.2.3.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.2.4":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.2.4/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.2.4","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"375c4d61e409a381b22b59da4c51d84e0d0969b5007f68fa922efbea8cfd1924","md5":"7b4e7bac9b8f1c09389dda60fa377fcd","sha256":"3926cb4f121265124a723e06f0a5920d2bd5100e89eec748a72b3a5e8b979b1c"},"downloads":-1,"filename":"lollms-2.2.4-py3-none-any.whl","has_sig":false,"md5_digest":"7b4e7bac9b8f1c09389dda60fa377fcd","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1016209,"upload_time":"2023-07-31T20:28:05","upload_time_iso_8601":"2023-07-31T20:28:05.749777Z","url":"https://files.pythonhosted.org/packages/37/5c/4d61e409a381b22b59da4c51d84e0d0969b5007f68fa922efbea8cfd1924/lollms-2.2.4-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"d151efa027b4b0ac39518d0097c252523527a084a6f249f3a2c040d6f9de8fd1","md5":"48c5a1fe8159b14b8601310535b1660a","sha256":"11be166a869c2cc4eb0d5375276d353f41043e8b6f250e580a5b5e8d599ea1f6"},"downloads":-1,"filename":"lollms-2.2.4.tar.gz","has_sig":false,"md5_digest":"48c5a1fe8159b14b8601310535b1660a","packagetype":"sdist","python_version":"source","requires_python":null,"size":1016773,"upload_time":"2023-07-31T20:28:08","upload_time_iso_8601":"2023-07-31T20:28:08.427679Z","url":"https://files.pythonhosted.org/packages/d1/51/efa027b4b0ac39518d0097c252523527a084a6f249f3a2c040d6f9de8fd1/lollms-2.2.4.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.2.5":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.2.5/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.2.5","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"7a2920fe87b48e5f3c6f8127502001111c113f1f0ff4a3a1c2cd161e01a728f5","md5":"78cab77f1567aaa9d3bef5275eb7de6b","sha256":"1cb502ce0290a995ec3457e2ee8227185308baa7573735ebaae0bc1aef697d1c"},"downloads":-1,"filename":"lollms-2.2.5-py3-none-any.whl","has_sig":false,"md5_digest":"78cab77f1567aaa9d3bef5275eb7de6b","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1016325,"upload_time":"2023-07-31T22:15:45","upload_time_iso_8601":"2023-07-31T22:15:45.053279Z","url":"https://files.pythonhosted.org/packages/7a/29/20fe87b48e5f3c6f8127502001111c113f1f0ff4a3a1c2cd161e01a728f5/lollms-2.2.5-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"831327f1a17c3debdedfd9d30396673026dce1c8a75c369af71602e66ee08477","md5":"2a0aa63129a0ab0e719bf0b3de06d165","sha256":"d07e03eab6a3b6a5c737dcd36d62344ff35aa556f592c086142cd99b5018c8e6"},"downloads":-1,"filename":"lollms-2.2.5.tar.gz","has_sig":false,"md5_digest":"2a0aa63129a0ab0e719bf0b3de06d165","packagetype":"sdist","python_version":"source","requires_python":null,"size":1016854,"upload_time":"2023-07-31T22:15:48","upload_time_iso_8601":"2023-07-31T22:15:48.531453Z","url":"https://files.pythonhosted.org/packages/83/13/27f1a17c3debdedfd9d30396673026dce1c8a75c369af71602e66ee08477/lollms-2.2.5.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.2.6":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.2.6/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.2.6","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"90823b5d91799d574a25985cc0f718d247554ddc48db286a835418044c3bdf25","md5":"2d34aa39cebea1520e0d9a8944d6246e","sha256":"9b7e9338c482ab990128725d9301bd2520fd5a8c3e71a2030bd943545c45c7db"},"downloads":-1,"filename":"lollms-2.2.6-py3-none-any.whl","has_sig":false,"md5_digest":"2d34aa39cebea1520e0d9a8944d6246e","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1016315,"upload_time":"2023-07-31T22:29:09","upload_time_iso_8601":"2023-07-31T22:29:09.232022Z","url":"https://files.pythonhosted.org/packages/90/82/3b5d91799d574a25985cc0f718d247554ddc48db286a835418044c3bdf25/lollms-2.2.6-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"25bb458af369be0d7fc2f5dc4ba8ddec3199bed04d82a07e8cf7305713f5b855","md5":"8366421d0d6bfc4a13087b8ee7218e64","sha256":"e64e4f8e99e11258676231aa8af5658f5b5d3c4a2920fb33c527ecf439609f20"},"downloads":-1,"filename":"lollms-2.2.6.tar.gz","has_sig":false,"md5_digest":"8366421d0d6bfc4a13087b8ee7218e64","packagetype":"sdist","python_version":"source","requires_python":null,"size":1016853,"upload_time":"2023-07-31T22:29:13","upload_time_iso_8601":"2023-07-31T22:29:13.413875Z","url":"https://files.pythonhosted.org/packages/25/bb/458af369be0d7fc2f5dc4ba8ddec3199bed04d82a07e8cf7305713f5b855/lollms-2.2.6.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.2.7":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.2.7/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.2.7","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"83c310de2a5de56f9a91c05d8a81e0b3b777bd22e48616e05ba44e15e231a01a","md5":"09bb5162a3d8157e0858b18410bf7edc","sha256":"18f7387bf09e7c9a49dd12992e06236fe01bee8474d4957f21368496659a0622"},"downloads":-1,"filename":"lollms-2.2.7-py3-none-any.whl","has_sig":false,"md5_digest":"09bb5162a3d8157e0858b18410bf7edc","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1016334,"upload_time":"2023-07-31T22:49:09","upload_time_iso_8601":"2023-07-31T22:49:09.496375Z","url":"https://files.pythonhosted.org/packages/83/c3/10de2a5de56f9a91c05d8a81e0b3b777bd22e48616e05ba44e15e231a01a/lollms-2.2.7-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"238971d73e8207c45970f1431c48fab1d3fadd81369712356af3957a30799015","md5":"a72f49c1289148d7200a5f60936f9e7b","sha256":"add22ebc6dccc5929da22d43c758e6e4cccc2fd1a4ddedbeae220a7987f8aece"},"downloads":-1,"filename":"lollms-2.2.7.tar.gz","has_sig":false,"md5_digest":"a72f49c1289148d7200a5f60936f9e7b","packagetype":"sdist","python_version":"source","requires_python":null,"size":1016860,"upload_time":"2023-07-31T22:49:13","upload_time_iso_8601":"2023-07-31T22:49:13.850497Z","url":"https://files.pythonhosted.org/packages/23/89/71d73e8207c45970f1431c48fab1d3fadd81369712356af3957a30799015/lollms-2.2.7.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.2.8":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.2.8/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.2.8","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"ce7180fce246871c99134bbace555eee2aa71c1d262ab0014f468fc31167ec46","md5":"43578d9d3cc63e4378e46ba7349fa331","sha256":"0c4f63e2a97c49027d4af0408e896fb773dd2c84006431543521d50e8df340c0"},"downloads":-1,"filename":"lollms-2.2.8-py3-none-any.whl","has_sig":false,"md5_digest":"43578d9d3cc63e4378e46ba7349fa331","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1016627,"upload_time":"2023-08-01T12:18:33","upload_time_iso_8601":"2023-08-01T12:18:33.223068Z","url":"https://files.pythonhosted.org/packages/ce/71/80fce246871c99134bbace555eee2aa71c1d262ab0014f468fc31167ec46/lollms-2.2.8-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"42cc4070f5bbd67d234234263c6322b3b7f1b4a8b3671230f748beae964d37e2","md5":"6ace3bd8d58c339355c8a3229cf52ecb","sha256":"13883cd29c63a3b7d2fe61afc8079c6bcb9b9b8a96b19206f5b38854b9feb9f3"},"downloads":-1,"filename":"lollms-2.2.8.tar.gz","has_sig":false,"md5_digest":"6ace3bd8d58c339355c8a3229cf52ecb","packagetype":"sdist","python_version":"source","requires_python":null,"size":1017121,"upload_time":"2023-08-01T12:18:35","upload_time_iso_8601":"2023-08-01T12:18:35.430503Z","url":"https://files.pythonhosted.org/packages/42/cc/4070f5bbd67d234234263c6322b3b7f1b4a8b3671230f748beae964d37e2/lollms-2.2.8.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.3.0":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.3.0/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.3.0","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"064d69af8d8f2acecd1ab27c55635aa683a4e31fa80aff5f7067621345dcca21","md5":"efecef7009c5b5554e3af1159936014a","sha256":"4d23cc3f861ef6faabac600c1ecf6d4de1437c4418b9292f9c689cdb3191deac"},"downloads":-1,"filename":"lollms-2.3.0-py3-none-any.whl","has_sig":false,"md5_digest":"efecef7009c5b5554e3af1159936014a","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1016893,"upload_time":"2023-08-02T23:07:11","upload_time_iso_8601":"2023-08-02T23:07:11.170277Z","url":"https://files.pythonhosted.org/packages/06/4d/69af8d8f2acecd1ab27c55635aa683a4e31fa80aff5f7067621345dcca21/lollms-2.3.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"10c34acb42105c09af55ded63a0d2d71a363228dc15a9307fa75a4fd5a5c97c0","md5":"42a7067561d7db5b426b9eee6203f63e","sha256":"23355aaf10eaa46f411e9bf3e9a7f080687e8a8452ad8b77c9659c95cf91506a"},"downloads":-1,"filename":"lollms-2.3.0.tar.gz","has_sig":false,"md5_digest":"42a7067561d7db5b426b9eee6203f63e","packagetype":"sdist","python_version":"source","requires_python":null,"size":1017473,"upload_time":"2023-08-02T23:07:13","upload_time_iso_8601":"2023-08-02T23:07:13.982686Z","url":"https://files.pythonhosted.org/packages/10/c3/4acb42105c09af55ded63a0d2d71a363228dc15a9307fa75a4fd5a5c97c0/lollms-2.3.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.3.1":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.3.1/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.3.1","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"799bdcaae03cc783d7554ff9d56f8604c7db2e3ae7b7ffeb42bc5276bee1e06c","md5":"8a869badd37a1689f93ea7006cd70c15","sha256":"1fbc2f2ba67c6fb0cf2bd2648a73b122ec76e8dd678a19c631242853773716d8"},"downloads":-1,"filename":"lollms-2.3.1-py3-none-any.whl","has_sig":false,"md5_digest":"8a869badd37a1689f93ea7006cd70c15","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":546575,"upload_time":"2023-08-04T08:29:23","upload_time_iso_8601":"2023-08-04T08:29:23.832239Z","url":"https://files.pythonhosted.org/packages/79/9b/dcaae03cc783d7554ff9d56f8604c7db2e3ae7b7ffeb42bc5276bee1e06c/lollms-2.3.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"10d2b8e9629dfa158c5c9f34012396f6e3c17a49e834d1ef511d555f9f390b71","md5":"5eee8675b97423cb3decd2b98b243d43","sha256":"63eeefa72a520608f627028797a30a30048b07dc68485392c91f1f289573ca4f"},"downloads":-1,"filename":"lollms-2.3.1.tar.gz","has_sig":false,"md5_digest":"5eee8675b97423cb3decd2b98b243d43","packagetype":"sdist","python_version":"source","requires_python":null,"size":545049,"upload_time":"2023-08-04T08:29:27","upload_time_iso_8601":"2023-08-04T08:29:27.398046Z","url":"https://files.pythonhosted.org/packages/10/d2/b8e9629dfa158c5c9f34012396f6e3c17a49e834d1ef511d555f9f390b71/lollms-2.3.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.3.3":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.3.3/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.3.3","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"39016d9225e931585b5b5001f18b80807ec7c9c469dd2e506f9495f53f4daeff","md5":"64567e4166e8cd1fa962bcae2ebdb7a8","sha256":"b0e5ce04de0b9ec7f22e0ff12b98f008b9a7103e959397724f2d55baf45a52ed"},"downloads":-1,"filename":"lollms-2.3.3-py3-none-any.whl","has_sig":false,"md5_digest":"64567e4166e8cd1fa962bcae2ebdb7a8","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1017417,"upload_time":"2023-08-16T01:35:02","upload_time_iso_8601":"2023-08-16T01:35:02.741237Z","url":"https://files.pythonhosted.org/packages/39/01/6d9225e931585b5b5001f18b80807ec7c9c469dd2e506f9495f53f4daeff/lollms-2.3.3-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"7b23786aa4238db7b184f77f8f2b63ce5a6727f143bd8baba5c4d8bffe4a8161","md5":"d860659db0669e44db26a2f8b32045bd","sha256":"048428d054a027cbcbe890c41246e48fbd508e8f1ae6f2fa0dbcf825f014005f"},"downloads":-1,"filename":"lollms-2.3.3.tar.gz","has_sig":false,"md5_digest":"d860659db0669e44db26a2f8b32045bd","packagetype":"sdist","python_version":"source","requires_python":null,"size":1017949,"upload_time":"2023-08-16T01:35:05","upload_time_iso_8601":"2023-08-16T01:35:05.303461Z","url":"https://files.pythonhosted.org/packages/7b/23/786aa4238db7b184f77f8f2b63ce5a6727f143bd8baba5c4d8bffe4a8161/lollms-2.3.3.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"2.3.4":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/2.3.4/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"2.3.4","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"f651682dfda8ddc179318f08a5a46625b11faa182275721eb5ad2f2748037f9d","md5":"6475851417753edc8781f6eac789a3b7","sha256":"6a4bf6a1a5a55a47397accfe2f104247fae3f56ce71ae4876a53c31f0144306d"},"downloads":-1,"filename":"lollms-2.3.4-py3-none-any.whl","has_sig":false,"md5_digest":"6475851417753edc8781f6eac789a3b7","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1018002,"upload_time":"2023-08-16T22:45:33","upload_time_iso_8601":"2023-08-16T22:45:33.952181Z","url":"https://files.pythonhosted.org/packages/f6/51/682dfda8ddc179318f08a5a46625b11faa182275721eb5ad2f2748037f9d/lollms-2.3.4-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"999a01b8b61ab0477bc43189fe442c23f881dcdc03a36e803929fc1ad31d6716","md5":"177c6dd6a8fb9643a0ae02741bf09db8","sha256":"87edd216103c146d86b23cbad72dca015987a75665909555d9c2d25b40e16bab"},"downloads":-1,"filename":"lollms-2.3.4.tar.gz","has_sig":false,"md5_digest":"177c6dd6a8fb9643a0ae02741bf09db8","packagetype":"sdist","python_version":"source","requires_python":null,"size":1018571,"upload_time":"2023-08-16T22:45:36","upload_time_iso_8601":"2023-08-16T22:45:36.884614Z","url":"https://files.pythonhosted.org/packages/99/9a/01b8b61ab0477bc43189fe442c23f881dcdc03a36e803929fc1ad31d6716/lollms-2.3.4.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"3.0.0":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/3.0.0/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"3.0.0","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"a9502dfae33bf1f28d520bfedeca20ade5868454016e0ef7a2e56140fa28f38c","md5":"b88ba7bf17adda55adbd4717fb30059b","sha256":"78b364e9e7ebcd78c0996dfeb6467db91dfef3b4e7404051c33273a5870a4ddd"},"downloads":-1,"filename":"lollms-3.0.0-py3-none-any.whl","has_sig":false,"md5_digest":"b88ba7bf17adda55adbd4717fb30059b","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1017851,"upload_time":"2023-08-17T23:28:50","upload_time_iso_8601":"2023-08-17T23:28:50.279020Z","url":"https://files.pythonhosted.org/packages/a9/50/2dfae33bf1f28d520bfedeca20ade5868454016e0ef7a2e56140fa28f38c/lollms-3.0.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"d27ef8fe0714b1575b56788c4d3646432ec9285b5f5fdd5856f19ad77d5878c3","md5":"126a6cd5c083bbc1f5017ab6cbffbfc2","sha256":"2279dfc0bfc877a74ca9054de414f5cdbafb180b9df5d8f65c407d82380f04a7"},"downloads":-1,"filename":"lollms-3.0.0.tar.gz","has_sig":false,"md5_digest":"126a6cd5c083bbc1f5017ab6cbffbfc2","packagetype":"sdist","python_version":"source","requires_python":null,"size":1018362,"upload_time":"2023-08-17T23:28:52","upload_time_iso_8601":"2023-08-17T23:28:52.624465Z","url":"https://files.pythonhosted.org/packages/d2/7e/f8fe0714b1575b56788c4d3646432ec9285b5f5fdd5856f19ad77d5878c3/lollms-3.0.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"3.1.0":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/3.1.0/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"3.1.0","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"3a9bd8340d8ae6ebc594f9e4576a4f4cd8e1e1927ed0e9421ab1fc7cc5fbf529","md5":"2af899a9b2de5c39c35bda6a4eb87169","sha256":"1e028690cda844de18ac800b11c82f4045a4204adc4701b518f791377da7e9e1"},"downloads":-1,"filename":"lollms-3.1.0-py3-none-any.whl","has_sig":false,"md5_digest":"2af899a9b2de5c39c35bda6a4eb87169","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1018509,"upload_time":"2023-08-19T01:24:54","upload_time_iso_8601":"2023-08-19T01:24:54.641989Z","url":"https://files.pythonhosted.org/packages/3a/9b/d8340d8ae6ebc594f9e4576a4f4cd8e1e1927ed0e9421ab1fc7cc5fbf529/lollms-3.1.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"63d4c301d8f1546aeba7f0324705231598d5ced78ab0aa022acad15717612c09","md5":"368f8effa52aea77551ef4a0fa30d573","sha256":"1ad6025e5cd6580d1f7c47eec829a126c8d0e610b0c8dbbef4283506230e7d6d"},"downloads":-1,"filename":"lollms-3.1.0.tar.gz","has_sig":false,"md5_digest":"368f8effa52aea77551ef4a0fa30d573","packagetype":"sdist","python_version":"source","requires_python":null,"size":1018794,"upload_time":"2023-08-19T01:24:58","upload_time_iso_8601":"2023-08-19T01:24:58.438322Z","url":"https://files.pythonhosted.org/packages/63/d4/c301d8f1546aeba7f0324705231598d5ced78ab0aa022acad15717612c09/lollms-3.1.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"3.1.5":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/3.1.5/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"3.1.5","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"7dbaf2835b91d571db47fb413e8a64b948f78dee1595a746bf8c25953790a309","md5":"4266931b88f06682cd194002279904aa","sha256":"7d81b644d9cd4cbbdf082b8dd2d4fbbdea6fc3bed3e7238565b90705c31a2079"},"downloads":-1,"filename":"lollms-3.1.5-py3-none-any.whl","has_sig":false,"md5_digest":"4266931b88f06682cd194002279904aa","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1018644,"upload_time":"2023-08-19T22:42:08","upload_time_iso_8601":"2023-08-19T22:42:08.899517Z","url":"https://files.pythonhosted.org/packages/7d/ba/f2835b91d571db47fb413e8a64b948f78dee1595a746bf8c25953790a309/lollms-3.1.5-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"558718b039d4a3f069fc4ed15ec0718661c017e748d883a326dcb6297e57f02b","md5":"d8a712b77002a9310b85c29f815b0167","sha256":"2631d30e2e84b2b7f05b07183ae8f65030837ff03448972d0a6a32945c310b58"},"downloads":-1,"filename":"lollms-3.1.5.tar.gz","has_sig":false,"md5_digest":"d8a712b77002a9310b85c29f815b0167","packagetype":"sdist","python_version":"source","requires_python":null,"size":1018976,"upload_time":"2023-08-19T22:42:12","upload_time_iso_8601":"2023-08-19T22:42:12.039898Z","url":"https://files.pythonhosted.org/packages/55/87/18b039d4a3f069fc4ed15ec0718661c017e748d883a326dcb6297e57f02b/lollms-3.1.5.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"3.2.0":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/3.2.0/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"3.2.0","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"314892f2bf82eabc0e2d69be761d1bdbf24400dc8c683b4d829706b061d2f1e1","md5":"fab13ef375a52216b42a56a607cce826","sha256":"71e808f5b627d074734510c7d5b56e509133a02ef9e754065d82328235ab4473"},"downloads":-1,"filename":"lollms-3.2.0-py3-none-any.whl","has_sig":false,"md5_digest":"fab13ef375a52216b42a56a607cce826","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1019124,"upload_time":"2023-08-20T01:08:22","upload_time_iso_8601":"2023-08-20T01:08:22.901590Z","url":"https://files.pythonhosted.org/packages/31/48/92f2bf82eabc0e2d69be761d1bdbf24400dc8c683b4d829706b061d2f1e1/lollms-3.2.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"bb5db3803bd7ec7f3ba7a1c0acfbaf01eb466fd1473a70980642527f42617a3f","md5":"205a69e6ec207be3230d268fd93bdd1b","sha256":"a71f780f69ff7b4a954cd146e11c885ba886483f53d0a0e6dcf365728d3a36b4"},"downloads":-1,"filename":"lollms-3.2.0.tar.gz","has_sig":false,"md5_digest":"205a69e6ec207be3230d268fd93bdd1b","packagetype":"sdist","python_version":"source","requires_python":null,"size":1019356,"upload_time":"2023-08-20T01:08:25","upload_time_iso_8601":"2023-08-20T01:08:25.309478Z","url":"https://files.pythonhosted.org/packages/bb/5d/b3803bd7ec7f3ba7a1c0acfbaf01eb466fd1473a70980642527f42617a3f/lollms-3.2.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"4.0.0":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/4.0.0/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"4.0.0","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"c71d474f71f3b9c5e4b82b0f5e5fc1f3683b0428d0def24d8fa2127fce2b6ef6","md5":"a9aac6aba576382316801939b14024e3","sha256":"5fd879617464c1b52a735c0587ad21b6b108b08267c4b0c6a51bd27ed0d2d69d"},"downloads":-1,"filename":"lollms-4.0.0-py3-none-any.whl","has_sig":false,"md5_digest":"a9aac6aba576382316801939b14024e3","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1019624,"upload_time":"2023-08-20T22:25:40","upload_time_iso_8601":"2023-08-20T22:25:40.748784Z","url":"https://files.pythonhosted.org/packages/c7/1d/474f71f3b9c5e4b82b0f5e5fc1f3683b0428d0def24d8fa2127fce2b6ef6/lollms-4.0.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"dedf0785fb08d175e26b8ea3f3122ed4686474b863b3a61bfb5ed1eaa4665d31","md5":"2e448937e1c01c0a049a3efcb6473956","sha256":"3e1a3ce0e1601cfd132d166347059248a53958142f7b2b700021caba50a4a038"},"downloads":-1,"filename":"lollms-4.0.0.tar.gz","has_sig":false,"md5_digest":"2e448937e1c01c0a049a3efcb6473956","packagetype":"sdist","python_version":"source","requires_python":null,"size":1019873,"upload_time":"2023-08-20T22:25:43","upload_time_iso_8601":"2023-08-20T22:25:43.204129Z","url":"https://files.pythonhosted.org/packages/de/df/0785fb08d175e26b8ea3f3122ed4686474b863b3a61bfb5ed1eaa4665d31/lollms-4.0.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"4.0.1":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/4.0.1/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"4.0.1","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"1f4e8e12910b9438c5369afe90357b647f1b4f72b0590fcb744efb5cf8643f04","md5":"fa0443d2f3bf3a94aadf77860a51973e","sha256":"701920570ea72e3eedc7292e0996947261dfff98f91de8fa8fda62520e09ac09"},"downloads":-1,"filename":"lollms-4.0.1-py3-none-any.whl","has_sig":false,"md5_digest":"fa0443d2f3bf3a94aadf77860a51973e","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1019622,"upload_time":"2023-08-22T01:41:51","upload_time_iso_8601":"2023-08-22T01:41:51.538169Z","url":"https://files.pythonhosted.org/packages/1f/4e/8e12910b9438c5369afe90357b647f1b4f72b0590fcb744efb5cf8643f04/lollms-4.0.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"d8983065578ce3dc5942bcac553341ae635b26eb4b399a9208cf038f00aa05bf","md5":"fdc893868c2f324b38e3f996fe57331a","sha256":"e4e32f1c51e1cf2c01bfd2284fc6cded272830ac4de75e768d939064738e403b"},"downloads":-1,"filename":"lollms-4.0.1.tar.gz","has_sig":false,"md5_digest":"fdc893868c2f324b38e3f996fe57331a","packagetype":"sdist","python_version":"source","requires_python":null,"size":1019851,"upload_time":"2023-08-22T01:41:53","upload_time_iso_8601":"2023-08-22T01:41:53.670569Z","url":"https://files.pythonhosted.org/packages/d8/98/3065578ce3dc5942bcac553341ae635b26eb4b399a9208cf038f00aa05bf/lollms-4.0.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"4.0.2":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/4.0.2/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"4.0.2","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"5a2a6a257b3f5637cbd53766606da84a669c5e4021b2ae2cb333c30d49668ef0","md5":"d2e7377063d4142c09bbb0a620ca8709","sha256":"08a808aa3b17866916b0b1b818963f3be8145197f8e3b1ccbe8c5c76ae834e43"},"downloads":-1,"filename":"lollms-4.0.2-py3-none-any.whl","has_sig":false,"md5_digest":"d2e7377063d4142c09bbb0a620ca8709","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1019811,"upload_time":"2023-08-23T02:20:57","upload_time_iso_8601":"2023-08-23T02:20:57.122246Z","url":"https://files.pythonhosted.org/packages/5a/2a/6a257b3f5637cbd53766606da84a669c5e4021b2ae2cb333c30d49668ef0/lollms-4.0.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"05d1a48441ff7db74f5efcb5fa4ecfcd0f1e4adc86c9a720b69919508adf5723","md5":"fcea31c61ed231f004320232bb121943","sha256":"c57b0190ed6bd5a2451c9b0f4052055c8785fe43200eeb9702af6a27b9f56690"},"downloads":-1,"filename":"lollms-4.0.2.tar.gz","has_sig":false,"md5_digest":"fcea31c61ed231f004320232bb121943","packagetype":"sdist","python_version":"source","requires_python":null,"size":1020030,"upload_time":"2023-08-23T02:20:59","upload_time_iso_8601":"2023-08-23T02:20:59.651157Z","url":"https://files.pythonhosted.org/packages/05/d1/a48441ff7db74f5efcb5fa4ecfcd0f1e4adc86c9a720b69919508adf5723/lollms-4.0.2.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"4.1.0":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/4.1.0/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"4.1.0","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"cd8444a94a75c2effbfea7ce2c6113542403150a3c54286edbb748ee84806a93","md5":"a7366c81f7ca1d3ed3e6300c4b295918","sha256":"c53636a6493ea7aa3b51d97009e50da2b9522bdb6c3fcfdafa4e2a3f7e5b466a"},"downloads":-1,"filename":"lollms-4.1.0-py3-none-any.whl","has_sig":false,"md5_digest":"a7366c81f7ca1d3ed3e6300c4b295918","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1019818,"upload_time":"2023-08-23T19:11:47","upload_time_iso_8601":"2023-08-23T19:11:47.632027Z","url":"https://files.pythonhosted.org/packages/cd/84/44a94a75c2effbfea7ce2c6113542403150a3c54286edbb748ee84806a93/lollms-4.1.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"799d06f8440bd1888879fd2bd8eeba58b213c0810447c278151ecafa8caa013e","md5":"f483390953f7872b68084201252482e8","sha256":"6d044314b32d561af20286574253ea0ebcfa614b6322ed8aad4b19fe7784f9af"},"downloads":-1,"filename":"lollms-4.1.0.tar.gz","has_sig":false,"md5_digest":"f483390953f7872b68084201252482e8","packagetype":"sdist","python_version":"source","requires_python":null,"size":1020022,"upload_time":"2023-08-23T19:11:50","upload_time_iso_8601":"2023-08-23T19:11:50.597881Z","url":"https://files.pythonhosted.org/packages/79/9d/06f8440bd1888879fd2bd8eeba58b213c0810447c278151ecafa8caa013e/lollms-4.1.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"4.1.5":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/4.1.5/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"4.1.5","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"4881c091f645a979f8463c566059454c01d6ee880054a8ca1a121971a50b1eb9","md5":"e5fc9277da4018db95855fb8a7d2eb82","sha256":"efcdf6f0474a5340a04a17dfaed654ebed1815dd9e106b660a5450256086416a"},"downloads":-1,"filename":"lollms-4.1.5-py3-none-any.whl","has_sig":false,"md5_digest":"e5fc9277da4018db95855fb8a7d2eb82","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1019952,"upload_time":"2023-08-25T00:11:43","upload_time_iso_8601":"2023-08-25T00:11:43.066009Z","url":"https://files.pythonhosted.org/packages/48/81/c091f645a979f8463c566059454c01d6ee880054a8ca1a121971a50b1eb9/lollms-4.1.5-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c075b5287877559d00ebfecbc74b4c855b8c0a85868ea68904a791d6bcd348b3","md5":"27522c9d95aa222917a5bec82c400ada","sha256":"d6e82254992226b47078d6f8e0c7f54ba95e0e5c902d25c95fbb62a51b40cf08"},"downloads":-1,"filename":"lollms-4.1.5.tar.gz","has_sig":false,"md5_digest":"27522c9d95aa222917a5bec82c400ada","packagetype":"sdist","python_version":"source","requires_python":null,"size":1020148,"upload_time":"2023-08-25T00:11:45","upload_time_iso_8601":"2023-08-25T00:11:45.548743Z","url":"https://files.pythonhosted.org/packages/c0/75/b5287877559d00ebfecbc74b4c855b8c0a85868ea68904a791d6bcd348b3/lollms-4.1.5.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"4.1.6":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/4.1.6/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"4.1.6","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"018c2c3bc81a6372e0be0beaf6775628d76fa3a63bb8b92e397693de80b26f52","md5":"f1f7cbaf1c09f7bb60151dbd6226ebd6","sha256":"c5a82f3d4f51db0c24ca0fa403d9926804442e2ed737320f9e0ce3a9d39c6fe8"},"downloads":-1,"filename":"lollms-4.1.6-py3-none-any.whl","has_sig":false,"md5_digest":"f1f7cbaf1c09f7bb60151dbd6226ebd6","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1019935,"upload_time":"2023-08-25T17:45:51","upload_time_iso_8601":"2023-08-25T17:45:51.143672Z","url":"https://files.pythonhosted.org/packages/01/8c/2c3bc81a6372e0be0beaf6775628d76fa3a63bb8b92e397693de80b26f52/lollms-4.1.6-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"0c419a7a137249d378b72232a528423c53831cecfee27672080b5a06dbb5c280","md5":"92267bea139d5a1d258eb54a595a3b06","sha256":"31107a720952b674fbc808c0ebc870d90498b318505d53a65f8c90fbec980204"},"downloads":-1,"filename":"lollms-4.1.6.tar.gz","has_sig":false,"md5_digest":"92267bea139d5a1d258eb54a595a3b06","packagetype":"sdist","python_version":"source","requires_python":null,"size":1020138,"upload_time":"2023-08-25T17:45:57","upload_time_iso_8601":"2023-08-25T17:45:57.846525Z","url":"https://files.pythonhosted.org/packages/0c/41/9a7a137249d378b72232a528423c53831cecfee27672080b5a06dbb5c280/lollms-4.1.6.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"4.2.0":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/4.2.0/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"4.2.0","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"2ac9a0cf7d33f187ce41078903c3b3cd06ef859fc2a752b78eff24653c564907","md5":"fd4edd127e3fbbe19b18ae7769b95103","sha256":"82f59ce823fdb7a9c03096516329fa1b75f78ef939fda2fd149cc17b39cdd818"},"downloads":-1,"filename":"lollms-4.2.0-py3-none-any.whl","has_sig":false,"md5_digest":"fd4edd127e3fbbe19b18ae7769b95103","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1019929,"upload_time":"2023-08-25T19:46:18","upload_time_iso_8601":"2023-08-25T19:46:18.489601Z","url":"https://files.pythonhosted.org/packages/2a/c9/a0cf7d33f187ce41078903c3b3cd06ef859fc2a752b78eff24653c564907/lollms-4.2.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"13da59faa5c79714e79036d0ab7b63a0dc4afc8c03e4e2f9d9ea1f085838a45f","md5":"67c14ba077051d49e5d977e2408faccb","sha256":"bf6b6dd4a17103d3e8af9d797659485894bc701ac1a12c5045d381375378ad93"},"downloads":-1,"filename":"lollms-4.2.0.tar.gz","has_sig":false,"md5_digest":"67c14ba077051d49e5d977e2408faccb","packagetype":"sdist","python_version":"source","requires_python":null,"size":1020118,"upload_time":"2023-08-25T19:46:26","upload_time_iso_8601":"2023-08-25T19:46:26.497635Z","url":"https://files.pythonhosted.org/packages/13/da/59faa5c79714e79036d0ab7b63a0dc4afc8c03e4e2f9d9ea1f085838a45f/lollms-4.2.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"4.2.1":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/4.2.1/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"4.2.1","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"4d9f1fdd73e61655516352370003b0a647b809e6024ee68354074e589bf4b96b","md5":"174f893025aded262ff63c1ea3665fa4","sha256":"022ee3452bc3148c5e232b523185c53623ff3a617eb694c619132d3671499b66"},"downloads":-1,"filename":"lollms-4.2.1-py3-none-any.whl","has_sig":false,"md5_digest":"174f893025aded262ff63c1ea3665fa4","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1019942,"upload_time":"2023-08-26T16:25:50","upload_time_iso_8601":"2023-08-26T16:25:50.049532Z","url":"https://files.pythonhosted.org/packages/4d/9f/1fdd73e61655516352370003b0a647b809e6024ee68354074e589bf4b96b/lollms-4.2.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"85bfa135f7c182cd580502b82ae989c4eccc9a1de4324bbf00dbb4bf9df0729a","md5":"6d56cff93c9e247575ba919a54b7cdcd","sha256":"90f0a59388f43b0df3856957044188d081195370d3831a8e3c8bee85fa0f6de8"},"downloads":-1,"filename":"lollms-4.2.1.tar.gz","has_sig":false,"md5_digest":"6d56cff93c9e247575ba919a54b7cdcd","packagetype":"sdist","python_version":"source","requires_python":null,"size":1020141,"upload_time":"2023-08-26T16:25:54","upload_time_iso_8601":"2023-08-26T16:25:54.789607Z","url":"https://files.pythonhosted.org/packages/85/bf/a135f7c182cd580502b82ae989c4eccc9a1de4324bbf00dbb4bf9df0729a/lollms-4.2.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"4.2.2":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/4.2.2/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"4.2.2","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"a50bb2f333962afe3663599c8fd860d984687c7a55ebe10aae398035e8eb4c44","md5":"766dbfa1f16eb45b641aa86e8bf8f999","sha256":"5e1a87d285db7acb965b2ae2db6a7f52e855d247ea2a7b9546fd1e3a10abb8e9"},"downloads":-1,"filename":"lollms-4.2.2-py3-none-any.whl","has_sig":false,"md5_digest":"766dbfa1f16eb45b641aa86e8bf8f999","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1019927,"upload_time":"2023-08-26T17:44:53","upload_time_iso_8601":"2023-08-26T17:44:53.609594Z","url":"https://files.pythonhosted.org/packages/a5/0b/b2f333962afe3663599c8fd860d984687c7a55ebe10aae398035e8eb4c44/lollms-4.2.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"dc827c3e0b8bf5e84e9495671ddffa99a1bde25df3bf74d3de2e2399db731989","md5":"14b313b41e4bf3084f1da93fb2119c34","sha256":"d6fbdd067ddc016704065416d609074ed8de831c35735fd2dab360201c660a11"},"downloads":-1,"filename":"lollms-4.2.2.tar.gz","has_sig":false,"md5_digest":"14b313b41e4bf3084f1da93fb2119c34","packagetype":"sdist","python_version":"source","requires_python":null,"size":1020136,"upload_time":"2023-08-26T17:44:59","upload_time_iso_8601":"2023-08-26T17:44:59.265208Z","url":"https://files.pythonhosted.org/packages/dc/82/7c3e0b8bf5e84e9495671ddffa99a1bde25df3bf74d3de2e2399db731989/lollms-4.2.2.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"4.5.0":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/4.5.0/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"4.5.0","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"d3b49155ea78ac240d77f50c0840d7c82c24c62c836688f5aaeb83212ec372b1","md5":"360b72d41000568fa8b25b305dcefd15","sha256":"f5dda1feecf5586a05f0214b2319c965d77c494a7aff09b4f48d1474d4c22e0f"},"downloads":-1,"filename":"lollms-4.5.0-py3-none-any.whl","has_sig":false,"md5_digest":"360b72d41000568fa8b25b305dcefd15","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1158551,"upload_time":"2023-08-26T23:15:27","upload_time_iso_8601":"2023-08-26T23:15:27.034609Z","url":"https://files.pythonhosted.org/packages/d3/b4/9155ea78ac240d77f50c0840d7c82c24c62c836688f5aaeb83212ec372b1/lollms-4.5.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c99beff361072dc6718537bf042a68f54e7c6d8278df3e8a8cb98b0b70206f71","md5":"56596d40a1bc41ff70cfaff5ce6b137c","sha256":"de66aa931378d561cf6b98075cbea60da8db6d00288bf5b1e3a89cd1d4de244c"},"downloads":-1,"filename":"lollms-4.5.0.tar.gz","has_sig":false,"md5_digest":"56596d40a1bc41ff70cfaff5ce6b137c","packagetype":"sdist","python_version":"source","requires_python":null,"size":1157600,"upload_time":"2023-08-26T23:15:29","upload_time_iso_8601":"2023-08-26T23:15:29.151768Z","url":"https://files.pythonhosted.org/packages/c9/9b/eff361072dc6718537bf042a68f54e7c6d8278df3e8a8cb98b0b70206f71/lollms-4.5.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"4.5.1":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/4.5.1/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"4.5.1","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"1e635dd0d3ce15bc28f84f8c05335fa5ae7934c563e27e437de9ddef9b5927fd","md5":"dad6c9dec7fb2577fe5e9d4ef8c529f8","sha256":"80f9e4dc5d8ac7e455b1db719933c257616715717ba4391ea824e0b99414d4ec"},"downloads":-1,"filename":"lollms-4.5.1-py3-none-any.whl","has_sig":false,"md5_digest":"dad6c9dec7fb2577fe5e9d4ef8c529f8","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1158588,"upload_time":"2023-08-26T23:53:01","upload_time_iso_8601":"2023-08-26T23:53:01.971465Z","url":"https://files.pythonhosted.org/packages/1e/63/5dd0d3ce15bc28f84f8c05335fa5ae7934c563e27e437de9ddef9b5927fd/lollms-4.5.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"2705e367e52e678b87730a28b01418012a7a09e9610fbe9eb26b24a0c3337a93","md5":"21e2e14d8d7a6991e2e56adf2021c81e","sha256":"e1cc30d3ace92b7d16606b325f6787abe7946fcfb034346670e7140bc01e7b06"},"downloads":-1,"filename":"lollms-4.5.1.tar.gz","has_sig":false,"md5_digest":"21e2e14d8d7a6991e2e56adf2021c81e","packagetype":"sdist","python_version":"source","requires_python":null,"size":1157657,"upload_time":"2023-08-26T23:53:08","upload_time_iso_8601":"2023-08-26T23:53:08.081211Z","url":"https://files.pythonhosted.org/packages/27/05/e367e52e678b87730a28b01418012a7a09e9610fbe9eb26b24a0c3337a93/lollms-4.5.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"4.5.2":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/4.5.2/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"4.5.2","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"f5cbe44bda6d1e4ea7a5ac67c4f70531f648cc843cee60af82aa006ac6913abc","md5":"ae72fe04c13d3bbebaf3a5b0dc2c9869","sha256":"1843777256c3b3fdaf4210819878ce84568ab42bdb77ebb812128e8669f1fc54"},"downloads":-1,"filename":"lollms-4.5.2-py3-none-any.whl","has_sig":false,"md5_digest":"ae72fe04c13d3bbebaf3a5b0dc2c9869","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1158636,"upload_time":"2023-08-27T16:27:57","upload_time_iso_8601":"2023-08-27T16:27:57.814290Z","url":"https://files.pythonhosted.org/packages/f5/cb/e44bda6d1e4ea7a5ac67c4f70531f648cc843cee60af82aa006ac6913abc/lollms-4.5.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"8e9f3af4d7eb468ca7ce6f060dd2804ed78d816b456ade5d79604c01c3bafdbb","md5":"c3aa646d42f8de19468bdc6f7331b63a","sha256":"cbfce3923cb264a64bd68745ef00f58b46e4844f61b610e9123b1c1ba5182bbf"},"downloads":-1,"filename":"lollms-4.5.2.tar.gz","has_sig":false,"md5_digest":"c3aa646d42f8de19468bdc6f7331b63a","packagetype":"sdist","python_version":"source","requires_python":null,"size":1157691,"upload_time":"2023-08-27T16:28:02","upload_time_iso_8601":"2023-08-27T16:28:02.175504Z","url":"https://files.pythonhosted.org/packages/8e/9f/3af4d7eb468ca7ce6f060dd2804ed78d816b456ade5d79604c01c3bafdbb/lollms-4.5.2.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"4.5.3":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/4.5.3/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"4.5.3","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"a2128c8cafacc430c166330b12418f62fe1be28c7130090d949ecbe3d1130eee","md5":"36448405e01463b938b1b64788d81549","sha256":"74d567d4dfadf6ea985bc855bc18a8f38819c778e3281cacebb5b8736ee88792"},"downloads":-1,"filename":"lollms-4.5.3-py3-none-any.whl","has_sig":false,"md5_digest":"36448405e01463b938b1b64788d81549","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1158635,"upload_time":"2023-08-27T19:12:24","upload_time_iso_8601":"2023-08-27T19:12:24.448107Z","url":"https://files.pythonhosted.org/packages/a2/12/8c8cafacc430c166330b12418f62fe1be28c7130090d949ecbe3d1130eee/lollms-4.5.3-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"ea3d35740243aef3016e1401de1dd918ec70dde0b4500638eeb3f8b28adb26d6","md5":"ca71dd89113dbc9503b07e0673fbb0f8","sha256":"d16fdaefa6f84f4eb18e274bcb23cc92012c9802daf7818437528d1f232c8b34"},"downloads":-1,"filename":"lollms-4.5.3.tar.gz","has_sig":false,"md5_digest":"ca71dd89113dbc9503b07e0673fbb0f8","packagetype":"sdist","python_version":"source","requires_python":null,"size":1157727,"upload_time":"2023-08-27T19:12:29","upload_time_iso_8601":"2023-08-27T19:12:29.581579Z","url":"https://files.pythonhosted.org/packages/ea/3d/35740243aef3016e1401de1dd918ec70dde0b4500638eeb3f8b28adb26d6/lollms-4.5.3.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"5.0.0":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/5.0.0/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"5.0.0","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"ba420011ec90a766448d48c3a63e0fa03ec6e5ad6a9cae1fb66f25a8bcd8de32","md5":"24bed189ac1ce9bace9545ae079a3160","sha256":"77f7ed7c3dbea26f1ec01b12c4aa8b609d7b880abd68ff5d695cb84a1bcc668c"},"downloads":-1,"filename":"lollms-5.0.0-py3-none-any.whl","has_sig":false,"md5_digest":"24bed189ac1ce9bace9545ae079a3160","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1158669,"upload_time":"2023-08-28T20:07:13","upload_time_iso_8601":"2023-08-28T20:07:13.984095Z","url":"https://files.pythonhosted.org/packages/ba/42/0011ec90a766448d48c3a63e0fa03ec6e5ad6a9cae1fb66f25a8bcd8de32/lollms-5.0.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"a3881c89da757a9286aab40c9623327cf5bb09b833797becf7c6dc7245e8b079","md5":"a4e4a935b6eeab54be62046a93248f8d","sha256":"434836406e9c5c4e9d9c1d15210748c57b91bda35f8f2a7e35ccc0fcd9116225"},"downloads":-1,"filename":"lollms-5.0.0.tar.gz","has_sig":false,"md5_digest":"a4e4a935b6eeab54be62046a93248f8d","packagetype":"sdist","python_version":"source","requires_python":null,"size":1157732,"upload_time":"2023-08-28T20:07:15","upload_time_iso_8601":"2023-08-28T20:07:15.863652Z","url":"https://files.pythonhosted.org/packages/a3/88/1c89da757a9286aab40c9623327cf5bb09b833797becf7c6dc7245e8b079/lollms-5.0.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"5.0.1":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/5.0.1/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"5.0.1","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"0269b5ad234c968415063983a438bc816047c58f9c128a60dfe0c20b3bcb70e3","md5":"ec9c3dea501e4dc34add283e394bd15f","sha256":"7322bbee936d16052c1491368809e2f8ff3fe73c8d93b64f59bc9125211801fd"},"downloads":-1,"filename":"lollms-5.0.1-py3-none-any.whl","has_sig":false,"md5_digest":"ec9c3dea501e4dc34add283e394bd15f","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1158917,"upload_time":"2023-08-29T23:24:20","upload_time_iso_8601":"2023-08-29T23:24:20.436259Z","url":"https://files.pythonhosted.org/packages/02/69/b5ad234c968415063983a438bc816047c58f9c128a60dfe0c20b3bcb70e3/lollms-5.0.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"99eefbebd3fd7b906d8039fef352cc14f8a0adb371da812266a150bc73a3addd","md5":"9cbd6ce7e8f2be78346ffb3f41572100","sha256":"810c885f7e6215a03fafba88966c4ab12d29760f1725db20441e11b4c9ffc1e1"},"downloads":-1,"filename":"lollms-5.0.1.tar.gz","has_sig":false,"md5_digest":"9cbd6ce7e8f2be78346ffb3f41572100","packagetype":"sdist","python_version":"source","requires_python":null,"size":1157987,"upload_time":"2023-08-29T23:24:24","upload_time_iso_8601":"2023-08-29T23:24:24.011095Z","url":"https://files.pythonhosted.org/packages/99/ee/fbebd3fd7b906d8039fef352cc14f8a0adb371da812266a150bc73a3addd/lollms-5.0.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"5.0.2":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/5.0.2/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"5.0.2","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"b2759624985987d7546a84160a3a4d48d124a8ecaabf7a65bc6c062e2856a9c4","md5":"f8fdac56f543518fe1ecaf27450f0a7c","sha256":"d9e1743775383804c27c1cd12c37240fbfec5f45db7a8fd66663f271d70daf78"},"downloads":-1,"filename":"lollms-5.0.2-py3-none-any.whl","has_sig":false,"md5_digest":"f8fdac56f543518fe1ecaf27450f0a7c","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1159030,"upload_time":"2023-08-31T12:04:00","upload_time_iso_8601":"2023-08-31T12:04:00.992541Z","url":"https://files.pythonhosted.org/packages/b2/75/9624985987d7546a84160a3a4d48d124a8ecaabf7a65bc6c062e2856a9c4/lollms-5.0.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"e1b650d838dd72daf2f7b32063ea8b53a10928bfed7c803e7682d2860f7560a0","md5":"cdf111df2a276d778dcc4223922cbef2","sha256":"1d342a14c6467f0279fd5b17e944a92ba0c1b3155fe9b6d64d04f286c4b57097"},"downloads":-1,"filename":"lollms-5.0.2.tar.gz","has_sig":false,"md5_digest":"cdf111df2a276d778dcc4223922cbef2","packagetype":"sdist","python_version":"source","requires_python":null,"size":1158120,"upload_time":"2023-08-31T12:04:06","upload_time_iso_8601":"2023-08-31T12:04:06.385990Z","url":"https://files.pythonhosted.org/packages/e1/b6/50d838dd72daf2f7b32063ea8b53a10928bfed7c803e7682d2860f7560a0/lollms-5.0.2.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"5.1.0":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/5.1.0/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"5.1.0","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"fb2417b69cd1d42b9a84244830e69a31d8a8bb053f0f0b40d4563448b4901f48","md5":"585f5d676314c178c66176f90c705418","sha256":"b1e367e3e738d65519e8b027299b5eeea22f649b66806c74ed2a562fe9ed8695"},"downloads":-1,"filename":"lollms-5.1.0-py3-none-any.whl","has_sig":false,"md5_digest":"585f5d676314c178c66176f90c705418","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1159223,"upload_time":"2023-09-02T16:33:49","upload_time_iso_8601":"2023-09-02T16:33:49.257051Z","url":"https://files.pythonhosted.org/packages/fb/24/17b69cd1d42b9a84244830e69a31d8a8bb053f0f0b40d4563448b4901f48/lollms-5.1.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"3624dd0b2bda7015d9305b35b18413bdc975c6f848c85824b225efaf7f389b7b","md5":"fe4c514cfbd1804716c6cd5455a3d80f","sha256":"daa86dea21f03a4ccac9634305ee8940d1b873f6e16b99d46d7a2c9c74c4d995"},"downloads":-1,"filename":"lollms-5.1.0.tar.gz","has_sig":false,"md5_digest":"fe4c514cfbd1804716c6cd5455a3d80f","packagetype":"sdist","python_version":"source","requires_python":null,"size":1158326,"upload_time":"2023-09-02T16:33:58","upload_time_iso_8601":"2023-09-02T16:33:58.741947Z","url":"https://files.pythonhosted.org/packages/36/24/dd0b2bda7015d9305b35b18413bdc975c6f848c85824b225efaf7f389b7b/lollms-5.1.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"5.1.1":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/5.1.1/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"5.1.1","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"4f8ce32e649e2a68581247e0562347af285d4245e5097c7eb3005693b843e482","md5":"061a30324f35b5bc7fbceedb041f1c7c","sha256":"ad4a7fd45d00dae33d0970e3b4008c943d0119d49843c425e02218a0aba4a81a"},"downloads":-1,"filename":"lollms-5.1.1-py3-none-any.whl","has_sig":false,"md5_digest":"061a30324f35b5bc7fbceedb041f1c7c","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1160019,"upload_time":"2023-09-03T23:54:04","upload_time_iso_8601":"2023-09-03T23:54:04.807521Z","url":"https://files.pythonhosted.org/packages/4f/8c/e32e649e2a68581247e0562347af285d4245e5097c7eb3005693b843e482/lollms-5.1.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"28be7836b3e19051c2e87823d059068aa9df474863937f3bb91b6da5acb67d51","md5":"8c713f46c62dc5c90cca5fefd194fecc","sha256":"54141e7cbe554d5e75e3ccd9785f7fd4a2fe362cd6574fb0e6baac7e8373bde4"},"downloads":-1,"filename":"lollms-5.1.1.tar.gz","has_sig":false,"md5_digest":"8c713f46c62dc5c90cca5fefd194fecc","packagetype":"sdist","python_version":"source","requires_python":null,"size":1159089,"upload_time":"2023-09-03T23:54:09","upload_time_iso_8601":"2023-09-03T23:54:09.893386Z","url":"https://files.pythonhosted.org/packages/28/be/7836b3e19051c2e87823d059068aa9df474863937f3bb91b6da5acb67d51/lollms-5.1.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"5.2.0":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/5.2.0/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"5.2.0","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"fa3f9af9a180e1ca7fb5c7ed7953c1eb88044aca04718dfc385740f9463d3f02","md5":"628792d3222fc02d295114a2042f8aee","sha256":"ec4505ae469549f7adca206b0b5d2720d12b74dbaab42a5563d1b5337db88de5"},"downloads":-1,"filename":"lollms-5.2.0-py3-none-any.whl","has_sig":false,"md5_digest":"628792d3222fc02d295114a2042f8aee","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1160242,"upload_time":"2023-09-05T22:56:35","upload_time_iso_8601":"2023-09-05T22:56:35.941087Z","url":"https://files.pythonhosted.org/packages/fa/3f/9af9a180e1ca7fb5c7ed7953c1eb88044aca04718dfc385740f9463d3f02/lollms-5.2.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"52ed93f2a84a026b876452435972e826ba443ccaaa3da70e7b35833878420923","md5":"fce76469ca76b65256e1f078d228fa9f","sha256":"382f4fead8922c01e09367ac0e64d323a4bd75f5ad461dd6611406cf21be7fc0"},"downloads":-1,"filename":"lollms-5.2.0.tar.gz","has_sig":false,"md5_digest":"fce76469ca76b65256e1f078d228fa9f","packagetype":"sdist","python_version":"source","requires_python":null,"size":1159277,"upload_time":"2023-09-05T22:56:41","upload_time_iso_8601":"2023-09-05T22:56:41.279624Z","url":"https://files.pythonhosted.org/packages/52/ed/93f2a84a026b876452435972e826ba443ccaaa3da70e7b35833878420923/lollms-5.2.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"5.2.1":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/5.2.1/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"5.2.1","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"23a24b820ac84ecb67bea1302f4909e109ff8526a97ea5b9e58503e27c490a95","md5":"874bdb84acd90cef86185d99bfad641d","sha256":"a15f3bc701090369497b6a0e1db41859d1578c2a1af738a030e712a94329e88b"},"downloads":-1,"filename":"lollms-5.2.1-py3-none-any.whl","has_sig":false,"md5_digest":"874bdb84acd90cef86185d99bfad641d","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1160273,"upload_time":"2023-09-05T23:26:08","upload_time_iso_8601":"2023-09-05T23:26:08.252434Z","url":"https://files.pythonhosted.org/packages/23/a2/4b820ac84ecb67bea1302f4909e109ff8526a97ea5b9e58503e27c490a95/lollms-5.2.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"469100457568eb60389d9076e33f30d3aa53a3f72e858ea933a4f7b8f5b25db6","md5":"a334052ef6aff147cb94720079209c26","sha256":"36779c885c06419e9bfd9512ad4d0c52d0044b394b997c7dfbcabf587d2d5f18"},"downloads":-1,"filename":"lollms-5.2.1.tar.gz","has_sig":false,"md5_digest":"a334052ef6aff147cb94720079209c26","packagetype":"sdist","python_version":"source","requires_python":null,"size":1159315,"upload_time":"2023-09-05T23:26:14","upload_time_iso_8601":"2023-09-05T23:26:14.492923Z","url":"https://files.pythonhosted.org/packages/46/91/00457568eb60389d9076e33f30d3aa53a3f72e858ea933a4f7b8f5b25db6/lollms-5.2.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"5.3.0":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/5.3.0/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"5.3.0","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"271d3332eaa0028e6ddbf348a2403b0380864c35dcee130178cc0d296d3546a9","md5":"ea6e27cfac46ba7141d9bbc9b7b601ac","sha256":"2991a7715d91114d5c11133ba3f190b0eb7cebd230ccf92e6cf6719dfaffc242"},"downloads":-1,"filename":"lollms-5.3.0-py3-none-any.whl","has_sig":false,"md5_digest":"ea6e27cfac46ba7141d9bbc9b7b601ac","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1160313,"upload_time":"2023-09-07T22:12:20","upload_time_iso_8601":"2023-09-07T22:12:20.023982Z","url":"https://files.pythonhosted.org/packages/27/1d/3332eaa0028e6ddbf348a2403b0380864c35dcee130178cc0d296d3546a9/lollms-5.3.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"5305433f5e9a0f11d99987304a3b1dd82680aa01c57537faa7693926c6753db1","md5":"97beaf729981e5afcfb7aaf9aea2259b","sha256":"3508a2b8bffd18aa6ad6c14de5c5d39a6cbcd9c2a96a17a2097cf2c2a44938f4"},"downloads":-1,"filename":"lollms-5.3.0.tar.gz","has_sig":false,"md5_digest":"97beaf729981e5afcfb7aaf9aea2259b","packagetype":"sdist","python_version":"source","requires_python":null,"size":1159349,"upload_time":"2023-09-07T22:12:26","upload_time_iso_8601":"2023-09-07T22:12:26.178203Z","url":"https://files.pythonhosted.org/packages/53/05/433f5e9a0f11d99987304a3b1dd82680aa01c57537faa7693926c6753db1/lollms-5.3.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"5.3.1":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/5.3.1/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"5.3.1","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"199d9a5e8d4e4918ef8c9b3ec8d85dcc4ad0ffd5f2af777b84a1e604debd80d1","md5":"9e37771add2bd974046a078d7a6953e9","sha256":"b0064a7600efef05aaccfd87b6ccd1ba6ad3afe8f672072f684cdb295cba7630"},"downloads":-1,"filename":"lollms-5.3.1-py3-none-any.whl","has_sig":false,"md5_digest":"9e37771add2bd974046a078d7a6953e9","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1160367,"upload_time":"2023-09-13T22:18:10","upload_time_iso_8601":"2023-09-13T22:18:10.473336Z","url":"https://files.pythonhosted.org/packages/19/9d/9a5e8d4e4918ef8c9b3ec8d85dcc4ad0ffd5f2af777b84a1e604debd80d1/lollms-5.3.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"dd9c71cd7659ba1adcabbd002fbd45e5c38a62e87c81963542eed0c1bc459346","md5":"b155020cc7e3baf010f74c7439b8aad9","sha256":"d0563c75e336d8515ddd5346e82b495f79be012de539bace8de5ac4fc66860d1"},"downloads":-1,"filename":"lollms-5.3.1.tar.gz","has_sig":false,"md5_digest":"b155020cc7e3baf010f74c7439b8aad9","packagetype":"sdist","python_version":"source","requires_python":null,"size":1159503,"upload_time":"2023-09-13T22:18:13","upload_time_iso_8601":"2023-09-13T22:18:13.173355Z","url":"https://files.pythonhosted.org/packages/dd/9c/71cd7659ba1adcabbd002fbd45e5c38a62e87c81963542eed0c1bc459346/lollms-5.3.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"5.5.0":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/5.5.0/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"5.5.0","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"666461faab5db6e483ebcdbce6e8f7babf55deb9ddf27aa9258dbac873328ebb","md5":"c3072b64e05b95cac69518dc0b51c190","sha256":"bac33eacffcfe5b8cda7fa5b2dea4cab08a7c1dd5bad3e3da7b941b61cfd997c"},"downloads":-1,"filename":"lollms-5.5.0-py3-none-any.whl","has_sig":false,"md5_digest":"c3072b64e05b95cac69518dc0b51c190","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1161345,"upload_time":"2023-09-14T23:32:11","upload_time_iso_8601":"2023-09-14T23:32:11.687526Z","url":"https://files.pythonhosted.org/packages/66/64/61faab5db6e483ebcdbce6e8f7babf55deb9ddf27aa9258dbac873328ebb/lollms-5.5.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"2883387e13e31a3fbba76361c948e67ce115c0f3ec755ee4606556878fa8c20b","md5":"0c7ba493104593bc9bf9d92a3042e099","sha256":"b3626999073256592e9878ceadf884ca7e4cba095e3d307ccefdbf473b98c964"},"downloads":-1,"filename":"lollms-5.5.0.tar.gz","has_sig":false,"md5_digest":"0c7ba493104593bc9bf9d92a3042e099","packagetype":"sdist","python_version":"source","requires_python":null,"size":1159892,"upload_time":"2023-09-14T23:32:14","upload_time_iso_8601":"2023-09-14T23:32:14.448677Z","url":"https://files.pythonhosted.org/packages/28/83/387e13e31a3fbba76361c948e67ce115c0f3ec755ee4606556878fa8c20b/lollms-5.5.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"5.5.1":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/5.5.1/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"5.5.1","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"160a4c1c4c458c292948f74c56b00575e5c3db8af871c192197e6fcbb62da06b","md5":"56d4ba614dba1fd3a15424a8f172387f","sha256":"48ebf59420d1324750750a8ae40243ed5de057cd65596def08106d447b65bb65"},"downloads":-1,"filename":"lollms-5.5.1-py3-none-any.whl","has_sig":false,"md5_digest":"56d4ba614dba1fd3a15424a8f172387f","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1161398,"upload_time":"2023-09-17T22:59:06","upload_time_iso_8601":"2023-09-17T22:59:06.052815Z","url":"https://files.pythonhosted.org/packages/16/0a/4c1c4c458c292948f74c56b00575e5c3db8af871c192197e6fcbb62da06b/lollms-5.5.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"eb9ff41dc0b55ea227ae23d477eb957691a25ff27cb94e14c130ecd25123547a","md5":"a3db938b28857a2afb5eea6576d03e85","sha256":"b5bffd93262bb6d38f910f02bf4b826b4dd88ac654e790315e3e6af3a7e11e1f"},"downloads":-1,"filename":"lollms-5.5.1.tar.gz","has_sig":false,"md5_digest":"a3db938b28857a2afb5eea6576d03e85","packagetype":"sdist","python_version":"source","requires_python":null,"size":1159958,"upload_time":"2023-09-17T22:59:08","upload_time_iso_8601":"2023-09-17T22:59:08.541087Z","url":"https://files.pythonhosted.org/packages/eb/9f/f41dc0b55ea227ae23d477eb957691a25ff27cb94e14c130ecd25123547a/lollms-5.5.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"5.5.2":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/5.5.2/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"5.5.2","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"8c58f3f10663d82b70d9a9fc138aab2150982afc84f189a39a0f741215168a61","md5":"830ee43439a0611d9445a32e5d43f00a","sha256":"56854e7d3797cf045e09814d69ed12543fd7b157922323491afaa809964a5727"},"downloads":-1,"filename":"lollms-5.5.2-py3-none-any.whl","has_sig":false,"md5_digest":"830ee43439a0611d9445a32e5d43f00a","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1161406,"upload_time":"2023-09-20T23:31:36","upload_time_iso_8601":"2023-09-20T23:31:36.017566Z","url":"https://files.pythonhosted.org/packages/8c/58/f3f10663d82b70d9a9fc138aab2150982afc84f189a39a0f741215168a61/lollms-5.5.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"7bfe27980a3059747377d1f7836d24e71d70d1bc3b70ffa60872fba8a3cbbbbf","md5":"46f09b6552cf4aef2d93c958878d00ce","sha256":"7141139135d27179ad0ea63c3bff0829982c99e48aa5eb08f42a2ed0fd06d4eb"},"downloads":-1,"filename":"lollms-5.5.2.tar.gz","has_sig":false,"md5_digest":"46f09b6552cf4aef2d93c958878d00ce","packagetype":"sdist","python_version":"source","requires_python":null,"size":1159968,"upload_time":"2023-09-20T23:31:39","upload_time_iso_8601":"2023-09-20T23:31:39.216315Z","url":"https://files.pythonhosted.org/packages/7b/fe/27980a3059747377d1f7836d24e71d70d1bc3b70ffa60872fba8a3cbbbbf/lollms-5.5.2.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"5.5.3":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/5.5.3/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"5.5.3","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"8106a34af2fc31347285513a0c0db1cdd3a438abb03a713583f6204554040254","md5":"48fe6ad0b6f0d25e9f57a61b51cc6469","sha256":"3e09e100fe6c10b8cce89b731d33368e3a315f040ff71510326a66c3985596b0"},"downloads":-1,"filename":"lollms-5.5.3-py3-none-any.whl","has_sig":false,"md5_digest":"48fe6ad0b6f0d25e9f57a61b51cc6469","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1161832,"upload_time":"2023-09-23T17:24:35","upload_time_iso_8601":"2023-09-23T17:24:35.380487Z","url":"https://files.pythonhosted.org/packages/81/06/a34af2fc31347285513a0c0db1cdd3a438abb03a713583f6204554040254/lollms-5.5.3-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"2dceaa38a79f0c43394f848f695278d69b00ec2b37f8d7b3110df4dad9d36576","md5":"277a3f58f35ea4991ebb3198d572f426","sha256":"ccbfc188aa6b866439d9b79bee484270a69655a88ff359145e72ff9195417fea"},"downloads":-1,"filename":"lollms-5.5.3.tar.gz","has_sig":false,"md5_digest":"277a3f58f35ea4991ebb3198d572f426","packagetype":"sdist","python_version":"source","requires_python":null,"size":1160350,"upload_time":"2023-09-23T17:24:39","upload_time_iso_8601":"2023-09-23T17:24:39.320244Z","url":"https://files.pythonhosted.org/packages/2d/ce/aa38a79f0c43394f848f695278d69b00ec2b37f8d7b3110df4dad9d36576/lollms-5.5.3.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"5.5.4":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/5.5.4/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"5.5.4","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"1b6a915dafa8e2257d68b8982ddb559bd8bfcf68da1ee2b2b42a5ef5775fbe41","md5":"eeb5de44821decfa4bf83937a632be6f","sha256":"c3050e54409c9e7aa1fd3d196b60cf9d313868318734edeb5537908c76fb0010"},"downloads":-1,"filename":"lollms-5.5.4-py3-none-any.whl","has_sig":false,"md5_digest":"eeb5de44821decfa4bf83937a632be6f","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1165619,"upload_time":"2023-10-01T23:10:58","upload_time_iso_8601":"2023-10-01T23:10:58.657920Z","url":"https://files.pythonhosted.org/packages/1b/6a/915dafa8e2257d68b8982ddb559bd8bfcf68da1ee2b2b42a5ef5775fbe41/lollms-5.5.4-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"1339c626693d01a9eb7a9a44691a7e0de05c3051525c30b2931ce8f324ef1b58","md5":"60b1d4296e15d6cf79cc6a5b90a0f7e5","sha256":"9fd0db1e93f1d170af2169feff4b2dc30bd372d688b89d3ecc829536352a4243"},"downloads":-1,"filename":"lollms-5.5.4.tar.gz","has_sig":false,"md5_digest":"60b1d4296e15d6cf79cc6a5b90a0f7e5","packagetype":"sdist","python_version":"source","requires_python":null,"size":1163236,"upload_time":"2023-10-01T23:11:03","upload_time_iso_8601":"2023-10-01T23:11:03.954216Z","url":"https://files.pythonhosted.org/packages/13/39/c626693d01a9eb7a9a44691a7e0de05c3051525c30b2931ce8f324ef1b58/lollms-5.5.4.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"5.5.5":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/5.5.5/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"5.5.5","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"d59826d6741b18d9ef060041e92c44f98dc46749da51bf1c177a634eff42a26c","md5":"ca26ec77929c3e599c13e57f6b83f7ba","sha256":"65ec08f69c47c132328bbeccd0f026392517bc6f9f34af5e62824ae0e3ee35bb"},"downloads":-1,"filename":"lollms-5.5.5-py3-none-any.whl","has_sig":false,"md5_digest":"ca26ec77929c3e599c13e57f6b83f7ba","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1165753,"upload_time":"2023-10-01T23:18:58","upload_time_iso_8601":"2023-10-01T23:18:58.491381Z","url":"https://files.pythonhosted.org/packages/d5/98/26d6741b18d9ef060041e92c44f98dc46749da51bf1c177a634eff42a26c/lollms-5.5.5-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f0375e7b4abffadfea2464420404f0916b4777de9545f85e29b303e691f08836","md5":"9767d7156176fb08876606690c3b566d","sha256":"c6d2aa7c5e63c5ab57740b512d49f1d695828956625c078579fda895d4ad443e"},"downloads":-1,"filename":"lollms-5.5.5.tar.gz","has_sig":false,"md5_digest":"9767d7156176fb08876606690c3b566d","packagetype":"sdist","python_version":"source","requires_python":null,"size":1163520,"upload_time":"2023-10-01T23:19:03","upload_time_iso_8601":"2023-10-01T23:19:03.612473Z","url":"https://files.pythonhosted.org/packages/f0/37/5e7b4abffadfea2464420404f0916b4777de9545f85e29b303e691f08836/lollms-5.5.5.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"5.5.6":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/5.5.6/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"5.5.6","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"fadc84e66d6032b31cd949cbc5c725bc8303caa84b9e1c9ce09276e2f32c33be","md5":"032b498505abafaa215bd0dc3497abf6","sha256":"191c17d6800087bed5622e52592a2945c6bd9487868b0f44e7206fec4876daa9"},"downloads":-1,"filename":"lollms-5.5.6-py3-none-any.whl","has_sig":false,"md5_digest":"032b498505abafaa215bd0dc3497abf6","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1165762,"upload_time":"2023-10-01T23:41:53","upload_time_iso_8601":"2023-10-01T23:41:53.448857Z","url":"https://files.pythonhosted.org/packages/fa/dc/84e66d6032b31cd949cbc5c725bc8303caa84b9e1c9ce09276e2f32c33be/lollms-5.5.6-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"63922ff4a2d3c152329d37c2e43f0b02f0c5ffa9b60117f4f955cb3f81e19d5a","md5":"0d4686939b9245b66e9e5eb0969e55d1","sha256":"f25828712ea04e37705976e6ffbb551b3134fc928fafd0b9d8a61190394a6ea7"},"downloads":-1,"filename":"lollms-5.5.6.tar.gz","has_sig":false,"md5_digest":"0d4686939b9245b66e9e5eb0969e55d1","packagetype":"sdist","python_version":"source","requires_python":null,"size":1163506,"upload_time":"2023-10-01T23:41:57","upload_time_iso_8601":"2023-10-01T23:41:57.662781Z","url":"https://files.pythonhosted.org/packages/63/92/2ff4a2d3c152329d37c2e43f0b02f0c5ffa9b60117f4f955cb3f81e19d5a/lollms-5.5.6.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"5.6.0":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/5.6.0/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"5.6.0","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"eb83f5fb61ed19c6777710f8f540d2684831afbab98bb6abc4ae2c95699dc76d","md5":"fda6f397c02f259f726dd31988f3b7bf","sha256":"f91d2b35487b0b1858fb63f3a4c52ab7947f41e535951446967a12f47095dd9f"},"downloads":-1,"filename":"lollms-5.6.0-py3-none-any.whl","has_sig":false,"md5_digest":"fda6f397c02f259f726dd31988f3b7bf","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1165773,"upload_time":"2023-10-02T21:13:14","upload_time_iso_8601":"2023-10-02T21:13:14.217899Z","url":"https://files.pythonhosted.org/packages/eb/83/f5fb61ed19c6777710f8f540d2684831afbab98bb6abc4ae2c95699dc76d/lollms-5.6.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"669f86defe0bf60de77bff02d175d86268b3199f06d09a16209d048a0b63a8d4","md5":"376ccd9b601973aaa9514ce3754b4d7d","sha256":"4c23700bb12e8cabc5720d4d83831ecbf42b024e7ae0b4dbc9556f76020d1322"},"downloads":-1,"filename":"lollms-5.6.0.tar.gz","has_sig":false,"md5_digest":"376ccd9b601973aaa9514ce3754b4d7d","packagetype":"sdist","python_version":"source","requires_python":null,"size":1163510,"upload_time":"2023-10-02T21:13:19","upload_time_iso_8601":"2023-10-02T21:13:19.183836Z","url":"https://files.pythonhosted.org/packages/66/9f/86defe0bf60de77bff02d175d86268b3199f06d09a16209d048a0b63a8d4/lollms-5.6.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"5.6.2":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/5.6.2/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"5.6.2","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"ed8de374468f534c8b3d09888a25d812d775f03a1cdd9f4603072ba496c91a5c","md5":"7a28c7635cbef12e206009ac6dcb99a0","sha256":"eb4bfc33985a47a196f301bb31cb6158accf8a8286b118fcaa360ff69facc3f9"},"downloads":-1,"filename":"lollms-5.6.2-py3-none-any.whl","has_sig":false,"md5_digest":"7a28c7635cbef12e206009ac6dcb99a0","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1166433,"upload_time":"2023-10-02T23:11:41","upload_time_iso_8601":"2023-10-02T23:11:41.377058Z","url":"https://files.pythonhosted.org/packages/ed/8d/e374468f534c8b3d09888a25d812d775f03a1cdd9f4603072ba496c91a5c/lollms-5.6.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f1d392d32a0e9e42263e54177965ce8069275a3ad548cdcc4d56d526bca7c408","md5":"f5e67a9ce6430b4f04840a48f18c6087","sha256":"7c97a1c32bdef0aab5b2f461a6feba7a579e996c46e3db8fe7cb64c6028efe59"},"downloads":-1,"filename":"lollms-5.6.2.tar.gz","has_sig":false,"md5_digest":"f5e67a9ce6430b4f04840a48f18c6087","packagetype":"sdist","python_version":"source","requires_python":null,"size":1164085,"upload_time":"2023-10-02T23:11:47","upload_time_iso_8601":"2023-10-02T23:11:47.963813Z","url":"https://files.pythonhosted.org/packages/f1/d3/92d32a0e9e42263e54177965ce8069275a3ad548cdcc4d56d526bca7c408/lollms-5.6.2.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"5.7.0":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/5.7.0/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"5.7.0","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"356bdfcfaa8e25d42b0835b7bd5f98334633997bcf264520f47d1f6e2941f07e","md5":"05e32bfcc2ad23533bb8f8870d138366","sha256":"beda2f60feed517884401b31b226d41efd8c442970d9d3acc8dc3eac9b58e8cf"},"downloads":-1,"filename":"lollms-5.7.0-py3-none-any.whl","has_sig":false,"md5_digest":"05e32bfcc2ad23533bb8f8870d138366","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1170087,"upload_time":"2023-10-07T01:48:57","upload_time_iso_8601":"2023-10-07T01:48:57.915564Z","url":"https://files.pythonhosted.org/packages/35/6b/dfcfaa8e25d42b0835b7bd5f98334633997bcf264520f47d1f6e2941f07e/lollms-5.7.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"a782a0c33c61e8c3b5bd37b460904ce925e3ec005b18ee1b672f8a0390dbe12c","md5":"7fda6e2de86fda42dadea741e5b97dfc","sha256":"8a7faa8a16f3c68f6b39878bd6c19f6943dbfc0c85c156be3c62e2a167d76d0b"},"downloads":-1,"filename":"lollms-5.7.0.tar.gz","has_sig":false,"md5_digest":"7fda6e2de86fda42dadea741e5b97dfc","packagetype":"sdist","python_version":"source","requires_python":null,"size":1164085,"upload_time":"2023-10-07T01:49:04","upload_time_iso_8601":"2023-10-07T01:49:04.516699Z","url":"https://files.pythonhosted.org/packages/a7/82/a0c33c61e8c3b5bd37b460904ce925e3ec005b18ee1b672f8a0390dbe12c/lollms-5.7.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"5.7.1":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/5.7.1/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"5.7.1","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"eeb2bedf9c4b726ac264f9dba734823064db06baca0e5abd7f7a5a46650d8064","md5":"c06f05344027f8609991e9c17ad16b0a","sha256":"388984419b8cd2a8327905d054ac1de790e86cbed805ade14b3693d823049545"},"downloads":-1,"filename":"lollms-5.7.1-py3-none-any.whl","has_sig":false,"md5_digest":"c06f05344027f8609991e9c17ad16b0a","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1170084,"upload_time":"2023-10-07T01:49:59","upload_time_iso_8601":"2023-10-07T01:49:59.559830Z","url":"https://files.pythonhosted.org/packages/ee/b2/bedf9c4b726ac264f9dba734823064db06baca0e5abd7f7a5a46650d8064/lollms-5.7.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"ced40b55cac8ab5e27ead9b00b51049e1b6cbc5a43f3b3bb36c8e46b4cff01aa","md5":"a98109da91d51d57a4a5429c4aa0d72a","sha256":"f1562a6c585cbb0d65628a1fee8622fd758bc8d13221ce5aa5a240b73ef45a4c"},"downloads":-1,"filename":"lollms-5.7.1.tar.gz","has_sig":false,"md5_digest":"a98109da91d51d57a4a5429c4aa0d72a","packagetype":"sdist","python_version":"source","requires_python":null,"size":1164077,"upload_time":"2023-10-07T01:50:04","upload_time_iso_8601":"2023-10-07T01:50:04.769624Z","url":"https://files.pythonhosted.org/packages/ce/d4/0b55cac8ab5e27ead9b00b51049e1b6cbc5a43f3b3bb36c8e46b4cff01aa/lollms-5.7.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"5.7.2":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/5.7.2/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","ascii-colors","safe-store","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'","safe-store ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"5.7.2","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"a70798c0ccba12fe498e72b91ad1a556417d6993dff8ae1e7cc9608118f2f8d7","md5":"64dd4787a38aea48e18e9cc626eabbe6","sha256":"66a954dc4f6ecffe6beb175cb280a63cf81ae52ad524047825188c4dbe7ae2cf"},"downloads":-1,"filename":"lollms-5.7.2-py3-none-any.whl","has_sig":false,"md5_digest":"64dd4787a38aea48e18e9cc626eabbe6","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1166097,"upload_time":"2023-10-08T22:26:30","upload_time_iso_8601":"2023-10-08T22:26:30.542779Z","url":"https://files.pythonhosted.org/packages/a7/07/98c0ccba12fe498e72b91ad1a556417d6993dff8ae1e7cc9608118f2f8d7/lollms-5.7.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"8a1ed6ffd24e5f29e7bc035426246c35bde139649dbb51e83eb11e06f8eb303e","md5":"877e40773c56408d486991ba9fc6abbb","sha256":"9a42e58883e2a370a4fa1d0b5e0e9095f5776f742609a7ac109277fa1f4fe6ab"},"downloads":-1,"filename":"lollms-5.7.2.tar.gz","has_sig":false,"md5_digest":"877e40773c56408d486991ba9fc6abbb","packagetype":"sdist","python_version":"source","requires_python":null,"size":1163796,"upload_time":"2023-10-08T22:26:33","upload_time_iso_8601":"2023-10-08T22:26:33.039577Z","url":"https://files.pythonhosted.org/packages/8a/1e/d6ffd24e5f29e7bc035426246c35bde139649dbb51e83eb11e06f8eb303e/lollms-5.7.2.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"5.7.3":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/5.7.3/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","ascii-colors","safe-store","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'","safe-store ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"5.7.3","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"faca8862508e8eb0f58732a0cefbdd35e4a6333bf1d2847ab1585570a80726e4","md5":"0791a35c7b7056906deeaf0b8bd9cd1d","sha256":"18a3ce9602348767fccfd6f2f7fd2ca40c2242ae981309e4d58d461b2a9de8d1"},"downloads":-1,"filename":"lollms-5.7.3-py3-none-any.whl","has_sig":false,"md5_digest":"0791a35c7b7056906deeaf0b8bd9cd1d","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1166997,"upload_time":"2023-10-10T23:23:59","upload_time_iso_8601":"2023-10-10T23:23:59.386679Z","url":"https://files.pythonhosted.org/packages/fa/ca/8862508e8eb0f58732a0cefbdd35e4a6333bf1d2847ab1585570a80726e4/lollms-5.7.3-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"16398f10fd08a40c06cc24511580178c37cad751c5e4df32cf1ad4cf42bc42bc","md5":"9b9dbd7c247302a320a8c7f6f922d587","sha256":"566d6b33dabf76aea43ecbffd253114378f9581661e585f75d0486be6447ed1c"},"downloads":-1,"filename":"lollms-5.7.3.tar.gz","has_sig":false,"md5_digest":"9b9dbd7c247302a320a8c7f6f922d587","packagetype":"sdist","python_version":"source","requires_python":null,"size":1164791,"upload_time":"2023-10-10T23:24:02","upload_time_iso_8601":"2023-10-10T23:24:02.464557Z","url":"https://files.pythonhosted.org/packages/16/39/8f10fd08a40c06cc24511580178c37cad751c5e4df32cf1ad4cf42bc42bc/lollms-5.7.3.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"5.7.5":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/5.7.5/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","ascii-colors","safe-store","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'","safe-store ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"5.7.5","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"85194406719ac8883ee670da8b46b315b07f3163fcb6f0de9205a8131b542e0d","md5":"ae597a2dae6ccde8f08374ce4314e805","sha256":"6fd8bbed050be23e8d08b651e2c7cde6c318ca84335c36039830b259e6a035ae"},"downloads":-1,"filename":"lollms-5.7.5-py3-none-any.whl","has_sig":false,"md5_digest":"ae597a2dae6ccde8f08374ce4314e805","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1167232,"upload_time":"2023-10-11T06:31:34","upload_time_iso_8601":"2023-10-11T06:31:34.605981Z","url":"https://files.pythonhosted.org/packages/85/19/4406719ac8883ee670da8b46b315b07f3163fcb6f0de9205a8131b542e0d/lollms-5.7.5-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"e316894081f30fc6184727bdcf0d55c1373dede973019f621f035ddb17581cf3","md5":"6452938f3f8a683d07cd2ae5c3455f45","sha256":"e049f4264f0999cb1209496f07e37abe7e4bde4a15855f1f790bf286528c56f9"},"downloads":-1,"filename":"lollms-5.7.5.tar.gz","has_sig":false,"md5_digest":"6452938f3f8a683d07cd2ae5c3455f45","packagetype":"sdist","python_version":"source","requires_python":null,"size":1165118,"upload_time":"2023-10-11T06:31:38","upload_time_iso_8601":"2023-10-11T06:31:38.049427Z","url":"https://files.pythonhosted.org/packages/e3/16/894081f30fc6184727bdcf0d55c1373dede973019f621f035ddb17581cf3/lollms-5.7.5.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"5.7.6":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/5.7.6/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","ascii-colors","safe-store","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'","safe-store ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"5.7.6","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"422607f3ba1296c6c33d86b7be4853270bd6cb66b4d595adf3375fe12dfe468d","md5":"1a8f2f72bd9c37b8cb6ca5ffec132ba3","sha256":"c500721bfa2d7c36e59110750482526e1b24a967f46bbc5df00d9d63d74a0093"},"downloads":-1,"filename":"lollms-5.7.6-py3-none-any.whl","has_sig":false,"md5_digest":"1a8f2f72bd9c37b8cb6ca5ffec132ba3","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1167587,"upload_time":"2023-10-14T00:56:38","upload_time_iso_8601":"2023-10-14T00:56:38.348614Z","url":"https://files.pythonhosted.org/packages/42/26/07f3ba1296c6c33d86b7be4853270bd6cb66b4d595adf3375fe12dfe468d/lollms-5.7.6-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f041e0076a85da3f46dddbde5758f8afacfdbe868137eab954eb1159b725b048","md5":"b6b8eba2899793afcddcdbb6b9edb478","sha256":"f1ef6f41e2108093cc20d4c8cf14989b72aa5c984db68e661b89474b3716e654"},"downloads":-1,"filename":"lollms-5.7.6.tar.gz","has_sig":false,"md5_digest":"b6b8eba2899793afcddcdbb6b9edb478","packagetype":"sdist","python_version":"source","requires_python":null,"size":1165453,"upload_time":"2023-10-14T00:56:42","upload_time_iso_8601":"2023-10-14T00:56:42.398848Z","url":"https://files.pythonhosted.org/packages/f0/41/e0076a85da3f46dddbde5758f8afacfdbe868137eab954eb1159b725b048/lollms-5.7.6.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"5.7.7":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/5.7.7/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","ascii-colors","safe-store","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'","safe-store ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"5.7.7","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"acf518005d4d59b01a7304bed3d6852a711aa648daee275dd743e6f0b685959a","md5":"27d1f74b6b6086e64c79ec39ec42929d","sha256":"1a36e3c9733807924e391bf8b8eac87bd9ef07b521e51c7b98cf99f7ff7f4a41"},"downloads":-1,"filename":"lollms-5.7.7-py3-none-any.whl","has_sig":false,"md5_digest":"27d1f74b6b6086e64c79ec39ec42929d","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1168340,"upload_time":"2023-10-15T01:20:34","upload_time_iso_8601":"2023-10-15T01:20:34.485406Z","url":"https://files.pythonhosted.org/packages/ac/f5/18005d4d59b01a7304bed3d6852a711aa648daee275dd743e6f0b685959a/lollms-5.7.7-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"96445a4606f5a1c44675b00a4ad6252affb9f91caecf3491b0e5cfdcd9e6d5fc","md5":"4f89eeb9c81b55c2e255afbcb892737e","sha256":"91b32cf92ba14feba06c0efee66d512e4f2f62ec70bfed1837850b20ff4174a3"},"downloads":-1,"filename":"lollms-5.7.7.tar.gz","has_sig":false,"md5_digest":"4f89eeb9c81b55c2e255afbcb892737e","packagetype":"sdist","python_version":"source","requires_python":null,"size":1166054,"upload_time":"2023-10-15T01:20:39","upload_time_iso_8601":"2023-10-15T01:20:39.730335Z","url":"https://files.pythonhosted.org/packages/96/44/5a4606f5a1c44675b00a4ad6252affb9f91caecf3491b0e5cfdcd9e6d5fc/lollms-5.7.7.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"5.7.8":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/5.7.8/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","ascii-colors","safe-store","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'","safe-store ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"5.7.8","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"61adc3ac317d35e1c187151da5550c89e78446d420e011350a8171aa7d796d5b","md5":"3fdc527c10ecc5c69e2311932c872f1f","sha256":"0136dee04a371fc48038d47b80931a1b2cb568ad6a7096215875809fe86d5000"},"downloads":-1,"filename":"lollms-5.7.8-py3-none-any.whl","has_sig":false,"md5_digest":"3fdc527c10ecc5c69e2311932c872f1f","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1168349,"upload_time":"2023-10-15T22:06:55","upload_time_iso_8601":"2023-10-15T22:06:55.746667Z","url":"https://files.pythonhosted.org/packages/61/ad/c3ac317d35e1c187151da5550c89e78446d420e011350a8171aa7d796d5b/lollms-5.7.8-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"6a56476abef95511c04cb92be424a2b786dce08ba17277c30ba7714b98e1a838","md5":"a8018c6b7abdb7ea6a2e5259edff6faf","sha256":"989f0a343b34fc0271246b65187f095dac8aa0d0693ecd45fba0a43d6649396c"},"downloads":-1,"filename":"lollms-5.7.8.tar.gz","has_sig":false,"md5_digest":"a8018c6b7abdb7ea6a2e5259edff6faf","packagetype":"sdist","python_version":"source","requires_python":null,"size":1166072,"upload_time":"2023-10-15T22:07:00","upload_time_iso_8601":"2023-10-15T22:07:00.431455Z","url":"https://files.pythonhosted.org/packages/6a/56/476abef95511c04cb92be424a2b786dce08ba17277c30ba7714b98e1a838/lollms-5.7.8.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"5.7.9":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/5.7.9/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","ascii-colors","safe-store","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'","safe-store ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"5.7.9","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"f190d7a150fb452b542281cc71f2b984d9fd43c79ae64f90ccab95a3f1a499b1","md5":"4016a44ff9bd08b2063e2aad06b8102c","sha256":"87e21efd3716d2f809a05b0bf3de361d0c945c76d41ca7e43b5b3bb707757c36"},"downloads":-1,"filename":"lollms-5.7.9-py3-none-any.whl","has_sig":false,"md5_digest":"4016a44ff9bd08b2063e2aad06b8102c","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1168322,"upload_time":"2023-10-15T23:06:39","upload_time_iso_8601":"2023-10-15T23:06:39.825818Z","url":"https://files.pythonhosted.org/packages/f1/90/d7a150fb452b542281cc71f2b984d9fd43c79ae64f90ccab95a3f1a499b1/lollms-5.7.9-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"165bca089a2c0ae5490d17de6cba9543e1c4298acb3fae29dd58e6825129efba","md5":"7b9a7f98a0c5873f34c6b8e75468bd47","sha256":"c0072ea362b480982c070d46648bcc2493ba15f4d0bc40afcc805730ca587e1a"},"downloads":-1,"filename":"lollms-5.7.9.tar.gz","has_sig":false,"md5_digest":"7b9a7f98a0c5873f34c6b8e75468bd47","packagetype":"sdist","python_version":"source","requires_python":null,"size":1166052,"upload_time":"2023-10-15T23:06:45","upload_time_iso_8601":"2023-10-15T23:06:45.379115Z","url":"https://files.pythonhosted.org/packages/16/5b/ca089a2c0ae5490d17de6cba9543e1c4298acb3fae29dd58e6825129efba/lollms-5.7.9.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"5.8.1":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/5.8.1/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","ascii-colors","safe-store","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'","safe-store ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"5.8.1","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"95bb4237d4a5c6b2ea59d663278813b3c0f2a9fcab490714703d9817824c849a","md5":"daeff450ca3719bd5d1bdc6944061927","sha256":"517e1d779fc0fb1965e44196076b73cc3e61b39f52734c5923ed4d3e0c5d1b7d"},"downloads":-1,"filename":"lollms-5.8.1-py3-none-any.whl","has_sig":false,"md5_digest":"daeff450ca3719bd5d1bdc6944061927","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1168342,"upload_time":"2023-10-18T20:53:03","upload_time_iso_8601":"2023-10-18T20:53:03.781739Z","url":"https://files.pythonhosted.org/packages/95/bb/4237d4a5c6b2ea59d663278813b3c0f2a9fcab490714703d9817824c849a/lollms-5.8.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"023d56e235dc7dbb0112be89afa0ff2e71170c1469c8574e1ef36577f3574016","md5":"e732a184334c20d5f54ce13a146a2040","sha256":"caaa535c3f44eba8c831efcfd8cbbff3fcdf198513188e3bf012d249c02ba981"},"downloads":-1,"filename":"lollms-5.8.1.tar.gz","has_sig":false,"md5_digest":"e732a184334c20d5f54ce13a146a2040","packagetype":"sdist","python_version":"source","requires_python":null,"size":1166062,"upload_time":"2023-10-18T20:53:06","upload_time_iso_8601":"2023-10-18T20:53:06.522245Z","url":"https://files.pythonhosted.org/packages/02/3d/56e235dc7dbb0112be89afa0ff2e71170c1469c8574e1ef36577f3574016/lollms-5.8.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"5.8.2":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/5.8.2/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","ascii-colors","safe-store","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'","safe-store ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"5.8.2","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"5f14b3f029ce061f06302ca3f53851e419bc4108576596cf4e4f6b92f7afe62d","md5":"8d39830decd801dcbe132301ab1fd6e7","sha256":"9446888737e6f2e447aafa1d52a785b63b2aa9d0f1b19d2e494d79db18c0956f"},"downloads":-1,"filename":"lollms-5.8.2-py3-none-any.whl","has_sig":false,"md5_digest":"8d39830decd801dcbe132301ab1fd6e7","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1168631,"upload_time":"2023-10-18T23:50:36","upload_time_iso_8601":"2023-10-18T23:50:36.804936Z","url":"https://files.pythonhosted.org/packages/5f/14/b3f029ce061f06302ca3f53851e419bc4108576596cf4e4f6b92f7afe62d/lollms-5.8.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"0d0c0a819e7ca4a790b17ac98c4b6bf25c9b16a82a6d3f7bb456a7f89d72c8d0","md5":"66a967db7fda1be3c1277172b8c68f4b","sha256":"762f392dbb97b58294aba058c7964d71451cf437f6edafaa976d9c97ab6d5595"},"downloads":-1,"filename":"lollms-5.8.2.tar.gz","has_sig":false,"md5_digest":"66a967db7fda1be3c1277172b8c68f4b","packagetype":"sdist","python_version":"source","requires_python":null,"size":1166330,"upload_time":"2023-10-18T23:50:38","upload_time_iso_8601":"2023-10-18T23:50:38.800883Z","url":"https://files.pythonhosted.org/packages/0d/0c/0a819e7ca4a790b17ac98c4b6bf25c9b16a82a6d3f7bb456a7f89d72c8d0/lollms-5.8.2.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"5.8.3":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/5.8.3/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","ascii-colors","safe-store","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'","safe-store ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"5.8.3","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"cbdf13dd65e9690d3281c7e3e9ab7b8189d861e99ad1dbe8f9f8a3ce280cbad7","md5":"22f2acdad83f38c8b892d072058d582b","sha256":"32e075293d1f4e2d786de41028ff67f2a0056de7eb6dd1bcd05d2bf5224512c6"},"downloads":-1,"filename":"lollms-5.8.3-py3-none-any.whl","has_sig":false,"md5_digest":"22f2acdad83f38c8b892d072058d582b","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1168728,"upload_time":"2023-10-19T00:27:49","upload_time_iso_8601":"2023-10-19T00:27:49.867684Z","url":"https://files.pythonhosted.org/packages/cb/df/13dd65e9690d3281c7e3e9ab7b8189d861e99ad1dbe8f9f8a3ce280cbad7/lollms-5.8.3-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"0020ef03c503d810e0224a54f152d34c7a3416b71cb87fea491f0ab5425face9","md5":"593bf4834f18854b2891240ffe8f8d72","sha256":"451c2d7e6098af2271a82ccb3a505c72f922159356e8382c14c65e6b271fe927"},"downloads":-1,"filename":"lollms-5.8.3.tar.gz","has_sig":false,"md5_digest":"593bf4834f18854b2891240ffe8f8d72","packagetype":"sdist","python_version":"source","requires_python":null,"size":1166460,"upload_time":"2023-10-19T00:27:52","upload_time_iso_8601":"2023-10-19T00:27:52.628715Z","url":"https://files.pythonhosted.org/packages/00/20/ef03c503d810e0224a54f152d34c7a3416b71cb87fea491f0ab5425face9/lollms-5.8.3.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"5.8.5":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/5.8.5/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","ascii-colors","safe-store","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'","safe-store ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"5.8.5","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"c895b257238c828d70f9dcba0685026ac278dbb8fe835ffc6e818fbc82d7f97b","md5":"0cbb0564df50ca2d3d2e63a9713f791d","sha256":"43e977f9328a8ae9036bcff7b5d4f45f50d6f4b2aa84264c762783782d71d6ab"},"downloads":-1,"filename":"lollms-5.8.5-py3-none-any.whl","has_sig":false,"md5_digest":"0cbb0564df50ca2d3d2e63a9713f791d","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1168817,"upload_time":"2023-10-19T01:03:13","upload_time_iso_8601":"2023-10-19T01:03:13.770616Z","url":"https://files.pythonhosted.org/packages/c8/95/b257238c828d70f9dcba0685026ac278dbb8fe835ffc6e818fbc82d7f97b/lollms-5.8.5-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"49cc3203d7e90c6dc846baf87e5218e590bb110f43fc9590cb464cd3204a993d","md5":"9ecb0aa67ea4271529f03d41cd208dec","sha256":"224ef85c11708d8de0ce066fe3cd5d1aef3b85f75393cc3fb9827c0d1becebc5"},"downloads":-1,"filename":"lollms-5.8.5.tar.gz","has_sig":false,"md5_digest":"9ecb0aa67ea4271529f03d41cd208dec","packagetype":"sdist","python_version":"source","requires_python":null,"size":1166523,"upload_time":"2023-10-19T01:03:18","upload_time_iso_8601":"2023-10-19T01:03:18.003963Z","url":"https://files.pythonhosted.org/packages/49/cc/3203d7e90c6dc846baf87e5218e590bb110f43fc9590cb464cd3204a993d/lollms-5.8.5.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"5.8.6":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/5.8.6/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","ascii-colors","safe-store","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'","safe-store ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"5.8.6","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"5a7b7b6aa6e02e1397cd99264836f1859eaebbf64596b2124b3901a00a94383f","md5":"1c29ef4be944530a62bfcd9bf155acfa","sha256":"8f138b88ac34c23ccabb760ba0fd0c9b9bff4bbffa903d2f2aa0ef6a790a46da"},"downloads":-1,"filename":"lollms-5.8.6-py3-none-any.whl","has_sig":false,"md5_digest":"1c29ef4be944530a62bfcd9bf155acfa","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1168821,"upload_time":"2023-10-19T15:39:12","upload_time_iso_8601":"2023-10-19T15:39:12.567294Z","url":"https://files.pythonhosted.org/packages/5a/7b/7b6aa6e02e1397cd99264836f1859eaebbf64596b2124b3901a00a94383f/lollms-5.8.6-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"4a18143eb7bcffd26dd3b28ad46957ac35d72c31c5535ce6813923e5b614b8b4","md5":"b9f770178e5bba44f62a94e70a1844ce","sha256":"c206949b70b11036ac660a0ef176ac4aee6405ad9423ee797398951619e31c5a"},"downloads":-1,"filename":"lollms-5.8.6.tar.gz","has_sig":false,"md5_digest":"b9f770178e5bba44f62a94e70a1844ce","packagetype":"sdist","python_version":"source","requires_python":null,"size":1166505,"upload_time":"2023-10-19T15:39:15","upload_time_iso_8601":"2023-10-19T15:39:15.428222Z","url":"https://files.pythonhosted.org/packages/4a/18/143eb7bcffd26dd3b28ad46957ac35d72c31c5535ce6813923e5b614b8b4/lollms-5.8.6.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"5.8.7":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/5.8.7/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","ascii-colors","safe-store","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'","safe-store ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"5.8.7","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"d89d70d817c5c92c06b4f3ec9df725e90aaa58956d481ed84d83dfb3c5e98d5d","md5":"b89858491aa697dc7c8c0093d010eb99","sha256":"7951b8035b132bbb7394e617dc57d86fff90035e7aa82e4c14eef1c511b99733"},"downloads":-1,"filename":"lollms-5.8.7-py3-none-any.whl","has_sig":false,"md5_digest":"b89858491aa697dc7c8c0093d010eb99","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1169033,"upload_time":"2023-10-19T16:10:53","upload_time_iso_8601":"2023-10-19T16:10:53.212017Z","url":"https://files.pythonhosted.org/packages/d8/9d/70d817c5c92c06b4f3ec9df725e90aaa58956d481ed84d83dfb3c5e98d5d/lollms-5.8.7-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"9d2ad5e9079fe108c91d06653e5e9fdeb1d3c22613c2e05f993558c179742a3f","md5":"b1f3acc26e4500d1dab31974e42f870a","sha256":"52667e5ced45d6f5bf831fb6148e16cff7ee670f82d3363252a0ebd561972e5e"},"downloads":-1,"filename":"lollms-5.8.7.tar.gz","has_sig":false,"md5_digest":"b1f3acc26e4500d1dab31974e42f870a","packagetype":"sdist","python_version":"source","requires_python":null,"size":1166758,"upload_time":"2023-10-19T16:10:59","upload_time_iso_8601":"2023-10-19T16:10:59.660531Z","url":"https://files.pythonhosted.org/packages/9d/2a/d5e9079fe108c91d06653e5e9fdeb1d3c22613c2e05f993558c179742a3f/lollms-5.8.7.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"5.8.8":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/5.8.8/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","ascii-colors","safe-store","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'","safe-store ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"5.8.8","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"418d7b10da07d3bee45d494de69abadd915d28882bb0d198e25835308cb1d8f8","md5":"a17afca5386a414c5aa6fd3837098bb7","sha256":"aafc13722388608d7725508626a51a7ed9255fc29bb72dd0519335563dca4c75"},"downloads":-1,"filename":"lollms-5.8.8-py3-none-any.whl","has_sig":false,"md5_digest":"a17afca5386a414c5aa6fd3837098bb7","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1169033,"upload_time":"2023-10-19T16:10:55","upload_time_iso_8601":"2023-10-19T16:10:55.744594Z","url":"https://files.pythonhosted.org/packages/41/8d/7b10da07d3bee45d494de69abadd915d28882bb0d198e25835308cb1d8f8/lollms-5.8.8-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"3f786df6e8ebc0e65065af40f3f07730f79d4ed87b06e03ab11d7151b1793549","md5":"39ff87a1f9d615e3ad6dd9edc1b43ce5","sha256":"d6873abeb67bfeb77fd73e9450628703affbb4580d5737d8903fbd1637c8a130"},"downloads":-1,"filename":"lollms-5.8.8.tar.gz","has_sig":false,"md5_digest":"39ff87a1f9d615e3ad6dd9edc1b43ce5","packagetype":"sdist","python_version":"source","requires_python":null,"size":1166747,"upload_time":"2023-10-19T16:11:01","upload_time_iso_8601":"2023-10-19T16:11:01.357047Z","url":"https://files.pythonhosted.org/packages/3f/78/6df6e8ebc0e65065af40f3f07730f79d4ed87b06e03ab11d7151b1793549/lollms-5.8.8.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["5.9.0"],"id":"PYSEC-2024-108","link":"https://osv.dev/vulnerability/PYSEC-2024-108","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"5.9.0":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/5.9.0/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","ascii-colors","safe-store","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'","safe-store ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"5.9.0","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"2ebb9a1c6ab721a94d95b2a2d478d686d17e424653425b7c02915f97eba6a748","md5":"18cd1daf64d95c998249f6d73032b02d","sha256":"015a1fb38a93c5ec68c2347a04766df06523a9472f4335fd340cc1babfd7ab80"},"downloads":-1,"filename":"lollms-5.9.0-py3-none-any.whl","has_sig":false,"md5_digest":"18cd1daf64d95c998249f6d73032b02d","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1169238,"upload_time":"2023-10-22T01:39:18","upload_time_iso_8601":"2023-10-22T01:39:18.502014Z","url":"https://files.pythonhosted.org/packages/2e/bb/9a1c6ab721a94d95b2a2d478d686d17e424653425b7c02915f97eba6a748/lollms-5.9.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"0ef9d59e5005a51b648eb083554134ef4b01a69c57ffe75bc492c9c83ad92d6e","md5":"4c45cbb01f0c189aaf78cf7015189f39","sha256":"3e182dd52cac790e9d7b8b0c1df3e8d1603577ab99263264823f5be6dd4fa5c9"},"downloads":-1,"filename":"lollms-5.9.0.tar.gz","has_sig":false,"md5_digest":"4c45cbb01f0c189aaf78cf7015189f39","packagetype":"sdist","python_version":"source","requires_python":null,"size":1166953,"upload_time":"2023-10-22T01:39:22","upload_time_iso_8601":"2023-10-22T01:39:22.945952Z","url":"https://files.pythonhosted.org/packages/0e/f9/d59e5005a51b648eb083554134ef4b01a69c57ffe75bc492c9c83ad92d6e/lollms-5.9.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5443"],"details":"CVE-2024-4320 describes a vulnerability in the parisneo/lollms software, specifically within the `ExtensionBuilder().build_extension()` function. The vulnerability arises from the `/mount_extension` endpoint, where a path traversal issue allows attackers to navigate beyond the intended directory structure. This is facilitated by the `data.category` and `data.folder` parameters accepting empty strings (`\"\"`), which, due to inadequate input sanitization, can lead to the construction of a `package_path` that points to the root directory. Consequently, if an attacker can create a `config.yaml` file in a controllable path, this path can be appended to the `extensions` list and trigger the execution of `__init__.py` in the current directory, leading to remote code execution. The vulnerability affects versions from 5.9.0, and has been addressed in version 9.5.1.","fixed_in":["9.5.1"],"id":"GHSA-mvrm-fh8q-6wr2","link":"https://osv.dev/vulnerability/GHSA-mvrm-fh8q-6wr2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"5.9.1":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/5.9.1/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","ascii-colors","safe-store","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'","safe-store ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"5.9.1","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"a007938d98399ec8e8aef8bdb52ccb5fede4d6a815df533a9f069c367459c37b","md5":"8a5e9351d5bc98b1c809db95e67b759f","sha256":"f5caee149e1bcd169b07e5258467b94b39dc181649a7cae2fdbcd11f17102d6f"},"downloads":-1,"filename":"lollms-5.9.1-py3-none-any.whl","has_sig":false,"md5_digest":"8a5e9351d5bc98b1c809db95e67b759f","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":163062,"upload_time":"2023-10-29T09:58:56","upload_time_iso_8601":"2023-10-29T09:58:56.279026Z","url":"https://files.pythonhosted.org/packages/a0/07/938d98399ec8e8aef8bdb52ccb5fede4d6a815df533a9f069c367459c37b/lollms-5.9.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"6617ed33d01553f5b03929dc4c51cdf2abdb704c1a01a513e86719521d3e9e06","md5":"832a27a2deabae3f4dd54c0381b193a8","sha256":"111f2f7666169e501ffd2697b705292c51095dcf7b3173715202c59bf8599a81"},"downloads":-1,"filename":"lollms-5.9.1.tar.gz","has_sig":false,"md5_digest":"832a27a2deabae3f4dd54c0381b193a8","packagetype":"sdist","python_version":"source","requires_python":null,"size":161143,"upload_time":"2023-10-29T09:59:01","upload_time_iso_8601":"2023-10-29T09:59:01.027522Z","url":"https://files.pythonhosted.org/packages/66/17/ed33d01553f5b03929dc4c51cdf2abdb704c1a01a513e86719521d3e9e06/lollms-5.9.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5443"],"details":"CVE-2024-4320 describes a vulnerability in the parisneo/lollms software, specifically within the `ExtensionBuilder().build_extension()` function. The vulnerability arises from the `/mount_extension` endpoint, where a path traversal issue allows attackers to navigate beyond the intended directory structure. This is facilitated by the `data.category` and `data.folder` parameters accepting empty strings (`\"\"`), which, due to inadequate input sanitization, can lead to the construction of a `package_path` that points to the root directory. Consequently, if an attacker can create a `config.yaml` file in a controllable path, this path can be appended to the `extensions` list and trigger the execution of `__init__.py` in the current directory, leading to remote code execution. The vulnerability affects versions from 5.9.0, and has been addressed in version 9.5.1.","fixed_in":["9.5.1"],"id":"GHSA-mvrm-fh8q-6wr2","link":"https://osv.dev/vulnerability/GHSA-mvrm-fh8q-6wr2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"5.9.2":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/5.9.2/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","ascii-colors","safe-store","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'","safe-store ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"5.9.2","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"c35305f50b3ffea7e26ecc9c48b3edbdd64313f1a6e71edf4972c3cf83db775b","md5":"1b3e4bb1ecd1ed249fa7ce88693d0e14","sha256":"f3dc445e198fa7b2a92689d92b9f09827197beafae34144667a03e1be7510cd2"},"downloads":-1,"filename":"lollms-5.9.2-py3-none-any.whl","has_sig":false,"md5_digest":"1b3e4bb1ecd1ed249fa7ce88693d0e14","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":163093,"upload_time":"2023-10-29T10:15:17","upload_time_iso_8601":"2023-10-29T10:15:17.322551Z","url":"https://files.pythonhosted.org/packages/c3/53/05f50b3ffea7e26ecc9c48b3edbdd64313f1a6e71edf4972c3cf83db775b/lollms-5.9.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"9b0f81a797f4ed23b6e4d167340a85504717e131f90a3cd2bb0ca6d3eaa6b990","md5":"55352056670ae555d4b930269a3c73ac","sha256":"8afa908701be1daf17433077c7afeb575db2eb3be493ce3c9630822f0c43d424"},"downloads":-1,"filename":"lollms-5.9.2.tar.gz","has_sig":false,"md5_digest":"55352056670ae555d4b930269a3c73ac","packagetype":"sdist","python_version":"source","requires_python":null,"size":161137,"upload_time":"2023-10-29T10:15:22","upload_time_iso_8601":"2023-10-29T10:15:22.919610Z","url":"https://files.pythonhosted.org/packages/9b/0f/81a797f4ed23b6e4d167340a85504717e131f90a3cd2bb0ca6d3eaa6b990/lollms-5.9.2.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5443"],"details":"CVE-2024-4320 describes a vulnerability in the parisneo/lollms software, specifically within the `ExtensionBuilder().build_extension()` function. The vulnerability arises from the `/mount_extension` endpoint, where a path traversal issue allows attackers to navigate beyond the intended directory structure. This is facilitated by the `data.category` and `data.folder` parameters accepting empty strings (`\"\"`), which, due to inadequate input sanitization, can lead to the construction of a `package_path` that points to the root directory. Consequently, if an attacker can create a `config.yaml` file in a controllable path, this path can be appended to the `extensions` list and trigger the execution of `__init__.py` in the current directory, leading to remote code execution. The vulnerability affects versions from 5.9.0, and has been addressed in version 9.5.1.","fixed_in":["9.5.1"],"id":"GHSA-mvrm-fh8q-6wr2","link":"https://osv.dev/vulnerability/GHSA-mvrm-fh8q-6wr2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"5.9.3":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/5.9.3/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","ascii-colors","safe-store","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'","safe-store ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"5.9.3","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"7f81606c03444c77918b821d19eaaf1dec5492a34d792a71432268db68ce7041","md5":"0ec2e29f4e42a8bdc5b667609b3c890b","sha256":"5ea0d1623b29f5f760e4a9d3b08b7f2cc9b0b3c5a6cc6adffc838c9fdb9124b1"},"downloads":-1,"filename":"lollms-5.9.3-py3-none-any.whl","has_sig":false,"md5_digest":"0ec2e29f4e42a8bdc5b667609b3c890b","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":163923,"upload_time":"2023-10-29T20:18:46","upload_time_iso_8601":"2023-10-29T20:18:46.691322Z","url":"https://files.pythonhosted.org/packages/7f/81/606c03444c77918b821d19eaaf1dec5492a34d792a71432268db68ce7041/lollms-5.9.3-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"a3d0520e68edfa4c1e27359c9f77cde0e8a4d29d17fe4974725b6aed8622e9ad","md5":"776438f68b6e3e895bab5e95974ff041","sha256":"6eb5cefe14501a85496beadea71cb2a3410c6de705f637fa8e01a2b071d5962f"},"downloads":-1,"filename":"lollms-5.9.3.tar.gz","has_sig":false,"md5_digest":"776438f68b6e3e895bab5e95974ff041","packagetype":"sdist","python_version":"source","requires_python":null,"size":161855,"upload_time":"2023-10-29T20:18:51","upload_time_iso_8601":"2023-10-29T20:18:51.165442Z","url":"https://files.pythonhosted.org/packages/a3/d0/520e68edfa4c1e27359c9f77cde0e8a4d29d17fe4974725b6aed8622e9ad/lollms-5.9.3.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5443"],"details":"CVE-2024-4320 describes a vulnerability in the parisneo/lollms software, specifically within the `ExtensionBuilder().build_extension()` function. The vulnerability arises from the `/mount_extension` endpoint, where a path traversal issue allows attackers to navigate beyond the intended directory structure. This is facilitated by the `data.category` and `data.folder` parameters accepting empty strings (`\"\"`), which, due to inadequate input sanitization, can lead to the construction of a `package_path` that points to the root directory. Consequently, if an attacker can create a `config.yaml` file in a controllable path, this path can be appended to the `extensions` list and trigger the execution of `__init__.py` in the current directory, leading to remote code execution. The vulnerability affects versions from 5.9.0, and has been addressed in version 9.5.1.","fixed_in":["9.5.1"],"id":"GHSA-mvrm-fh8q-6wr2","link":"https://osv.dev/vulnerability/GHSA-mvrm-fh8q-6wr2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"5.9.4":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/5.9.4/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","ascii-colors","safe-store","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'","safe-store ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"5.9.4","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"79618287ee63f741616892cabba151aadd36892e6741603456c84a239397ae46","md5":"c4f61cb989e885fde354cc5c55d641c9","sha256":"c5c3b9011be1c0b2a641ab40a1f50699b0efabfe0752f546cb235554daada000"},"downloads":-1,"filename":"lollms-5.9.4-py3-none-any.whl","has_sig":false,"md5_digest":"c4f61cb989e885fde354cc5c55d641c9","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":164473,"upload_time":"2023-10-29T23:39:40","upload_time_iso_8601":"2023-10-29T23:39:40.600154Z","url":"https://files.pythonhosted.org/packages/79/61/8287ee63f741616892cabba151aadd36892e6741603456c84a239397ae46/lollms-5.9.4-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"0908de11424b66baa7963c23f0491033220f545b010c1c0436c4a9fbd5d16401","md5":"6021b239af715bcbbbbbad1d6d878133","sha256":"f35fa9932ec38bfcc4462c34ea566377abfead06aab162e15ddc4d0595c06f19"},"downloads":-1,"filename":"lollms-5.9.4.tar.gz","has_sig":false,"md5_digest":"6021b239af715bcbbbbbad1d6d878133","packagetype":"sdist","python_version":"source","requires_python":null,"size":162329,"upload_time":"2023-10-29T23:39:46","upload_time_iso_8601":"2023-10-29T23:39:46.699367Z","url":"https://files.pythonhosted.org/packages/09/08/de11424b66baa7963c23f0491033220f545b010c1c0436c4a9fbd5d16401/lollms-5.9.4.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5443"],"details":"CVE-2024-4320 describes a vulnerability in the parisneo/lollms software, specifically within the `ExtensionBuilder().build_extension()` function. The vulnerability arises from the `/mount_extension` endpoint, where a path traversal issue allows attackers to navigate beyond the intended directory structure. This is facilitated by the `data.category` and `data.folder` parameters accepting empty strings (`\"\"`), which, due to inadequate input sanitization, can lead to the construction of a `package_path` that points to the root directory. Consequently, if an attacker can create a `config.yaml` file in a controllable path, this path can be appended to the `extensions` list and trigger the execution of `__init__.py` in the current directory, leading to remote code execution. The vulnerability affects versions from 5.9.0, and has been addressed in version 9.5.1.","fixed_in":["9.5.1"],"id":"GHSA-mvrm-fh8q-6wr2","link":"https://osv.dev/vulnerability/GHSA-mvrm-fh8q-6wr2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"5.9.5":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/5.9.5/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","ascii-colors","safe-store","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'","safe-store ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"5.9.5","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"6307a70845a41316a03cd551876d906c8097819165990d31525576ac6c20c3ea","md5":"87d23face2cd6a18406ea4b1f67cc93d","sha256":"35ad01647980808afa8789410b029cc95fabed6fc493944e6dd0f80dcff85b69"},"downloads":-1,"filename":"lollms-5.9.5-py3-none-any.whl","has_sig":false,"md5_digest":"87d23face2cd6a18406ea4b1f67cc93d","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":164707,"upload_time":"2023-10-30T00:14:18","upload_time_iso_8601":"2023-10-30T00:14:18.557357Z","url":"https://files.pythonhosted.org/packages/63/07/a70845a41316a03cd551876d906c8097819165990d31525576ac6c20c3ea/lollms-5.9.5-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"fe8d27c64730f40d61bf10b7ed2513e3d49c52d122e276e77f90595e04113079","md5":"d3ce3238efc571852b48b9bd76425ce7","sha256":"b3d696426ceca6bfa7102d656061a46994791f5372bd2b9fae92adbeee231126"},"downloads":-1,"filename":"lollms-5.9.5.tar.gz","has_sig":false,"md5_digest":"d3ce3238efc571852b48b9bd76425ce7","packagetype":"sdist","python_version":"source","requires_python":null,"size":162522,"upload_time":"2023-10-30T00:14:31","upload_time_iso_8601":"2023-10-30T00:14:31.531507Z","url":"https://files.pythonhosted.org/packages/fe/8d/27c64730f40d61bf10b7ed2513e3d49c52d122e276e77f90595e04113079/lollms-5.9.5.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5443"],"details":"CVE-2024-4320 describes a vulnerability in the parisneo/lollms software, specifically within the `ExtensionBuilder().build_extension()` function. The vulnerability arises from the `/mount_extension` endpoint, where a path traversal issue allows attackers to navigate beyond the intended directory structure. This is facilitated by the `data.category` and `data.folder` parameters accepting empty strings (`\"\"`), which, due to inadequate input sanitization, can lead to the construction of a `package_path` that points to the root directory. Consequently, if an attacker can create a `config.yaml` file in a controllable path, this path can be appended to the `extensions` list and trigger the execution of `__init__.py` in the current directory, leading to remote code execution. The vulnerability affects versions from 5.9.0, and has been addressed in version 9.5.1.","fixed_in":["9.5.1"],"id":"GHSA-mvrm-fh8q-6wr2","link":"https://osv.dev/vulnerability/GHSA-mvrm-fh8q-6wr2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"6.0.0":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/6.0.0/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","ascii-colors","safe-store","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'","safe-store ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"6.0.0","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"e4ac36cae32e778f8c7fbcd830ff7f69e89df665412fb6e83186338c67e425b9","md5":"a261197fce7930f7274d1feaedd41641","sha256":"a267d7b78c7d0319f483c6e8ec1e47c3112424f2d1f3c752e57c1d174eaee0e3"},"downloads":-1,"filename":"lollms-6.0.0-py3-none-any.whl","has_sig":false,"md5_digest":"a261197fce7930f7274d1feaedd41641","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":166733,"upload_time":"2023-10-30T09:43:56","upload_time_iso_8601":"2023-10-30T09:43:56.783923Z","url":"https://files.pythonhosted.org/packages/e4/ac/36cae32e778f8c7fbcd830ff7f69e89df665412fb6e83186338c67e425b9/lollms-6.0.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"776dabda558befeb3e01af7159c80323038259a42453c0938fe558c64b55df33","md5":"5a6741a6915e876848100388e2bfa377","sha256":"101b40eddadeee23beb50221bf3f29f8dcfb3e395dd07947c5e0824c586c53d3"},"downloads":-1,"filename":"lollms-6.0.0.tar.gz","has_sig":false,"md5_digest":"5a6741a6915e876848100388e2bfa377","packagetype":"sdist","python_version":"source","requires_python":null,"size":162767,"upload_time":"2023-10-30T09:44:07","upload_time_iso_8601":"2023-10-30T09:44:07.166068Z","url":"https://files.pythonhosted.org/packages/77/6d/abda558befeb3e01af7159c80323038259a42453c0938fe558c64b55df33/lollms-6.0.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5443"],"details":"CVE-2024-4320 describes a vulnerability in the parisneo/lollms software, specifically within the `ExtensionBuilder().build_extension()` function. The vulnerability arises from the `/mount_extension` endpoint, where a path traversal issue allows attackers to navigate beyond the intended directory structure. This is facilitated by the `data.category` and `data.folder` parameters accepting empty strings (`\"\"`), which, due to inadequate input sanitization, can lead to the construction of a `package_path` that points to the root directory. Consequently, if an attacker can create a `config.yaml` file in a controllable path, this path can be appended to the `extensions` list and trigger the execution of `__init__.py` in the current directory, leading to remote code execution. The vulnerability affects versions from 5.9.0, and has been addressed in version 9.5.1.","fixed_in":["9.5.1"],"id":"GHSA-mvrm-fh8q-6wr2","link":"https://osv.dev/vulnerability/GHSA-mvrm-fh8q-6wr2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"6.0.1":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/6.0.1/","requires_dist":["flask-socketio ; extra == 'dev'","tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","ascii-colors","safe-store","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'","safe-store ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"6.0.1","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"bcdd900a053360a5a750240fe8e0092a95f8ee1133406cb098a2ae3744d7336d","md5":"b2fdcfb21c9552efd2b951be3d5db6eb","sha256":"a71133b6fb0f11262f6968e50f2d9aaec2cf7fab44724a2419a709dac1da1936"},"downloads":-1,"filename":"lollms-6.0.1-py3-none-any.whl","has_sig":false,"md5_digest":"b2fdcfb21c9552efd2b951be3d5db6eb","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":164943,"upload_time":"2023-10-30T19:54:20","upload_time_iso_8601":"2023-10-30T19:54:20.087469Z","url":"https://files.pythonhosted.org/packages/bc/dd/900a053360a5a750240fe8e0092a95f8ee1133406cb098a2ae3744d7336d/lollms-6.0.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"2dc8807bf13d91621a83f5420ba08a757e4cf3355c03f6d4a410c79c9c64cfdb","md5":"ded11c38908fb28f3fbbb4258e2c6e38","sha256":"3b2a7ec4b63cff131d5b29d9911cda602ee6b5aeddeea9190fc7b01bf484e2f4"},"downloads":-1,"filename":"lollms-6.0.1.tar.gz","has_sig":false,"md5_digest":"ded11c38908fb28f3fbbb4258e2c6e38","packagetype":"sdist","python_version":"source","requires_python":null,"size":162753,"upload_time":"2023-10-30T19:54:23","upload_time_iso_8601":"2023-10-30T19:54:23.948323Z","url":"https://files.pythonhosted.org/packages/2d/c8/807bf13d91621a83f5420ba08a757e4cf3355c03f6d4a410c79c9c64cfdb/lollms-6.0.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5443"],"details":"CVE-2024-4320 describes a vulnerability in the parisneo/lollms software, specifically within the `ExtensionBuilder().build_extension()` function. The vulnerability arises from the `/mount_extension` endpoint, where a path traversal issue allows attackers to navigate beyond the intended directory structure. This is facilitated by the `data.category` and `data.folder` parameters accepting empty strings (`\"\"`), which, due to inadequate input sanitization, can lead to the construction of a `package_path` that points to the root directory. Consequently, if an attacker can create a `config.yaml` file in a controllable path, this path can be appended to the `extensions` list and trigger the execution of `__init__.py` in the current directory, leading to remote code execution. The vulnerability affects versions from 5.9.0, and has been addressed in version 9.5.1.","fixed_in":["9.5.1"],"id":"GHSA-mvrm-fh8q-6wr2","link":"https://osv.dev/vulnerability/GHSA-mvrm-fh8q-6wr2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"6.0.2":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/6.0.2/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","ascii-colors","safe-store","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'","safe-store ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"6.0.2","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"7fa0cde1837aaf5c8aaac2fa214c898871c8f48004236ab358704c3d61177a58","md5":"8098c6c29a1ce6eae3d002a889a2001d","sha256":"d083086c1437e078c8e23fa3534af653c7796c4a701e4277932f4d351150b44a"},"downloads":-1,"filename":"lollms-6.0.2-py3-none-any.whl","has_sig":false,"md5_digest":"8098c6c29a1ce6eae3d002a889a2001d","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":164990,"upload_time":"2023-10-30T22:24:28","upload_time_iso_8601":"2023-10-30T22:24:28.839163Z","url":"https://files.pythonhosted.org/packages/7f/a0/cde1837aaf5c8aaac2fa214c898871c8f48004236ab358704c3d61177a58/lollms-6.0.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"789a129506ffd20ac9390eceb127e42d39daf828a36b725d7ae45a93a30ceba5","md5":"7ec77de8c0a6c63629cc3218a662c973","sha256":"56efb9ccb6dec27f30b3e05fd836bd11bfd617249f1623c96bd844e4b2da7dee"},"downloads":-1,"filename":"lollms-6.0.2.tar.gz","has_sig":false,"md5_digest":"7ec77de8c0a6c63629cc3218a662c973","packagetype":"sdist","python_version":"source","requires_python":null,"size":162794,"upload_time":"2023-10-30T22:24:34","upload_time_iso_8601":"2023-10-30T22:24:34.332615Z","url":"https://files.pythonhosted.org/packages/78/9a/129506ffd20ac9390eceb127e42d39daf828a36b725d7ae45a93a30ceba5/lollms-6.0.2.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5443"],"details":"CVE-2024-4320 describes a vulnerability in the parisneo/lollms software, specifically within the `ExtensionBuilder().build_extension()` function. The vulnerability arises from the `/mount_extension` endpoint, where a path traversal issue allows attackers to navigate beyond the intended directory structure. This is facilitated by the `data.category` and `data.folder` parameters accepting empty strings (`\"\"`), which, due to inadequate input sanitization, can lead to the construction of a `package_path` that points to the root directory. Consequently, if an attacker can create a `config.yaml` file in a controllable path, this path can be appended to the `extensions` list and trigger the execution of `__init__.py` in the current directory, leading to remote code execution. The vulnerability affects versions from 5.9.0, and has been addressed in version 9.5.1.","fixed_in":["9.5.1"],"id":"GHSA-mvrm-fh8q-6wr2","link":"https://osv.dev/vulnerability/GHSA-mvrm-fh8q-6wr2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"6.0.3":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/6.0.3/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","ascii-colors","safe-store","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'","safe-store ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"6.0.3","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"d4b9f3109adff5e812be7f0e29381ea050aeade08bc2851c75b38d41ca9c5803","md5":"b372ea2ddbb96cf4a28c2328e2749729","sha256":"a1dd7d428fced3b85ca76e5a14d527b3f45276bf9411233e45abf542eed76b28"},"downloads":-1,"filename":"lollms-6.0.3-py3-none-any.whl","has_sig":false,"md5_digest":"b372ea2ddbb96cf4a28c2328e2749729","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":165265,"upload_time":"2023-10-30T22:24:31","upload_time_iso_8601":"2023-10-30T22:24:31.126857Z","url":"https://files.pythonhosted.org/packages/d4/b9/f3109adff5e812be7f0e29381ea050aeade08bc2851c75b38d41ca9c5803/lollms-6.0.3-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"b57bd0f66318d6656571c2c4259749b026b28a5f847e917db0404ebe1da48bfd","md5":"ef0b20da4618f1e3a97b292f13bc2229","sha256":"b3528243ed2c414599c85ec076af5c887d79ddea65517738646e2df7cf0aee45"},"downloads":-1,"filename":"lollms-6.0.3.tar.gz","has_sig":false,"md5_digest":"ef0b20da4618f1e3a97b292f13bc2229","packagetype":"sdist","python_version":"source","requires_python":null,"size":162886,"upload_time":"2023-10-30T22:24:36","upload_time_iso_8601":"2023-10-30T22:24:36.450944Z","url":"https://files.pythonhosted.org/packages/b5/7b/d0f66318d6656571c2c4259749b026b28a5f847e917db0404ebe1da48bfd/lollms-6.0.3.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5443"],"details":"CVE-2024-4320 describes a vulnerability in the parisneo/lollms software, specifically within the `ExtensionBuilder().build_extension()` function. The vulnerability arises from the `/mount_extension` endpoint, where a path traversal issue allows attackers to navigate beyond the intended directory structure. This is facilitated by the `data.category` and `data.folder` parameters accepting empty strings (`\"\"`), which, due to inadequate input sanitization, can lead to the construction of a `package_path` that points to the root directory. Consequently, if an attacker can create a `config.yaml` file in a controllable path, this path can be appended to the `extensions` list and trigger the execution of `__init__.py` in the current directory, leading to remote code execution. The vulnerability affects versions from 5.9.0, and has been addressed in version 9.5.1.","fixed_in":["9.5.1"],"id":"GHSA-mvrm-fh8q-6wr2","link":"https://osv.dev/vulnerability/GHSA-mvrm-fh8q-6wr2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"6.0.5":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/6.0.5/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","ascii-colors","safe-store","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'","safe-store ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"6.0.5","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"8aa78e7ae3f7dae674d771639ffcd0c76464a11670163cf4566f09171e06dc0d","md5":"33c772ccbeb7454cc713f80d3feffe16","sha256":"b4e765940061455d43770c84fdc1a638a741cda6e5d5db75088fd9b906c37f0a"},"downloads":-1,"filename":"lollms-6.0.5-py3-none-any.whl","has_sig":false,"md5_digest":"33c772ccbeb7454cc713f80d3feffe16","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":165495,"upload_time":"2023-10-30T23:03:10","upload_time_iso_8601":"2023-10-30T23:03:10.529965Z","url":"https://files.pythonhosted.org/packages/8a/a7/8e7ae3f7dae674d771639ffcd0c76464a11670163cf4566f09171e06dc0d/lollms-6.0.5-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"dde30fabe2a77604e79cb2364f28a700e508c0c5d5396edc582abf11d7ce2b83","md5":"048a4a36b7ebd24feadcc942f4d42ba4","sha256":"96e1466a385d11c2e20b8206f535d26bfc3f9c750f3ca55aa069d5ef660e7bc6"},"downloads":-1,"filename":"lollms-6.0.5.tar.gz","has_sig":false,"md5_digest":"048a4a36b7ebd24feadcc942f4d42ba4","packagetype":"sdist","python_version":"source","requires_python":null,"size":163007,"upload_time":"2023-10-30T23:03:16","upload_time_iso_8601":"2023-10-30T23:03:16.631067Z","url":"https://files.pythonhosted.org/packages/dd/e3/0fabe2a77604e79cb2364f28a700e508c0c5d5396edc582abf11d7ce2b83/lollms-6.0.5.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5443"],"details":"CVE-2024-4320 describes a vulnerability in the parisneo/lollms software, specifically within the `ExtensionBuilder().build_extension()` function. The vulnerability arises from the `/mount_extension` endpoint, where a path traversal issue allows attackers to navigate beyond the intended directory structure. This is facilitated by the `data.category` and `data.folder` parameters accepting empty strings (`\"\"`), which, due to inadequate input sanitization, can lead to the construction of a `package_path` that points to the root directory. Consequently, if an attacker can create a `config.yaml` file in a controllable path, this path can be appended to the `extensions` list and trigger the execution of `__init__.py` in the current directory, leading to remote code execution. The vulnerability affects versions from 5.9.0, and has been addressed in version 9.5.1.","fixed_in":["9.5.1"],"id":"GHSA-mvrm-fh8q-6wr2","link":"https://osv.dev/vulnerability/GHSA-mvrm-fh8q-6wr2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"6.0.6":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/6.0.6/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","ascii-colors","safe-store","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'","safe-store ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"6.0.6","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"e1052476899736ec66f4d4653d64c72056ff0922c03a4d9546ac25f5cce7cd95","md5":"90f58067a03a388b1500284e489192cb","sha256":"2109657024f887ce1691272d64d636572d8c54210dc3b3459950fa136fafc550"},"downloads":-1,"filename":"lollms-6.0.6-py3-none-any.whl","has_sig":false,"md5_digest":"90f58067a03a388b1500284e489192cb","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":165794,"upload_time":"2023-10-31T00:45:59","upload_time_iso_8601":"2023-10-31T00:45:59.050006Z","url":"https://files.pythonhosted.org/packages/e1/05/2476899736ec66f4d4653d64c72056ff0922c03a4d9546ac25f5cce7cd95/lollms-6.0.6-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"caa6ec78a5446913756d0ac4f9f760f773434bcadefd80dbe9849d59f59efe56","md5":"8ca46abffea48db4411766a2c40d5a09","sha256":"e79234f004163989670ec8d37641ecbfcb1081af0d2cae69cda86926f21bedb7"},"downloads":-1,"filename":"lollms-6.0.6.tar.gz","has_sig":false,"md5_digest":"8ca46abffea48db4411766a2c40d5a09","packagetype":"sdist","python_version":"source","requires_python":null,"size":163264,"upload_time":"2023-10-31T00:46:12","upload_time_iso_8601":"2023-10-31T00:46:12.769499Z","url":"https://files.pythonhosted.org/packages/ca/a6/ec78a5446913756d0ac4f9f760f773434bcadefd80dbe9849d59f59efe56/lollms-6.0.6.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5443"],"details":"CVE-2024-4320 describes a vulnerability in the parisneo/lollms software, specifically within the `ExtensionBuilder().build_extension()` function. The vulnerability arises from the `/mount_extension` endpoint, where a path traversal issue allows attackers to navigate beyond the intended directory structure. This is facilitated by the `data.category` and `data.folder` parameters accepting empty strings (`\"\"`), which, due to inadequate input sanitization, can lead to the construction of a `package_path` that points to the root directory. Consequently, if an attacker can create a `config.yaml` file in a controllable path, this path can be appended to the `extensions` list and trigger the execution of `__init__.py` in the current directory, leading to remote code execution. The vulnerability affects versions from 5.9.0, and has been addressed in version 9.5.1.","fixed_in":["9.5.1"],"id":"GHSA-mvrm-fh8q-6wr2","link":"https://osv.dev/vulnerability/GHSA-mvrm-fh8q-6wr2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"6.0.7":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/6.0.7/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","ascii-colors","safe-store","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'","safe-store ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"6.0.7","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"5390b2a3e65355559996f78d824c3f271442461fb3f7c536dbccdfd24284885b","md5":"86288ed39d54b2b19a1156b82eb9e356","sha256":"55ec035324704b13e0f7bb0974fe1eb2d3140520a3e52b1df442f45b34c907b4"},"downloads":-1,"filename":"lollms-6.0.7-py3-none-any.whl","has_sig":false,"md5_digest":"86288ed39d54b2b19a1156b82eb9e356","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":165829,"upload_time":"2023-10-31T01:03:51","upload_time_iso_8601":"2023-10-31T01:03:51.486214Z","url":"https://files.pythonhosted.org/packages/53/90/b2a3e65355559996f78d824c3f271442461fb3f7c536dbccdfd24284885b/lollms-6.0.7-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"b42facd28d1a68162929e6b992dbd02b64e4837fe59db70a839d4f9f56d5990c","md5":"2992b5eecb1cead4d9d6dd17d58cfc3a","sha256":"9db4b6ee84cff245f012b323f3f2140c1a7b97e10aaf6da2ddf74da4d1ab0add"},"downloads":-1,"filename":"lollms-6.0.7.tar.gz","has_sig":false,"md5_digest":"2992b5eecb1cead4d9d6dd17d58cfc3a","packagetype":"sdist","python_version":"source","requires_python":null,"size":163341,"upload_time":"2023-10-31T01:03:59","upload_time_iso_8601":"2023-10-31T01:03:59.396043Z","url":"https://files.pythonhosted.org/packages/b4/2f/acd28d1a68162929e6b992dbd02b64e4837fe59db70a839d4f9f56d5990c/lollms-6.0.7.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5443"],"details":"CVE-2024-4320 describes a vulnerability in the parisneo/lollms software, specifically within the `ExtensionBuilder().build_extension()` function. The vulnerability arises from the `/mount_extension` endpoint, where a path traversal issue allows attackers to navigate beyond the intended directory structure. This is facilitated by the `data.category` and `data.folder` parameters accepting empty strings (`\"\"`), which, due to inadequate input sanitization, can lead to the construction of a `package_path` that points to the root directory. Consequently, if an attacker can create a `config.yaml` file in a controllable path, this path can be appended to the `extensions` list and trigger the execution of `__init__.py` in the current directory, leading to remote code execution. The vulnerability affects versions from 5.9.0, and has been addressed in version 9.5.1.","fixed_in":["9.5.1"],"id":"GHSA-mvrm-fh8q-6wr2","link":"https://osv.dev/vulnerability/GHSA-mvrm-fh8q-6wr2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"6.0.8":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/6.0.8/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","ascii-colors","safe-store","ascii-colors >=0.1.3","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'","safe-store ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"6.0.8","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"ab1ffa6daf529f7405e8242390dabfd82e7cb2a42dadef0fe2b84d6f7d65735d","md5":"ec35316344b24377280ef906ede84e83","sha256":"f41d5aa36b0bca5c15d48d45327e39ee2cc6659fd252bb1bb22a5351152380ae"},"downloads":-1,"filename":"lollms-6.0.8-py3-none-any.whl","has_sig":false,"md5_digest":"ec35316344b24377280ef906ede84e83","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":165843,"upload_time":"2023-11-04T00:14:54","upload_time_iso_8601":"2023-11-04T00:14:54.137916Z","url":"https://files.pythonhosted.org/packages/ab/1f/fa6daf529f7405e8242390dabfd82e7cb2a42dadef0fe2b84d6f7d65735d/lollms-6.0.8-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"bf8e138d9c8e6a2de3ab47dab6314a7e5c881bff36a6439f7fa76cfcee6d8db9","md5":"db5932023aca5eb16a4153d26f89560b","sha256":"ec728344f46b59bdc273c390465d37c7aba658a4d0ed160397dcc0ac964d4f73"},"downloads":-1,"filename":"lollms-6.0.8.tar.gz","has_sig":false,"md5_digest":"db5932023aca5eb16a4153d26f89560b","packagetype":"sdist","python_version":"source","requires_python":null,"size":163346,"upload_time":"2023-11-04T00:14:58","upload_time_iso_8601":"2023-11-04T00:14:58.498512Z","url":"https://files.pythonhosted.org/packages/bf/8e/138d9c8e6a2de3ab47dab6314a7e5c881bff36a6439f7fa76cfcee6d8db9/lollms-6.0.8.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5443"],"details":"CVE-2024-4320 describes a vulnerability in the parisneo/lollms software, specifically within the `ExtensionBuilder().build_extension()` function. The vulnerability arises from the `/mount_extension` endpoint, where a path traversal issue allows attackers to navigate beyond the intended directory structure. This is facilitated by the `data.category` and `data.folder` parameters accepting empty strings (`\"\"`), which, due to inadequate input sanitization, can lead to the construction of a `package_path` that points to the root directory. Consequently, if an attacker can create a `config.yaml` file in a controllable path, this path can be appended to the `extensions` list and trigger the execution of `__init__.py` in the current directory, leading to remote code execution. The vulnerability affects versions from 5.9.0, and has been addressed in version 9.5.1.","fixed_in":["9.5.1"],"id":"GHSA-mvrm-fh8q-6wr2","link":"https://osv.dev/vulnerability/GHSA-mvrm-fh8q-6wr2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"6.0.9":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/6.0.9/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","ascii-colors","safe-store","ascii-colors (>=0.1.3)","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'","safe-store ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"6.0.9","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"6920b3e4cc44d7968ec1cc5b10022ed2ebfaa4cdb31cdec095f9690d7d7df3c1","md5":"7a0057532fcdcfc738a9228147ea593c","sha256":"d4a19e6aed5dd2065ad2057a41a9acf0ef5d6dd0b306aa62d73b5a271e5357d2"},"downloads":-1,"filename":"lollms-6.0.9-py3-none-any.whl","has_sig":false,"md5_digest":"7a0057532fcdcfc738a9228147ea593c","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":166618,"upload_time":"2023-11-06T19:50:16","upload_time_iso_8601":"2023-11-06T19:50:16.794663Z","url":"https://files.pythonhosted.org/packages/69/20/b3e4cc44d7968ec1cc5b10022ed2ebfaa4cdb31cdec095f9690d7d7df3c1/lollms-6.0.9-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"55a1b22f5843d3f4ae9f835784025ebcb38be757e2f71561e718218766a56956","md5":"75ed451a6c28286a1220c29af5361294","sha256":"da87f1ab06066a3d0c296e48089e4455d544cc5b4d36453538ab4ec6552a7bf6"},"downloads":-1,"filename":"lollms-6.0.9.tar.gz","has_sig":false,"md5_digest":"75ed451a6c28286a1220c29af5361294","packagetype":"sdist","python_version":"source","requires_python":null,"size":163542,"upload_time":"2023-11-06T19:50:21","upload_time_iso_8601":"2023-11-06T19:50:21.164320Z","url":"https://files.pythonhosted.org/packages/55/a1/b22f5843d3f4ae9f835784025ebcb38be757e2f71561e718218766a56956/lollms-6.0.9.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5443"],"details":"CVE-2024-4320 describes a vulnerability in the parisneo/lollms software, specifically within the `ExtensionBuilder().build_extension()` function. The vulnerability arises from the `/mount_extension` endpoint, where a path traversal issue allows attackers to navigate beyond the intended directory structure. This is facilitated by the `data.category` and `data.folder` parameters accepting empty strings (`\"\"`), which, due to inadequate input sanitization, can lead to the construction of a `package_path` that points to the root directory. Consequently, if an attacker can create a `config.yaml` file in a controllable path, this path can be appended to the `extensions` list and trigger the execution of `__init__.py` in the current directory, leading to remote code execution. The vulnerability affects versions from 5.9.0, and has been addressed in version 9.5.1.","fixed_in":["9.5.1"],"id":"GHSA-mvrm-fh8q-6wr2","link":"https://osv.dev/vulnerability/GHSA-mvrm-fh8q-6wr2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"6.1.1":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/6.1.1/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","ascii-colors","safe-store","ascii-colors (>=0.1.3)","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'","safe-store ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"6.1.1","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"8bfaec10377321ad12b593d9c1f3411c127327f264fe381695cf6786fe54f419","md5":"c4906190ef31c74bdc9a92bf951d6de5","sha256":"237b49efe6b40e4c5820890ce288a0905e9775d44295eb50422fb3eb4a77a088"},"downloads":-1,"filename":"lollms-6.1.1-py3-none-any.whl","has_sig":false,"md5_digest":"c4906190ef31c74bdc9a92bf951d6de5","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":166858,"upload_time":"2023-11-08T14:14:43","upload_time_iso_8601":"2023-11-08T14:14:43.632557Z","url":"https://files.pythonhosted.org/packages/8b/fa/ec10377321ad12b593d9c1f3411c127327f264fe381695cf6786fe54f419/lollms-6.1.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"7cc71db045f5f3f4778ad47eb50eb39aeb5b24748e1da10933528380019f7792","md5":"60a3e0266839e42c9f5462369947bf6c","sha256":"b6dc6c35590495b359a76ad83b0681b5acd77309222bfd935abddf4afabe211e"},"downloads":-1,"filename":"lollms-6.1.1.tar.gz","has_sig":false,"md5_digest":"60a3e0266839e42c9f5462369947bf6c","packagetype":"sdist","python_version":"source","requires_python":null,"size":163761,"upload_time":"2023-11-08T14:14:48","upload_time_iso_8601":"2023-11-08T14:14:48.662325Z","url":"https://files.pythonhosted.org/packages/7c/c7/1db045f5f3f4778ad47eb50eb39aeb5b24748e1da10933528380019f7792/lollms-6.1.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5443"],"details":"CVE-2024-4320 describes a vulnerability in the parisneo/lollms software, specifically within the `ExtensionBuilder().build_extension()` function. The vulnerability arises from the `/mount_extension` endpoint, where a path traversal issue allows attackers to navigate beyond the intended directory structure. This is facilitated by the `data.category` and `data.folder` parameters accepting empty strings (`\"\"`), which, due to inadequate input sanitization, can lead to the construction of a `package_path` that points to the root directory. Consequently, if an attacker can create a `config.yaml` file in a controllable path, this path can be appended to the `extensions` list and trigger the execution of `__init__.py` in the current directory, leading to remote code execution. The vulnerability affects versions from 5.9.0, and has been addressed in version 9.5.1.","fixed_in":["9.5.1"],"id":"GHSA-mvrm-fh8q-6wr2","link":"https://osv.dev/vulnerability/GHSA-mvrm-fh8q-6wr2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"6.2.0":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/6.2.0/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","ascii-colors","safe-store","ascii-colors >=0.1.3","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'","safe-store ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"6.2.0","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"1f7952481dde284cc622adff5d17d8c50010c200f779ecc1014992e9ab77e591","md5":"0a595547108f33aabef610ac4367f766","sha256":"bff8446a570056650508ef6b63533ecf68a6d1351ffe71a45735f244eab42880"},"downloads":-1,"filename":"lollms-6.2.0-py3-none-any.whl","has_sig":false,"md5_digest":"0a595547108f33aabef610ac4367f766","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":167111,"upload_time":"2023-11-09T01:04:06","upload_time_iso_8601":"2023-11-09T01:04:06.660316Z","url":"https://files.pythonhosted.org/packages/1f/79/52481dde284cc622adff5d17d8c50010c200f779ecc1014992e9ab77e591/lollms-6.2.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"4907419c771e15e73a3d7b0cb84671b321127145e1f2ae88d7eee97a4fadfb51","md5":"a9a23c216a8ed263092624674f83ac00","sha256":"a995b81e3f0e26e2dc8c72d3f716d19e636bd15df6145c88d868c3e4d3df6583"},"downloads":-1,"filename":"lollms-6.2.0.tar.gz","has_sig":false,"md5_digest":"a9a23c216a8ed263092624674f83ac00","packagetype":"sdist","python_version":"source","requires_python":null,"size":164585,"upload_time":"2023-11-09T01:04:13","upload_time_iso_8601":"2023-11-09T01:04:13.193378Z","url":"https://files.pythonhosted.org/packages/49/07/419c771e15e73a3d7b0cb84671b321127145e1f2ae88d7eee97a4fadfb51/lollms-6.2.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5443"],"details":"CVE-2024-4320 describes a vulnerability in the parisneo/lollms software, specifically within the `ExtensionBuilder().build_extension()` function. The vulnerability arises from the `/mount_extension` endpoint, where a path traversal issue allows attackers to navigate beyond the intended directory structure. This is facilitated by the `data.category` and `data.folder` parameters accepting empty strings (`\"\"`), which, due to inadequate input sanitization, can lead to the construction of a `package_path` that points to the root directory. Consequently, if an attacker can create a `config.yaml` file in a controllable path, this path can be appended to the `extensions` list and trigger the execution of `__init__.py` in the current directory, leading to remote code execution. The vulnerability affects versions from 5.9.0, and has been addressed in version 9.5.1.","fixed_in":["9.5.1"],"id":"GHSA-mvrm-fh8q-6wr2","link":"https://osv.dev/vulnerability/GHSA-mvrm-fh8q-6wr2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"6.4.0":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/6.4.0/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","ascii-colors","safe-store","ascii-colors >=0.1.3","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'","safe-store ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"6.4.0","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"f12a604546518f199ef21bf2871df8c6e4af837af53c332a27b51c4f9c96d6bc","md5":"c4d3e585f40b348d5f83e3c8fa96b52d","sha256":"4425bc9266812686a3b8887227bd52c4953a2bd2a7e68355ddbbaa17f512b135"},"downloads":-1,"filename":"lollms-6.4.0-py3-none-any.whl","has_sig":false,"md5_digest":"c4d3e585f40b348d5f83e3c8fa96b52d","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":169770,"upload_time":"2023-11-12T21:09:31","upload_time_iso_8601":"2023-11-12T21:09:31.235420Z","url":"https://files.pythonhosted.org/packages/f1/2a/604546518f199ef21bf2871df8c6e4af837af53c332a27b51c4f9c96d6bc/lollms-6.4.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"61ea70e007b23a931f825baa157979282571ce2e0e90b21a707284f059e429ec","md5":"091996ca999d0fbcd8b099ea3014d8dd","sha256":"f7e1cf34ac823805b0a79164894bbd4b5de79c92bdfa83aca5de5cab11f2f6c1"},"downloads":-1,"filename":"lollms-6.4.0.tar.gz","has_sig":false,"md5_digest":"091996ca999d0fbcd8b099ea3014d8dd","packagetype":"sdist","python_version":"source","requires_python":null,"size":167248,"upload_time":"2023-11-12T21:09:38","upload_time_iso_8601":"2023-11-12T21:09:38.681604Z","url":"https://files.pythonhosted.org/packages/61/ea/70e007b23a931f825baa157979282571ce2e0e90b21a707284f059e429ec/lollms-6.4.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5443"],"details":"CVE-2024-4320 describes a vulnerability in the parisneo/lollms software, specifically within the `ExtensionBuilder().build_extension()` function. The vulnerability arises from the `/mount_extension` endpoint, where a path traversal issue allows attackers to navigate beyond the intended directory structure. This is facilitated by the `data.category` and `data.folder` parameters accepting empty strings (`\"\"`), which, due to inadequate input sanitization, can lead to the construction of a `package_path` that points to the root directory. Consequently, if an attacker can create a `config.yaml` file in a controllable path, this path can be appended to the `extensions` list and trigger the execution of `__init__.py` in the current directory, leading to remote code execution. The vulnerability affects versions from 5.9.0, and has been addressed in version 9.5.1.","fixed_in":["9.5.1"],"id":"GHSA-mvrm-fh8q-6wr2","link":"https://osv.dev/vulnerability/GHSA-mvrm-fh8q-6wr2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"6.5.0":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/6.5.0/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","ascii-colors","safe-store","ascii-colors >=0.1.3","autopep8","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'","safe-store ; extra == 'dev'","autopep8 ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"6.5.0","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"8de81254804fe1272b47828c06e1987079ba3c97562554844c44c22b770060dc","md5":"7a806e7167991906b37bf10280559fd7","sha256":"dd0e4e08dd5ed21dfe8b9e81387107cbe1626ddc0a6a9bb45bcb1c28631b6616"},"downloads":-1,"filename":"lollms-6.5.0-py3-none-any.whl","has_sig":false,"md5_digest":"7a806e7167991906b37bf10280559fd7","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":173257,"upload_time":"2023-11-26T02:56:48","upload_time_iso_8601":"2023-11-26T02:56:48.212205Z","url":"https://files.pythonhosted.org/packages/8d/e8/1254804fe1272b47828c06e1987079ba3c97562554844c44c22b770060dc/lollms-6.5.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"1f743fded90f6c94f78328e97e6ed4b9c97374f1a7a6e23eaf03d0fa313aff50","md5":"8da3ae005f099a84b4fe74f7ed4886f8","sha256":"3f322459e691bd5e0af0795023f6a4bfe6b45e669a0df17e4420e11d948bb604"},"downloads":-1,"filename":"lollms-6.5.0.tar.gz","has_sig":false,"md5_digest":"8da3ae005f099a84b4fe74f7ed4886f8","packagetype":"sdist","python_version":"source","requires_python":null,"size":170715,"upload_time":"2023-11-26T02:56:56","upload_time_iso_8601":"2023-11-26T02:56:56.866309Z","url":"https://files.pythonhosted.org/packages/1f/74/3fded90f6c94f78328e97e6ed4b9c97374f1a7a6e23eaf03d0fa313aff50/lollms-6.5.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5443"],"details":"CVE-2024-4320 describes a vulnerability in the parisneo/lollms software, specifically within the `ExtensionBuilder().build_extension()` function. The vulnerability arises from the `/mount_extension` endpoint, where a path traversal issue allows attackers to navigate beyond the intended directory structure. This is facilitated by the `data.category` and `data.folder` parameters accepting empty strings (`\"\"`), which, due to inadequate input sanitization, can lead to the construction of a `package_path` that points to the root directory. Consequently, if an attacker can create a `config.yaml` file in a controllable path, this path can be appended to the `extensions` list and trigger the execution of `__init__.py` in the current directory, leading to remote code execution. The vulnerability affects versions from 5.9.0, and has been addressed in version 9.5.1.","fixed_in":["9.5.1"],"id":"GHSA-mvrm-fh8q-6wr2","link":"https://osv.dev/vulnerability/GHSA-mvrm-fh8q-6wr2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"6.5.1":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/6.5.1/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","ascii-colors","safe-store","ascii-colors >=0.1.3","autopep8","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'","safe-store ; extra == 'dev'","autopep8 ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"6.5.1","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"619e6fc5676f4cdb391704961afa68b1fbf1f27ea341f9a8b262041a34ffbe52","md5":"2c061398fa346047cde5ec8ca03aa1ba","sha256":"2e4b847057645fd0dbab69d5f62aafdcc54a1944559dbd6dd909d999cf351ce4"},"downloads":-1,"filename":"lollms-6.5.1-py3-none-any.whl","has_sig":false,"md5_digest":"2c061398fa346047cde5ec8ca03aa1ba","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":173294,"upload_time":"2023-11-27T00:17:23","upload_time_iso_8601":"2023-11-27T00:17:23.526156Z","url":"https://files.pythonhosted.org/packages/61/9e/6fc5676f4cdb391704961afa68b1fbf1f27ea341f9a8b262041a34ffbe52/lollms-6.5.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"fae8b6311f0eb830e1a299c5de392c493134ba66717f11951d5b3b073e067ee9","md5":"59b2fc77c7a168633cafa62abd7fb82c","sha256":"a6a63530194b979418875ed56d5607e1d7a50f471c2a6a571862472aa1fc9491"},"downloads":-1,"filename":"lollms-6.5.1.tar.gz","has_sig":false,"md5_digest":"59b2fc77c7a168633cafa62abd7fb82c","packagetype":"sdist","python_version":"source","requires_python":null,"size":170719,"upload_time":"2023-11-27T00:17:27","upload_time_iso_8601":"2023-11-27T00:17:27.611259Z","url":"https://files.pythonhosted.org/packages/fa/e8/b6311f0eb830e1a299c5de392c493134ba66717f11951d5b3b073e067ee9/lollms-6.5.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5443"],"details":"CVE-2024-4320 describes a vulnerability in the parisneo/lollms software, specifically within the `ExtensionBuilder().build_extension()` function. The vulnerability arises from the `/mount_extension` endpoint, where a path traversal issue allows attackers to navigate beyond the intended directory structure. This is facilitated by the `data.category` and `data.folder` parameters accepting empty strings (`\"\"`), which, due to inadequate input sanitization, can lead to the construction of a `package_path` that points to the root directory. Consequently, if an attacker can create a `config.yaml` file in a controllable path, this path can be appended to the `extensions` list and trigger the execution of `__init__.py` in the current directory, leading to remote code execution. The vulnerability affects versions from 5.9.0, and has been addressed in version 9.5.1.","fixed_in":["9.5.1"],"id":"GHSA-mvrm-fh8q-6wr2","link":"https://osv.dev/vulnerability/GHSA-mvrm-fh8q-6wr2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"6.5.2":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/6.5.2/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","ascii-colors","safe-store","ascii-colors >=0.1.3","autopep8","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'","safe-store ; extra == 'dev'","autopep8 ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"6.5.2","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"afd6b3bdc3e61bbba4435c86aaeb514324262e3e4eb34d21513f805c63513b8e","md5":"2972118df9220602476c4bfbe839414c","sha256":"0863605a0d9884419a42a1161f9a079ea887f7acaecf6258d48309793d08d7d1"},"downloads":-1,"filename":"lollms-6.5.2-py3-none-any.whl","has_sig":false,"md5_digest":"2972118df9220602476c4bfbe839414c","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":173322,"upload_time":"2023-11-27T00:37:22","upload_time_iso_8601":"2023-11-27T00:37:22.986946Z","url":"https://files.pythonhosted.org/packages/af/d6/b3bdc3e61bbba4435c86aaeb514324262e3e4eb34d21513f805c63513b8e/lollms-6.5.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"5491ba12e6f4aa30086bc7430d4c769548ccdc37743b3bfef56126778058cb1a","md5":"72499f792fc941b97b54582e633c5b69","sha256":"48a9371235c100fe108d8dd05daf80c7595a438e3cf93af4b202fb8fc48d7c39"},"downloads":-1,"filename":"lollms-6.5.2.tar.gz","has_sig":false,"md5_digest":"72499f792fc941b97b54582e633c5b69","packagetype":"sdist","python_version":"source","requires_python":null,"size":170755,"upload_time":"2023-11-27T00:37:26","upload_time_iso_8601":"2023-11-27T00:37:26.853396Z","url":"https://files.pythonhosted.org/packages/54/91/ba12e6f4aa30086bc7430d4c769548ccdc37743b3bfef56126778058cb1a/lollms-6.5.2.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5443"],"details":"CVE-2024-4320 describes a vulnerability in the parisneo/lollms software, specifically within the `ExtensionBuilder().build_extension()` function. The vulnerability arises from the `/mount_extension` endpoint, where a path traversal issue allows attackers to navigate beyond the intended directory structure. This is facilitated by the `data.category` and `data.folder` parameters accepting empty strings (`\"\"`), which, due to inadequate input sanitization, can lead to the construction of a `package_path` that points to the root directory. Consequently, if an attacker can create a `config.yaml` file in a controllable path, this path can be appended to the `extensions` list and trigger the execution of `__init__.py` in the current directory, leading to remote code execution. The vulnerability affects versions from 5.9.0, and has been addressed in version 9.5.1.","fixed_in":["9.5.1"],"id":"GHSA-mvrm-fh8q-6wr2","link":"https://osv.dev/vulnerability/GHSA-mvrm-fh8q-6wr2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"6.6.0":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/6.6.0/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","ascii-colors","safe-store","ascii-colors (>=0.1.3)","autopep8","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'","safe-store ; extra == 'dev'","autopep8 ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"6.6.0","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"df57dead140a844f9834fbbd65764c0e737718fa6395d5f151ee20d9879bf39c","md5":"695fc1b3a3559d80b27f42784c2ef208","sha256":"04b71e830def85089637ddfd9a00c97f3cf486848dda3c1776f291fed4e93e8a"},"downloads":-1,"filename":"lollms-6.6.0-py3-none-any.whl","has_sig":false,"md5_digest":"695fc1b3a3559d80b27f42784c2ef208","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":174523,"upload_time":"2023-11-28T01:03:33","upload_time_iso_8601":"2023-11-28T01:03:33.480679Z","url":"https://files.pythonhosted.org/packages/df/57/dead140a844f9834fbbd65764c0e737718fa6395d5f151ee20d9879bf39c/lollms-6.6.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"bc1a1d837ad3f8b785b4e46883bf0a8bf438ae7e70526e0fb1fdee14bdf11256","md5":"95220c6ed579f0cab0fff6905a91d2a4","sha256":"c7a724eef7ba4a25007fa154ed17fddb5e175fbb00c76df2800a66ce1c07221d"},"downloads":-1,"filename":"lollms-6.6.0.tar.gz","has_sig":false,"md5_digest":"95220c6ed579f0cab0fff6905a91d2a4","packagetype":"sdist","python_version":"source","requires_python":null,"size":171373,"upload_time":"2023-11-28T01:03:38","upload_time_iso_8601":"2023-11-28T01:03:38.112262Z","url":"https://files.pythonhosted.org/packages/bc/1a/1d837ad3f8b785b4e46883bf0a8bf438ae7e70526e0fb1fdee14bdf11256/lollms-6.6.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5443"],"details":"CVE-2024-4320 describes a vulnerability in the parisneo/lollms software, specifically within the `ExtensionBuilder().build_extension()` function. The vulnerability arises from the `/mount_extension` endpoint, where a path traversal issue allows attackers to navigate beyond the intended directory structure. This is facilitated by the `data.category` and `data.folder` parameters accepting empty strings (`\"\"`), which, due to inadequate input sanitization, can lead to the construction of a `package_path` that points to the root directory. Consequently, if an attacker can create a `config.yaml` file in a controllable path, this path can be appended to the `extensions` list and trigger the execution of `__init__.py` in the current directory, leading to remote code execution. The vulnerability affects versions from 5.9.0, and has been addressed in version 9.5.1.","fixed_in":["9.5.1"],"id":"GHSA-mvrm-fh8q-6wr2","link":"https://osv.dev/vulnerability/GHSA-mvrm-fh8q-6wr2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"6.7.0":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/6.7.0/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","ascii-colors","safe-store","ascii-colors (>=0.1.3)","autopep8","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'","safe-store ; extra == 'dev'","autopep8 ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"6.7.0","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"a49f804d12450e70edbfa79fa08b38afeb30405629b0b28d8ea7a35db5c37a35","md5":"722ace536f8719c7ba8b6240af075e00","sha256":"afceaa519202d864c1424ec83bc6221009b03da14fcfe77d2f49eec20154d4de"},"downloads":-1,"filename":"lollms-6.7.0-py3-none-any.whl","has_sig":false,"md5_digest":"722ace536f8719c7ba8b6240af075e00","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":174123,"upload_time":"2023-12-05T22:15:52","upload_time_iso_8601":"2023-12-05T22:15:52.357812Z","url":"https://files.pythonhosted.org/packages/a4/9f/804d12450e70edbfa79fa08b38afeb30405629b0b28d8ea7a35db5c37a35/lollms-6.7.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"d018108dcdc21883b2a5bd822fbcb22ae3b505a7a99e0a4949da012f68852daa","md5":"ff367ea20d89410c60d95ddc3d185231","sha256":"085a6c9a4aac2f917a20da4627ffdbfb0e8990488df81c8d0ab8e513e1f6284b"},"downloads":-1,"filename":"lollms-6.7.0.tar.gz","has_sig":false,"md5_digest":"ff367ea20d89410c60d95ddc3d185231","packagetype":"sdist","python_version":"source","requires_python":null,"size":170734,"upload_time":"2023-12-05T22:15:58","upload_time_iso_8601":"2023-12-05T22:15:58.333656Z","url":"https://files.pythonhosted.org/packages/d0/18/108dcdc21883b2a5bd822fbcb22ae3b505a7a99e0a4949da012f68852daa/lollms-6.7.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5443"],"details":"CVE-2024-4320 describes a vulnerability in the parisneo/lollms software, specifically within the `ExtensionBuilder().build_extension()` function. The vulnerability arises from the `/mount_extension` endpoint, where a path traversal issue allows attackers to navigate beyond the intended directory structure. This is facilitated by the `data.category` and `data.folder` parameters accepting empty strings (`\"\"`), which, due to inadequate input sanitization, can lead to the construction of a `package_path` that points to the root directory. Consequently, if an attacker can create a `config.yaml` file in a controllable path, this path can be appended to the `extensions` list and trigger the execution of `__init__.py` in the current directory, leading to remote code execution. The vulnerability affects versions from 5.9.0, and has been addressed in version 9.5.1.","fixed_in":["9.5.1"],"id":"GHSA-mvrm-fh8q-6wr2","link":"https://osv.dev/vulnerability/GHSA-mvrm-fh8q-6wr2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"6.9.0":{"info":{"author":"Saifeddine ALOUI","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/6.9.0/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","matplotlib","seaborn","mplcursors","scikit-learn","ascii-colors","safe-store","ascii-colors (>=0.1.3)","autopep8","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'","safe-store ; extra == 'dev'","autopep8 ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"6.9.0","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"4bf7a00e4653d263e2e35acd39758a512b80876d87b3d17af2f5b681592e05c0","md5":"59307b2020f4aae34a69f322b8b991da","sha256":"3a812790ae01e8b64bddc0cf045ec4113bd54713aef180229322e009d693a69c"},"downloads":-1,"filename":"lollms-6.9.0-py3-none-any.whl","has_sig":false,"md5_digest":"59307b2020f4aae34a69f322b8b991da","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":178857,"upload_time":"2023-12-14T23:20:27","upload_time_iso_8601":"2023-12-14T23:20:27.376778Z","url":"https://files.pythonhosted.org/packages/4b/f7/a00e4653d263e2e35acd39758a512b80876d87b3d17af2f5b681592e05c0/lollms-6.9.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"2f03a9adf7636df19b39e4a79397fa5fca963f54b77a69efda0dc5b04a6e545d","md5":"21ced6dc15a9205307316017ae646b97","sha256":"a054f8714bb0f96a52ed1e389afda635a821667d9d6815a0fbc169d80599d4f8"},"downloads":-1,"filename":"lollms-6.9.0.tar.gz","has_sig":false,"md5_digest":"21ced6dc15a9205307316017ae646b97","packagetype":"sdist","python_version":"source","requires_python":null,"size":174903,"upload_time":"2023-12-14T23:20:34","upload_time_iso_8601":"2023-12-14T23:20:34.324539Z","url":"https://files.pythonhosted.org/packages/2f/03/a9adf7636df19b39e4a79397fa5fca963f54b77a69efda0dc5b04a6e545d/lollms-6.9.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5443"],"details":"CVE-2024-4320 describes a vulnerability in the parisneo/lollms software, specifically within the `ExtensionBuilder().build_extension()` function. The vulnerability arises from the `/mount_extension` endpoint, where a path traversal issue allows attackers to navigate beyond the intended directory structure. This is facilitated by the `data.category` and `data.folder` parameters accepting empty strings (`\"\"`), which, due to inadequate input sanitization, can lead to the construction of a `package_path` that points to the root directory. Consequently, if an attacker can create a `config.yaml` file in a controllable path, this path can be appended to the `extensions` list and trigger the execution of `__init__.py` in the current directory, leading to remote code execution. The vulnerability affects versions from 5.9.0, and has been addressed in version 9.5.1.","fixed_in":["9.5.1"],"id":"GHSA-mvrm-fh8q-6wr2","link":"https://osv.dev/vulnerability/GHSA-mvrm-fh8q-6wr2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"7.2.0":{"info":{"author":"Saifeddine ALOUI (ParisNeo)","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.11"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/7.2.0/","requires_dist":["tqdm","pyyaml","Pillow","flask","flask-socketio","flask-cors","simple-websocket","eventlet","wget","setuptools","requests","safe-store","ascii-colors >=0.1.3","autopep8","fastapi","uvicorn","python-multipart","python-socketio","python-socketio[client]","python-socketio[asyncio_client]","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","flask ; extra == 'dev'","flask-socketio ; extra == 'dev'","flask-cors ; extra == 'dev'","simple-websocket ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'","safe-store ; extra == 'dev'","autopep8 ; extra == 'dev'","fastapi ; extra == 'dev'","uvicorn ; extra == 'dev'","python-multipart ; extra == 'dev'","python-socketio ; extra == 'dev'","python-socketio[client] ; extra == 'dev'","python-socketio[asyncio_client] ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"7.2.0","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"8519b1ff46c40e4595cd065e943e998e06effa7205c7d3bb9cd7d13fb5d234d7","md5":"d180754ade3cdca83051350cc31382fc","sha256":"c5c2971c307f8d56cbe55cebffd5c8ac68231878921f835e1277d2bba56c842b"},"downloads":-1,"filename":"lollms-7.2.0-py3-none-any.whl","has_sig":false,"md5_digest":"d180754ade3cdca83051350cc31382fc","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":75574,"upload_time":"2024-01-25T21:00:13","upload_time_iso_8601":"2024-01-25T21:00:13.072115Z","url":"https://files.pythonhosted.org/packages/85/19/b1ff46c40e4595cd065e943e998e06effa7205c7d3bb9cd7d13fb5d234d7/lollms-7.2.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"dcc867ae2d1c595b8afda59abda9511d338d6f74ae4e2f4a58f7c557a4871d83","md5":"bc007d8bef695a8fad21d1280f5e39e6","sha256":"2a6585e1f60ea41903fcd540e10953158e187f0fb97ca93ff09de3055832dd26"},"downloads":-1,"filename":"lollms-7.2.0.tar.gz","has_sig":false,"md5_digest":"bc007d8bef695a8fad21d1280f5e39e6","packagetype":"sdist","python_version":"source","requires_python":null,"size":73793,"upload_time":"2024-01-25T21:00:22","upload_time_iso_8601":"2024-01-25T21:00:22.810267Z","url":"https://files.pythonhosted.org/packages/dc/c8/67ae2d1c595b8afda59abda9511d338d6f74ae4e2f4a58f7c557a4871d83/lollms-7.2.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5443"],"details":"CVE-2024-4320 describes a vulnerability in the parisneo/lollms software, specifically within the `ExtensionBuilder().build_extension()` function. The vulnerability arises from the `/mount_extension` endpoint, where a path traversal issue allows attackers to navigate beyond the intended directory structure. This is facilitated by the `data.category` and `data.folder` parameters accepting empty strings (`\"\"`), which, due to inadequate input sanitization, can lead to the construction of a `package_path` that points to the root directory. Consequently, if an attacker can create a `config.yaml` file in a controllable path, this path can be appended to the `extensions` list and trigger the execution of `__init__.py` in the current directory, leading to remote code execution. The vulnerability affects versions from 5.9.0, and has been addressed in version 9.5.1.","fixed_in":["9.5.1"],"id":"GHSA-mvrm-fh8q-6wr2","link":"https://osv.dev/vulnerability/GHSA-mvrm-fh8q-6wr2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"9.3.0":{"info":{"author":"Saifeddine ALOUI (ParisNeo)","author_email":"aloui.saifeddine@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.11"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/9.3.0/","requires_dist":["tqdm","pyyaml","Pillow","wget","setuptools","requests","safe-store","ascii-colors >=0.1.3","autopep8","fastapi","uvicorn","python-multipart","python-socketio","python-socketio[client]","python-socketio[asyncio_client]","tqdm ; extra == 'dev'","pyyaml ; extra == 'dev'","Pillow ; extra == 'dev'","wget ; extra == 'dev'","setuptools ; extra == 'dev'","requests ; extra == 'dev'","safe-store ; extra == 'dev'","ascii-colors >=0.1.3 ; extra == 'dev'","autopep8 ; extra == 'dev'","fastapi ; extra == 'dev'","uvicorn ; extra == 'dev'","python-multipart ; extra == 'dev'","python-socketio ; extra == 'dev'","python-socketio[client] ; extra == 'dev'","python-socketio[asyncio_client] ; extra == 'dev'"],"requires_python":"","summary":"A python library for AI personality definition","version":"9.3.0","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"3703da6873b25e1308dcfaadb8532a50b1cbf15816f475b3efc6f59c25bd81d2","md5":"668d92d6097181d43b826fd969b44b08","sha256":"03c40332c636db61bc4c543eff6efe2c78709658be55618c18af61d46ac22f23"},"downloads":-1,"filename":"lollms-9.3.0-py3-none-any.whl","has_sig":false,"md5_digest":"668d92d6097181d43b826fd969b44b08","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":89327,"upload_time":"2024-03-04T22:26:02","upload_time_iso_8601":"2024-03-04T22:26:02.081283Z","url":"https://files.pythonhosted.org/packages/37/03/da6873b25e1308dcfaadb8532a50b1cbf15816f475b3efc6f59c25bd81d2/lollms-9.3.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"2249a3cfa14654a8296778449caaa217b2f22e6b89650e52dc07a1ed806f15b0","md5":"e39f6460231cd35d83a8c37b6fa380a7","sha256":"a51085aea9897b350774e6a5ac9c736a7d2dfeeeacef0f0ad5b04240ec522148"},"downloads":-1,"filename":"lollms-9.3.0.tar.gz","has_sig":false,"md5_digest":"e39f6460231cd35d83a8c37b6fa380a7","packagetype":"sdist","python_version":"source","requires_python":null,"size":87156,"upload_time":"2024-03-04T22:26:06","upload_time_iso_8601":"2024-03-04T22:26:06.487744Z","url":"https://files.pythonhosted.org/packages/22/49/a3cfa14654a8296778449caaa217b2f22e6b89650e52dc07a1ed806f15b0/lollms-9.3.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-4315"],"details":"parisneo/lollms version 9.5 is vulnerable to Local File Inclusion (LFI) attacks due to insufficient path sanitization. The `sanitize_path_from_endpoint` function fails to properly sanitize Windows-style paths (backward slash `\\`), allowing attackers to perform directory traversal attacks on Windows systems. This vulnerability can be exploited through various routes, including `personalities` and `/del_preset`, to read or delete any file on the Windows filesystem, compromising the system's availability.","fixed_in":["9.5.0"],"id":"GHSA-vqwr-q6cc-c242","link":"https://osv.dev/vulnerability/GHSA-vqwr-q6cc-c242","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5824"],"details":"A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.","fixed_in":["9.5.0"],"id":"GHSA-m45c-v46h-c788","link":"https://osv.dev/vulnerability/GHSA-m45c-v46h-c788","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5443"],"details":"CVE-2024-4320 describes a vulnerability in the parisneo/lollms software, specifically within the `ExtensionBuilder().build_extension()` function. The vulnerability arises from the `/mount_extension` endpoint, where a path traversal issue allows attackers to navigate beyond the intended directory structure. This is facilitated by the `data.category` and `data.folder` parameters accepting empty strings (`\"\"`), which, due to inadequate input sanitization, can lead to the construction of a `package_path` that points to the root directory. Consequently, if an attacker can create a `config.yaml` file in a controllable path, this path can be appended to the `extensions` list and trigger the execution of `__init__.py` in the current directory, leading to remote code execution. The vulnerability affects versions from 5.9.0, and has been addressed in version 9.5.1.","fixed_in":["9.5.1"],"id":"GHSA-mvrm-fh8q-6wr2","link":"https://osv.dev/vulnerability/GHSA-mvrm-fh8q-6wr2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-3429"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.5.0.","fixed_in":["9.5.0"],"id":"GHSA-3x47-w4rx-6pm7","link":"https://osv.dev/vulnerability/GHSA-3x47-w4rx-6pm7","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-4881"],"details":"A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 9.5.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.","fixed_in":["9.5.0"],"id":"GHSA-p8h7-c8gw-6x8c","link":"https://osv.dev/vulnerability/GHSA-p8h7-c8gw-6x8c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"9.5.0":{"info":{"author":"Saifeddine ALOUI (ParisNeo)","author_email":"parisneo_ai@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.11"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":null,"license":null,"maintainer":null,"maintainer_email":null,"name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/9.5.0/","requires_dist":["tqdm","pyyaml","Pillow","wget","setuptools","requests","safe-store","pipmaster","ascii-colors>=0.1.3","beautifulsoup4","autopep8","fastapi","uvicorn","python-multipart","python-socketio","python-socketio[client]","python-socketio[asyncio_client]","tqdm; extra == \"dev\"","pyyaml; extra == \"dev\"","Pillow; extra == \"dev\"","wget; extra == \"dev\"","setuptools; extra == \"dev\"","requests; extra == \"dev\"","safe-store; extra == \"dev\"","ascii-colors>=0.1.3; extra == \"dev\"","autopep8; extra == \"dev\"","fastapi; extra == \"dev\"","uvicorn; extra == \"dev\"","python-multipart; extra == \"dev\"","python-socketio; extra == \"dev\"","python-socketio[client]; extra == \"dev\"","python-socketio[asyncio_client]; extra == \"dev\""],"requires_python":null,"summary":"A python library for AI personality definition","version":"9.5.0","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"7deda7c35c36d830a42293fa1a595cd064a52dfe81908cf42f6c6ab762c83dbf","md5":"d413ea9cabfb2131f2213da9d5c2eef7","sha256":"b49a4f5c88bb79bb3eb96c4470d53d34671b5d346fcc275a598e6d8cd24500fd"},"downloads":-1,"filename":"lollms-9.5.0-py3-none-any.whl","has_sig":false,"md5_digest":"d413ea9cabfb2131f2213da9d5c2eef7","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":166062,"upload_time":"2024-06-10T19:34:12","upload_time_iso_8601":"2024-06-10T19:34:12.629467Z","url":"https://files.pythonhosted.org/packages/7d/ed/a7c35c36d830a42293fa1a595cd064a52dfe81908cf42f6c6ab762c83dbf/lollms-9.5.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"fda523c4066b37836c30eae54f2ab003c02019040204760446d908b554d0d7c3","md5":"5dd21735dd6627c194397ee44924c498","sha256":"e60fdf41d4f7b0e27f4f337ccad81dec20f423e16f5755c2ed5fb9de0eab2342"},"downloads":-1,"filename":"lollms-9.5.0.tar.gz","has_sig":false,"md5_digest":"5dd21735dd6627c194397ee44924c498","packagetype":"sdist","python_version":"source","requires_python":null,"size":145260,"upload_time":"2024-06-10T19:34:16","upload_time_iso_8601":"2024-06-10T19:34:16.757392Z","url":"https://files.pythonhosted.org/packages/fd/a5/23c4066b37836c30eae54f2ab003c02019040204760446d908b554d0d7c3/lollms-9.5.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-5443"],"details":"CVE-2024-4320 describes a vulnerability in the parisneo/lollms software, specifically within the `ExtensionBuilder().build_extension()` function. The vulnerability arises from the `/mount_extension` endpoint, where a path traversal issue allows attackers to navigate beyond the intended directory structure. This is facilitated by the `data.category` and `data.folder` parameters accepting empty strings (`\"\"`), which, due to inadequate input sanitization, can lead to the construction of a `package_path` that points to the root directory. Consequently, if an attacker can create a `config.yaml` file in a controllable path, this path can be appended to the `extensions` list and trigger the execution of `__init__.py` in the current directory, leading to remote code execution. The vulnerability affects versions from 5.9.0, and has been addressed in version 9.5.1.","fixed_in":["9.5.1"],"id":"GHSA-mvrm-fh8q-6wr2","link":"https://osv.dev/vulnerability/GHSA-mvrm-fh8q-6wr2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]},"9.5.1":{"info":{"author":"Saifeddine ALOUI (ParisNeo)","author_email":"parisneo_ai@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.11"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ParisNeo/lollms","keywords":null,"license":null,"maintainer":null,"maintainer_email":null,"name":"lollms","package_url":"https://pypi.org/project/lollms/","platform":null,"project_url":"https://pypi.org/project/lollms/","project_urls":{"Homepage":"https://github.com/ParisNeo/lollms"},"provides_extra":null,"release_url":"https://pypi.org/project/lollms/9.5.1/","requires_dist":["tqdm","pyyaml","Pillow","wget","setuptools","requests","safe-store","pipmaster","ascii-colors>=0.1.3","beautifulsoup4","autopep8","fastapi","uvicorn","python-multipart","python-socketio","python-socketio[client]","python-socketio[asyncio_client]","tqdm; extra == \"dev\"","pyyaml; extra == \"dev\"","Pillow; extra == \"dev\"","wget; extra == \"dev\"","setuptools; extra == \"dev\"","requests; extra == \"dev\"","safe-store; extra == \"dev\"","ascii-colors>=0.1.3; extra == \"dev\"","autopep8; extra == \"dev\"","fastapi; extra == \"dev\"","uvicorn; extra == \"dev\"","python-multipart; extra == \"dev\"","python-socketio; extra == \"dev\"","python-socketio[client]; extra == \"dev\"","python-socketio[asyncio_client]; extra == \"dev\""],"requires_python":null,"summary":"A python library for AI personality definition","version":"9.5.1","yanked":false,"yanked_reason":null},"last_serial":23807411,"urls":[{"comment_text":"","digests":{"blake2b_256":"12d36e9d06ffe23521c5379cfaf9841d8728efba6a1271c4b6fbdd71eb710471","md5":"78f4520d8bd225bed715a8b112018572","sha256":"23a3fac880d7d6610b3bd383c178cd576c111fc984d87554b0a43c8ce5363531"},"downloads":-1,"filename":"lollms-9.5.1-py3-none-any.whl","has_sig":false,"md5_digest":"78f4520d8bd225bed715a8b112018572","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":178827,"upload_time":"2024-06-23T21:33:25","upload_time_iso_8601":"2024-06-23T21:33:25.373092Z","url":"https://files.pythonhosted.org/packages/12/d3/6e9d06ffe23521c5379cfaf9841d8728efba6a1271c4b6fbdd71eb710471/lollms-9.5.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"371a82d813896bff7574a3299060d1269bb5ccaf87fce7e5d1cd209d5226e3aa","md5":"b33c3713c641ccb195f6c8e2228c0e29","sha256":"90ecfb22dcb1b674b485affd4d26bc1102145e52ef247c75cc8e87acbb724547"},"downloads":-1,"filename":"lollms-9.5.1.tar.gz","has_sig":false,"md5_digest":"b33c3713c641ccb195f6c8e2228c0e29","packagetype":"sdist","python_version":"source","requires_python":null,"size":152171,"upload_time":"2024-06-23T21:33:31","upload_time_iso_8601":"2024-06-23T21:33:31.237227Z","url":"https://files.pythonhosted.org/packages/37/1a/82d813896bff7574a3299060d1269bb5ccaf87fce7e5d1cd209d5226e3aa/lollms-9.5.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-3121"],"details":"A remote code execution vulnerability exists in the create_conda_env function of the parisneo/lollms repository. The vulnerability arises from the use of shell=True in the subprocess.Popen function, which allows an attacker to inject arbitrary commands by manipulating the env_name and python_version parameters. This issue could lead to a serious security breach as demonstrated by the ability to execute the 'whoami' command among potentially other harmful commands.","fixed_in":[],"id":"GHSA-79h8-gxhq-q3jg","link":"https://osv.dev/vulnerability/GHSA-79h8-gxhq-q3jg","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6139"],"details":"A path traversal vulnerability exists in the XTTS server of the parisneo/lollms package version v9.6. This vulnerability allows an attacker to write audio files to arbitrary locations on the system and enumerate file paths. The issue arises from improper validation of user-provided file paths in the `tts_to_file` endpoint.","fixed_in":[],"id":"GHSA-w9qf-83jg-2x6c","link":"https://osv.dev/vulnerability/GHSA-w9qf-83jg-2x6c","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6085"],"details":"A path traversal vulnerability exists in the XTTS server included in the lollms package, version v9.6. This vulnerability arises from the ability to perform an unauthenticated root folder settings change. Although the read file endpoint is protected against path traversals, this protection can be bypassed by changing the root folder to '/'. This allows attackers to read arbitrary files on the system. Additionally, the output folders can be changed to write arbitrary audio files to any location on the system.","fixed_in":[],"id":"GHSA-9chm-m6x2-6fvc","link":"https://osv.dev/vulnerability/GHSA-9chm-m6x2-6fvc","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6971"],"details":"A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the `lollms_file_system.py` file. The functions `add_rag_database`, `toggle_mount_rag_database`, and `vectorize_folder` do not implement security measures such as `sanitize_path_from_endpoint` or `sanitize_path`. This allows an attacker to perform vectorize operations on `.sqlite` files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.","fixed_in":[],"id":"GHSA-7pgr-32fx-c6x9","link":"https://osv.dev/vulnerability/GHSA-7pgr-32fx-c6x9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6985"],"details":"A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.","fixed_in":[],"id":"GHSA-6h64-g7cj-hj56","link":"https://osv.dev/vulnerability/GHSA-6h64-g7cj-hj56","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"PYSEC-2024-116","link":"https://osv.dev/vulnerability/PYSEC-2024-116","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-6581"],"details":"A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.","fixed_in":[],"id":"GHSA-cm59-8rmv-f2cj","link":"https://osv.dev/vulnerability/GHSA-cm59-8rmv-f2cj","source":"osv","summary":null,"withdrawn":null}]}}