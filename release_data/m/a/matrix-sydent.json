{"2.0.0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":[],"description_content_type":"","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"matrix-sydent","package_url":"https://pypi.org/project/matrix-sydent/","platform":"","project_url":"https://pypi.org/project/matrix-sydent/","project_urls":null,"provides_extra":null,"release_url":"https://pypi.org/project/matrix-sydent/2.0.0/","requires_dist":null,"requires_python":"","summary":"Reference Matrix Identity Verification and Lookup Server","version":"2.0.0","yanked":false,"yanked_reason":null},"last_serial":22507962,"urls":[{"comment_text":"","digests":{"blake2b_256":"e0314a0278e74be0d972ce1099e9ff6888a12ae775cb1c57b5f61931d2b2a6e8","md5":"21d4a2f6a6c65ecb50f8749a82d6c211","sha256":"48a1240f46ef3dd1adaeb7e551d6c652b33bff56c2a5bae71326e176bfd70454"},"downloads":-1,"filename":"matrix-sydent-2.0.0.tar.gz","has_sig":false,"md5_digest":"21d4a2f6a6c65ecb50f8749a82d6c211","packagetype":"sdist","python_version":"source","requires_python":null,"size":78819,"upload_time":"2020-02-25T16:57:21","upload_time_iso_8601":"2020-02-25T16:57:21.094061Z","url":"https://files.pythonhosted.org/packages/e0/31/4a0278e74be0d972ce1099e9ff6888a12ae775cb1c57b5f61931d2b2a6e8/matrix-sydent-2.0.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2021-29432","GHSA-mh74-4m5g-fcjx"],"details":"Sydent is a reference matrix identity server. A malicious user could abuse Sydent to send out arbitrary emails from the Sydent email address. This could be used to construct plausible phishing emails, for example. This issue has been fixed in 4469d1d.","fixed_in":["2.3.0"],"id":"PYSEC-2021-23","link":"https://osv.dev/vulnerability/PYSEC-2021-23","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2021-29431","GHSA-9jhm-8m8c-c3f4"],"details":"Sydent is a reference Matrix identity server. Sydent can be induced to send HTTP GET requests to internal systems, due to lack of parameter validation or IP address blacklisting. It is not possible to exfiltrate data or control request headers, but it might be possible to use the attack to perform an internal port enumeration. This issue has been addressed in in 9e57334, 8936925, 3d531ed, 0f00412. A potential workaround would be to use a firewall to ensure that Sydent cannot reach internal HTTP resources.","fixed_in":["2.3.0"],"id":"PYSEC-2021-22","link":"https://osv.dev/vulnerability/PYSEC-2021-22","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2021-29433","GHSA-pw4v-gr34-2553"],"details":"### Impact Missing input validation of some parameters on the endpoints used to confirm third-party identifiers could cause excessive use of disk space and memory leading to resource exhaustion. ### Patches Fixed by 3175fd3. ### Workarounds There are no known workarounds. ### References n/a ### For more information If you have any questions or comments about this advisory, email us at security@matrix.org.","fixed_in":["2.3.0"],"id":"PYSEC-2021-24","link":"https://osv.dev/vulnerability/PYSEC-2021-24","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2021-29430","GHSA-wmg4-8cp2-hpg9"],"details":"Sydent is a reference Matrix identity server. Sydent does not limit the size of requests it receives from HTTP clients. A malicious user could send an HTTP request with a very large body, leading to memory exhaustion and denial of service. Sydent also does not limit response size for requests it makes to remote Matrix homeservers. A malicious homeserver could return a very large response, again leading to memory exhaustion and denial of service. This affects any server which accepts registration requests from untrusted clients. This issue has been patched by releases 89071a1, 0523511, f56eee3. As a workaround request sizes can be limited in an HTTP reverse-proxy. There are no known workarounds for the problem with overlarge responses.","fixed_in":["2.3.0"],"id":"PYSEC-2021-21","link":"https://osv.dev/vulnerability/PYSEC-2021-21","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2021-29430"],"details":"### Impact\n\nSydent does not limit the size of requests it receives from HTTP clients. A malicious user could send an HTTP request with a very large body, leading to disk space exhaustion and denial of service.\n\nSydent also does not limit response size for requests it makes to remote Matrix homeservers. A malicious homeserver could return a very large response, again leading to memory exhaustion and denial of service.\n\nThis affects any server which accepts registration requests from untrusted clients.\n\n### Patches\n\nPatched by 89071a1, 0523511, f56eee3.\n\n### Workarounds\n\nRequest sizes can be limited in an HTTP reverse-proxy.\n\nThere are no known workarounds for the problem with overlarge responses.\n\n### For more information\n\nIf you have any questions or comments about this advisory, email us at security@matrix.org.","fixed_in":["2.3.0"],"id":"GHSA-wmg4-8cp2-hpg9","link":"https://osv.dev/vulnerability/GHSA-wmg4-8cp2-hpg9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2021-29433"],"details":"### Impact\n\nMissing input validation of some parameters on the endpoints used to confirm third-party identifiers could cause excessive use of disk space and memory leading to resource exhaustion.\n\n### Patches\n\nFixed by 3175fd3.\n\n### For more information\n\nIf you have any questions or comments about this advisory, email us at security@matrix.org.","fixed_in":["2.3.0"],"id":"GHSA-pw4v-gr34-2553","link":"https://osv.dev/vulnerability/GHSA-pw4v-gr34-2553","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2021-29431"],"details":"### Impact\n\nSydent can be induced to send HTTP GET requests to internal systems, due to lack of parameter validation or IP address blacklisting.\n\nIt is not possible to exfiltrate data or control request headers, but it might be possible to use the attack to perform an internal port enumeration.\n\n### Patches\n\nFixed in 9e57334, 8936925, 3d531ed, 0f00412\n\n### Workarounds\n\nA potential workaround would be to use a firewall to ensure that Sydent cannot reach internal HTTP resources.\n\n### For more information\n\nIf you have any questions or comments about this advisory, email us at security@matrix.org.","fixed_in":["2.3.0"],"id":"GHSA-9jhm-8m8c-c3f4","link":"https://osv.dev/vulnerability/GHSA-9jhm-8m8c-c3f4","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2021-29432"],"details":"### Impact\n\nA malicious user could abuse Sydent to send out arbitrary emails from the Sydent email address. This could be used to construct plausible phishing emails, for example.\n\n### Patches\n\nFixed in 4469d1d, 6b405a8, 65a6e91.\n\nNote that these patches include changes to the *default* email templates. If these templates have been locally modified, they must also be updated.\n\n### For more information\n\nIf you have any questions or comments about this advisory, email us at security@matrix.org.","fixed_in":["2.3.0"],"id":"GHSA-mh74-4m5g-fcjx","link":"https://osv.dev/vulnerability/GHSA-mh74-4m5g-fcjx","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-38686"],"details":"## Impact\n\nIf configured to send emails using TLS, Sydent does not verify SMTP servers' certificates. This makes  Sydent's emails vulnerable to interception via a [man-in-the-middle (MITM) attack](https://en.wikipedia.org/wiki/Man-in-the-middle_attack). Attackers with privileged access to the network can intercept room invitations and address confirmation emails.\n\nCVSS 3.1 overall score: 3.3 - [AV:A/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:N/CR:L/IR:L/AR:X/MAV:A/MAC:H/MPR:N/MUI:N/MS:C/MC:L/MI:L/MA:N](https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=AV:A/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:N/CR:L/IR:L/AR:X/MAV:A/MAC:H/MPR:N/MUI:N/MS:C/MC:L/MI:L/MA:N&version=3.1)\n\n_Reported by Martin Schobert, [Pentagrid AG](https://pentagrid.ch/)._\n\n### Details\n\nSydent can be configured to send emails over a TLS-encrypted socket by setting\n\n```yaml\nemail:\n    tlsmode: \"TLS\"  # or the legacy value \"SSL\"\n```\n\nin its config file. Alternatively it can be configured to use [Opportunistic TLS](https://en.wikipedia.org/wiki/Opportunistic_TLS) by setting\n\n```yaml\nemail:\n    tlsmode: \"STARTTLS\"\n```\n\nIn both situations, Sydent will encrypt its communication with the SMTP server when sending emails. **In affected versions, Sydent will not verify the destination server's certificate.**\n\n### Vulnerability \n\nSydent sends email for two purposes:\n- to inform a third party that they have been invited to a Matrix room by their email address; and\n- to verify that a given Matrix user controls an email address.\n\nTherefore, attackers capable of running a MITM attack can\n\n1. Intercept room invitations sent to an email address. The invitation includes \n   - the room ID and its avatar, and\n   - the inviter's username, displayname and their avatar, and\n   - credentials for a guest Matrix account on the inviter's homeserver.\n2. Intercept address ownership confirmation emails. This would allow the attacker to falsely claim ownership of the indented recipient's Matrix account, if that account was permitted to log in using an email address and no other authentication factors.\n\n\n### Patches\n\nThis is patched in [Sydent 2.5.6](https://github.com/matrix-org/sydent/releases/tag/v2.5.6), see PR https://github.com/matrix-org/sydent/pull/574.\n\nWhen patching, make sure that Sydent trusts the certificate of the server it is connecting to. This should happen automatically when using properly issued certificates. If you are using self-signed certificates, make sure to copy your Certification Authority certificate, or your self signed certificate if using only one, to the trust store of your operating system.\n\n### Workarounds\n\nOne can ensure Sydent's emails fail to send by setting the configured SMTP server to a loopback or [non-routable](https://datatracker.ietf.org/doc/html/rfc1918#section-3) address under your control which does not have a listening SMTP server. For example:\n\n```yaml\nemail:\n    smtphost: \"localhost\"  # Assuming there is no SMTP server listening on localhost\n```\n\n### References\n\n- https://github.com/matrix-org/sydent/pull/574 implements the fix.\n- https://github.com/matrix-org/sydent/releases/tag/v2.5.6 is the release including this fix.\n- https://docs.python.org/3/library/ssl.html?highlight=ssl#security-considerations details the best-practice advice on how to use the standard library `smtp` module safely.\n- https://peps.python.org/pep-0476/ (accepted) proposed enabling TLS certificate verification by default  in standard library HTTP clients.\n- https://github.com/python/cpython/issues/91826 discusses enabling TLS certificate verification by default in the Python standard library, for SMTP and other protocols.\n\n## For more information\n\nIf you have any questions or comments about this advisory, e-mail us at [security@matrix.org](mailto:security@matrix.org).","fixed_in":["2.5.6"],"id":"GHSA-p6hw-wm59-3g5g","link":"https://osv.dev/vulnerability/GHSA-p6hw-wm59-3g5g","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-38686","GHSA-p6hw-wm59-3g5g"],"details":"Sydent is an identity server for the Matrix communications protocol. Prior to version 2.5.6, if configured to send emails using TLS, Sydent does not verify SMTP servers' certificates. This makes  Sydent's emails vulnerable to interception via a man-in-the-middle (MITM) attack. Attackers with privileged access to the network can intercept room invitations and address confirmation emails. This is patched in Sydent 2.5.6. When patching, make sure that Sydent trusts the certificate of the server it is connecting to. This should happen automatically when using properly issued certificates. Those who use self-signed certificates should make sure to copy their Certification Authority certificate, or their self signed certificate if using only one, to the trust store of your operating system. As a workaround, one can ensure Sydent's emails fail to send by setting the configured SMTP server to a loopback or non-routable address under one's control which does not have a listening SMTP server.","fixed_in":["2.5.6"],"id":"PYSEC-2023-139","link":"https://osv.dev/vulnerability/PYSEC-2023-139","source":"osv","summary":null,"withdrawn":null}]},"2.0.1":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":[],"description_content_type":"","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"matrix-sydent","package_url":"https://pypi.org/project/matrix-sydent/","platform":"","project_url":"https://pypi.org/project/matrix-sydent/","project_urls":null,"provides_extra":null,"release_url":"https://pypi.org/project/matrix-sydent/2.0.1/","requires_dist":null,"requires_python":"","summary":"Reference Matrix Identity Verification and Lookup Server","version":"2.0.1","yanked":false,"yanked_reason":null},"last_serial":22507962,"urls":[{"comment_text":"","digests":{"blake2b_256":"f819d7f920eb59824d434334656344a8454c6aa39d91769ebde792566e5662c1","md5":"ecd3d32057de8f9c72dd99fa42403aa2","sha256":"467be5831fb99a3baa071281fb72561577281e6f1096a49dda2c960197bec4f9"},"downloads":-1,"filename":"matrix-sydent-2.0.1.tar.gz","has_sig":false,"md5_digest":"ecd3d32057de8f9c72dd99fa42403aa2","packagetype":"sdist","python_version":"source","requires_python":null,"size":79558,"upload_time":"2020-05-20T17:13:51","upload_time_iso_8601":"2020-05-20T17:13:51.951691Z","url":"https://files.pythonhosted.org/packages/f8/19/d7f920eb59824d434334656344a8454c6aa39d91769ebde792566e5662c1/matrix-sydent-2.0.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2021-29432","GHSA-mh74-4m5g-fcjx"],"details":"Sydent is a reference matrix identity server. A malicious user could abuse Sydent to send out arbitrary emails from the Sydent email address. This could be used to construct plausible phishing emails, for example. This issue has been fixed in 4469d1d.","fixed_in":["2.3.0"],"id":"PYSEC-2021-23","link":"https://osv.dev/vulnerability/PYSEC-2021-23","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2021-29431","GHSA-9jhm-8m8c-c3f4"],"details":"Sydent is a reference Matrix identity server. Sydent can be induced to send HTTP GET requests to internal systems, due to lack of parameter validation or IP address blacklisting. It is not possible to exfiltrate data or control request headers, but it might be possible to use the attack to perform an internal port enumeration. This issue has been addressed in in 9e57334, 8936925, 3d531ed, 0f00412. A potential workaround would be to use a firewall to ensure that Sydent cannot reach internal HTTP resources.","fixed_in":["2.3.0"],"id":"PYSEC-2021-22","link":"https://osv.dev/vulnerability/PYSEC-2021-22","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2021-29433","GHSA-pw4v-gr34-2553"],"details":"### Impact Missing input validation of some parameters on the endpoints used to confirm third-party identifiers could cause excessive use of disk space and memory leading to resource exhaustion. ### Patches Fixed by 3175fd3. ### Workarounds There are no known workarounds. ### References n/a ### For more information If you have any questions or comments about this advisory, email us at security@matrix.org.","fixed_in":["2.3.0"],"id":"PYSEC-2021-24","link":"https://osv.dev/vulnerability/PYSEC-2021-24","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2021-29430","GHSA-wmg4-8cp2-hpg9"],"details":"Sydent is a reference Matrix identity server. Sydent does not limit the size of requests it receives from HTTP clients. A malicious user could send an HTTP request with a very large body, leading to memory exhaustion and denial of service. Sydent also does not limit response size for requests it makes to remote Matrix homeservers. A malicious homeserver could return a very large response, again leading to memory exhaustion and denial of service. This affects any server which accepts registration requests from untrusted clients. This issue has been patched by releases 89071a1, 0523511, f56eee3. As a workaround request sizes can be limited in an HTTP reverse-proxy. There are no known workarounds for the problem with overlarge responses.","fixed_in":["2.3.0"],"id":"PYSEC-2021-21","link":"https://osv.dev/vulnerability/PYSEC-2021-21","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2021-29430"],"details":"### Impact\n\nSydent does not limit the size of requests it receives from HTTP clients. A malicious user could send an HTTP request with a very large body, leading to disk space exhaustion and denial of service.\n\nSydent also does not limit response size for requests it makes to remote Matrix homeservers. A malicious homeserver could return a very large response, again leading to memory exhaustion and denial of service.\n\nThis affects any server which accepts registration requests from untrusted clients.\n\n### Patches\n\nPatched by 89071a1, 0523511, f56eee3.\n\n### Workarounds\n\nRequest sizes can be limited in an HTTP reverse-proxy.\n\nThere are no known workarounds for the problem with overlarge responses.\n\n### For more information\n\nIf you have any questions or comments about this advisory, email us at security@matrix.org.","fixed_in":["2.3.0"],"id":"GHSA-wmg4-8cp2-hpg9","link":"https://osv.dev/vulnerability/GHSA-wmg4-8cp2-hpg9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2021-29433"],"details":"### Impact\n\nMissing input validation of some parameters on the endpoints used to confirm third-party identifiers could cause excessive use of disk space and memory leading to resource exhaustion.\n\n### Patches\n\nFixed by 3175fd3.\n\n### For more information\n\nIf you have any questions or comments about this advisory, email us at security@matrix.org.","fixed_in":["2.3.0"],"id":"GHSA-pw4v-gr34-2553","link":"https://osv.dev/vulnerability/GHSA-pw4v-gr34-2553","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2021-29431"],"details":"### Impact\n\nSydent can be induced to send HTTP GET requests to internal systems, due to lack of parameter validation or IP address blacklisting.\n\nIt is not possible to exfiltrate data or control request headers, but it might be possible to use the attack to perform an internal port enumeration.\n\n### Patches\n\nFixed in 9e57334, 8936925, 3d531ed, 0f00412\n\n### Workarounds\n\nA potential workaround would be to use a firewall to ensure that Sydent cannot reach internal HTTP resources.\n\n### For more information\n\nIf you have any questions or comments about this advisory, email us at security@matrix.org.","fixed_in":["2.3.0"],"id":"GHSA-9jhm-8m8c-c3f4","link":"https://osv.dev/vulnerability/GHSA-9jhm-8m8c-c3f4","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2021-29432"],"details":"### Impact\n\nA malicious user could abuse Sydent to send out arbitrary emails from the Sydent email address. This could be used to construct plausible phishing emails, for example.\n\n### Patches\n\nFixed in 4469d1d, 6b405a8, 65a6e91.\n\nNote that these patches include changes to the *default* email templates. If these templates have been locally modified, they must also be updated.\n\n### For more information\n\nIf you have any questions or comments about this advisory, email us at security@matrix.org.","fixed_in":["2.3.0"],"id":"GHSA-mh74-4m5g-fcjx","link":"https://osv.dev/vulnerability/GHSA-mh74-4m5g-fcjx","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-38686"],"details":"## Impact\n\nIf configured to send emails using TLS, Sydent does not verify SMTP servers' certificates. This makes  Sydent's emails vulnerable to interception via a [man-in-the-middle (MITM) attack](https://en.wikipedia.org/wiki/Man-in-the-middle_attack). Attackers with privileged access to the network can intercept room invitations and address confirmation emails.\n\nCVSS 3.1 overall score: 3.3 - [AV:A/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:N/CR:L/IR:L/AR:X/MAV:A/MAC:H/MPR:N/MUI:N/MS:C/MC:L/MI:L/MA:N](https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=AV:A/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:N/CR:L/IR:L/AR:X/MAV:A/MAC:H/MPR:N/MUI:N/MS:C/MC:L/MI:L/MA:N&version=3.1)\n\n_Reported by Martin Schobert, [Pentagrid AG](https://pentagrid.ch/)._\n\n### Details\n\nSydent can be configured to send emails over a TLS-encrypted socket by setting\n\n```yaml\nemail:\n    tlsmode: \"TLS\"  # or the legacy value \"SSL\"\n```\n\nin its config file. Alternatively it can be configured to use [Opportunistic TLS](https://en.wikipedia.org/wiki/Opportunistic_TLS) by setting\n\n```yaml\nemail:\n    tlsmode: \"STARTTLS\"\n```\n\nIn both situations, Sydent will encrypt its communication with the SMTP server when sending emails. **In affected versions, Sydent will not verify the destination server's certificate.**\n\n### Vulnerability \n\nSydent sends email for two purposes:\n- to inform a third party that they have been invited to a Matrix room by their email address; and\n- to verify that a given Matrix user controls an email address.\n\nTherefore, attackers capable of running a MITM attack can\n\n1. Intercept room invitations sent to an email address. The invitation includes \n   - the room ID and its avatar, and\n   - the inviter's username, displayname and their avatar, and\n   - credentials for a guest Matrix account on the inviter's homeserver.\n2. Intercept address ownership confirmation emails. This would allow the attacker to falsely claim ownership of the indented recipient's Matrix account, if that account was permitted to log in using an email address and no other authentication factors.\n\n\n### Patches\n\nThis is patched in [Sydent 2.5.6](https://github.com/matrix-org/sydent/releases/tag/v2.5.6), see PR https://github.com/matrix-org/sydent/pull/574.\n\nWhen patching, make sure that Sydent trusts the certificate of the server it is connecting to. This should happen automatically when using properly issued certificates. If you are using self-signed certificates, make sure to copy your Certification Authority certificate, or your self signed certificate if using only one, to the trust store of your operating system.\n\n### Workarounds\n\nOne can ensure Sydent's emails fail to send by setting the configured SMTP server to a loopback or [non-routable](https://datatracker.ietf.org/doc/html/rfc1918#section-3) address under your control which does not have a listening SMTP server. For example:\n\n```yaml\nemail:\n    smtphost: \"localhost\"  # Assuming there is no SMTP server listening on localhost\n```\n\n### References\n\n- https://github.com/matrix-org/sydent/pull/574 implements the fix.\n- https://github.com/matrix-org/sydent/releases/tag/v2.5.6 is the release including this fix.\n- https://docs.python.org/3/library/ssl.html?highlight=ssl#security-considerations details the best-practice advice on how to use the standard library `smtp` module safely.\n- https://peps.python.org/pep-0476/ (accepted) proposed enabling TLS certificate verification by default  in standard library HTTP clients.\n- https://github.com/python/cpython/issues/91826 discusses enabling TLS certificate verification by default in the Python standard library, for SMTP and other protocols.\n\n## For more information\n\nIf you have any questions or comments about this advisory, e-mail us at [security@matrix.org](mailto:security@matrix.org).","fixed_in":["2.5.6"],"id":"GHSA-p6hw-wm59-3g5g","link":"https://osv.dev/vulnerability/GHSA-p6hw-wm59-3g5g","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-38686","GHSA-p6hw-wm59-3g5g"],"details":"Sydent is an identity server for the Matrix communications protocol. Prior to version 2.5.6, if configured to send emails using TLS, Sydent does not verify SMTP servers' certificates. This makes  Sydent's emails vulnerable to interception via a man-in-the-middle (MITM) attack. Attackers with privileged access to the network can intercept room invitations and address confirmation emails. This is patched in Sydent 2.5.6. When patching, make sure that Sydent trusts the certificate of the server it is connecting to. This should happen automatically when using properly issued certificates. Those who use self-signed certificates should make sure to copy their Certification Authority certificate, or their self signed certificate if using only one, to the trust store of your operating system. As a workaround, one can ensure Sydent's emails fail to send by setting the configured SMTP server to a loopback or non-routable address under one's control which does not have a listening SMTP server.","fixed_in":["2.5.6"],"id":"PYSEC-2023-139","link":"https://osv.dev/vulnerability/PYSEC-2023-139","source":"osv","summary":null,"withdrawn":null}]},"2.1.0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":[],"description_content_type":"","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"matrix-sydent","package_url":"https://pypi.org/project/matrix-sydent/","platform":"","project_url":"https://pypi.org/project/matrix-sydent/","project_urls":null,"provides_extra":null,"release_url":"https://pypi.org/project/matrix-sydent/2.1.0/","requires_dist":null,"requires_python":"","summary":"Reference Matrix Identity Verification and Lookup Server","version":"2.1.0","yanked":false,"yanked_reason":null},"last_serial":22507962,"urls":[{"comment_text":"","digests":{"blake2b_256":"d370c1a413329ef5f9fe36b059ebbb4e976e0d3f320993028f54212f14535305","md5":"b88933f3e246b0edb16b53818a98f74b","sha256":"d710aa8ee4ba3ce686593d710d2d0f8ceaf2f0b9bdeb14706350575928b33e22"},"downloads":-1,"filename":"matrix-sydent-2.1.0.tar.gz","has_sig":false,"md5_digest":"b88933f3e246b0edb16b53818a98f74b","packagetype":"sdist","python_version":"source","requires_python":null,"size":82200,"upload_time":"2020-09-10T10:28:58","upload_time_iso_8601":"2020-09-10T10:28:58.269667Z","url":"https://files.pythonhosted.org/packages/d3/70/c1a413329ef5f9fe36b059ebbb4e976e0d3f320993028f54212f14535305/matrix-sydent-2.1.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2021-29432","GHSA-mh74-4m5g-fcjx"],"details":"Sydent is a reference matrix identity server. A malicious user could abuse Sydent to send out arbitrary emails from the Sydent email address. This could be used to construct plausible phishing emails, for example. This issue has been fixed in 4469d1d.","fixed_in":["2.3.0"],"id":"PYSEC-2021-23","link":"https://osv.dev/vulnerability/PYSEC-2021-23","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2021-29431","GHSA-9jhm-8m8c-c3f4"],"details":"Sydent is a reference Matrix identity server. Sydent can be induced to send HTTP GET requests to internal systems, due to lack of parameter validation or IP address blacklisting. It is not possible to exfiltrate data or control request headers, but it might be possible to use the attack to perform an internal port enumeration. This issue has been addressed in in 9e57334, 8936925, 3d531ed, 0f00412. A potential workaround would be to use a firewall to ensure that Sydent cannot reach internal HTTP resources.","fixed_in":["2.3.0"],"id":"PYSEC-2021-22","link":"https://osv.dev/vulnerability/PYSEC-2021-22","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2021-29433","GHSA-pw4v-gr34-2553"],"details":"### Impact Missing input validation of some parameters on the endpoints used to confirm third-party identifiers could cause excessive use of disk space and memory leading to resource exhaustion. ### Patches Fixed by 3175fd3. ### Workarounds There are no known workarounds. ### References n/a ### For more information If you have any questions or comments about this advisory, email us at security@matrix.org.","fixed_in":["2.3.0"],"id":"PYSEC-2021-24","link":"https://osv.dev/vulnerability/PYSEC-2021-24","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2021-29430","GHSA-wmg4-8cp2-hpg9"],"details":"Sydent is a reference Matrix identity server. Sydent does not limit the size of requests it receives from HTTP clients. A malicious user could send an HTTP request with a very large body, leading to memory exhaustion and denial of service. Sydent also does not limit response size for requests it makes to remote Matrix homeservers. A malicious homeserver could return a very large response, again leading to memory exhaustion and denial of service. This affects any server which accepts registration requests from untrusted clients. This issue has been patched by releases 89071a1, 0523511, f56eee3. As a workaround request sizes can be limited in an HTTP reverse-proxy. There are no known workarounds for the problem with overlarge responses.","fixed_in":["2.3.0"],"id":"PYSEC-2021-21","link":"https://osv.dev/vulnerability/PYSEC-2021-21","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2021-29430"],"details":"### Impact\n\nSydent does not limit the size of requests it receives from HTTP clients. A malicious user could send an HTTP request with a very large body, leading to disk space exhaustion and denial of service.\n\nSydent also does not limit response size for requests it makes to remote Matrix homeservers. A malicious homeserver could return a very large response, again leading to memory exhaustion and denial of service.\n\nThis affects any server which accepts registration requests from untrusted clients.\n\n### Patches\n\nPatched by 89071a1, 0523511, f56eee3.\n\n### Workarounds\n\nRequest sizes can be limited in an HTTP reverse-proxy.\n\nThere are no known workarounds for the problem with overlarge responses.\n\n### For more information\n\nIf you have any questions or comments about this advisory, email us at security@matrix.org.","fixed_in":["2.3.0"],"id":"GHSA-wmg4-8cp2-hpg9","link":"https://osv.dev/vulnerability/GHSA-wmg4-8cp2-hpg9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2021-29433"],"details":"### Impact\n\nMissing input validation of some parameters on the endpoints used to confirm third-party identifiers could cause excessive use of disk space and memory leading to resource exhaustion.\n\n### Patches\n\nFixed by 3175fd3.\n\n### For more information\n\nIf you have any questions or comments about this advisory, email us at security@matrix.org.","fixed_in":["2.3.0"],"id":"GHSA-pw4v-gr34-2553","link":"https://osv.dev/vulnerability/GHSA-pw4v-gr34-2553","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2021-29431"],"details":"### Impact\n\nSydent can be induced to send HTTP GET requests to internal systems, due to lack of parameter validation or IP address blacklisting.\n\nIt is not possible to exfiltrate data or control request headers, but it might be possible to use the attack to perform an internal port enumeration.\n\n### Patches\n\nFixed in 9e57334, 8936925, 3d531ed, 0f00412\n\n### Workarounds\n\nA potential workaround would be to use a firewall to ensure that Sydent cannot reach internal HTTP resources.\n\n### For more information\n\nIf you have any questions or comments about this advisory, email us at security@matrix.org.","fixed_in":["2.3.0"],"id":"GHSA-9jhm-8m8c-c3f4","link":"https://osv.dev/vulnerability/GHSA-9jhm-8m8c-c3f4","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2021-29432"],"details":"### Impact\n\nA malicious user could abuse Sydent to send out arbitrary emails from the Sydent email address. This could be used to construct plausible phishing emails, for example.\n\n### Patches\n\nFixed in 4469d1d, 6b405a8, 65a6e91.\n\nNote that these patches include changes to the *default* email templates. If these templates have been locally modified, they must also be updated.\n\n### For more information\n\nIf you have any questions or comments about this advisory, email us at security@matrix.org.","fixed_in":["2.3.0"],"id":"GHSA-mh74-4m5g-fcjx","link":"https://osv.dev/vulnerability/GHSA-mh74-4m5g-fcjx","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-38686"],"details":"## Impact\n\nIf configured to send emails using TLS, Sydent does not verify SMTP servers' certificates. This makes  Sydent's emails vulnerable to interception via a [man-in-the-middle (MITM) attack](https://en.wikipedia.org/wiki/Man-in-the-middle_attack). Attackers with privileged access to the network can intercept room invitations and address confirmation emails.\n\nCVSS 3.1 overall score: 3.3 - [AV:A/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:N/CR:L/IR:L/AR:X/MAV:A/MAC:H/MPR:N/MUI:N/MS:C/MC:L/MI:L/MA:N](https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=AV:A/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:N/CR:L/IR:L/AR:X/MAV:A/MAC:H/MPR:N/MUI:N/MS:C/MC:L/MI:L/MA:N&version=3.1)\n\n_Reported by Martin Schobert, [Pentagrid AG](https://pentagrid.ch/)._\n\n### Details\n\nSydent can be configured to send emails over a TLS-encrypted socket by setting\n\n```yaml\nemail:\n    tlsmode: \"TLS\"  # or the legacy value \"SSL\"\n```\n\nin its config file. Alternatively it can be configured to use [Opportunistic TLS](https://en.wikipedia.org/wiki/Opportunistic_TLS) by setting\n\n```yaml\nemail:\n    tlsmode: \"STARTTLS\"\n```\n\nIn both situations, Sydent will encrypt its communication with the SMTP server when sending emails. **In affected versions, Sydent will not verify the destination server's certificate.**\n\n### Vulnerability \n\nSydent sends email for two purposes:\n- to inform a third party that they have been invited to a Matrix room by their email address; and\n- to verify that a given Matrix user controls an email address.\n\nTherefore, attackers capable of running a MITM attack can\n\n1. Intercept room invitations sent to an email address. The invitation includes \n   - the room ID and its avatar, and\n   - the inviter's username, displayname and their avatar, and\n   - credentials for a guest Matrix account on the inviter's homeserver.\n2. Intercept address ownership confirmation emails. This would allow the attacker to falsely claim ownership of the indented recipient's Matrix account, if that account was permitted to log in using an email address and no other authentication factors.\n\n\n### Patches\n\nThis is patched in [Sydent 2.5.6](https://github.com/matrix-org/sydent/releases/tag/v2.5.6), see PR https://github.com/matrix-org/sydent/pull/574.\n\nWhen patching, make sure that Sydent trusts the certificate of the server it is connecting to. This should happen automatically when using properly issued certificates. If you are using self-signed certificates, make sure to copy your Certification Authority certificate, or your self signed certificate if using only one, to the trust store of your operating system.\n\n### Workarounds\n\nOne can ensure Sydent's emails fail to send by setting the configured SMTP server to a loopback or [non-routable](https://datatracker.ietf.org/doc/html/rfc1918#section-3) address under your control which does not have a listening SMTP server. For example:\n\n```yaml\nemail:\n    smtphost: \"localhost\"  # Assuming there is no SMTP server listening on localhost\n```\n\n### References\n\n- https://github.com/matrix-org/sydent/pull/574 implements the fix.\n- https://github.com/matrix-org/sydent/releases/tag/v2.5.6 is the release including this fix.\n- https://docs.python.org/3/library/ssl.html?highlight=ssl#security-considerations details the best-practice advice on how to use the standard library `smtp` module safely.\n- https://peps.python.org/pep-0476/ (accepted) proposed enabling TLS certificate verification by default  in standard library HTTP clients.\n- https://github.com/python/cpython/issues/91826 discusses enabling TLS certificate verification by default in the Python standard library, for SMTP and other protocols.\n\n## For more information\n\nIf you have any questions or comments about this advisory, e-mail us at [security@matrix.org](mailto:security@matrix.org).","fixed_in":["2.5.6"],"id":"GHSA-p6hw-wm59-3g5g","link":"https://osv.dev/vulnerability/GHSA-p6hw-wm59-3g5g","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-38686","GHSA-p6hw-wm59-3g5g"],"details":"Sydent is an identity server for the Matrix communications protocol. Prior to version 2.5.6, if configured to send emails using TLS, Sydent does not verify SMTP servers' certificates. This makes  Sydent's emails vulnerable to interception via a man-in-the-middle (MITM) attack. Attackers with privileged access to the network can intercept room invitations and address confirmation emails. This is patched in Sydent 2.5.6. When patching, make sure that Sydent trusts the certificate of the server it is connecting to. This should happen automatically when using properly issued certificates. Those who use self-signed certificates should make sure to copy their Certification Authority certificate, or their self signed certificate if using only one, to the trust store of your operating system. As a workaround, one can ensure Sydent's emails fail to send by setting the configured SMTP server to a loopback or non-routable address under one's control which does not have a listening SMTP server.","fixed_in":["2.5.6"],"id":"PYSEC-2023-139","link":"https://osv.dev/vulnerability/PYSEC-2023-139","source":"osv","summary":null,"withdrawn":null}]},"2.2.0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":[],"description_content_type":"","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"matrix-sydent","package_url":"https://pypi.org/project/matrix-sydent/","platform":"","project_url":"https://pypi.org/project/matrix-sydent/","project_urls":null,"provides_extra":null,"release_url":"https://pypi.org/project/matrix-sydent/2.2.0/","requires_dist":null,"requires_python":"","summary":"Reference Matrix Identity Verification and Lookup Server","version":"2.2.0","yanked":false,"yanked_reason":null},"last_serial":22507962,"urls":[{"comment_text":"","digests":{"blake2b_256":"824e52f2821a33e7e2754fb8f6cd2d08a83ac9776ed7b8586525e9174ec95a3b","md5":"5e43dfdf1b06f44fcd1643b7a4cfa901","sha256":"f4e5927008b98d7827ac9b2117ada111a42d94610d46cc1b448c9f595148dcfe"},"downloads":-1,"filename":"matrix-sydent-2.2.0.tar.gz","has_sig":false,"md5_digest":"5e43dfdf1b06f44fcd1643b7a4cfa901","packagetype":"sdist","python_version":"source","requires_python":null,"size":83152,"upload_time":"2020-09-11T11:22:14","upload_time_iso_8601":"2020-09-11T11:22:14.921439Z","url":"https://files.pythonhosted.org/packages/82/4e/52f2821a33e7e2754fb8f6cd2d08a83ac9776ed7b8586525e9174ec95a3b/matrix-sydent-2.2.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2021-29432","GHSA-mh74-4m5g-fcjx"],"details":"Sydent is a reference matrix identity server. A malicious user could abuse Sydent to send out arbitrary emails from the Sydent email address. This could be used to construct plausible phishing emails, for example. This issue has been fixed in 4469d1d.","fixed_in":["2.3.0"],"id":"PYSEC-2021-23","link":"https://osv.dev/vulnerability/PYSEC-2021-23","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2021-29431","GHSA-9jhm-8m8c-c3f4"],"details":"Sydent is a reference Matrix identity server. Sydent can be induced to send HTTP GET requests to internal systems, due to lack of parameter validation or IP address blacklisting. It is not possible to exfiltrate data or control request headers, but it might be possible to use the attack to perform an internal port enumeration. This issue has been addressed in in 9e57334, 8936925, 3d531ed, 0f00412. A potential workaround would be to use a firewall to ensure that Sydent cannot reach internal HTTP resources.","fixed_in":["2.3.0"],"id":"PYSEC-2021-22","link":"https://osv.dev/vulnerability/PYSEC-2021-22","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2021-29433","GHSA-pw4v-gr34-2553"],"details":"### Impact Missing input validation of some parameters on the endpoints used to confirm third-party identifiers could cause excessive use of disk space and memory leading to resource exhaustion. ### Patches Fixed by 3175fd3. ### Workarounds There are no known workarounds. ### References n/a ### For more information If you have any questions or comments about this advisory, email us at security@matrix.org.","fixed_in":["2.3.0"],"id":"PYSEC-2021-24","link":"https://osv.dev/vulnerability/PYSEC-2021-24","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2021-29430","GHSA-wmg4-8cp2-hpg9"],"details":"Sydent is a reference Matrix identity server. Sydent does not limit the size of requests it receives from HTTP clients. A malicious user could send an HTTP request with a very large body, leading to memory exhaustion and denial of service. Sydent also does not limit response size for requests it makes to remote Matrix homeservers. A malicious homeserver could return a very large response, again leading to memory exhaustion and denial of service. This affects any server which accepts registration requests from untrusted clients. This issue has been patched by releases 89071a1, 0523511, f56eee3. As a workaround request sizes can be limited in an HTTP reverse-proxy. There are no known workarounds for the problem with overlarge responses.","fixed_in":["2.3.0"],"id":"PYSEC-2021-21","link":"https://osv.dev/vulnerability/PYSEC-2021-21","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2021-29430"],"details":"### Impact\n\nSydent does not limit the size of requests it receives from HTTP clients. A malicious user could send an HTTP request with a very large body, leading to disk space exhaustion and denial of service.\n\nSydent also does not limit response size for requests it makes to remote Matrix homeservers. A malicious homeserver could return a very large response, again leading to memory exhaustion and denial of service.\n\nThis affects any server which accepts registration requests from untrusted clients.\n\n### Patches\n\nPatched by 89071a1, 0523511, f56eee3.\n\n### Workarounds\n\nRequest sizes can be limited in an HTTP reverse-proxy.\n\nThere are no known workarounds for the problem with overlarge responses.\n\n### For more information\n\nIf you have any questions or comments about this advisory, email us at security@matrix.org.","fixed_in":["2.3.0"],"id":"GHSA-wmg4-8cp2-hpg9","link":"https://osv.dev/vulnerability/GHSA-wmg4-8cp2-hpg9","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2021-29433"],"details":"### Impact\n\nMissing input validation of some parameters on the endpoints used to confirm third-party identifiers could cause excessive use of disk space and memory leading to resource exhaustion.\n\n### Patches\n\nFixed by 3175fd3.\n\n### For more information\n\nIf you have any questions or comments about this advisory, email us at security@matrix.org.","fixed_in":["2.3.0"],"id":"GHSA-pw4v-gr34-2553","link":"https://osv.dev/vulnerability/GHSA-pw4v-gr34-2553","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2021-29431"],"details":"### Impact\n\nSydent can be induced to send HTTP GET requests to internal systems, due to lack of parameter validation or IP address blacklisting.\n\nIt is not possible to exfiltrate data or control request headers, but it might be possible to use the attack to perform an internal port enumeration.\n\n### Patches\n\nFixed in 9e57334, 8936925, 3d531ed, 0f00412\n\n### Workarounds\n\nA potential workaround would be to use a firewall to ensure that Sydent cannot reach internal HTTP resources.\n\n### For more information\n\nIf you have any questions or comments about this advisory, email us at security@matrix.org.","fixed_in":["2.3.0"],"id":"GHSA-9jhm-8m8c-c3f4","link":"https://osv.dev/vulnerability/GHSA-9jhm-8m8c-c3f4","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2021-29432"],"details":"### Impact\n\nA malicious user could abuse Sydent to send out arbitrary emails from the Sydent email address. This could be used to construct plausible phishing emails, for example.\n\n### Patches\n\nFixed in 4469d1d, 6b405a8, 65a6e91.\n\nNote that these patches include changes to the *default* email templates. If these templates have been locally modified, they must also be updated.\n\n### For more information\n\nIf you have any questions or comments about this advisory, email us at security@matrix.org.","fixed_in":["2.3.0"],"id":"GHSA-mh74-4m5g-fcjx","link":"https://osv.dev/vulnerability/GHSA-mh74-4m5g-fcjx","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-38686"],"details":"## Impact\n\nIf configured to send emails using TLS, Sydent does not verify SMTP servers' certificates. This makes  Sydent's emails vulnerable to interception via a [man-in-the-middle (MITM) attack](https://en.wikipedia.org/wiki/Man-in-the-middle_attack). Attackers with privileged access to the network can intercept room invitations and address confirmation emails.\n\nCVSS 3.1 overall score: 3.3 - [AV:A/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:N/CR:L/IR:L/AR:X/MAV:A/MAC:H/MPR:N/MUI:N/MS:C/MC:L/MI:L/MA:N](https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=AV:A/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:N/CR:L/IR:L/AR:X/MAV:A/MAC:H/MPR:N/MUI:N/MS:C/MC:L/MI:L/MA:N&version=3.1)\n\n_Reported by Martin Schobert, [Pentagrid AG](https://pentagrid.ch/)._\n\n### Details\n\nSydent can be configured to send emails over a TLS-encrypted socket by setting\n\n```yaml\nemail:\n    tlsmode: \"TLS\"  # or the legacy value \"SSL\"\n```\n\nin its config file. Alternatively it can be configured to use [Opportunistic TLS](https://en.wikipedia.org/wiki/Opportunistic_TLS) by setting\n\n```yaml\nemail:\n    tlsmode: \"STARTTLS\"\n```\n\nIn both situations, Sydent will encrypt its communication with the SMTP server when sending emails. **In affected versions, Sydent will not verify the destination server's certificate.**\n\n### Vulnerability \n\nSydent sends email for two purposes:\n- to inform a third party that they have been invited to a Matrix room by their email address; and\n- to verify that a given Matrix user controls an email address.\n\nTherefore, attackers capable of running a MITM attack can\n\n1. Intercept room invitations sent to an email address. The invitation includes \n   - the room ID and its avatar, and\n   - the inviter's username, displayname and their avatar, and\n   - credentials for a guest Matrix account on the inviter's homeserver.\n2. Intercept address ownership confirmation emails. This would allow the attacker to falsely claim ownership of the indented recipient's Matrix account, if that account was permitted to log in using an email address and no other authentication factors.\n\n\n### Patches\n\nThis is patched in [Sydent 2.5.6](https://github.com/matrix-org/sydent/releases/tag/v2.5.6), see PR https://github.com/matrix-org/sydent/pull/574.\n\nWhen patching, make sure that Sydent trusts the certificate of the server it is connecting to. This should happen automatically when using properly issued certificates. If you are using self-signed certificates, make sure to copy your Certification Authority certificate, or your self signed certificate if using only one, to the trust store of your operating system.\n\n### Workarounds\n\nOne can ensure Sydent's emails fail to send by setting the configured SMTP server to a loopback or [non-routable](https://datatracker.ietf.org/doc/html/rfc1918#section-3) address under your control which does not have a listening SMTP server. For example:\n\n```yaml\nemail:\n    smtphost: \"localhost\"  # Assuming there is no SMTP server listening on localhost\n```\n\n### References\n\n- https://github.com/matrix-org/sydent/pull/574 implements the fix.\n- https://github.com/matrix-org/sydent/releases/tag/v2.5.6 is the release including this fix.\n- https://docs.python.org/3/library/ssl.html?highlight=ssl#security-considerations details the best-practice advice on how to use the standard library `smtp` module safely.\n- https://peps.python.org/pep-0476/ (accepted) proposed enabling TLS certificate verification by default  in standard library HTTP clients.\n- https://github.com/python/cpython/issues/91826 discusses enabling TLS certificate verification by default in the Python standard library, for SMTP and other protocols.\n\n## For more information\n\nIf you have any questions or comments about this advisory, e-mail us at [security@matrix.org](mailto:security@matrix.org).","fixed_in":["2.5.6"],"id":"GHSA-p6hw-wm59-3g5g","link":"https://osv.dev/vulnerability/GHSA-p6hw-wm59-3g5g","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-38686","GHSA-p6hw-wm59-3g5g"],"details":"Sydent is an identity server for the Matrix communications protocol. Prior to version 2.5.6, if configured to send emails using TLS, Sydent does not verify SMTP servers' certificates. This makes  Sydent's emails vulnerable to interception via a man-in-the-middle (MITM) attack. Attackers with privileged access to the network can intercept room invitations and address confirmation emails. This is patched in Sydent 2.5.6. When patching, make sure that Sydent trusts the certificate of the server it is connecting to. This should happen automatically when using properly issued certificates. Those who use self-signed certificates should make sure to copy their Certification Authority certificate, or their self signed certificate if using only one, to the trust store of your operating system. As a workaround, one can ensure Sydent's emails fail to send by setting the configured SMTP server to a loopback or non-routable address under one's control which does not have a listening SMTP server.","fixed_in":["2.5.6"],"id":"PYSEC-2023-139","link":"https://osv.dev/vulnerability/PYSEC-2023-139","source":"osv","summary":null,"withdrawn":null}]},"2.3.0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":[],"description_content_type":"","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"matrix-sydent","package_url":"https://pypi.org/project/matrix-sydent/","platform":"","project_url":"https://pypi.org/project/matrix-sydent/","project_urls":null,"provides_extra":null,"release_url":"https://pypi.org/project/matrix-sydent/2.3.0/","requires_dist":null,"requires_python":"","summary":"Reference Matrix Identity Verification and Lookup Server","version":"2.3.0","yanked":false,"yanked_reason":null},"last_serial":22507962,"urls":[{"comment_text":"","digests":{"blake2b_256":"020012f86df1a906f9762fc55b0b11f85346991240da2fe70a17d593a740d96d","md5":"b09dde79e1e7b8f785fca154d4de20de","sha256":"9b4f65641fb066bbda0b7db08c7b5dd39c17524950247361db7813668684e9a5"},"downloads":-1,"filename":"matrix-sydent-2.3.0.tar.gz","has_sig":false,"md5_digest":"b09dde79e1e7b8f785fca154d4de20de","packagetype":"sdist","python_version":"source","requires_python":null,"size":93234,"upload_time":"2021-04-15T11:10:44","upload_time_iso_8601":"2021-04-15T11:10:44.374416Z","url":"https://files.pythonhosted.org/packages/02/00/12f86df1a906f9762fc55b0b11f85346991240da2fe70a17d593a740d96d/matrix-sydent-2.3.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-38686"],"details":"## Impact\n\nIf configured to send emails using TLS, Sydent does not verify SMTP servers' certificates. This makes  Sydent's emails vulnerable to interception via a [man-in-the-middle (MITM) attack](https://en.wikipedia.org/wiki/Man-in-the-middle_attack). Attackers with privileged access to the network can intercept room invitations and address confirmation emails.\n\nCVSS 3.1 overall score: 3.3 - [AV:A/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:N/CR:L/IR:L/AR:X/MAV:A/MAC:H/MPR:N/MUI:N/MS:C/MC:L/MI:L/MA:N](https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=AV:A/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:N/CR:L/IR:L/AR:X/MAV:A/MAC:H/MPR:N/MUI:N/MS:C/MC:L/MI:L/MA:N&version=3.1)\n\n_Reported by Martin Schobert, [Pentagrid AG](https://pentagrid.ch/)._\n\n### Details\n\nSydent can be configured to send emails over a TLS-encrypted socket by setting\n\n```yaml\nemail:\n    tlsmode: \"TLS\"  # or the legacy value \"SSL\"\n```\n\nin its config file. Alternatively it can be configured to use [Opportunistic TLS](https://en.wikipedia.org/wiki/Opportunistic_TLS) by setting\n\n```yaml\nemail:\n    tlsmode: \"STARTTLS\"\n```\n\nIn both situations, Sydent will encrypt its communication with the SMTP server when sending emails. **In affected versions, Sydent will not verify the destination server's certificate.**\n\n### Vulnerability \n\nSydent sends email for two purposes:\n- to inform a third party that they have been invited to a Matrix room by their email address; and\n- to verify that a given Matrix user controls an email address.\n\nTherefore, attackers capable of running a MITM attack can\n\n1. Intercept room invitations sent to an email address. The invitation includes \n   - the room ID and its avatar, and\n   - the inviter's username, displayname and their avatar, and\n   - credentials for a guest Matrix account on the inviter's homeserver.\n2. Intercept address ownership confirmation emails. This would allow the attacker to falsely claim ownership of the indented recipient's Matrix account, if that account was permitted to log in using an email address and no other authentication factors.\n\n\n### Patches\n\nThis is patched in [Sydent 2.5.6](https://github.com/matrix-org/sydent/releases/tag/v2.5.6), see PR https://github.com/matrix-org/sydent/pull/574.\n\nWhen patching, make sure that Sydent trusts the certificate of the server it is connecting to. This should happen automatically when using properly issued certificates. If you are using self-signed certificates, make sure to copy your Certification Authority certificate, or your self signed certificate if using only one, to the trust store of your operating system.\n\n### Workarounds\n\nOne can ensure Sydent's emails fail to send by setting the configured SMTP server to a loopback or [non-routable](https://datatracker.ietf.org/doc/html/rfc1918#section-3) address under your control which does not have a listening SMTP server. For example:\n\n```yaml\nemail:\n    smtphost: \"localhost\"  # Assuming there is no SMTP server listening on localhost\n```\n\n### References\n\n- https://github.com/matrix-org/sydent/pull/574 implements the fix.\n- https://github.com/matrix-org/sydent/releases/tag/v2.5.6 is the release including this fix.\n- https://docs.python.org/3/library/ssl.html?highlight=ssl#security-considerations details the best-practice advice on how to use the standard library `smtp` module safely.\n- https://peps.python.org/pep-0476/ (accepted) proposed enabling TLS certificate verification by default  in standard library HTTP clients.\n- https://github.com/python/cpython/issues/91826 discusses enabling TLS certificate verification by default in the Python standard library, for SMTP and other protocols.\n\n## For more information\n\nIf you have any questions or comments about this advisory, e-mail us at [security@matrix.org](mailto:security@matrix.org).","fixed_in":["2.5.6"],"id":"GHSA-p6hw-wm59-3g5g","link":"https://osv.dev/vulnerability/GHSA-p6hw-wm59-3g5g","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-38686","GHSA-p6hw-wm59-3g5g"],"details":"Sydent is an identity server for the Matrix communications protocol. Prior to version 2.5.6, if configured to send emails using TLS, Sydent does not verify SMTP servers' certificates. This makes  Sydent's emails vulnerable to interception via a man-in-the-middle (MITM) attack. Attackers with privileged access to the network can intercept room invitations and address confirmation emails. This is patched in Sydent 2.5.6. When patching, make sure that Sydent trusts the certificate of the server it is connecting to. This should happen automatically when using properly issued certificates. Those who use self-signed certificates should make sure to copy their Certification Authority certificate, or their self signed certificate if using only one, to the trust store of your operating system. As a workaround, one can ensure Sydent's emails fail to send by setting the configured SMTP server to a loopback or non-routable address under one's control which does not have a listening SMTP server.","fixed_in":["2.5.6"],"id":"PYSEC-2023-139","link":"https://osv.dev/vulnerability/PYSEC-2023-139","source":"osv","summary":null,"withdrawn":null}]},"2.4.0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":[],"description_content_type":"","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"matrix-sydent","package_url":"https://pypi.org/project/matrix-sydent/","platform":"","project_url":"https://pypi.org/project/matrix-sydent/","project_urls":null,"provides_extra":null,"release_url":"https://pypi.org/project/matrix-sydent/2.4.0/","requires_dist":null,"requires_python":">=3.6","summary":"Reference Matrix Identity Verification and Lookup Server","version":"2.4.0","yanked":false,"yanked_reason":null},"last_serial":22507962,"urls":[{"comment_text":"","digests":{"blake2b_256":"50456ec08c5e58df65ee166bc40337000f389bd4d237d075a6cca7ef0af416c9","md5":"88b0b54c6ce61432c644faa041b4e7f4","sha256":"03e0ea530802dd49d9aa7efbd6cb3ad4752719da22bc50045eeee51251be1ce1"},"downloads":-1,"filename":"matrix-sydent-2.4.0.tar.gz","has_sig":false,"md5_digest":"88b0b54c6ce61432c644faa041b4e7f4","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":99102,"upload_time":"2021-09-09T13:17:09","upload_time_iso_8601":"2021-09-09T13:17:09.650148Z","url":"https://files.pythonhosted.org/packages/50/45/6ec08c5e58df65ee166bc40337000f389bd4d237d075a6cca7ef0af416c9/matrix-sydent-2.4.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-38686"],"details":"## Impact\n\nIf configured to send emails using TLS, Sydent does not verify SMTP servers' certificates. This makes  Sydent's emails vulnerable to interception via a [man-in-the-middle (MITM) attack](https://en.wikipedia.org/wiki/Man-in-the-middle_attack). Attackers with privileged access to the network can intercept room invitations and address confirmation emails.\n\nCVSS 3.1 overall score: 3.3 - [AV:A/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:N/CR:L/IR:L/AR:X/MAV:A/MAC:H/MPR:N/MUI:N/MS:C/MC:L/MI:L/MA:N](https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=AV:A/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:N/CR:L/IR:L/AR:X/MAV:A/MAC:H/MPR:N/MUI:N/MS:C/MC:L/MI:L/MA:N&version=3.1)\n\n_Reported by Martin Schobert, [Pentagrid AG](https://pentagrid.ch/)._\n\n### Details\n\nSydent can be configured to send emails over a TLS-encrypted socket by setting\n\n```yaml\nemail:\n    tlsmode: \"TLS\"  # or the legacy value \"SSL\"\n```\n\nin its config file. Alternatively it can be configured to use [Opportunistic TLS](https://en.wikipedia.org/wiki/Opportunistic_TLS) by setting\n\n```yaml\nemail:\n    tlsmode: \"STARTTLS\"\n```\n\nIn both situations, Sydent will encrypt its communication with the SMTP server when sending emails. **In affected versions, Sydent will not verify the destination server's certificate.**\n\n### Vulnerability \n\nSydent sends email for two purposes:\n- to inform a third party that they have been invited to a Matrix room by their email address; and\n- to verify that a given Matrix user controls an email address.\n\nTherefore, attackers capable of running a MITM attack can\n\n1. Intercept room invitations sent to an email address. The invitation includes \n   - the room ID and its avatar, and\n   - the inviter's username, displayname and their avatar, and\n   - credentials for a guest Matrix account on the inviter's homeserver.\n2. Intercept address ownership confirmation emails. This would allow the attacker to falsely claim ownership of the indented recipient's Matrix account, if that account was permitted to log in using an email address and no other authentication factors.\n\n\n### Patches\n\nThis is patched in [Sydent 2.5.6](https://github.com/matrix-org/sydent/releases/tag/v2.5.6), see PR https://github.com/matrix-org/sydent/pull/574.\n\nWhen patching, make sure that Sydent trusts the certificate of the server it is connecting to. This should happen automatically when using properly issued certificates. If you are using self-signed certificates, make sure to copy your Certification Authority certificate, or your self signed certificate if using only one, to the trust store of your operating system.\n\n### Workarounds\n\nOne can ensure Sydent's emails fail to send by setting the configured SMTP server to a loopback or [non-routable](https://datatracker.ietf.org/doc/html/rfc1918#section-3) address under your control which does not have a listening SMTP server. For example:\n\n```yaml\nemail:\n    smtphost: \"localhost\"  # Assuming there is no SMTP server listening on localhost\n```\n\n### References\n\n- https://github.com/matrix-org/sydent/pull/574 implements the fix.\n- https://github.com/matrix-org/sydent/releases/tag/v2.5.6 is the release including this fix.\n- https://docs.python.org/3/library/ssl.html?highlight=ssl#security-considerations details the best-practice advice on how to use the standard library `smtp` module safely.\n- https://peps.python.org/pep-0476/ (accepted) proposed enabling TLS certificate verification by default  in standard library HTTP clients.\n- https://github.com/python/cpython/issues/91826 discusses enabling TLS certificate verification by default in the Python standard library, for SMTP and other protocols.\n\n## For more information\n\nIf you have any questions or comments about this advisory, e-mail us at [security@matrix.org](mailto:security@matrix.org).","fixed_in":["2.5.6"],"id":"GHSA-p6hw-wm59-3g5g","link":"https://osv.dev/vulnerability/GHSA-p6hw-wm59-3g5g","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-38686","GHSA-p6hw-wm59-3g5g"],"details":"Sydent is an identity server for the Matrix communications protocol. Prior to version 2.5.6, if configured to send emails using TLS, Sydent does not verify SMTP servers' certificates. This makes  Sydent's emails vulnerable to interception via a man-in-the-middle (MITM) attack. Attackers with privileged access to the network can intercept room invitations and address confirmation emails. This is patched in Sydent 2.5.6. When patching, make sure that Sydent trusts the certificate of the server it is connecting to. This should happen automatically when using properly issued certificates. Those who use self-signed certificates should make sure to copy their Certification Authority certificate, or their self signed certificate if using only one, to the trust store of your operating system. As a workaround, one can ensure Sydent's emails fail to send by setting the configured SMTP server to a loopback or non-routable address under one's control which does not have a listening SMTP server.","fixed_in":["2.5.6"],"id":"PYSEC-2023-139","link":"https://osv.dev/vulnerability/PYSEC-2023-139","source":"osv","summary":null,"withdrawn":null}]},"2.4.1":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":[],"description_content_type":"","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"matrix-sydent","package_url":"https://pypi.org/project/matrix-sydent/","platform":"","project_url":"https://pypi.org/project/matrix-sydent/","project_urls":null,"provides_extra":null,"release_url":"https://pypi.org/project/matrix-sydent/2.4.1/","requires_dist":null,"requires_python":">=3.6","summary":"Reference Matrix Identity Verification and Lookup Server","version":"2.4.1","yanked":false,"yanked_reason":null},"last_serial":22507962,"urls":[{"comment_text":"","digests":{"blake2b_256":"e32585a4d932a6531e00ebaa0307dd8ea343da9661eb489c3877991afee67eda","md5":"a5f9f720ffe958f4ed804b41d21eda4b","sha256":"5028b4af781fa3251b21ab50d289c8427786d55810f42841ee266c9d2c768b15"},"downloads":-1,"filename":"matrix-sydent-2.4.1.tar.gz","has_sig":false,"md5_digest":"a5f9f720ffe958f4ed804b41d21eda4b","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":99469,"upload_time":"2021-09-10T10:10:54","upload_time_iso_8601":"2021-09-10T10:10:54.652144Z","url":"https://files.pythonhosted.org/packages/e3/25/85a4d932a6531e00ebaa0307dd8ea343da9661eb489c3877991afee67eda/matrix-sydent-2.4.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-38686"],"details":"## Impact\n\nIf configured to send emails using TLS, Sydent does not verify SMTP servers' certificates. This makes  Sydent's emails vulnerable to interception via a [man-in-the-middle (MITM) attack](https://en.wikipedia.org/wiki/Man-in-the-middle_attack). Attackers with privileged access to the network can intercept room invitations and address confirmation emails.\n\nCVSS 3.1 overall score: 3.3 - [AV:A/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:N/CR:L/IR:L/AR:X/MAV:A/MAC:H/MPR:N/MUI:N/MS:C/MC:L/MI:L/MA:N](https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=AV:A/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:N/CR:L/IR:L/AR:X/MAV:A/MAC:H/MPR:N/MUI:N/MS:C/MC:L/MI:L/MA:N&version=3.1)\n\n_Reported by Martin Schobert, [Pentagrid AG](https://pentagrid.ch/)._\n\n### Details\n\nSydent can be configured to send emails over a TLS-encrypted socket by setting\n\n```yaml\nemail:\n    tlsmode: \"TLS\"  # or the legacy value \"SSL\"\n```\n\nin its config file. Alternatively it can be configured to use [Opportunistic TLS](https://en.wikipedia.org/wiki/Opportunistic_TLS) by setting\n\n```yaml\nemail:\n    tlsmode: \"STARTTLS\"\n```\n\nIn both situations, Sydent will encrypt its communication with the SMTP server when sending emails. **In affected versions, Sydent will not verify the destination server's certificate.**\n\n### Vulnerability \n\nSydent sends email for two purposes:\n- to inform a third party that they have been invited to a Matrix room by their email address; and\n- to verify that a given Matrix user controls an email address.\n\nTherefore, attackers capable of running a MITM attack can\n\n1. Intercept room invitations sent to an email address. The invitation includes \n   - the room ID and its avatar, and\n   - the inviter's username, displayname and their avatar, and\n   - credentials for a guest Matrix account on the inviter's homeserver.\n2. Intercept address ownership confirmation emails. This would allow the attacker to falsely claim ownership of the indented recipient's Matrix account, if that account was permitted to log in using an email address and no other authentication factors.\n\n\n### Patches\n\nThis is patched in [Sydent 2.5.6](https://github.com/matrix-org/sydent/releases/tag/v2.5.6), see PR https://github.com/matrix-org/sydent/pull/574.\n\nWhen patching, make sure that Sydent trusts the certificate of the server it is connecting to. This should happen automatically when using properly issued certificates. If you are using self-signed certificates, make sure to copy your Certification Authority certificate, or your self signed certificate if using only one, to the trust store of your operating system.\n\n### Workarounds\n\nOne can ensure Sydent's emails fail to send by setting the configured SMTP server to a loopback or [non-routable](https://datatracker.ietf.org/doc/html/rfc1918#section-3) address under your control which does not have a listening SMTP server. For example:\n\n```yaml\nemail:\n    smtphost: \"localhost\"  # Assuming there is no SMTP server listening on localhost\n```\n\n### References\n\n- https://github.com/matrix-org/sydent/pull/574 implements the fix.\n- https://github.com/matrix-org/sydent/releases/tag/v2.5.6 is the release including this fix.\n- https://docs.python.org/3/library/ssl.html?highlight=ssl#security-considerations details the best-practice advice on how to use the standard library `smtp` module safely.\n- https://peps.python.org/pep-0476/ (accepted) proposed enabling TLS certificate verification by default  in standard library HTTP clients.\n- https://github.com/python/cpython/issues/91826 discusses enabling TLS certificate verification by default in the Python standard library, for SMTP and other protocols.\n\n## For more information\n\nIf you have any questions or comments about this advisory, e-mail us at [security@matrix.org](mailto:security@matrix.org).","fixed_in":["2.5.6"],"id":"GHSA-p6hw-wm59-3g5g","link":"https://osv.dev/vulnerability/GHSA-p6hw-wm59-3g5g","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-38686","GHSA-p6hw-wm59-3g5g"],"details":"Sydent is an identity server for the Matrix communications protocol. Prior to version 2.5.6, if configured to send emails using TLS, Sydent does not verify SMTP servers' certificates. This makes  Sydent's emails vulnerable to interception via a man-in-the-middle (MITM) attack. Attackers with privileged access to the network can intercept room invitations and address confirmation emails. This is patched in Sydent 2.5.6. When patching, make sure that Sydent trusts the certificate of the server it is connecting to. This should happen automatically when using properly issued certificates. Those who use self-signed certificates should make sure to copy their Certification Authority certificate, or their self signed certificate if using only one, to the trust store of your operating system. As a workaround, one can ensure Sydent's emails fail to send by setting the configured SMTP server to a loopback or non-routable address under one's control which does not have a listening SMTP server.","fixed_in":["2.5.6"],"id":"PYSEC-2023-139","link":"https://osv.dev/vulnerability/PYSEC-2023-139","source":"osv","summary":null,"withdrawn":null}]},"2.4.2":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":[],"description_content_type":"","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"matrix-sydent","package_url":"https://pypi.org/project/matrix-sydent/","platform":"","project_url":"https://pypi.org/project/matrix-sydent/","project_urls":null,"provides_extra":null,"release_url":"https://pypi.org/project/matrix-sydent/2.4.2/","requires_dist":null,"requires_python":">=3.6","summary":"Reference Matrix Identity Verification and Lookup Server","version":"2.4.2","yanked":false,"yanked_reason":null},"last_serial":22507962,"urls":[{"comment_text":"","digests":{"blake2b_256":"23cc428b24d17f642b319c05706e468aef6bfd35f63b4423afde222e1d484e26","md5":"f1a8befe104e0eaf8aa9eb8176eacb8f","sha256":"0eb182dd03a5ea2c353b86df8e9ac24f1785ade69fff32c5ef783eb2d2b860d8"},"downloads":-1,"filename":"matrix-sydent-2.4.2.tar.gz","has_sig":false,"md5_digest":"f1a8befe104e0eaf8aa9eb8176eacb8f","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":99451,"upload_time":"2021-09-13T14:26:10","upload_time_iso_8601":"2021-09-13T14:26:10.278328Z","url":"https://files.pythonhosted.org/packages/23/cc/428b24d17f642b319c05706e468aef6bfd35f63b4423afde222e1d484e26/matrix-sydent-2.4.2.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-38686"],"details":"## Impact\n\nIf configured to send emails using TLS, Sydent does not verify SMTP servers' certificates. This makes  Sydent's emails vulnerable to interception via a [man-in-the-middle (MITM) attack](https://en.wikipedia.org/wiki/Man-in-the-middle_attack). Attackers with privileged access to the network can intercept room invitations and address confirmation emails.\n\nCVSS 3.1 overall score: 3.3 - [AV:A/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:N/CR:L/IR:L/AR:X/MAV:A/MAC:H/MPR:N/MUI:N/MS:C/MC:L/MI:L/MA:N](https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=AV:A/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:N/CR:L/IR:L/AR:X/MAV:A/MAC:H/MPR:N/MUI:N/MS:C/MC:L/MI:L/MA:N&version=3.1)\n\n_Reported by Martin Schobert, [Pentagrid AG](https://pentagrid.ch/)._\n\n### Details\n\nSydent can be configured to send emails over a TLS-encrypted socket by setting\n\n```yaml\nemail:\n    tlsmode: \"TLS\"  # or the legacy value \"SSL\"\n```\n\nin its config file. Alternatively it can be configured to use [Opportunistic TLS](https://en.wikipedia.org/wiki/Opportunistic_TLS) by setting\n\n```yaml\nemail:\n    tlsmode: \"STARTTLS\"\n```\n\nIn both situations, Sydent will encrypt its communication with the SMTP server when sending emails. **In affected versions, Sydent will not verify the destination server's certificate.**\n\n### Vulnerability \n\nSydent sends email for two purposes:\n- to inform a third party that they have been invited to a Matrix room by their email address; and\n- to verify that a given Matrix user controls an email address.\n\nTherefore, attackers capable of running a MITM attack can\n\n1. Intercept room invitations sent to an email address. The invitation includes \n   - the room ID and its avatar, and\n   - the inviter's username, displayname and their avatar, and\n   - credentials for a guest Matrix account on the inviter's homeserver.\n2. Intercept address ownership confirmation emails. This would allow the attacker to falsely claim ownership of the indented recipient's Matrix account, if that account was permitted to log in using an email address and no other authentication factors.\n\n\n### Patches\n\nThis is patched in [Sydent 2.5.6](https://github.com/matrix-org/sydent/releases/tag/v2.5.6), see PR https://github.com/matrix-org/sydent/pull/574.\n\nWhen patching, make sure that Sydent trusts the certificate of the server it is connecting to. This should happen automatically when using properly issued certificates. If you are using self-signed certificates, make sure to copy your Certification Authority certificate, or your self signed certificate if using only one, to the trust store of your operating system.\n\n### Workarounds\n\nOne can ensure Sydent's emails fail to send by setting the configured SMTP server to a loopback or [non-routable](https://datatracker.ietf.org/doc/html/rfc1918#section-3) address under your control which does not have a listening SMTP server. For example:\n\n```yaml\nemail:\n    smtphost: \"localhost\"  # Assuming there is no SMTP server listening on localhost\n```\n\n### References\n\n- https://github.com/matrix-org/sydent/pull/574 implements the fix.\n- https://github.com/matrix-org/sydent/releases/tag/v2.5.6 is the release including this fix.\n- https://docs.python.org/3/library/ssl.html?highlight=ssl#security-considerations details the best-practice advice on how to use the standard library `smtp` module safely.\n- https://peps.python.org/pep-0476/ (accepted) proposed enabling TLS certificate verification by default  in standard library HTTP clients.\n- https://github.com/python/cpython/issues/91826 discusses enabling TLS certificate verification by default in the Python standard library, for SMTP and other protocols.\n\n## For more information\n\nIf you have any questions or comments about this advisory, e-mail us at [security@matrix.org](mailto:security@matrix.org).","fixed_in":["2.5.6"],"id":"GHSA-p6hw-wm59-3g5g","link":"https://osv.dev/vulnerability/GHSA-p6hw-wm59-3g5g","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-38686","GHSA-p6hw-wm59-3g5g"],"details":"Sydent is an identity server for the Matrix communications protocol. Prior to version 2.5.6, if configured to send emails using TLS, Sydent does not verify SMTP servers' certificates. This makes  Sydent's emails vulnerable to interception via a man-in-the-middle (MITM) attack. Attackers with privileged access to the network can intercept room invitations and address confirmation emails. This is patched in Sydent 2.5.6. When patching, make sure that Sydent trusts the certificate of the server it is connecting to. This should happen automatically when using properly issued certificates. Those who use self-signed certificates should make sure to copy their Certification Authority certificate, or their self signed certificate if using only one, to the trust store of your operating system. As a workaround, one can ensure Sydent's emails fail to send by setting the configured SMTP server to a loopback or non-routable address under one's control which does not have a listening SMTP server.","fixed_in":["2.5.6"],"id":"PYSEC-2023-139","link":"https://osv.dev/vulnerability/PYSEC-2023-139","source":"osv","summary":null,"withdrawn":null}]},"2.4.3":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":[],"description_content_type":"","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"matrix-sydent","package_url":"https://pypi.org/project/matrix-sydent/","platform":"","project_url":"https://pypi.org/project/matrix-sydent/","project_urls":null,"provides_extra":null,"release_url":"https://pypi.org/project/matrix-sydent/2.4.3/","requires_dist":null,"requires_python":">=3.6","summary":"Reference Matrix Identity Verification and Lookup Server","version":"2.4.3","yanked":false,"yanked_reason":null},"last_serial":22507962,"urls":[{"comment_text":"","digests":{"blake2b_256":"9cf98f1cdffa796ea15bff4f6f91df49e0e516b42a490a8620a5d52a234f0e29","md5":"84bd77651409f88b7cea15b5b4a7f3ca","sha256":"cf893f152d3707e314fcd9800ea46eeb14b3d7c166fcbf1693d2bf041f18726e"},"downloads":-1,"filename":"matrix-sydent-2.4.3.tar.gz","has_sig":false,"md5_digest":"84bd77651409f88b7cea15b5b4a7f3ca","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":100720,"upload_time":"2021-09-14T13:22:25","upload_time_iso_8601":"2021-09-14T13:22:25.997512Z","url":"https://files.pythonhosted.org/packages/9c/f9/8f1cdffa796ea15bff4f6f91df49e0e516b42a490a8620a5d52a234f0e29/matrix-sydent-2.4.3.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-38686"],"details":"## Impact\n\nIf configured to send emails using TLS, Sydent does not verify SMTP servers' certificates. This makes  Sydent's emails vulnerable to interception via a [man-in-the-middle (MITM) attack](https://en.wikipedia.org/wiki/Man-in-the-middle_attack). Attackers with privileged access to the network can intercept room invitations and address confirmation emails.\n\nCVSS 3.1 overall score: 3.3 - [AV:A/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:N/CR:L/IR:L/AR:X/MAV:A/MAC:H/MPR:N/MUI:N/MS:C/MC:L/MI:L/MA:N](https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=AV:A/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:N/CR:L/IR:L/AR:X/MAV:A/MAC:H/MPR:N/MUI:N/MS:C/MC:L/MI:L/MA:N&version=3.1)\n\n_Reported by Martin Schobert, [Pentagrid AG](https://pentagrid.ch/)._\n\n### Details\n\nSydent can be configured to send emails over a TLS-encrypted socket by setting\n\n```yaml\nemail:\n    tlsmode: \"TLS\"  # or the legacy value \"SSL\"\n```\n\nin its config file. Alternatively it can be configured to use [Opportunistic TLS](https://en.wikipedia.org/wiki/Opportunistic_TLS) by setting\n\n```yaml\nemail:\n    tlsmode: \"STARTTLS\"\n```\n\nIn both situations, Sydent will encrypt its communication with the SMTP server when sending emails. **In affected versions, Sydent will not verify the destination server's certificate.**\n\n### Vulnerability \n\nSydent sends email for two purposes:\n- to inform a third party that they have been invited to a Matrix room by their email address; and\n- to verify that a given Matrix user controls an email address.\n\nTherefore, attackers capable of running a MITM attack can\n\n1. Intercept room invitations sent to an email address. The invitation includes \n   - the room ID and its avatar, and\n   - the inviter's username, displayname and their avatar, and\n   - credentials for a guest Matrix account on the inviter's homeserver.\n2. Intercept address ownership confirmation emails. This would allow the attacker to falsely claim ownership of the indented recipient's Matrix account, if that account was permitted to log in using an email address and no other authentication factors.\n\n\n### Patches\n\nThis is patched in [Sydent 2.5.6](https://github.com/matrix-org/sydent/releases/tag/v2.5.6), see PR https://github.com/matrix-org/sydent/pull/574.\n\nWhen patching, make sure that Sydent trusts the certificate of the server it is connecting to. This should happen automatically when using properly issued certificates. If you are using self-signed certificates, make sure to copy your Certification Authority certificate, or your self signed certificate if using only one, to the trust store of your operating system.\n\n### Workarounds\n\nOne can ensure Sydent's emails fail to send by setting the configured SMTP server to a loopback or [non-routable](https://datatracker.ietf.org/doc/html/rfc1918#section-3) address under your control which does not have a listening SMTP server. For example:\n\n```yaml\nemail:\n    smtphost: \"localhost\"  # Assuming there is no SMTP server listening on localhost\n```\n\n### References\n\n- https://github.com/matrix-org/sydent/pull/574 implements the fix.\n- https://github.com/matrix-org/sydent/releases/tag/v2.5.6 is the release including this fix.\n- https://docs.python.org/3/library/ssl.html?highlight=ssl#security-considerations details the best-practice advice on how to use the standard library `smtp` module safely.\n- https://peps.python.org/pep-0476/ (accepted) proposed enabling TLS certificate verification by default  in standard library HTTP clients.\n- https://github.com/python/cpython/issues/91826 discusses enabling TLS certificate verification by default in the Python standard library, for SMTP and other protocols.\n\n## For more information\n\nIf you have any questions or comments about this advisory, e-mail us at [security@matrix.org](mailto:security@matrix.org).","fixed_in":["2.5.6"],"id":"GHSA-p6hw-wm59-3g5g","link":"https://osv.dev/vulnerability/GHSA-p6hw-wm59-3g5g","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-38686","GHSA-p6hw-wm59-3g5g"],"details":"Sydent is an identity server for the Matrix communications protocol. Prior to version 2.5.6, if configured to send emails using TLS, Sydent does not verify SMTP servers' certificates. This makes  Sydent's emails vulnerable to interception via a man-in-the-middle (MITM) attack. Attackers with privileged access to the network can intercept room invitations and address confirmation emails. This is patched in Sydent 2.5.6. When patching, make sure that Sydent trusts the certificate of the server it is connecting to. This should happen automatically when using properly issued certificates. Those who use self-signed certificates should make sure to copy their Certification Authority certificate, or their self signed certificate if using only one, to the trust store of your operating system. As a workaround, one can ensure Sydent's emails fail to send by setting the configured SMTP server to a loopback or non-routable address under one's control which does not have a listening SMTP server.","fixed_in":["2.5.6"],"id":"PYSEC-2023-139","link":"https://osv.dev/vulnerability/PYSEC-2023-139","source":"osv","summary":null,"withdrawn":null}]},"2.4.4":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":[],"description_content_type":"","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"matrix-sydent","package_url":"https://pypi.org/project/matrix-sydent/","platform":"","project_url":"https://pypi.org/project/matrix-sydent/","project_urls":null,"provides_extra":null,"release_url":"https://pypi.org/project/matrix-sydent/2.4.4/","requires_dist":null,"requires_python":">=3.6","summary":"Reference Matrix Identity Verification and Lookup Server","version":"2.4.4","yanked":false,"yanked_reason":null},"last_serial":22507962,"urls":[{"comment_text":"","digests":{"blake2b_256":"631b4668795238eca90cb3072b9dac541b9a02819f4e9bc83693e27f1b9c484b","md5":"205ef499a07fc28d5c75e9a40d9ddf7e","sha256":"7857f6f5308bc729548ffb04c987212b443d2768c7a948eb69688fb27155ae13"},"downloads":-1,"filename":"matrix-sydent-2.4.4.tar.gz","has_sig":false,"md5_digest":"205ef499a07fc28d5c75e9a40d9ddf7e","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":99827,"upload_time":"2021-10-08T11:18:48","upload_time_iso_8601":"2021-10-08T11:18:48.016909Z","url":"https://files.pythonhosted.org/packages/63/1b/4668795238eca90cb3072b9dac541b9a02819f4e9bc83693e27f1b9c484b/matrix-sydent-2.4.4.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-38686"],"details":"## Impact\n\nIf configured to send emails using TLS, Sydent does not verify SMTP servers' certificates. This makes  Sydent's emails vulnerable to interception via a [man-in-the-middle (MITM) attack](https://en.wikipedia.org/wiki/Man-in-the-middle_attack). Attackers with privileged access to the network can intercept room invitations and address confirmation emails.\n\nCVSS 3.1 overall score: 3.3 - [AV:A/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:N/CR:L/IR:L/AR:X/MAV:A/MAC:H/MPR:N/MUI:N/MS:C/MC:L/MI:L/MA:N](https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=AV:A/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:N/CR:L/IR:L/AR:X/MAV:A/MAC:H/MPR:N/MUI:N/MS:C/MC:L/MI:L/MA:N&version=3.1)\n\n_Reported by Martin Schobert, [Pentagrid AG](https://pentagrid.ch/)._\n\n### Details\n\nSydent can be configured to send emails over a TLS-encrypted socket by setting\n\n```yaml\nemail:\n    tlsmode: \"TLS\"  # or the legacy value \"SSL\"\n```\n\nin its config file. Alternatively it can be configured to use [Opportunistic TLS](https://en.wikipedia.org/wiki/Opportunistic_TLS) by setting\n\n```yaml\nemail:\n    tlsmode: \"STARTTLS\"\n```\n\nIn both situations, Sydent will encrypt its communication with the SMTP server when sending emails. **In affected versions, Sydent will not verify the destination server's certificate.**\n\n### Vulnerability \n\nSydent sends email for two purposes:\n- to inform a third party that they have been invited to a Matrix room by their email address; and\n- to verify that a given Matrix user controls an email address.\n\nTherefore, attackers capable of running a MITM attack can\n\n1. Intercept room invitations sent to an email address. The invitation includes \n   - the room ID and its avatar, and\n   - the inviter's username, displayname and their avatar, and\n   - credentials for a guest Matrix account on the inviter's homeserver.\n2. Intercept address ownership confirmation emails. This would allow the attacker to falsely claim ownership of the indented recipient's Matrix account, if that account was permitted to log in using an email address and no other authentication factors.\n\n\n### Patches\n\nThis is patched in [Sydent 2.5.6](https://github.com/matrix-org/sydent/releases/tag/v2.5.6), see PR https://github.com/matrix-org/sydent/pull/574.\n\nWhen patching, make sure that Sydent trusts the certificate of the server it is connecting to. This should happen automatically when using properly issued certificates. If you are using self-signed certificates, make sure to copy your Certification Authority certificate, or your self signed certificate if using only one, to the trust store of your operating system.\n\n### Workarounds\n\nOne can ensure Sydent's emails fail to send by setting the configured SMTP server to a loopback or [non-routable](https://datatracker.ietf.org/doc/html/rfc1918#section-3) address under your control which does not have a listening SMTP server. For example:\n\n```yaml\nemail:\n    smtphost: \"localhost\"  # Assuming there is no SMTP server listening on localhost\n```\n\n### References\n\n- https://github.com/matrix-org/sydent/pull/574 implements the fix.\n- https://github.com/matrix-org/sydent/releases/tag/v2.5.6 is the release including this fix.\n- https://docs.python.org/3/library/ssl.html?highlight=ssl#security-considerations details the best-practice advice on how to use the standard library `smtp` module safely.\n- https://peps.python.org/pep-0476/ (accepted) proposed enabling TLS certificate verification by default  in standard library HTTP clients.\n- https://github.com/python/cpython/issues/91826 discusses enabling TLS certificate verification by default in the Python standard library, for SMTP and other protocols.\n\n## For more information\n\nIf you have any questions or comments about this advisory, e-mail us at [security@matrix.org](mailto:security@matrix.org).","fixed_in":["2.5.6"],"id":"GHSA-p6hw-wm59-3g5g","link":"https://osv.dev/vulnerability/GHSA-p6hw-wm59-3g5g","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-38686","GHSA-p6hw-wm59-3g5g"],"details":"Sydent is an identity server for the Matrix communications protocol. Prior to version 2.5.6, if configured to send emails using TLS, Sydent does not verify SMTP servers' certificates. This makes  Sydent's emails vulnerable to interception via a man-in-the-middle (MITM) attack. Attackers with privileged access to the network can intercept room invitations and address confirmation emails. This is patched in Sydent 2.5.6. When patching, make sure that Sydent trusts the certificate of the server it is connecting to. This should happen automatically when using properly issued certificates. Those who use self-signed certificates should make sure to copy their Certification Authority certificate, or their self signed certificate if using only one, to the trust store of your operating system. As a workaround, one can ensure Sydent's emails fail to send by setting the configured SMTP server to a loopback or non-routable address under one's control which does not have a listening SMTP server.","fixed_in":["2.5.6"],"id":"PYSEC-2023-139","link":"https://osv.dev/vulnerability/PYSEC-2023-139","source":"osv","summary":null,"withdrawn":null}]},"2.4.5":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":[],"description_content_type":"","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"matrix-sydent","package_url":"https://pypi.org/project/matrix-sydent/","platform":"","project_url":"https://pypi.org/project/matrix-sydent/","project_urls":null,"provides_extra":null,"release_url":"https://pypi.org/project/matrix-sydent/2.4.5/","requires_dist":null,"requires_python":">=3.6","summary":"Reference Matrix Identity Verification and Lookup Server","version":"2.4.5","yanked":false,"yanked_reason":null},"last_serial":22507962,"urls":[{"comment_text":"","digests":{"blake2b_256":"3c976fcb36b7acb08c283980b786760dec20f7f12bf981609ff38f491579b2f5","md5":"d4a34150078e7c1db0df7ec8e44d13c0","sha256":"9c1d15bd688a630297315b4006c101bab232766e8953676cfaae2291dc902d9a"},"downloads":-1,"filename":"matrix-sydent-2.4.5.tar.gz","has_sig":false,"md5_digest":"d4a34150078e7c1db0df7ec8e44d13c0","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":99880,"upload_time":"2021-10-08T15:47:15","upload_time_iso_8601":"2021-10-08T15:47:15.052323Z","url":"https://files.pythonhosted.org/packages/3c/97/6fcb36b7acb08c283980b786760dec20f7f12bf981609ff38f491579b2f5/matrix-sydent-2.4.5.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-38686"],"details":"## Impact\n\nIf configured to send emails using TLS, Sydent does not verify SMTP servers' certificates. This makes  Sydent's emails vulnerable to interception via a [man-in-the-middle (MITM) attack](https://en.wikipedia.org/wiki/Man-in-the-middle_attack). Attackers with privileged access to the network can intercept room invitations and address confirmation emails.\n\nCVSS 3.1 overall score: 3.3 - [AV:A/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:N/CR:L/IR:L/AR:X/MAV:A/MAC:H/MPR:N/MUI:N/MS:C/MC:L/MI:L/MA:N](https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=AV:A/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:N/CR:L/IR:L/AR:X/MAV:A/MAC:H/MPR:N/MUI:N/MS:C/MC:L/MI:L/MA:N&version=3.1)\n\n_Reported by Martin Schobert, [Pentagrid AG](https://pentagrid.ch/)._\n\n### Details\n\nSydent can be configured to send emails over a TLS-encrypted socket by setting\n\n```yaml\nemail:\n    tlsmode: \"TLS\"  # or the legacy value \"SSL\"\n```\n\nin its config file. Alternatively it can be configured to use [Opportunistic TLS](https://en.wikipedia.org/wiki/Opportunistic_TLS) by setting\n\n```yaml\nemail:\n    tlsmode: \"STARTTLS\"\n```\n\nIn both situations, Sydent will encrypt its communication with the SMTP server when sending emails. **In affected versions, Sydent will not verify the destination server's certificate.**\n\n### Vulnerability \n\nSydent sends email for two purposes:\n- to inform a third party that they have been invited to a Matrix room by their email address; and\n- to verify that a given Matrix user controls an email address.\n\nTherefore, attackers capable of running a MITM attack can\n\n1. Intercept room invitations sent to an email address. The invitation includes \n   - the room ID and its avatar, and\n   - the inviter's username, displayname and their avatar, and\n   - credentials for a guest Matrix account on the inviter's homeserver.\n2. Intercept address ownership confirmation emails. This would allow the attacker to falsely claim ownership of the indented recipient's Matrix account, if that account was permitted to log in using an email address and no other authentication factors.\n\n\n### Patches\n\nThis is patched in [Sydent 2.5.6](https://github.com/matrix-org/sydent/releases/tag/v2.5.6), see PR https://github.com/matrix-org/sydent/pull/574.\n\nWhen patching, make sure that Sydent trusts the certificate of the server it is connecting to. This should happen automatically when using properly issued certificates. If you are using self-signed certificates, make sure to copy your Certification Authority certificate, or your self signed certificate if using only one, to the trust store of your operating system.\n\n### Workarounds\n\nOne can ensure Sydent's emails fail to send by setting the configured SMTP server to a loopback or [non-routable](https://datatracker.ietf.org/doc/html/rfc1918#section-3) address under your control which does not have a listening SMTP server. For example:\n\n```yaml\nemail:\n    smtphost: \"localhost\"  # Assuming there is no SMTP server listening on localhost\n```\n\n### References\n\n- https://github.com/matrix-org/sydent/pull/574 implements the fix.\n- https://github.com/matrix-org/sydent/releases/tag/v2.5.6 is the release including this fix.\n- https://docs.python.org/3/library/ssl.html?highlight=ssl#security-considerations details the best-practice advice on how to use the standard library `smtp` module safely.\n- https://peps.python.org/pep-0476/ (accepted) proposed enabling TLS certificate verification by default  in standard library HTTP clients.\n- https://github.com/python/cpython/issues/91826 discusses enabling TLS certificate verification by default in the Python standard library, for SMTP and other protocols.\n\n## For more information\n\nIf you have any questions or comments about this advisory, e-mail us at [security@matrix.org](mailto:security@matrix.org).","fixed_in":["2.5.6"],"id":"GHSA-p6hw-wm59-3g5g","link":"https://osv.dev/vulnerability/GHSA-p6hw-wm59-3g5g","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-38686","GHSA-p6hw-wm59-3g5g"],"details":"Sydent is an identity server for the Matrix communications protocol. Prior to version 2.5.6, if configured to send emails using TLS, Sydent does not verify SMTP servers' certificates. This makes  Sydent's emails vulnerable to interception via a man-in-the-middle (MITM) attack. Attackers with privileged access to the network can intercept room invitations and address confirmation emails. This is patched in Sydent 2.5.6. When patching, make sure that Sydent trusts the certificate of the server it is connecting to. This should happen automatically when using properly issued certificates. Those who use self-signed certificates should make sure to copy their Certification Authority certificate, or their self signed certificate if using only one, to the trust store of your operating system. As a workaround, one can ensure Sydent's emails fail to send by setting the configured SMTP server to a loopback or non-routable address under one's control which does not have a listening SMTP server.","fixed_in":["2.5.6"],"id":"PYSEC-2023-139","link":"https://osv.dev/vulnerability/PYSEC-2023-139","source":"osv","summary":null,"withdrawn":null}]},"2.4.6":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":[],"description_content_type":"","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"matrix-sydent","package_url":"https://pypi.org/project/matrix-sydent/","platform":"","project_url":"https://pypi.org/project/matrix-sydent/","project_urls":null,"provides_extra":null,"release_url":"https://pypi.org/project/matrix-sydent/2.4.6/","requires_dist":null,"requires_python":">=3.6","summary":"Reference Matrix Identity Verification and Lookup Server","version":"2.4.6","yanked":false,"yanked_reason":null},"last_serial":22507962,"urls":[{"comment_text":"","digests":{"blake2b_256":"781961524a15f5434ae79fc5fe0ed9896f86773b06845c226b794a1290b1915f","md5":"906b6ca3159d92de7b95374d20a4b205","sha256":"2239e0f70c4842859a47fbf5de956ccfa02b1a7b799a2beb06ab2a80847b0924"},"downloads":-1,"filename":"matrix-sydent-2.4.6.tar.gz","has_sig":false,"md5_digest":"906b6ca3159d92de7b95374d20a4b205","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":99929,"upload_time":"2021-10-08T16:22:37","upload_time_iso_8601":"2021-10-08T16:22:37.512883Z","url":"https://files.pythonhosted.org/packages/78/19/61524a15f5434ae79fc5fe0ed9896f86773b06845c226b794a1290b1915f/matrix-sydent-2.4.6.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-38686"],"details":"## Impact\n\nIf configured to send emails using TLS, Sydent does not verify SMTP servers' certificates. This makes  Sydent's emails vulnerable to interception via a [man-in-the-middle (MITM) attack](https://en.wikipedia.org/wiki/Man-in-the-middle_attack). Attackers with privileged access to the network can intercept room invitations and address confirmation emails.\n\nCVSS 3.1 overall score: 3.3 - [AV:A/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:N/CR:L/IR:L/AR:X/MAV:A/MAC:H/MPR:N/MUI:N/MS:C/MC:L/MI:L/MA:N](https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=AV:A/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:N/CR:L/IR:L/AR:X/MAV:A/MAC:H/MPR:N/MUI:N/MS:C/MC:L/MI:L/MA:N&version=3.1)\n\n_Reported by Martin Schobert, [Pentagrid AG](https://pentagrid.ch/)._\n\n### Details\n\nSydent can be configured to send emails over a TLS-encrypted socket by setting\n\n```yaml\nemail:\n    tlsmode: \"TLS\"  # or the legacy value \"SSL\"\n```\n\nin its config file. Alternatively it can be configured to use [Opportunistic TLS](https://en.wikipedia.org/wiki/Opportunistic_TLS) by setting\n\n```yaml\nemail:\n    tlsmode: \"STARTTLS\"\n```\n\nIn both situations, Sydent will encrypt its communication with the SMTP server when sending emails. **In affected versions, Sydent will not verify the destination server's certificate.**\n\n### Vulnerability \n\nSydent sends email for two purposes:\n- to inform a third party that they have been invited to a Matrix room by their email address; and\n- to verify that a given Matrix user controls an email address.\n\nTherefore, attackers capable of running a MITM attack can\n\n1. Intercept room invitations sent to an email address. The invitation includes \n   - the room ID and its avatar, and\n   - the inviter's username, displayname and their avatar, and\n   - credentials for a guest Matrix account on the inviter's homeserver.\n2. Intercept address ownership confirmation emails. This would allow the attacker to falsely claim ownership of the indented recipient's Matrix account, if that account was permitted to log in using an email address and no other authentication factors.\n\n\n### Patches\n\nThis is patched in [Sydent 2.5.6](https://github.com/matrix-org/sydent/releases/tag/v2.5.6), see PR https://github.com/matrix-org/sydent/pull/574.\n\nWhen patching, make sure that Sydent trusts the certificate of the server it is connecting to. This should happen automatically when using properly issued certificates. If you are using self-signed certificates, make sure to copy your Certification Authority certificate, or your self signed certificate if using only one, to the trust store of your operating system.\n\n### Workarounds\n\nOne can ensure Sydent's emails fail to send by setting the configured SMTP server to a loopback or [non-routable](https://datatracker.ietf.org/doc/html/rfc1918#section-3) address under your control which does not have a listening SMTP server. For example:\n\n```yaml\nemail:\n    smtphost: \"localhost\"  # Assuming there is no SMTP server listening on localhost\n```\n\n### References\n\n- https://github.com/matrix-org/sydent/pull/574 implements the fix.\n- https://github.com/matrix-org/sydent/releases/tag/v2.5.6 is the release including this fix.\n- https://docs.python.org/3/library/ssl.html?highlight=ssl#security-considerations details the best-practice advice on how to use the standard library `smtp` module safely.\n- https://peps.python.org/pep-0476/ (accepted) proposed enabling TLS certificate verification by default  in standard library HTTP clients.\n- https://github.com/python/cpython/issues/91826 discusses enabling TLS certificate verification by default in the Python standard library, for SMTP and other protocols.\n\n## For more information\n\nIf you have any questions or comments about this advisory, e-mail us at [security@matrix.org](mailto:security@matrix.org).","fixed_in":["2.5.6"],"id":"GHSA-p6hw-wm59-3g5g","link":"https://osv.dev/vulnerability/GHSA-p6hw-wm59-3g5g","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-38686","GHSA-p6hw-wm59-3g5g"],"details":"Sydent is an identity server for the Matrix communications protocol. Prior to version 2.5.6, if configured to send emails using TLS, Sydent does not verify SMTP servers' certificates. This makes  Sydent's emails vulnerable to interception via a man-in-the-middle (MITM) attack. Attackers with privileged access to the network can intercept room invitations and address confirmation emails. This is patched in Sydent 2.5.6. When patching, make sure that Sydent trusts the certificate of the server it is connecting to. This should happen automatically when using properly issued certificates. Those who use self-signed certificates should make sure to copy their Certification Authority certificate, or their self signed certificate if using only one, to the trust store of your operating system. As a workaround, one can ensure Sydent's emails fail to send by setting the configured SMTP server to a loopback or non-routable address under one's control which does not have a listening SMTP server.","fixed_in":["2.5.6"],"id":"PYSEC-2023-139","link":"https://osv.dev/vulnerability/PYSEC-2023-139","source":"osv","summary":null,"withdrawn":null}]},"2.5.0":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":[],"description_content_type":"","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"matrix-sydent","package_url":"https://pypi.org/project/matrix-sydent/","platform":"","project_url":"https://pypi.org/project/matrix-sydent/","project_urls":null,"provides_extra":null,"release_url":"https://pypi.org/project/matrix-sydent/2.5.0/","requires_dist":null,"requires_python":">=3.6","summary":"Reference Matrix Identity Verification and Lookup Server","version":"2.5.0","yanked":false,"yanked_reason":null},"last_serial":22507962,"urls":[{"comment_text":"","digests":{"blake2b_256":"e4e63049cb6e07671885ce2c2a08dec448d2185c7b579c1b02c5ce4406b3d199","md5":"aa746fea3c9984333517d2be62d21d4a","sha256":"4ba141bfa9a63b82056f91d77d96e98dd1d39e97f438df5d00cad7d0548c485f"},"downloads":-1,"filename":"matrix-sydent-2.5.0.tar.gz","has_sig":false,"md5_digest":"aa746fea3c9984333517d2be62d21d4a","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":107806,"upload_time":"2021-11-03T12:42:10","upload_time_iso_8601":"2021-11-03T12:42:10.925167Z","url":"https://files.pythonhosted.org/packages/e4/e6/3049cb6e07671885ce2c2a08dec448d2185c7b579c1b02c5ce4406b3d199/matrix-sydent-2.5.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-38686"],"details":"## Impact\n\nIf configured to send emails using TLS, Sydent does not verify SMTP servers' certificates. This makes  Sydent's emails vulnerable to interception via a [man-in-the-middle (MITM) attack](https://en.wikipedia.org/wiki/Man-in-the-middle_attack). Attackers with privileged access to the network can intercept room invitations and address confirmation emails.\n\nCVSS 3.1 overall score: 3.3 - [AV:A/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:N/CR:L/IR:L/AR:X/MAV:A/MAC:H/MPR:N/MUI:N/MS:C/MC:L/MI:L/MA:N](https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=AV:A/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:N/CR:L/IR:L/AR:X/MAV:A/MAC:H/MPR:N/MUI:N/MS:C/MC:L/MI:L/MA:N&version=3.1)\n\n_Reported by Martin Schobert, [Pentagrid AG](https://pentagrid.ch/)._\n\n### Details\n\nSydent can be configured to send emails over a TLS-encrypted socket by setting\n\n```yaml\nemail:\n    tlsmode: \"TLS\"  # or the legacy value \"SSL\"\n```\n\nin its config file. Alternatively it can be configured to use [Opportunistic TLS](https://en.wikipedia.org/wiki/Opportunistic_TLS) by setting\n\n```yaml\nemail:\n    tlsmode: \"STARTTLS\"\n```\n\nIn both situations, Sydent will encrypt its communication with the SMTP server when sending emails. **In affected versions, Sydent will not verify the destination server's certificate.**\n\n### Vulnerability \n\nSydent sends email for two purposes:\n- to inform a third party that they have been invited to a Matrix room by their email address; and\n- to verify that a given Matrix user controls an email address.\n\nTherefore, attackers capable of running a MITM attack can\n\n1. Intercept room invitations sent to an email address. The invitation includes \n   - the room ID and its avatar, and\n   - the inviter's username, displayname and their avatar, and\n   - credentials for a guest Matrix account on the inviter's homeserver.\n2. Intercept address ownership confirmation emails. This would allow the attacker to falsely claim ownership of the indented recipient's Matrix account, if that account was permitted to log in using an email address and no other authentication factors.\n\n\n### Patches\n\nThis is patched in [Sydent 2.5.6](https://github.com/matrix-org/sydent/releases/tag/v2.5.6), see PR https://github.com/matrix-org/sydent/pull/574.\n\nWhen patching, make sure that Sydent trusts the certificate of the server it is connecting to. This should happen automatically when using properly issued certificates. If you are using self-signed certificates, make sure to copy your Certification Authority certificate, or your self signed certificate if using only one, to the trust store of your operating system.\n\n### Workarounds\n\nOne can ensure Sydent's emails fail to send by setting the configured SMTP server to a loopback or [non-routable](https://datatracker.ietf.org/doc/html/rfc1918#section-3) address under your control which does not have a listening SMTP server. For example:\n\n```yaml\nemail:\n    smtphost: \"localhost\"  # Assuming there is no SMTP server listening on localhost\n```\n\n### References\n\n- https://github.com/matrix-org/sydent/pull/574 implements the fix.\n- https://github.com/matrix-org/sydent/releases/tag/v2.5.6 is the release including this fix.\n- https://docs.python.org/3/library/ssl.html?highlight=ssl#security-considerations details the best-practice advice on how to use the standard library `smtp` module safely.\n- https://peps.python.org/pep-0476/ (accepted) proposed enabling TLS certificate verification by default  in standard library HTTP clients.\n- https://github.com/python/cpython/issues/91826 discusses enabling TLS certificate verification by default in the Python standard library, for SMTP and other protocols.\n\n## For more information\n\nIf you have any questions or comments about this advisory, e-mail us at [security@matrix.org](mailto:security@matrix.org).","fixed_in":["2.5.6"],"id":"GHSA-p6hw-wm59-3g5g","link":"https://osv.dev/vulnerability/GHSA-p6hw-wm59-3g5g","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-38686","GHSA-p6hw-wm59-3g5g"],"details":"Sydent is an identity server for the Matrix communications protocol. Prior to version 2.5.6, if configured to send emails using TLS, Sydent does not verify SMTP servers' certificates. This makes  Sydent's emails vulnerable to interception via a man-in-the-middle (MITM) attack. Attackers with privileged access to the network can intercept room invitations and address confirmation emails. This is patched in Sydent 2.5.6. When patching, make sure that Sydent trusts the certificate of the server it is connecting to. This should happen automatically when using properly issued certificates. Those who use self-signed certificates should make sure to copy their Certification Authority certificate, or their self signed certificate if using only one, to the trust store of your operating system. As a workaround, one can ensure Sydent's emails fail to send by setting the configured SMTP server to a loopback or non-routable address under one's control which does not have a listening SMTP server.","fixed_in":["2.5.6"],"id":"PYSEC-2023-139","link":"https://osv.dev/vulnerability/PYSEC-2023-139","source":"osv","summary":null,"withdrawn":null}]},"2.5.1":{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":[],"description_content_type":"","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"matrix-sydent","package_url":"https://pypi.org/project/matrix-sydent/","platform":"","project_url":"https://pypi.org/project/matrix-sydent/","project_urls":null,"provides_extra":null,"release_url":"https://pypi.org/project/matrix-sydent/2.5.1/","requires_dist":null,"requires_python":">=3.6","summary":"Reference Matrix Identity Verification and Lookup Server","version":"2.5.1","yanked":false,"yanked_reason":null},"last_serial":22507962,"urls":[{"comment_text":"","digests":{"blake2b_256":"63d2c717d97748f201c5fca9c55b9c523100c399aeb0b7dd3a4b42e5f1db5b9c","md5":"2f8f049d57cc0970dc4ed13a08f069aa","sha256":"04f2e769f35e402959ebc6a778bbeb48003155a15ec6942e3d2f825613121360"},"downloads":-1,"filename":"matrix-sydent-2.5.1.tar.gz","has_sig":false,"md5_digest":"2f8f049d57cc0970dc4ed13a08f069aa","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":110479,"upload_time":"2021-11-17T11:43:02","upload_time_iso_8601":"2021-11-17T11:43:02.555309Z","url":"https://files.pythonhosted.org/packages/63/d2/c717d97748f201c5fca9c55b9c523100c399aeb0b7dd3a4b42e5f1db5b9c/matrix-sydent-2.5.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-38686"],"details":"## Impact\n\nIf configured to send emails using TLS, Sydent does not verify SMTP servers' certificates. This makes  Sydent's emails vulnerable to interception via a [man-in-the-middle (MITM) attack](https://en.wikipedia.org/wiki/Man-in-the-middle_attack). Attackers with privileged access to the network can intercept room invitations and address confirmation emails.\n\nCVSS 3.1 overall score: 3.3 - [AV:A/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:N/CR:L/IR:L/AR:X/MAV:A/MAC:H/MPR:N/MUI:N/MS:C/MC:L/MI:L/MA:N](https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=AV:A/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:N/CR:L/IR:L/AR:X/MAV:A/MAC:H/MPR:N/MUI:N/MS:C/MC:L/MI:L/MA:N&version=3.1)\n\n_Reported by Martin Schobert, [Pentagrid AG](https://pentagrid.ch/)._\n\n### Details\n\nSydent can be configured to send emails over a TLS-encrypted socket by setting\n\n```yaml\nemail:\n    tlsmode: \"TLS\"  # or the legacy value \"SSL\"\n```\n\nin its config file. Alternatively it can be configured to use [Opportunistic TLS](https://en.wikipedia.org/wiki/Opportunistic_TLS) by setting\n\n```yaml\nemail:\n    tlsmode: \"STARTTLS\"\n```\n\nIn both situations, Sydent will encrypt its communication with the SMTP server when sending emails. **In affected versions, Sydent will not verify the destination server's certificate.**\n\n### Vulnerability \n\nSydent sends email for two purposes:\n- to inform a third party that they have been invited to a Matrix room by their email address; and\n- to verify that a given Matrix user controls an email address.\n\nTherefore, attackers capable of running a MITM attack can\n\n1. Intercept room invitations sent to an email address. The invitation includes \n   - the room ID and its avatar, and\n   - the inviter's username, displayname and their avatar, and\n   - credentials for a guest Matrix account on the inviter's homeserver.\n2. Intercept address ownership confirmation emails. This would allow the attacker to falsely claim ownership of the indented recipient's Matrix account, if that account was permitted to log in using an email address and no other authentication factors.\n\n\n### Patches\n\nThis is patched in [Sydent 2.5.6](https://github.com/matrix-org/sydent/releases/tag/v2.5.6), see PR https://github.com/matrix-org/sydent/pull/574.\n\nWhen patching, make sure that Sydent trusts the certificate of the server it is connecting to. This should happen automatically when using properly issued certificates. If you are using self-signed certificates, make sure to copy your Certification Authority certificate, or your self signed certificate if using only one, to the trust store of your operating system.\n\n### Workarounds\n\nOne can ensure Sydent's emails fail to send by setting the configured SMTP server to a loopback or [non-routable](https://datatracker.ietf.org/doc/html/rfc1918#section-3) address under your control which does not have a listening SMTP server. For example:\n\n```yaml\nemail:\n    smtphost: \"localhost\"  # Assuming there is no SMTP server listening on localhost\n```\n\n### References\n\n- https://github.com/matrix-org/sydent/pull/574 implements the fix.\n- https://github.com/matrix-org/sydent/releases/tag/v2.5.6 is the release including this fix.\n- https://docs.python.org/3/library/ssl.html?highlight=ssl#security-considerations details the best-practice advice on how to use the standard library `smtp` module safely.\n- https://peps.python.org/pep-0476/ (accepted) proposed enabling TLS certificate verification by default  in standard library HTTP clients.\n- https://github.com/python/cpython/issues/91826 discusses enabling TLS certificate verification by default in the Python standard library, for SMTP and other protocols.\n\n## For more information\n\nIf you have any questions or comments about this advisory, e-mail us at [security@matrix.org](mailto:security@matrix.org).","fixed_in":["2.5.6"],"id":"GHSA-p6hw-wm59-3g5g","link":"https://osv.dev/vulnerability/GHSA-p6hw-wm59-3g5g","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-38686","GHSA-p6hw-wm59-3g5g"],"details":"Sydent is an identity server for the Matrix communications protocol. Prior to version 2.5.6, if configured to send emails using TLS, Sydent does not verify SMTP servers' certificates. This makes  Sydent's emails vulnerable to interception via a man-in-the-middle (MITM) attack. Attackers with privileged access to the network can intercept room invitations and address confirmation emails. This is patched in Sydent 2.5.6. When patching, make sure that Sydent trusts the certificate of the server it is connecting to. This should happen automatically when using properly issued certificates. Those who use self-signed certificates should make sure to copy their Certification Authority certificate, or their self signed certificate if using only one, to the trust store of your operating system. As a workaround, one can ensure Sydent's emails fail to send by setting the configured SMTP server to a loopback or non-routable address under one's control which does not have a listening SMTP server.","fixed_in":["2.5.6"],"id":"PYSEC-2023-139","link":"https://osv.dev/vulnerability/PYSEC-2023-139","source":"osv","summary":null,"withdrawn":null}]},"2.5.2":{"info":{"author":"Matrix.org Team and Contributors","author_email":"packages@matrix.org","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","License :: OSI Approved :: Apache Software License","Programming Language :: Python :: 3","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9"],"description_content_type":"text/x-rst","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/matrix-org/sydent","keywords":"","license":"Apache-2.0","maintainer":"","maintainer_email":"","name":"matrix-sydent","package_url":"https://pypi.org/project/matrix-sydent/","platform":null,"project_url":"https://pypi.org/project/matrix-sydent/","project_urls":{"Homepage":"https://github.com/matrix-org/sydent","Repository":"https://github.com/matrix-org/sydent"},"provides_extra":null,"release_url":"https://pypi.org/project/matrix-sydent/2.5.2/","requires_dist":["attrs (>=19.1.0)","jinja2 (>=3.0.0)","matrix-common (>=1.1.0,<2.0.0)","netaddr (>=0.7.0)","phonenumbers (>=8.12.32)","prometheus-client (>=0.4.0); extra == \"prometheus\"","pyOpenSSL (>=16.0.0)","pynacl (>=1.2.1)","pyyaml (>=3.11)","sentry-sdk (>=0.7.2); extra == \"sentry\"","service-identity (>=1.0.0)","signedjson (==1.1.1)","sortedcontainers (>=2.1.0)","twisted (>=18.4.0)","typing-extensions (>=3.7.4)","unpaddedbase64 (>=1.1.0)","zope.interface (>=4.6.0)"],"requires_python":">=3.7,<4.0","summary":"Reference Matrix Identity Verification and Lookup Server","version":"2.5.2","yanked":false,"yanked_reason":null},"last_serial":22507962,"urls":[{"comment_text":"","digests":{"blake2b_256":"f9a77019721a6c4ddd6da4da7e3f2cec571632ad431496d44cd43fe22a402e42","md5":"75ffcb12e2d7de2a9406dccc8cbf3ee7","sha256":"ccdefe242d03ac9d908b74a1b4e760b5c7a1aa33dc4bc855b7e184f720ca68ac"},"downloads":-1,"filename":"matrix_sydent-2.5.2-py3-none-any.whl","has_sig":false,"md5_digest":"75ffcb12e2d7de2a9406dccc8cbf3ee7","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7,<4.0","size":144777,"upload_time":"2022-04-04T15:57:47","upload_time_iso_8601":"2022-04-04T15:57:47.191072Z","url":"https://files.pythonhosted.org/packages/f9/a7/7019721a6c4ddd6da4da7e3f2cec571632ad431496d44cd43fe22a402e42/matrix_sydent-2.5.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"67a534e1e9f1fc137c55203c329feca207fe97ba16779fab7d245325ef9d7e1a","md5":"147df68ea424838a6182e1165f9b0fc1","sha256":"800e26dc0c802f84c4f772885cf5204859fc9bcb4b0e7cec63a4e3df4ee61614"},"downloads":-1,"filename":"matrix-sydent-2.5.2.tar.gz","has_sig":false,"md5_digest":"147df68ea424838a6182e1165f9b0fc1","packagetype":"sdist","python_version":"source","requires_python":">=3.7,<4.0","size":115792,"upload_time":"2022-04-04T15:57:48","upload_time_iso_8601":"2022-04-04T15:57:48.610603Z","url":"https://files.pythonhosted.org/packages/67/a5/34e1e9f1fc137c55203c329feca207fe97ba16779fab7d245325ef9d7e1a/matrix-sydent-2.5.2.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-38686"],"details":"## Impact\n\nIf configured to send emails using TLS, Sydent does not verify SMTP servers' certificates. This makes  Sydent's emails vulnerable to interception via a [man-in-the-middle (MITM) attack](https://en.wikipedia.org/wiki/Man-in-the-middle_attack). Attackers with privileged access to the network can intercept room invitations and address confirmation emails.\n\nCVSS 3.1 overall score: 3.3 - [AV:A/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:N/CR:L/IR:L/AR:X/MAV:A/MAC:H/MPR:N/MUI:N/MS:C/MC:L/MI:L/MA:N](https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=AV:A/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:N/CR:L/IR:L/AR:X/MAV:A/MAC:H/MPR:N/MUI:N/MS:C/MC:L/MI:L/MA:N&version=3.1)\n\n_Reported by Martin Schobert, [Pentagrid AG](https://pentagrid.ch/)._\n\n### Details\n\nSydent can be configured to send emails over a TLS-encrypted socket by setting\n\n```yaml\nemail:\n    tlsmode: \"TLS\"  # or the legacy value \"SSL\"\n```\n\nin its config file. Alternatively it can be configured to use [Opportunistic TLS](https://en.wikipedia.org/wiki/Opportunistic_TLS) by setting\n\n```yaml\nemail:\n    tlsmode: \"STARTTLS\"\n```\n\nIn both situations, Sydent will encrypt its communication with the SMTP server when sending emails. **In affected versions, Sydent will not verify the destination server's certificate.**\n\n### Vulnerability \n\nSydent sends email for two purposes:\n- to inform a third party that they have been invited to a Matrix room by their email address; and\n- to verify that a given Matrix user controls an email address.\n\nTherefore, attackers capable of running a MITM attack can\n\n1. Intercept room invitations sent to an email address. The invitation includes \n   - the room ID and its avatar, and\n   - the inviter's username, displayname and their avatar, and\n   - credentials for a guest Matrix account on the inviter's homeserver.\n2. Intercept address ownership confirmation emails. This would allow the attacker to falsely claim ownership of the indented recipient's Matrix account, if that account was permitted to log in using an email address and no other authentication factors.\n\n\n### Patches\n\nThis is patched in [Sydent 2.5.6](https://github.com/matrix-org/sydent/releases/tag/v2.5.6), see PR https://github.com/matrix-org/sydent/pull/574.\n\nWhen patching, make sure that Sydent trusts the certificate of the server it is connecting to. This should happen automatically when using properly issued certificates. If you are using self-signed certificates, make sure to copy your Certification Authority certificate, or your self signed certificate if using only one, to the trust store of your operating system.\n\n### Workarounds\n\nOne can ensure Sydent's emails fail to send by setting the configured SMTP server to a loopback or [non-routable](https://datatracker.ietf.org/doc/html/rfc1918#section-3) address under your control which does not have a listening SMTP server. For example:\n\n```yaml\nemail:\n    smtphost: \"localhost\"  # Assuming there is no SMTP server listening on localhost\n```\n\n### References\n\n- https://github.com/matrix-org/sydent/pull/574 implements the fix.\n- https://github.com/matrix-org/sydent/releases/tag/v2.5.6 is the release including this fix.\n- https://docs.python.org/3/library/ssl.html?highlight=ssl#security-considerations details the best-practice advice on how to use the standard library `smtp` module safely.\n- https://peps.python.org/pep-0476/ (accepted) proposed enabling TLS certificate verification by default  in standard library HTTP clients.\n- https://github.com/python/cpython/issues/91826 discusses enabling TLS certificate verification by default in the Python standard library, for SMTP and other protocols.\n\n## For more information\n\nIf you have any questions or comments about this advisory, e-mail us at [security@matrix.org](mailto:security@matrix.org).","fixed_in":["2.5.6"],"id":"GHSA-p6hw-wm59-3g5g","link":"https://osv.dev/vulnerability/GHSA-p6hw-wm59-3g5g","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-38686","GHSA-p6hw-wm59-3g5g"],"details":"Sydent is an identity server for the Matrix communications protocol. Prior to version 2.5.6, if configured to send emails using TLS, Sydent does not verify SMTP servers' certificates. This makes  Sydent's emails vulnerable to interception via a man-in-the-middle (MITM) attack. Attackers with privileged access to the network can intercept room invitations and address confirmation emails. This is patched in Sydent 2.5.6. When patching, make sure that Sydent trusts the certificate of the server it is connecting to. This should happen automatically when using properly issued certificates. Those who use self-signed certificates should make sure to copy their Certification Authority certificate, or their self signed certificate if using only one, to the trust store of your operating system. As a workaround, one can ensure Sydent's emails fail to send by setting the configured SMTP server to a loopback or non-routable address under one's control which does not have a listening SMTP server.","fixed_in":["2.5.6"],"id":"PYSEC-2023-139","link":"https://osv.dev/vulnerability/PYSEC-2023-139","source":"osv","summary":null,"withdrawn":null}]},"2.5.3":{"info":{"author":"Matrix.org Team and Contributors","author_email":"packages@matrix.org","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","License :: OSI Approved :: Apache Software License","Programming Language :: Python :: 3","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9"],"description_content_type":"text/x-rst","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/matrix-org/sydent","keywords":"","license":"Apache-2.0","maintainer":"","maintainer_email":"","name":"matrix-sydent","package_url":"https://pypi.org/project/matrix-sydent/","platform":null,"project_url":"https://pypi.org/project/matrix-sydent/","project_urls":{"Homepage":"https://github.com/matrix-org/sydent","Repository":"https://github.com/matrix-org/sydent"},"provides_extra":null,"release_url":"https://pypi.org/project/matrix-sydent/2.5.3/","requires_dist":["attrs (>=19.1.0)","jinja2 (>=3.0.0)","matrix-common (>=1.1.0,<2.0.0)","netaddr (>=0.7.0)","phonenumbers (>=8.12.32)","prometheus-client (>=0.4.0) ; extra == \"prometheus\"","pyOpenSSL (>=16.0.0)","pynacl (>=1.2.1)","pyyaml (>=3.11)","sentry-sdk (>=0.7.2) ; extra == \"sentry\"","service-identity (>=1.0.0)","signedjson (==1.1.1)","sortedcontainers (>=2.1.0)","twisted (>=18.4.0)","typing-extensions (>=3.7.4)","unpaddedbase64 (>=1.1.0)","zope.interface (>=4.6.0)"],"requires_python":">=3.7,<4.0","summary":"Reference Matrix Identity Verification and Lookup Server","version":"2.5.3","yanked":false,"yanked_reason":null},"last_serial":22507962,"urls":[{"comment_text":"","digests":{"blake2b_256":"c51bc5386490748cc001850d4295c4aa4379df100684ec34477c81d48308db28","md5":"a6c14fb98821f0cd44d0c8c94dc37f2c","sha256":"e3ad2d3bd732ed7f5975734855fdc5e97d66585771ed3c4e66ef4c58ca11c3b9"},"downloads":-1,"filename":"matrix_sydent-2.5.3-py3-none-any.whl","has_sig":false,"md5_digest":"a6c14fb98821f0cd44d0c8c94dc37f2c","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7,<4.0","size":147825,"upload_time":"2023-03-02T18:46:24","upload_time_iso_8601":"2023-03-02T18:46:24.235226Z","url":"https://files.pythonhosted.org/packages/c5/1b/c5386490748cc001850d4295c4aa4379df100684ec34477c81d48308db28/matrix_sydent-2.5.3-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"8ac1dabdb82bc07e1c64465a05f20245dab28e89aacf3ffa7c798ef1f264435d","md5":"3dbfdee4d71683710940f6a91ec49ec6","sha256":"6fb1e02addebf8f9b09675d4af675536e97be3cd02178674578e6a6a96159161"},"downloads":-1,"filename":"matrix_sydent-2.5.3.tar.gz","has_sig":false,"md5_digest":"3dbfdee4d71683710940f6a91ec49ec6","packagetype":"sdist","python_version":"source","requires_python":">=3.7,<4.0","size":117961,"upload_time":"2023-03-02T18:46:26","upload_time_iso_8601":"2023-03-02T18:46:26.089906Z","url":"https://files.pythonhosted.org/packages/8a/c1/dabdb82bc07e1c64465a05f20245dab28e89aacf3ffa7c798ef1f264435d/matrix_sydent-2.5.3.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-38686"],"details":"## Impact\n\nIf configured to send emails using TLS, Sydent does not verify SMTP servers' certificates. This makes  Sydent's emails vulnerable to interception via a [man-in-the-middle (MITM) attack](https://en.wikipedia.org/wiki/Man-in-the-middle_attack). Attackers with privileged access to the network can intercept room invitations and address confirmation emails.\n\nCVSS 3.1 overall score: 3.3 - [AV:A/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:N/CR:L/IR:L/AR:X/MAV:A/MAC:H/MPR:N/MUI:N/MS:C/MC:L/MI:L/MA:N](https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=AV:A/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:N/CR:L/IR:L/AR:X/MAV:A/MAC:H/MPR:N/MUI:N/MS:C/MC:L/MI:L/MA:N&version=3.1)\n\n_Reported by Martin Schobert, [Pentagrid AG](https://pentagrid.ch/)._\n\n### Details\n\nSydent can be configured to send emails over a TLS-encrypted socket by setting\n\n```yaml\nemail:\n    tlsmode: \"TLS\"  # or the legacy value \"SSL\"\n```\n\nin its config file. Alternatively it can be configured to use [Opportunistic TLS](https://en.wikipedia.org/wiki/Opportunistic_TLS) by setting\n\n```yaml\nemail:\n    tlsmode: \"STARTTLS\"\n```\n\nIn both situations, Sydent will encrypt its communication with the SMTP server when sending emails. **In affected versions, Sydent will not verify the destination server's certificate.**\n\n### Vulnerability \n\nSydent sends email for two purposes:\n- to inform a third party that they have been invited to a Matrix room by their email address; and\n- to verify that a given Matrix user controls an email address.\n\nTherefore, attackers capable of running a MITM attack can\n\n1. Intercept room invitations sent to an email address. The invitation includes \n   - the room ID and its avatar, and\n   - the inviter's username, displayname and their avatar, and\n   - credentials for a guest Matrix account on the inviter's homeserver.\n2. Intercept address ownership confirmation emails. This would allow the attacker to falsely claim ownership of the indented recipient's Matrix account, if that account was permitted to log in using an email address and no other authentication factors.\n\n\n### Patches\n\nThis is patched in [Sydent 2.5.6](https://github.com/matrix-org/sydent/releases/tag/v2.5.6), see PR https://github.com/matrix-org/sydent/pull/574.\n\nWhen patching, make sure that Sydent trusts the certificate of the server it is connecting to. This should happen automatically when using properly issued certificates. If you are using self-signed certificates, make sure to copy your Certification Authority certificate, or your self signed certificate if using only one, to the trust store of your operating system.\n\n### Workarounds\n\nOne can ensure Sydent's emails fail to send by setting the configured SMTP server to a loopback or [non-routable](https://datatracker.ietf.org/doc/html/rfc1918#section-3) address under your control which does not have a listening SMTP server. For example:\n\n```yaml\nemail:\n    smtphost: \"localhost\"  # Assuming there is no SMTP server listening on localhost\n```\n\n### References\n\n- https://github.com/matrix-org/sydent/pull/574 implements the fix.\n- https://github.com/matrix-org/sydent/releases/tag/v2.5.6 is the release including this fix.\n- https://docs.python.org/3/library/ssl.html?highlight=ssl#security-considerations details the best-practice advice on how to use the standard library `smtp` module safely.\n- https://peps.python.org/pep-0476/ (accepted) proposed enabling TLS certificate verification by default  in standard library HTTP clients.\n- https://github.com/python/cpython/issues/91826 discusses enabling TLS certificate verification by default in the Python standard library, for SMTP and other protocols.\n\n## For more information\n\nIf you have any questions or comments about this advisory, e-mail us at [security@matrix.org](mailto:security@matrix.org).","fixed_in":["2.5.6"],"id":"GHSA-p6hw-wm59-3g5g","link":"https://osv.dev/vulnerability/GHSA-p6hw-wm59-3g5g","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-38686","GHSA-p6hw-wm59-3g5g"],"details":"Sydent is an identity server for the Matrix communications protocol. Prior to version 2.5.6, if configured to send emails using TLS, Sydent does not verify SMTP servers' certificates. This makes  Sydent's emails vulnerable to interception via a man-in-the-middle (MITM) attack. Attackers with privileged access to the network can intercept room invitations and address confirmation emails. This is patched in Sydent 2.5.6. When patching, make sure that Sydent trusts the certificate of the server it is connecting to. This should happen automatically when using properly issued certificates. Those who use self-signed certificates should make sure to copy their Certification Authority certificate, or their self signed certificate if using only one, to the trust store of your operating system. As a workaround, one can ensure Sydent's emails fail to send by setting the configured SMTP server to a loopback or non-routable address under one's control which does not have a listening SMTP server.","fixed_in":["2.5.6"],"id":"PYSEC-2023-139","link":"https://osv.dev/vulnerability/PYSEC-2023-139","source":"osv","summary":null,"withdrawn":null}]},"2.5.4":{"info":{"author":"Matrix.org Team and Contributors","author_email":"packages@matrix.org","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","License :: OSI Approved :: Apache Software License","Programming Language :: Python :: 3","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9"],"description_content_type":"text/x-rst","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/matrix-org/sydent","keywords":"","license":"Apache-2.0","maintainer":"","maintainer_email":"","name":"matrix-sydent","package_url":"https://pypi.org/project/matrix-sydent/","platform":null,"project_url":"https://pypi.org/project/matrix-sydent/","project_urls":{"Homepage":"https://github.com/matrix-org/sydent","Repository":"https://github.com/matrix-org/sydent"},"provides_extra":null,"release_url":"https://pypi.org/project/matrix-sydent/2.5.4/","requires_dist":["attrs (>=19.1.0)","jinja2 (>=3.0.0)","matrix-common (>=1.1.0,<2.0.0)","netaddr (>=0.7.0)","phonenumbers (>=8.12.32)","prometheus-client (>=0.4.0) ; extra == \"prometheus\"","pyOpenSSL (>=16.0.0)","pynacl (>=1.2.1)","pyyaml (>=3.11)","sentry-sdk (>=0.7.2) ; extra == \"sentry\"","service-identity (>=1.0.0)","signedjson (==1.1.1)","sortedcontainers (>=2.1.0)","twisted (>=18.4.0)","typing-extensions (>=3.7.4)","unpaddedbase64 (>=1.1.0)","zope.interface (>=4.6.0)"],"requires_python":">=3.7,<4.0","summary":"Reference Matrix Identity Verification and Lookup Server","version":"2.5.4","yanked":false,"yanked_reason":null},"last_serial":22507962,"urls":[{"comment_text":"","digests":{"blake2b_256":"c9623a6ca701b03e4bb027216aa4c398831f804db267539b4c6c94e8fbc56aaf","md5":"093dda88db73aea9a5ff135ed89d30c9","sha256":"fc3d7333472be25c2a194cb4154f0949d3b6311e255ed1824962ace6f06e743d"},"downloads":-1,"filename":"matrix_sydent-2.5.4-py3-none-any.whl","has_sig":false,"md5_digest":"093dda88db73aea9a5ff135ed89d30c9","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7,<4.0","size":148632,"upload_time":"2023-06-22T13:25:28","upload_time_iso_8601":"2023-06-22T13:25:28.001460Z","url":"https://files.pythonhosted.org/packages/c9/62/3a6ca701b03e4bb027216aa4c398831f804db267539b4c6c94e8fbc56aaf/matrix_sydent-2.5.4-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"374dd9d543fb1057af83c4dec4b5065878f04837806edfed3c6330b069fc6962","md5":"2138f6113e85f8f1397b00d984a94e32","sha256":"b244a37ceb36131676e5615e95100837a705e3a09179e225d054355b09b5953d"},"downloads":-1,"filename":"matrix_sydent-2.5.4.tar.gz","has_sig":false,"md5_digest":"2138f6113e85f8f1397b00d984a94e32","packagetype":"sdist","python_version":"source","requires_python":">=3.7,<4.0","size":119449,"upload_time":"2023-06-22T13:25:29","upload_time_iso_8601":"2023-06-22T13:25:29.921973Z","url":"https://files.pythonhosted.org/packages/37/4d/d9d543fb1057af83c4dec4b5065878f04837806edfed3c6330b069fc6962/matrix_sydent-2.5.4.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-38686"],"details":"## Impact\n\nIf configured to send emails using TLS, Sydent does not verify SMTP servers' certificates. This makes  Sydent's emails vulnerable to interception via a [man-in-the-middle (MITM) attack](https://en.wikipedia.org/wiki/Man-in-the-middle_attack). Attackers with privileged access to the network can intercept room invitations and address confirmation emails.\n\nCVSS 3.1 overall score: 3.3 - [AV:A/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:N/CR:L/IR:L/AR:X/MAV:A/MAC:H/MPR:N/MUI:N/MS:C/MC:L/MI:L/MA:N](https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=AV:A/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:N/CR:L/IR:L/AR:X/MAV:A/MAC:H/MPR:N/MUI:N/MS:C/MC:L/MI:L/MA:N&version=3.1)\n\n_Reported by Martin Schobert, [Pentagrid AG](https://pentagrid.ch/)._\n\n### Details\n\nSydent can be configured to send emails over a TLS-encrypted socket by setting\n\n```yaml\nemail:\n    tlsmode: \"TLS\"  # or the legacy value \"SSL\"\n```\n\nin its config file. Alternatively it can be configured to use [Opportunistic TLS](https://en.wikipedia.org/wiki/Opportunistic_TLS) by setting\n\n```yaml\nemail:\n    tlsmode: \"STARTTLS\"\n```\n\nIn both situations, Sydent will encrypt its communication with the SMTP server when sending emails. **In affected versions, Sydent will not verify the destination server's certificate.**\n\n### Vulnerability \n\nSydent sends email for two purposes:\n- to inform a third party that they have been invited to a Matrix room by their email address; and\n- to verify that a given Matrix user controls an email address.\n\nTherefore, attackers capable of running a MITM attack can\n\n1. Intercept room invitations sent to an email address. The invitation includes \n   - the room ID and its avatar, and\n   - the inviter's username, displayname and their avatar, and\n   - credentials for a guest Matrix account on the inviter's homeserver.\n2. Intercept address ownership confirmation emails. This would allow the attacker to falsely claim ownership of the indented recipient's Matrix account, if that account was permitted to log in using an email address and no other authentication factors.\n\n\n### Patches\n\nThis is patched in [Sydent 2.5.6](https://github.com/matrix-org/sydent/releases/tag/v2.5.6), see PR https://github.com/matrix-org/sydent/pull/574.\n\nWhen patching, make sure that Sydent trusts the certificate of the server it is connecting to. This should happen automatically when using properly issued certificates. If you are using self-signed certificates, make sure to copy your Certification Authority certificate, or your self signed certificate if using only one, to the trust store of your operating system.\n\n### Workarounds\n\nOne can ensure Sydent's emails fail to send by setting the configured SMTP server to a loopback or [non-routable](https://datatracker.ietf.org/doc/html/rfc1918#section-3) address under your control which does not have a listening SMTP server. For example:\n\n```yaml\nemail:\n    smtphost: \"localhost\"  # Assuming there is no SMTP server listening on localhost\n```\n\n### References\n\n- https://github.com/matrix-org/sydent/pull/574 implements the fix.\n- https://github.com/matrix-org/sydent/releases/tag/v2.5.6 is the release including this fix.\n- https://docs.python.org/3/library/ssl.html?highlight=ssl#security-considerations details the best-practice advice on how to use the standard library `smtp` module safely.\n- https://peps.python.org/pep-0476/ (accepted) proposed enabling TLS certificate verification by default  in standard library HTTP clients.\n- https://github.com/python/cpython/issues/91826 discusses enabling TLS certificate verification by default in the Python standard library, for SMTP and other protocols.\n\n## For more information\n\nIf you have any questions or comments about this advisory, e-mail us at [security@matrix.org](mailto:security@matrix.org).","fixed_in":["2.5.6"],"id":"GHSA-p6hw-wm59-3g5g","link":"https://osv.dev/vulnerability/GHSA-p6hw-wm59-3g5g","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-38686","GHSA-p6hw-wm59-3g5g"],"details":"Sydent is an identity server for the Matrix communications protocol. Prior to version 2.5.6, if configured to send emails using TLS, Sydent does not verify SMTP servers' certificates. This makes  Sydent's emails vulnerable to interception via a man-in-the-middle (MITM) attack. Attackers with privileged access to the network can intercept room invitations and address confirmation emails. This is patched in Sydent 2.5.6. When patching, make sure that Sydent trusts the certificate of the server it is connecting to. This should happen automatically when using properly issued certificates. Those who use self-signed certificates should make sure to copy their Certification Authority certificate, or their self signed certificate if using only one, to the trust store of your operating system. As a workaround, one can ensure Sydent's emails fail to send by setting the configured SMTP server to a loopback or non-routable address under one's control which does not have a listening SMTP server.","fixed_in":["2.5.6"],"id":"PYSEC-2023-139","link":"https://osv.dev/vulnerability/PYSEC-2023-139","source":"osv","summary":null,"withdrawn":null}]},"2.5.5":{"info":{"author":"Matrix.org Team and Contributors","author_email":"packages@matrix.org","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","License :: OSI Approved :: Apache Software License","Programming Language :: Python :: 3","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9"],"description_content_type":"text/x-rst","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/matrix-org/sydent","keywords":"","license":"Apache-2.0","maintainer":"","maintainer_email":"","name":"matrix-sydent","package_url":"https://pypi.org/project/matrix-sydent/","platform":null,"project_url":"https://pypi.org/project/matrix-sydent/","project_urls":{"Homepage":"https://github.com/matrix-org/sydent","Repository":"https://github.com/matrix-org/sydent"},"provides_extra":null,"release_url":"https://pypi.org/project/matrix-sydent/2.5.5/","requires_dist":["attrs (>=19.1.0)","jinja2 (>=3.0.0)","matrix-common (>=1.1.0,<2.0.0)","netaddr (>=0.7.0)","phonenumbers (>=8.12.32)","prometheus-client (>=0.4.0) ; extra == \"prometheus\"","pyOpenSSL (>=16.0.0)","pynacl (>=1.2.1)","pyyaml (>=3.11)","sentry-sdk (>=0.7.2) ; extra == \"sentry\"","service-identity (>=1.0.0)","signedjson (==1.1.1)","sortedcontainers (>=2.1.0)","twisted (>=18.4.0)","typing-extensions (>=3.7.4)","unpaddedbase64 (>=1.1.0)","zope.interface (>=4.6.0)"],"requires_python":">=3.7,<4.0","summary":"Reference Matrix Identity Verification and Lookup Server","version":"2.5.5","yanked":false,"yanked_reason":null},"last_serial":22507962,"urls":[{"comment_text":"","digests":{"blake2b_256":"740f5ec7a7e21eff0d895903ace4dfcf62447bdf37c3d9204a0a3e987329eda6","md5":"0280667ab68414ca8e55dba4c6e3d749","sha256":"82d0e13537c557e20f9489b569cf92ff21bd28585bfb2f62af9392710d60f5dc"},"downloads":-1,"filename":"matrix_sydent-2.5.5-py3-none-any.whl","has_sig":false,"md5_digest":"0280667ab68414ca8e55dba4c6e3d749","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7,<4.0","size":148631,"upload_time":"2023-06-22T14:12:23","upload_time_iso_8601":"2023-06-22T14:12:23.023217Z","url":"https://files.pythonhosted.org/packages/74/0f/5ec7a7e21eff0d895903ace4dfcf62447bdf37c3d9204a0a3e987329eda6/matrix_sydent-2.5.5-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"98c6966856bd7b1562a506b8c3a23709ee0ae0185c7a0532ad92081259b53b61","md5":"7c8cdc1ab4ea73eff08ba4593a280b98","sha256":"6af18befdbb46cf76ebcb803d112b19502b89f810b441956ccc7c4cc7b655677"},"downloads":-1,"filename":"matrix_sydent-2.5.5.tar.gz","has_sig":false,"md5_digest":"7c8cdc1ab4ea73eff08ba4593a280b98","packagetype":"sdist","python_version":"source","requires_python":">=3.7,<4.0","size":119463,"upload_time":"2023-06-22T14:12:26","upload_time_iso_8601":"2023-06-22T14:12:26.242143Z","url":"https://files.pythonhosted.org/packages/98/c6/966856bd7b1562a506b8c3a23709ee0ae0185c7a0532ad92081259b53b61/matrix_sydent-2.5.5.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2023-38686"],"details":"## Impact\n\nIf configured to send emails using TLS, Sydent does not verify SMTP servers' certificates. This makes  Sydent's emails vulnerable to interception via a [man-in-the-middle (MITM) attack](https://en.wikipedia.org/wiki/Man-in-the-middle_attack). Attackers with privileged access to the network can intercept room invitations and address confirmation emails.\n\nCVSS 3.1 overall score: 3.3 - [AV:A/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:N/CR:L/IR:L/AR:X/MAV:A/MAC:H/MPR:N/MUI:N/MS:C/MC:L/MI:L/MA:N](https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=AV:A/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:N/CR:L/IR:L/AR:X/MAV:A/MAC:H/MPR:N/MUI:N/MS:C/MC:L/MI:L/MA:N&version=3.1)\n\n_Reported by Martin Schobert, [Pentagrid AG](https://pentagrid.ch/)._\n\n### Details\n\nSydent can be configured to send emails over a TLS-encrypted socket by setting\n\n```yaml\nemail:\n    tlsmode: \"TLS\"  # or the legacy value \"SSL\"\n```\n\nin its config file. Alternatively it can be configured to use [Opportunistic TLS](https://en.wikipedia.org/wiki/Opportunistic_TLS) by setting\n\n```yaml\nemail:\n    tlsmode: \"STARTTLS\"\n```\n\nIn both situations, Sydent will encrypt its communication with the SMTP server when sending emails. **In affected versions, Sydent will not verify the destination server's certificate.**\n\n### Vulnerability \n\nSydent sends email for two purposes:\n- to inform a third party that they have been invited to a Matrix room by their email address; and\n- to verify that a given Matrix user controls an email address.\n\nTherefore, attackers capable of running a MITM attack can\n\n1. Intercept room invitations sent to an email address. The invitation includes \n   - the room ID and its avatar, and\n   - the inviter's username, displayname and their avatar, and\n   - credentials for a guest Matrix account on the inviter's homeserver.\n2. Intercept address ownership confirmation emails. This would allow the attacker to falsely claim ownership of the indented recipient's Matrix account, if that account was permitted to log in using an email address and no other authentication factors.\n\n\n### Patches\n\nThis is patched in [Sydent 2.5.6](https://github.com/matrix-org/sydent/releases/tag/v2.5.6), see PR https://github.com/matrix-org/sydent/pull/574.\n\nWhen patching, make sure that Sydent trusts the certificate of the server it is connecting to. This should happen automatically when using properly issued certificates. If you are using self-signed certificates, make sure to copy your Certification Authority certificate, or your self signed certificate if using only one, to the trust store of your operating system.\n\n### Workarounds\n\nOne can ensure Sydent's emails fail to send by setting the configured SMTP server to a loopback or [non-routable](https://datatracker.ietf.org/doc/html/rfc1918#section-3) address under your control which does not have a listening SMTP server. For example:\n\n```yaml\nemail:\n    smtphost: \"localhost\"  # Assuming there is no SMTP server listening on localhost\n```\n\n### References\n\n- https://github.com/matrix-org/sydent/pull/574 implements the fix.\n- https://github.com/matrix-org/sydent/releases/tag/v2.5.6 is the release including this fix.\n- https://docs.python.org/3/library/ssl.html?highlight=ssl#security-considerations details the best-practice advice on how to use the standard library `smtp` module safely.\n- https://peps.python.org/pep-0476/ (accepted) proposed enabling TLS certificate verification by default  in standard library HTTP clients.\n- https://github.com/python/cpython/issues/91826 discusses enabling TLS certificate verification by default in the Python standard library, for SMTP and other protocols.\n\n## For more information\n\nIf you have any questions or comments about this advisory, e-mail us at [security@matrix.org](mailto:security@matrix.org).","fixed_in":["2.5.6"],"id":"GHSA-p6hw-wm59-3g5g","link":"https://osv.dev/vulnerability/GHSA-p6hw-wm59-3g5g","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2023-38686","GHSA-p6hw-wm59-3g5g"],"details":"Sydent is an identity server for the Matrix communications protocol. Prior to version 2.5.6, if configured to send emails using TLS, Sydent does not verify SMTP servers' certificates. This makes  Sydent's emails vulnerable to interception via a man-in-the-middle (MITM) attack. Attackers with privileged access to the network can intercept room invitations and address confirmation emails. This is patched in Sydent 2.5.6. When patching, make sure that Sydent trusts the certificate of the server it is connecting to. This should happen automatically when using properly issued certificates. Those who use self-signed certificates should make sure to copy their Certification Authority certificate, or their self signed certificate if using only one, to the trust store of your operating system. As a workaround, one can ensure Sydent's emails fail to send by setting the configured SMTP server to a loopback or non-routable address under one's control which does not have a listening SMTP server.","fixed_in":["2.5.6"],"id":"PYSEC-2023-139","link":"https://osv.dev/vulnerability/PYSEC-2023-139","source":"osv","summary":null,"withdrawn":null}]},"2.5.6":{"info":{"author":"Matrix.org Team and Contributors","author_email":"packages@matrix.org","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","License :: OSI Approved :: Apache Software License","Programming Language :: Python :: 3","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9"],"description_content_type":"text/x-rst","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/matrix-org/sydent","keywords":"","license":"Apache-2.0","maintainer":"","maintainer_email":"","name":"matrix-sydent","package_url":"https://pypi.org/project/matrix-sydent/","platform":null,"project_url":"https://pypi.org/project/matrix-sydent/","project_urls":{"Homepage":"https://github.com/matrix-org/sydent","Repository":"https://github.com/matrix-org/sydent"},"provides_extra":null,"release_url":"https://pypi.org/project/matrix-sydent/2.5.6/","requires_dist":["attrs (>=19.1.0)","jinja2 (>=3.0.0)","matrix-common (>=1.1.0,<2.0.0)","netaddr (>=0.7.0)","phonenumbers (>=8.12.32)","prometheus-client (>=0.4.0) ; extra == \"prometheus\"","pyOpenSSL (>=16.0.0)","pynacl (>=1.2.1)","pyyaml (>=3.11)","sentry-sdk (>=0.7.2) ; extra == \"sentry\"","service-identity (>=1.0.0)","signedjson (==1.1.1)","sortedcontainers (>=2.1.0)","twisted (>=18.4.0)","typing-extensions (>=3.7.4)","unpaddedbase64 (>=1.1.0)","zope.interface (>=4.6.0)"],"requires_python":">=3.7,<4.0","summary":"Reference Matrix Identity Verification and Lookup Server","version":"2.5.6","yanked":false,"yanked_reason":null},"last_serial":22507962,"urls":[{"comment_text":"","digests":{"blake2b_256":"da887c0fab55532c743040e235c78707c7f7a9d46e41d7ada71e4e25ca38c743","md5":"50c33fab85e8f877ece36301b3e82280","sha256":"c0ccd67dee46e04dc79232e3ba855b11b4664b73a95e2c250c08c3b108f63e36"},"downloads":-1,"filename":"matrix_sydent-2.5.6-py3-none-any.whl","has_sig":false,"md5_digest":"50c33fab85e8f877ece36301b3e82280","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7,<4.0","size":148742,"upload_time":"2023-07-31T11:00:20","upload_time_iso_8601":"2023-07-31T11:00:20.189516Z","url":"https://files.pythonhosted.org/packages/da/88/7c0fab55532c743040e235c78707c7f7a9d46e41d7ada71e4e25ca38c743/matrix_sydent-2.5.6-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"a3bb3b5df7154ce8f1444527160097d6f1103fc94b487b7d8f2d0ca235c8e4e6","md5":"244e64528178fe730f14c978b7d46dda","sha256":"bddec8cde7addd63ed72ced188695825b04ea70e672b029fbc38ce80436fb726"},"downloads":-1,"filename":"matrix_sydent-2.5.6.tar.gz","has_sig":false,"md5_digest":"244e64528178fe730f14c978b7d46dda","packagetype":"sdist","python_version":"source","requires_python":">=3.7,<4.0","size":119564,"upload_time":"2023-07-31T11:00:22","upload_time_iso_8601":"2023-07-31T11:00:22.534345Z","url":"https://files.pythonhosted.org/packages/a3/bb/3b5df7154ce8f1444527160097d6f1103fc94b487b7d8f2d0ca235c8e4e6/matrix_sydent-2.5.6.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2.6.0":{"info":{"author":"Matrix.org Team and Contributors","author_email":"packages@matrix.org","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","License :: OSI Approved :: Apache Software License","Programming Language :: Python :: 3","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9"],"description_content_type":"text/x-rst","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/matrix-org/sydent","keywords":"","license":"Apache-2.0","maintainer":"","maintainer_email":"","name":"matrix-sydent","package_url":"https://pypi.org/project/matrix-sydent/","platform":null,"project_url":"https://pypi.org/project/matrix-sydent/","project_urls":{"Homepage":"https://github.com/matrix-org/sydent","Repository":"https://github.com/matrix-org/sydent"},"provides_extra":null,"release_url":"https://pypi.org/project/matrix-sydent/2.6.0/","requires_dist":["attrs (>=19.1.0)","jinja2 (>=3.0.0)","matrix-common (>=1.1.0,<2.0.0)","netaddr (>=0.7.0)","phonenumbers (>=8.12.32)","prometheus-client (>=0.4.0) ; extra == \"prometheus\"","pyOpenSSL (>=16.0.0)","pynacl (>=1.2.1)","pyyaml (>=3.11)","sentry-sdk (>=0.7.2) ; extra == \"sentry\"","service-identity (>=1.0.0)","signedjson (==1.1.1)","sortedcontainers (>=2.1.0)","twisted (>=18.4.0)","typing-extensions (>=3.7.4)","unpaddedbase64 (>=1.1.0)","zope.interface (>=4.6.0)"],"requires_python":">=3.7,<4.0","summary":"Reference Matrix Identity Verification and Lookup Server","version":"2.6.0","yanked":false,"yanked_reason":null},"last_serial":22507962,"urls":[{"comment_text":"","digests":{"blake2b_256":"011f2d36d6e7c0be8c3935665200a1a4165a0fc4de055f168aec35277c88a18f","md5":"5c4ef3497d002f0b71925b83ebbec05b","sha256":"33b8f6873ba13c8a035790ec4771fc47622b549cbc2a92190c01cc74fcc0485c"},"downloads":-1,"filename":"matrix_sydent-2.6.0-py3-none-any.whl","has_sig":false,"md5_digest":"5c4ef3497d002f0b71925b83ebbec05b","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7,<4.0","size":148862,"upload_time":"2023-11-20T16:26:12","upload_time_iso_8601":"2023-11-20T16:26:12.026098Z","url":"https://files.pythonhosted.org/packages/01/1f/2d36d6e7c0be8c3935665200a1a4165a0fc4de055f168aec35277c88a18f/matrix_sydent-2.6.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"e4b7f4f965b0c5c1ee1edc7916adb676ede9cc434bd67fbc33429f9ce6e72fb6","md5":"a44bc2acf498641632e7afb036ee9d33","sha256":"76244b311e53508b4ea45c98111f3b396be81d1a51ce54e16e22de42650c5dc8"},"downloads":-1,"filename":"matrix_sydent-2.6.0.tar.gz","has_sig":false,"md5_digest":"a44bc2acf498641632e7afb036ee9d33","packagetype":"sdist","python_version":"source","requires_python":">=3.7,<4.0","size":119662,"upload_time":"2023-11-20T16:26:13","upload_time_iso_8601":"2023-11-20T16:26:13.620476Z","url":"https://files.pythonhosted.org/packages/e4/b7/f4f965b0c5c1ee1edc7916adb676ede9cc434bd67fbc33429f9ce6e72fb6/matrix_sydent-2.6.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"2.6.1":{"info":{"author":"Matrix.org Team and Contributors","author_email":"packages@matrix.org","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","License :: OSI Approved :: Apache Software License","Programming Language :: Python :: 3","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9"],"description_content_type":"text/x-rst","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/matrix-org/sydent","keywords":"","license":"Apache-2.0","maintainer":"","maintainer_email":"","name":"matrix-sydent","package_url":"https://pypi.org/project/matrix-sydent/","platform":null,"project_url":"https://pypi.org/project/matrix-sydent/","project_urls":{"Homepage":"https://github.com/matrix-org/sydent","Repository":"https://github.com/matrix-org/sydent"},"provides_extra":null,"release_url":"https://pypi.org/project/matrix-sydent/2.6.1/","requires_dist":["attrs (>=19.1.0)","jinja2 (>=3.0.0)","matrix-common (>=1.1.0,<2.0.0)","netaddr (>=0.7.0)","phonenumbers (>=8.12.32)","prometheus-client (>=0.4.0) ; extra == \"prometheus\"","pyOpenSSL (>=16.0.0)","pynacl (>=1.2.1)","pyyaml (>=3.11)","sentry-sdk (>=0.7.2) ; extra == \"sentry\"","service-identity (>=1.0.0)","signedjson (==1.1.1)","sortedcontainers (>=2.1.0)","twisted (>=18.4.0)","typing-extensions (>=3.7.4)","unpaddedbase64 (>=1.1.0)","zope.interface (>=4.6.0)"],"requires_python":">=3.7,<4.0","summary":"Reference Matrix Identity Verification and Lookup Server","version":"2.6.1","yanked":false,"yanked_reason":null},"last_serial":22507962,"urls":[{"comment_text":"","digests":{"blake2b_256":"2308f42993b61e3b87e1402c4c2fa6c48365cff2ef601a4d930db900d4d05d26","md5":"3aef2a6dd6460eb3dca51adbe39c8d50","sha256":"cb7495c377a1a4ded48bd5485c667d38a1cae0b1563653f9987c753e07e6e43f"},"downloads":-1,"filename":"matrix_sydent-2.6.1-py3-none-any.whl","has_sig":false,"md5_digest":"3aef2a6dd6460eb3dca51adbe39c8d50","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7,<4.0","size":148860,"upload_time":"2023-11-20T20:43:01","upload_time_iso_8601":"2023-11-20T20:43:01.923891Z","url":"https://files.pythonhosted.org/packages/23/08/f42993b61e3b87e1402c4c2fa6c48365cff2ef601a4d930db900d4d05d26/matrix_sydent-2.6.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"11867641a42b83e1e784aba2acc94676205728fc2bf39d23597711b0bb3029b6","md5":"ee9db2908fb0503cb76663324d46aa26","sha256":"957696277f452367acff431c5d4be692c016871cb26ee0641c55f1c875240b9d"},"downloads":-1,"filename":"matrix_sydent-2.6.1.tar.gz","has_sig":false,"md5_digest":"ee9db2908fb0503cb76663324d46aa26","packagetype":"sdist","python_version":"source","requires_python":">=3.7,<4.0","size":119685,"upload_time":"2023-11-20T20:43:03","upload_time_iso_8601":"2023-11-20T20:43:03.889903Z","url":"https://files.pythonhosted.org/packages/11/86/7641a42b83e1e784aba2acc94676205728fc2bf39d23597711b0bb3029b6/matrix_sydent-2.6.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}}