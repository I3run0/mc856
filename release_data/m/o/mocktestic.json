{"0.0.1":{"info":{"author":"Victor Augusto do Carmo","author_email":"Victoraugustodocarmo32@gmail.com","bugtrack_url":null,"classifiers":[],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"mockTest","license":"MIT License","maintainer":"","maintainer_email":"","name":"mockTestIC","package_url":"https://pypi.org/project/mockTestIC/","platform":null,"project_url":"https://pypi.org/project/mockTestIC/","project_urls":null,"provides_extra":null,"release_url":"https://pypi.org/project/mockTestIC/0.0.1/","requires_dist":["pydantic","faker","typing","setuptools"],"requires_python":"","summary":"O código utiliza a biblioteca Faker para gerar dados fictícios com base em um mapeamento pré-definido. A função fakeJson recebe um dicionário representando dados em formato JSON e substitui os valores associados às chaves de acordo com o mapeamento fornecido. Cada chave do JSON é mapeada para uma função correspondente da biblioteca Faker, gerando assim dados fictícios variados, como nomes, endereços, datas e números. Se uma chave não estiver no mapeamento, a função levanta uma exceção de valor inválido.","version":"0.0.1","yanked":false,"yanked_reason":null},"last_serial":21658704,"urls":[{"comment_text":"","digests":{"blake2b_256":"8cb04fe1e1b6f2ef582b706fe9cd805f75fcf8c47a1bf5f741b84ea7dd5520e6","md5":"a19ae1b4842891815d7c587042cfa36e","sha256":"e4e4cf7fcd891d00352a8b6a7c48eaa12ddc7edac91db4fc00e9893a66b7652c"},"downloads":-1,"filename":"mockTestIC-0.0.1-py3-none-any.whl","has_sig":false,"md5_digest":"a19ae1b4842891815d7c587042cfa36e","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":3324,"upload_time":"2023-12-18T17:17:09","upload_time_iso_8601":"2023-12-18T17:17:09.254455Z","url":"https://files.pythonhosted.org/packages/8c/b0/4fe1e1b6f2ef582b706fe9cd805f75fcf8c47a1bf5f741b84ea7dd5520e6/mockTestIC-0.0.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"bb1ee2ddfe05cf28bd148e32015999d0f9b43055559b6fde68309826d217c291","md5":"a984154115135b7bcd3b0aeac8ab3c01","sha256":"63871b644aafa3796215aa0bcb30f0a00c06c2b00e07b642c6fca04cb7098098"},"downloads":-1,"filename":"mockTestIC-0.0.1.tar.gz","has_sig":false,"md5_digest":"a984154115135b7bcd3b0aeac8ab3c01","packagetype":"sdist","python_version":"source","requires_python":null,"size":2987,"upload_time":"2023-12-18T17:17:10","upload_time_iso_8601":"2023-12-18T17:17:10.581191Z","url":"https://files.pythonhosted.org/packages/bb/1e/e2ddfe05cf28bd148e32015999d0f9b43055559b6fde68309826d217c291/mockTestIC-0.0.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"0.0.2":{"info":{"author":"Victor Augusto do Carmo","author_email":"Victoraugustodocarmo32@gmail.com","bugtrack_url":null,"classifiers":[],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"mockTest","license":"MIT License","maintainer":"","maintainer_email":"","name":"mockTestIC","package_url":"https://pypi.org/project/mockTestIC/","platform":null,"project_url":"https://pypi.org/project/mockTestIC/","project_urls":null,"provides_extra":null,"release_url":"https://pypi.org/project/mockTestIC/0.0.2/","requires_dist":["pydantic","faker","typing","setuptools"],"requires_python":"","summary":"O código utiliza a biblioteca Faker para gerar dados fictícios com base em um mapeamento pré-definido. A função fakeJson recebe um dicionário representando dados em formato JSON e substitui os valores associados às chaves de acordo com o mapeamento fornecido. Cada chave do JSON é mapeada para uma função correspondente da biblioteca Faker, gerando assim dados fictícios variados, como nomes, endereços, datas e números. Se uma chave não estiver no mapeamento, a função levanta uma exceção de valor inválido.","version":"0.0.2","yanked":false,"yanked_reason":null},"last_serial":21658704,"urls":[{"comment_text":"","digests":{"blake2b_256":"c03e0c03119ed6dc62c4a29d24b89493ad8e82415e5f90bcc4a58b2a22502639","md5":"0c7e9e5f45238045c78042c533d4ba98","sha256":"5bd4eca9e62bb28b40840685575128eb99387108a9a9c3de915ce96717c27cf7"},"downloads":-1,"filename":"mockTestIC-0.0.2-py3-none-any.whl","has_sig":false,"md5_digest":"0c7e9e5f45238045c78042c533d4ba98","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":4847,"upload_time":"2023-12-18T18:46:59","upload_time_iso_8601":"2023-12-18T18:46:59.727665Z","url":"https://files.pythonhosted.org/packages/c0/3e/0c03119ed6dc62c4a29d24b89493ad8e82415e5f90bcc4a58b2a22502639/mockTestIC-0.0.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"0291754179329790215c6869b392f539aca5ad342e3d9117e6ad350cdb67896e","md5":"6882c32c77fb4561b83d1d282db6ac68","sha256":"68044c7cc2f459eb317ad512a4014fd8e3cc6159e077408a2a8764bedb4acaaa"},"downloads":-1,"filename":"mockTestIC-0.0.2.tar.gz","has_sig":false,"md5_digest":"6882c32c77fb4561b83d1d282db6ac68","packagetype":"sdist","python_version":"source","requires_python":null,"size":4156,"upload_time":"2023-12-18T18:47:01","upload_time_iso_8601":"2023-12-18T18:47:01.369732Z","url":"https://files.pythonhosted.org/packages/02/91/754179329790215c6869b392f539aca5ad342e3d9117e6ad350cdb67896e/mockTestIC-0.0.2.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"0.0.3":{"info":{"author":"Victor Augusto do Carmo","author_email":"Victoraugustodocarmo32@gmail.com","bugtrack_url":null,"classifiers":[],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"mockTest","license":"MIT License","maintainer":"","maintainer_email":"","name":"mockTestIC","package_url":"https://pypi.org/project/mockTestIC/","platform":null,"project_url":"https://pypi.org/project/mockTestIC/","project_urls":null,"provides_extra":null,"release_url":"https://pypi.org/project/mockTestIC/0.0.3/","requires_dist":["pydantic","faker","typing","setuptools"],"requires_python":"","summary":"O código utiliza a biblioteca Faker para gerar dados fictícios com base em um mapeamento pré-definido. A função fakeJson recebe um dicionário representando dados em formato JSON e substitui os valores associados às chaves de acordo com o mapeamento fornecido. Cada chave do JSON é mapeada para uma função correspondente da biblioteca Faker, gerando assim dados fictícios variados, como nomes, endereços, datas e números. Se uma chave não estiver no mapeamento, a função levanta uma exceção de valor inválido.","version":"0.0.3","yanked":false,"yanked_reason":null},"last_serial":21658704,"urls":[{"comment_text":"","digests":{"blake2b_256":"dc3ee0e5906dcaef87ad2c44d9b87736456c55f257a53d527604dd9d66070e06","md5":"43a54ea7bda687af825e6821d0e99a0c","sha256":"84ccc84fc01f1b2374114fd215018bcdf75bdf6933f84927da5af453c1b0e383"},"downloads":-1,"filename":"mockTestIC-0.0.3-py3-none-any.whl","has_sig":false,"md5_digest":"43a54ea7bda687af825e6821d0e99a0c","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":4838,"upload_time":"2024-01-03T01:43:43","upload_time_iso_8601":"2024-01-03T01:43:43.087955Z","url":"https://files.pythonhosted.org/packages/dc/3e/e0e5906dcaef87ad2c44d9b87736456c55f257a53d527604dd9d66070e06/mockTestIC-0.0.3-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"3108e73636bda29a5a282096bffb7bc7ac6a2fd37267cf1b5cea790c73d2a368","md5":"d9c5afc2b1b81e65851de29fb7a89920","sha256":"fda70d9bcb56d5bd3122a9f1044025a5d7249f4daf6aff3e62108af94d0c8508"},"downloads":-1,"filename":"mockTestIC-0.0.3.tar.gz","has_sig":false,"md5_digest":"d9c5afc2b1b81e65851de29fb7a89920","packagetype":"sdist","python_version":"source","requires_python":null,"size":4158,"upload_time":"2024-01-03T01:43:45","upload_time_iso_8601":"2024-01-03T01:43:45.064869Z","url":"https://files.pythonhosted.org/packages/31/08/e73636bda29a5a282096bffb7bc7ac6a2fd37267cf1b5cea790c73d2a368/mockTestIC-0.0.3.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"0.0.4":{"info":{"author":"Victor Augusto do Carmo","author_email":"Victoraugustodocarmo32@gmail.com","bugtrack_url":null,"classifiers":[],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"mockTest","license":"MIT License","maintainer":"","maintainer_email":"","name":"mockTestIC","package_url":"https://pypi.org/project/mockTestIC/","platform":null,"project_url":"https://pypi.org/project/mockTestIC/","project_urls":null,"provides_extra":null,"release_url":"https://pypi.org/project/mockTestIC/0.0.4/","requires_dist":["pydantic","faker","typing","setuptools"],"requires_python":"","summary":"O código utiliza a biblioteca Faker para gerar dados fictícios com base em um mapeamento pré-definido. A função fakeJson recebe um dicionário representando dados em formato JSON e substitui os valores associados às chaves de acordo com o mapeamento fornecido. Cada chave do JSON é mapeada para uma função correspondente da biblioteca Faker, gerando assim dados fictícios variados, como nomes, endereços, datas e números. Se uma chave não estiver no mapeamento, a função levanta uma exceção de valor inválido.","version":"0.0.4","yanked":false,"yanked_reason":null},"last_serial":21658704,"urls":[{"comment_text":"","digests":{"blake2b_256":"b5d70c94d0ab3dcb520ebc81e8a2dec8bc81f16409cdb552558b8f6dd79c55e1","md5":"012e09799d37f911d5a98d938208cdf0","sha256":"2e34272ad50d28bcd0ecf3e75163fa6b714ff18fd3abf92920424fe3b5e749cf"},"downloads":-1,"filename":"mockTestIC-0.0.4-py3-none-any.whl","has_sig":false,"md5_digest":"012e09799d37f911d5a98d938208cdf0","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":4998,"upload_time":"2024-01-03T02:10:27","upload_time_iso_8601":"2024-01-03T02:10:27.192580Z","url":"https://files.pythonhosted.org/packages/b5/d7/0c94d0ab3dcb520ebc81e8a2dec8bc81f16409cdb552558b8f6dd79c55e1/mockTestIC-0.0.4-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"3c640b3c14c9e490a9e58bfec921b7dfeed2d7ade085fe79d44c2786679341f7","md5":"dcf63498ea603d75e404af566de61658","sha256":"4ef3344d4324e0920a9a74e3f8da216a4662c2052a0e567eb3dc2e7de9f58c52"},"downloads":-1,"filename":"mockTestIC-0.0.4.tar.gz","has_sig":false,"md5_digest":"dcf63498ea603d75e404af566de61658","packagetype":"sdist","python_version":"source","requires_python":null,"size":4342,"upload_time":"2024-01-03T02:10:29","upload_time_iso_8601":"2024-01-03T02:10:29.125326Z","url":"https://files.pythonhosted.org/packages/3c/64/0b3c14c9e490a9e58bfec921b7dfeed2d7ade085fe79d44c2786679341f7/mockTestIC-0.0.4.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"0.0.5":{"info":{"author":"Victor Augusto do Carmo","author_email":"Victoraugustodocarmo32@gmail.com","bugtrack_url":null,"classifiers":[],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"mockTest","license":"MIT License","maintainer":"","maintainer_email":"","name":"mockTestIC","package_url":"https://pypi.org/project/mockTestIC/","platform":null,"project_url":"https://pypi.org/project/mockTestIC/","project_urls":null,"provides_extra":null,"release_url":"https://pypi.org/project/mockTestIC/0.0.5/","requires_dist":["pydantic","faker","typing","setuptools"],"requires_python":"","summary":"O código utiliza a biblioteca Faker para gerar dados fictícios com base em um mapeamento pré-definido. A função fakeJson recebe um dicionário representando dados em formato JSON e substitui os valores associados às chaves de acordo com o mapeamento fornecido. Cada chave do JSON é mapeada para uma função correspondente da biblioteca Faker, gerando assim dados fictícios variados, como nomes, endereços, datas e números. Se uma chave não estiver no mapeamento, a função levanta uma exceção de valor inválido.","version":"0.0.5","yanked":false,"yanked_reason":null},"last_serial":21658704,"urls":[{"comment_text":"","digests":{"blake2b_256":"822c764705ffea26e9e90726aed20b6b32dbb385602f177e69d94db0c05d1df5","md5":"03cbf85b99ac4a3755d3e35834a1d4ff","sha256":"dae5390f495bd29aced04380d8e7805e9525320249ea4e4852c19281badba854"},"downloads":-1,"filename":"mockTestIC-0.0.5-py3-none-any.whl","has_sig":false,"md5_digest":"03cbf85b99ac4a3755d3e35834a1d4ff","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":4848,"upload_time":"2024-01-05T03:30:37","upload_time_iso_8601":"2024-01-05T03:30:37.839094Z","url":"https://files.pythonhosted.org/packages/82/2c/764705ffea26e9e90726aed20b6b32dbb385602f177e69d94db0c05d1df5/mockTestIC-0.0.5-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"15d6de76b14fee0788cba4633929af465e0d6cd1797b772a1a1281a54e73b1f9","md5":"a787dfcb1891316c6b283958a4b088aa","sha256":"29cc14968bdbe8ba2b992741c0ba3d0c63019c071449760f16d4c6952cfa1fd4"},"downloads":-1,"filename":"mockTestIC-0.0.5.tar.gz","has_sig":false,"md5_digest":"a787dfcb1891316c6b283958a4b088aa","packagetype":"sdist","python_version":"source","requires_python":null,"size":4231,"upload_time":"2024-01-05T03:30:40","upload_time_iso_8601":"2024-01-05T03:30:40.375822Z","url":"https://files.pythonhosted.org/packages/15/d6/de76b14fee0788cba4633929af465e0d6cd1797b772a1a1281a54e73b1f9/mockTestIC-0.0.5.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"0.0.6":{"info":{"author":"Victor Augusto do Carmo","author_email":"Victoraugustodocarmo32@gmail.com","bugtrack_url":null,"classifiers":[],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"mockTest","license":"MIT License","maintainer":"","maintainer_email":"","name":"mockTestIC","package_url":"https://pypi.org/project/mockTestIC/","platform":null,"project_url":"https://pypi.org/project/mockTestIC/","project_urls":null,"provides_extra":null,"release_url":"https://pypi.org/project/mockTestIC/0.0.6/","requires_dist":["pydantic","faker","typing","setuptools"],"requires_python":"","summary":"O código utiliza a biblioteca Faker para gerar dados fictícios com base em um mapeamento pré-definido. A função fakeJson recebe um dicionário representando dados em formato JSON e substitui os valores associados às chaves de acordo com o mapeamento fornecido. Cada chave do JSON é mapeada para uma função correspondente da biblioteca Faker, gerando assim dados fictícios variados, como nomes, endereços, datas e números. Se uma chave não estiver no mapeamento, a função levanta uma exceção de valor inválido.","version":"0.0.6","yanked":false,"yanked_reason":null},"last_serial":21658704,"urls":[{"comment_text":"","digests":{"blake2b_256":"920a905e438f23bbcaf52b0899b59db4da2364bc66f2297120a3c950351980f9","md5":"8a6fa4de41910261fe61d0797caa6475","sha256":"2a6b525f7e5fd2355c47034768a04887413de241fab821abfc70d5e734a09738"},"downloads":-1,"filename":"mockTestIC-0.0.6-py3-none-any.whl","has_sig":false,"md5_digest":"8a6fa4de41910261fe61d0797caa6475","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":5456,"upload_time":"2024-01-10T16:37:49","upload_time_iso_8601":"2024-01-10T16:37:49.899088Z","url":"https://files.pythonhosted.org/packages/92/0a/905e438f23bbcaf52b0899b59db4da2364bc66f2297120a3c950351980f9/mockTestIC-0.0.6-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"198cbd1ed6b87f0b98cbf5ea2d7264d8067d6e8a5837a31b3c12cb406d4cebce","md5":"a4c10162a7fe37382e5a656287622fb7","sha256":"a957cbc800ac1fd5f7d0b06b673f208ca1bd290e562830268b5436523d3fb7d2"},"downloads":-1,"filename":"mockTestIC-0.0.6.tar.gz","has_sig":false,"md5_digest":"a4c10162a7fe37382e5a656287622fb7","packagetype":"sdist","python_version":"source","requires_python":null,"size":4871,"upload_time":"2024-01-10T16:38:43","upload_time_iso_8601":"2024-01-10T16:38:43.470426Z","url":"https://files.pythonhosted.org/packages/19/8c/bd1ed6b87f0b98cbf5ea2d7264d8067d6e8a5837a31b3c12cb406d4cebce/mockTestIC-0.0.6.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"0.0.7":{"info":{"author":"Victor Augusto do Carmo","author_email":"Victoraugustodocarmo32@gmail.com","bugtrack_url":null,"classifiers":[],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"mockTest","license":"MIT License","maintainer":"","maintainer_email":"","name":"mockTestIC","package_url":"https://pypi.org/project/mockTestIC/","platform":null,"project_url":"https://pypi.org/project/mockTestIC/","project_urls":null,"provides_extra":null,"release_url":"https://pypi.org/project/mockTestIC/0.0.7/","requires_dist":["pydantic","faker","typing","setuptools"],"requires_python":"","summary":"O código utiliza a biblioteca Faker para gerar dados fictícios com base em um mapeamento pré-definido. A função fakeJson recebe um dicionário representando dados em formato JSON e substitui os valores associados às chaves de acordo com o mapeamento fornecido. Cada chave do JSON é mapeada para uma função correspondente da biblioteca Faker, gerando assim dados fictícios variados, como nomes, endereços, datas e números. Se uma chave não estiver no mapeamento, a função levanta uma exceção de valor inválido.","version":"0.0.7","yanked":false,"yanked_reason":null},"last_serial":21658704,"urls":[{"comment_text":"","digests":{"blake2b_256":"6312e2405076d4b689703a3d0f8ab07298ad29f560ca529557b94d1a713b0703","md5":"0dd69de76e000f6dbf2edb6b7b349747","sha256":"cd7ed0520edfeed7fc9cbc29f5b7e3d3ce422820598b3df62e7531b7c8c1932a"},"downloads":-1,"filename":"mockTestIC-0.0.7-py3-none-any.whl","has_sig":false,"md5_digest":"0dd69de76e000f6dbf2edb6b7b349747","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":6033,"upload_time":"2024-01-10T18:22:28","upload_time_iso_8601":"2024-01-10T18:22:28.041270Z","url":"https://files.pythonhosted.org/packages/63/12/e2405076d4b689703a3d0f8ab07298ad29f560ca529557b94d1a713b0703/mockTestIC-0.0.7-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"631c58cf8f9bb5a573eee9be6124274f59668c091a125880e0cd7367bd2715ee","md5":"2b17f377aaccadc8b168f390e4790ab2","sha256":"69c8699c3c8233fec4ce8865ff855979eca044b1607d4c5f71984f78d6027f89"},"downloads":-1,"filename":"mockTestIC-0.0.7.tar.gz","has_sig":false,"md5_digest":"2b17f377aaccadc8b168f390e4790ab2","packagetype":"sdist","python_version":"source","requires_python":null,"size":5206,"upload_time":"2024-01-10T18:22:30","upload_time_iso_8601":"2024-01-10T18:22:30.779654Z","url":"https://files.pythonhosted.org/packages/63/1c/58cf8f9bb5a573eee9be6124274f59668c091a125880e0cd7367bd2715ee/mockTestIC-0.0.7.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"0.0.8":{"info":{"author":"Victor Augusto do Carmo","author_email":"Victoraugustodocarmo32@gmail.com","bugtrack_url":null,"classifiers":[],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"mockTest","license":"MIT License","maintainer":"","maintainer_email":"","name":"mockTestIC","package_url":"https://pypi.org/project/mockTestIC/","platform":null,"project_url":"https://pypi.org/project/mockTestIC/","project_urls":null,"provides_extra":null,"release_url":"https://pypi.org/project/mockTestIC/0.0.8/","requires_dist":["pydantic","faker","typing","setuptools"],"requires_python":"","summary":"O código utiliza a biblioteca Faker para gerar dados fictícios com base em um mapeamento pré-definido. A função fakeJson recebe um dicionário representando dados em formato JSON e substitui os valores associados às chaves de acordo com o mapeamento fornecido. Cada chave do JSON é mapeada para uma função correspondente da biblioteca Faker, gerando assim dados fictícios variados, como nomes, endereços, datas e números. Se uma chave não estiver no mapeamento, a função levanta uma exceção de valor inválido.","version":"0.0.8","yanked":false,"yanked_reason":null},"last_serial":21658704,"urls":[{"comment_text":"","digests":{"blake2b_256":"355d98bb97bd264897be88f148498dbda30d0bc55b79b08cfb2b62c640d7a64b","md5":"4967c7b53c62b75c38117d538b442a85","sha256":"2dc827b47f0389ecd40ccdf41eb1d04c1dfbe63924d1081b26cc160bcf3aa9f1"},"downloads":-1,"filename":"mockTestIC-0.0.8-py3-none-any.whl","has_sig":false,"md5_digest":"4967c7b53c62b75c38117d538b442a85","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":6144,"upload_time":"2024-01-25T18:07:06","upload_time_iso_8601":"2024-01-25T18:07:06.935948Z","url":"https://files.pythonhosted.org/packages/35/5d/98bb97bd264897be88f148498dbda30d0bc55b79b08cfb2b62c640d7a64b/mockTestIC-0.0.8-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"a9cad4b3be24a285dc2d9e80ff693f380f4b4c43b39317e844d7ceedf7436f87","md5":"7219dd10ac9ff88d7afd4de81b38a295","sha256":"90effa98fecd91c06f046a26dd1d07c2330ae1396183cb8402662e59cca80cf1"},"downloads":-1,"filename":"mockTestIC-0.0.8.tar.gz","has_sig":false,"md5_digest":"7219dd10ac9ff88d7afd4de81b38a295","packagetype":"sdist","python_version":"source","requires_python":null,"size":5267,"upload_time":"2024-01-25T18:07:10","upload_time_iso_8601":"2024-01-25T18:07:10.826909Z","url":"https://files.pythonhosted.org/packages/a9/ca/d4b3be24a285dc2d9e80ff693f380f4b4c43b39317e844d7ceedf7436f87/mockTestIC-0.0.8.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"3.0.10":{"info":{"author":"Victor Augusto do Carmo","author_email":"Victoraugustodocarmo32@gmail.com","bugtrack_url":null,"classifiers":[],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"mockTest,dados falsos,insert de dados falsos,dados ficticios,SQL,gerador de dados,false data,fictitious data,data,dados,data generator","license":"MIT License","maintainer":"","maintainer_email":"","name":"mockTestIC","package_url":"https://pypi.org/project/mockTestIC/","platform":null,"project_url":"https://pypi.org/project/mockTestIC/","project_urls":null,"provides_extra":null,"release_url":"https://pypi.org/project/mockTestIC/3.0.10/","requires_dist":["pydantic","faker","typing","setuptools"],"requires_python":"","summary":"O código utiliza a biblioteca Faker para gerar dados fictícios com base em um mapeamento pré-definido. A função fakeJson recebe um dicionário representando dados em formato JSON e substitui os valores associados às chaves de acordo com o mapeamento fornecido. Cada chave do JSON é mapeada para uma função correspondente da biblioteca Faker, gerando assim dados fictícios variados, como nomes, endereços, datas e números. Se uma chave não estiver no mapeamento, a função levanta uma exceção de valor inválido.","version":"3.0.10","yanked":false,"yanked_reason":null},"last_serial":21658704,"urls":[{"comment_text":"","digests":{"blake2b_256":"d5eec4fd7a38cbddfa14eb0c233f0ef84371383f4359a9d29fed2ece34eec862","md5":"298a0d807a995bb515b65ba0bd137e46","sha256":"e91b6acc223260437947e1f296d3f974cf58646c28fececb8b086fac2358b91a"},"downloads":-1,"filename":"mockTestIC-3.0.10-py3-none-any.whl","has_sig":false,"md5_digest":"298a0d807a995bb515b65ba0bd137e46","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":6224,"upload_time":"2024-01-30T19:10:39","upload_time_iso_8601":"2024-01-30T19:10:39.825687Z","url":"https://files.pythonhosted.org/packages/d5/ee/c4fd7a38cbddfa14eb0c233f0ef84371383f4359a9d29fed2ece34eec862/mockTestIC-3.0.10-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"9bb59f04e2f4217ddf63b85d3d20d25b446508f15868c8df7cd4d9d65f25eac4","md5":"462d3aa31d2f9d5388cc51f469037558","sha256":"aead157868353345181aab2299d7a11a4ec67ed45e0069e2134d478e2cd04706"},"downloads":-1,"filename":"mockTestIC-3.0.10.tar.gz","has_sig":false,"md5_digest":"462d3aa31d2f9d5388cc51f469037558","packagetype":"sdist","python_version":"source","requires_python":null,"size":5497,"upload_time":"2024-01-30T19:10:45","upload_time_iso_8601":"2024-01-30T19:10:45.141624Z","url":"https://files.pythonhosted.org/packages/9b/b5/9f04e2f4217ddf63b85d3d20d25b446508f15868c8df7cd4d9d65f25eac4/mockTestIC-3.0.10.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"3.0.6":{"info":{"author":"Victor Augusto do Carmo","author_email":"Victoraugustodocarmo32@gmail.com","bugtrack_url":null,"classifiers":[],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"mockTest,dados falsos,insert de dados falsos,dados ficticios,SQL,gerador de dados,false data,fictitious data,data,dados,data generator","license":"MIT License","maintainer":"","maintainer_email":"","name":"mockTestIC","package_url":"https://pypi.org/project/mockTestIC/","platform":null,"project_url":"https://pypi.org/project/mockTestIC/","project_urls":null,"provides_extra":null,"release_url":"https://pypi.org/project/mockTestIC/3.0.6/","requires_dist":["pydantic","faker","typing","setuptools"],"requires_python":"","summary":"O código utiliza a biblioteca Faker para gerar dados fictícios com base em um mapeamento pré-definido. A função fakeJson recebe um dicionário representando dados em formato JSON e substitui os valores associados às chaves de acordo com o mapeamento fornecido. Cada chave do JSON é mapeada para uma função correspondente da biblioteca Faker, gerando assim dados fictícios variados, como nomes, endereços, datas e números. Se uma chave não estiver no mapeamento, a função levanta uma exceção de valor inválido.","version":"3.0.6","yanked":false,"yanked_reason":null},"last_serial":21658704,"urls":[{"comment_text":"","digests":{"blake2b_256":"dc0ace5c3ed5bd9a6b398fea5c959237e9b96c19f94d43ab0b9e36e790e61f2c","md5":"f24dd2027ecd366ba450ab0e359027e6","sha256":"b9f303f685504aea1d5a9aaf6451a483453e63878597c1ff900dd8525859dc32"},"downloads":-1,"filename":"mockTestIC-3.0.6-py3-none-any.whl","has_sig":false,"md5_digest":"f24dd2027ecd366ba450ab0e359027e6","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":6192,"upload_time":"2024-01-25T18:16:00","upload_time_iso_8601":"2024-01-25T18:16:00.425504Z","url":"https://files.pythonhosted.org/packages/dc/0a/ce5c3ed5bd9a6b398fea5c959237e9b96c19f94d43ab0b9e36e790e61f2c/mockTestIC-3.0.6-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"482e8e1a9d854a194b120b30ecd90f1b63eced94a00d2173dc75ac7511f2f090","md5":"cdd46768e017f4ec54983058389ee6e6","sha256":"f67002972532763b731c8dcaf208e9f38cbf6fcf6a7b414e1652ce5185f0542d"},"downloads":-1,"filename":"mockTestIC-3.0.6.tar.gz","has_sig":false,"md5_digest":"cdd46768e017f4ec54983058389ee6e6","packagetype":"sdist","python_version":"source","requires_python":null,"size":5361,"upload_time":"2024-01-25T18:16:04","upload_time_iso_8601":"2024-01-25T18:16:04.403662Z","url":"https://files.pythonhosted.org/packages/48/2e/8e1a9d854a194b120b30ecd90f1b63eced94a00d2173dc75ac7511f2f090/mockTestIC-3.0.6.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"3.0.7":{"info":{"author":"Victor Augusto do Carmo","author_email":"Victoraugustodocarmo32@gmail.com","bugtrack_url":null,"classifiers":[],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"mockTest,dados falsos,insert de dados falsos,dados ficticios,SQL,gerador de dados,false data,fictitious data,data,dados,data generator","license":"MIT License","maintainer":"","maintainer_email":"","name":"mockTestIC","package_url":"https://pypi.org/project/mockTestIC/","platform":null,"project_url":"https://pypi.org/project/mockTestIC/","project_urls":null,"provides_extra":null,"release_url":"https://pypi.org/project/mockTestIC/3.0.7/","requires_dist":["pydantic","faker","typing","setuptools"],"requires_python":"","summary":"O código utiliza a biblioteca Faker para gerar dados fictícios com base em um mapeamento pré-definido. A função fakeJson recebe um dicionário representando dados em formato JSON e substitui os valores associados às chaves de acordo com o mapeamento fornecido. Cada chave do JSON é mapeada para uma função correspondente da biblioteca Faker, gerando assim dados fictícios variados, como nomes, endereços, datas e números. Se uma chave não estiver no mapeamento, a função levanta uma exceção de valor inválido.","version":"3.0.7","yanked":false,"yanked_reason":null},"last_serial":21658704,"urls":[{"comment_text":"","digests":{"blake2b_256":"75993e79987abe2a11c7aa9d78b85bbe8c51d466ec9d13267552ef2439a62b66","md5":"fba1f3dd42bb3ec39e936df6e045bb72","sha256":"21c81fb6e59b761518176638b7915ed88bc7f79f8aafeef5394840f80a836c83"},"downloads":-1,"filename":"mockTestIC-3.0.7-py3-none-any.whl","has_sig":false,"md5_digest":"fba1f3dd42bb3ec39e936df6e045bb72","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":6277,"upload_time":"2024-01-26T16:43:11","upload_time_iso_8601":"2024-01-26T16:43:11.870356Z","url":"https://files.pythonhosted.org/packages/75/99/3e79987abe2a11c7aa9d78b85bbe8c51d466ec9d13267552ef2439a62b66/mockTestIC-3.0.7-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"7a9eb910abada2ac976f19cfd2a08712f4eb57d8cab72c40146903057c0ebff5","md5":"b8299a6bb7d053decd443c4a848eb441","sha256":"33185d8e0d2cfae08a19a64b9ccf789b1bb5794f887d145e5a4b0b2ed01e1020"},"downloads":-1,"filename":"mockTestIC-3.0.7.tar.gz","has_sig":false,"md5_digest":"b8299a6bb7d053decd443c4a848eb441","packagetype":"sdist","python_version":"source","requires_python":null,"size":5434,"upload_time":"2024-01-26T16:43:16","upload_time_iso_8601":"2024-01-26T16:43:16.312579Z","url":"https://files.pythonhosted.org/packages/7a/9e/b910abada2ac976f19cfd2a08712f4eb57d8cab72c40146903057c0ebff5/mockTestIC-3.0.7.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"3.0.8":{"info":{"author":"Victor Augusto do Carmo","author_email":"Victoraugustodocarmo32@gmail.com","bugtrack_url":null,"classifiers":[],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"mockTest,dados falsos,insert de dados falsos,dados ficticios,SQL,gerador de dados,false data,fictitious data,data,dados,data generator","license":"MIT License","maintainer":"","maintainer_email":"","name":"mockTestIC","package_url":"https://pypi.org/project/mockTestIC/","platform":null,"project_url":"https://pypi.org/project/mockTestIC/","project_urls":null,"provides_extra":null,"release_url":"https://pypi.org/project/mockTestIC/3.0.8/","requires_dist":["pydantic","faker","typing","setuptools"],"requires_python":"","summary":"O código utiliza a biblioteca Faker para gerar dados fictícios com base em um mapeamento pré-definido. A função fakeJson recebe um dicionário representando dados em formato JSON e substitui os valores associados às chaves de acordo com o mapeamento fornecido. Cada chave do JSON é mapeada para uma função correspondente da biblioteca Faker, gerando assim dados fictícios variados, como nomes, endereços, datas e números. Se uma chave não estiver no mapeamento, a função levanta uma exceção de valor inválido.","version":"3.0.8","yanked":false,"yanked_reason":null},"last_serial":21658704,"urls":[{"comment_text":"","digests":{"blake2b_256":"5526d983b39656512222ee9041149e62b2a878bbfed1e9043a92a78cb4294a89","md5":"50493a358440f6049cfc94c00d1faf8e","sha256":"97662846b206af93040596a335eb5136aa5fbfa5ce9ebc32ae89ace8f8132b84"},"downloads":-1,"filename":"mockTestIC-3.0.8-py3-none-any.whl","has_sig":false,"md5_digest":"50493a358440f6049cfc94c00d1faf8e","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":6282,"upload_time":"2024-01-30T16:03:32","upload_time_iso_8601":"2024-01-30T16:03:32.808007Z","url":"https://files.pythonhosted.org/packages/55/26/d983b39656512222ee9041149e62b2a878bbfed1e9043a92a78cb4294a89/mockTestIC-3.0.8-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f544d514e40315b4e25678ba069080f532b75dd5174edf6dbddec78425de1c7a","md5":"bfc6c30e52a8f0182450d9759438f097","sha256":"736213898f3d6c81a29b5bc2e9f41a777dfcd859978aef0e5d0dcf9beee2d03c"},"downloads":-1,"filename":"mockTestIC-3.0.8.tar.gz","has_sig":false,"md5_digest":"bfc6c30e52a8f0182450d9759438f097","packagetype":"sdist","python_version":"source","requires_python":null,"size":5440,"upload_time":"2024-01-30T16:03:36","upload_time_iso_8601":"2024-01-30T16:03:36.823654Z","url":"https://files.pythonhosted.org/packages/f5/44/d514e40315b4e25678ba069080f532b75dd5174edf6dbddec78425de1c7a/mockTestIC-3.0.8.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"3.0.9":{"info":{"author":"Victor Augusto do Carmo","author_email":"Victoraugustodocarmo32@gmail.com","bugtrack_url":null,"classifiers":[],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"mockTest,dados falsos,insert de dados falsos,dados ficticios,SQL,gerador de dados,false data,fictitious data,data,dados,data generator","license":"MIT License","maintainer":"","maintainer_email":"","name":"mockTestIC","package_url":"https://pypi.org/project/mockTestIC/","platform":null,"project_url":"https://pypi.org/project/mockTestIC/","project_urls":null,"provides_extra":null,"release_url":"https://pypi.org/project/mockTestIC/3.0.9/","requires_dist":["pydantic","faker","typing","setuptools"],"requires_python":"","summary":"O código utiliza a biblioteca Faker para gerar dados fictícios com base em um mapeamento pré-definido. A função fakeJson recebe um dicionário representando dados em formato JSON e substitui os valores associados às chaves de acordo com o mapeamento fornecido. Cada chave do JSON é mapeada para uma função correspondente da biblioteca Faker, gerando assim dados fictícios variados, como nomes, endereços, datas e números. Se uma chave não estiver no mapeamento, a função levanta uma exceção de valor inválido.","version":"3.0.9","yanked":false,"yanked_reason":null},"last_serial":21658704,"urls":[{"comment_text":"","digests":{"blake2b_256":"d9440828bd65cd4b6dc9c1c12d8aa119fcf14b15bb772c420b610014caa6c47d","md5":"1e29bc8d6117264107c0dcabfeb9149d","sha256":"5f1658a7da5b9059c1184e4a0836e35fccddc716e250677fd52bb99b9adf79fc"},"downloads":-1,"filename":"mockTestIC-3.0.9-py3-none-any.whl","has_sig":false,"md5_digest":"1e29bc8d6117264107c0dcabfeb9149d","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":6292,"upload_time":"2024-01-30T18:14:59","upload_time_iso_8601":"2024-01-30T18:14:59.585215Z","url":"https://files.pythonhosted.org/packages/d9/44/0828bd65cd4b6dc9c1c12d8aa119fcf14b15bb772c420b610014caa6c47d/mockTestIC-3.0.9-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"b3cb2a2ca7fec19538899cd2ecadd8132f1eb27b851258ed76569d7c27917700","md5":"9aa43718f995c6a392b767a27a92f63e","sha256":"e1f0224c332457a8be4f7ed64e91870cd6c3f1d8409abd589c8550bd6573d6b4"},"downloads":-1,"filename":"mockTestIC-3.0.9.tar.gz","has_sig":false,"md5_digest":"9aa43718f995c6a392b767a27a92f63e","packagetype":"sdist","python_version":"source","requires_python":null,"size":5604,"upload_time":"2024-01-30T18:15:06","upload_time_iso_8601":"2024-01-30T18:15:06.978701Z","url":"https://files.pythonhosted.org/packages/b3/cb/2a2ca7fec19538899cd2ecadd8132f1eb27b851258ed76569d7c27917700/mockTestIC-3.0.9.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}}