{"0.10":{"info":{"author":"Brian Warner","author_email":"warner-pyecdsa@lothar.com","bugtrack_url":null,"classifiers":[],"description_content_type":null,"docs_url":null,"download_url":"UNKNOWN","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"http://github.com/warner/python-ecdsa","keywords":null,"license":"MIT","maintainer":null,"maintainer_email":null,"name":"ecdsa","package_url":"https://pypi.org/project/ecdsa/","platform":"UNKNOWN","project_url":"https://pypi.org/project/ecdsa/","project_urls":{"Download":"UNKNOWN","Homepage":"http://github.com/warner/python-ecdsa"},"provides_extra":null,"release_url":"https://pypi.org/project/ecdsa/0.10/","requires_dist":null,"requires_python":null,"summary":"ECDSA cryptographic signature library (pure python)","version":"0.10","yanked":false,"yanked_reason":null},"last_serial":22672179,"urls":[{"comment_text":"","digests":{"blake2b_256":"8a52d5517842ba27739f0fcf83afb3b33a40c4abbb3fb954719e44b02f2a0ef8","md5":"e95941b3bcbf1726472bb724d7478551","sha256":"67dae9e1af2b0fd71bc9a378654f7dc89211c1c5aee71e160f8cfce1fa6d6980"},"downloads":-1,"filename":"ecdsa-0.10.tar.gz","has_sig":false,"md5_digest":"e95941b3bcbf1726472bb724d7478551","packagetype":"sdist","python_version":"source","requires_python":null,"size":45153,"upload_time":"2013-10-23T18:47:11","upload_time_iso_8601":"2013-10-23T18:47:11.942558Z","url":"https://files.pythonhosted.org/packages/8a/52/d5517842ba27739f0fcf83afb3b33a40c4abbb3fb954719e44b02f2a0ef8/ecdsa-0.10.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2019-14859","GHSA-8qxj-f9rh-9fg2"],"details":"A flaw was found in all python-ecdsa versions before 0.13.3, where it did not correctly verify whether signatures used DER encoding. Without this verification, a malformed signature could be accepted, making the signature malleable. Without proper verification, an attacker could use a malleable signature to create false transactions.","fixed_in":["0.13.3"],"id":"PYSEC-2020-163","link":"https://osv.dev/vulnerability/PYSEC-2020-163","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2019-14853","GHSA-2mrj-435v-c2cr","GHSA-pwfw-mgfj-7g3g"],"details":"An error-handling flaw was found in python-ecdsa before version 0.13.3. During signature decoding, malformed DER signatures could raise unexpected exceptions (or no exceptions at all), which could lead to a denial of service.","fixed_in":["0.13.3"],"id":"PYSEC-2019-177","link":"https://osv.dev/vulnerability/PYSEC-2019-177","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2019-14859"],"details":"A flaw was found in all python-ecdsa versions before 0.13.3, where it did not correctly verify whether signatures used DER encoding. Without this verification, a malformed signature could be accepted, making the signature malleable. Without proper verification, an attacker could use a malleable signature to create false transactions.","fixed_in":["0.13.3"],"id":"GHSA-8qxj-f9rh-9fg2","link":"https://osv.dev/vulnerability/GHSA-8qxj-f9rh-9fg2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2019-14853"],"details":"## possible DoS in signature verification and signature malleability \n\n### Impact\nCode using `VerifyingKey.verify()` and `VerifyingKey.verify_digest()` may receive exceptions other than the documented `BadSignatureError` when signatures are malformed. If those other exceptions are not caught, they may lead to program termination and thus Denial of Service\n\nCode using `VerifyingKey.verify()` and `VerifyingKey.verify_digest()` with `sigdecode` option using `ecdsa.util.sigdecode_der` will accept signatures even if they are not properly formatted DER. This makes the signatures malleable. It impacts only applications that later sign the signatures or verify signatures of signatures, e.g. Bitcoin.\n\nAll versions between 0.5 and 0.13.2 (inclusive) are thought to be vulnerable. Code before 0.5 may be vulnerable but didn't receive extended analysis to rule this issue out.\n\n### Patches\nThe patches have been merged to `master` branch in https://github.com/warner/python-ecdsa/pull/115.\nThe backported patches for a release in the 0.13 branch are in https://github.com/warner/python-ecdsa/pull/124\n\nThey are part of the 0.13.3 release.\n\nThere are no plans to backport them to earlier releases.\n\n### Workarounds\nIt may be possible to prevent the Denial of Service by catching also `UnexpectedDER`, `IndexError` and `AssertionError` exceptions. That list hasn't been verified to be complete though. If those exceptions are raised, the signature verification process should consider the signature to be invalid.\n\nTo remediate signature malleability and the Denial of Service vulnerability, it may be possible to first verify that the signature is properly DER formatted ECDSA-Sig-Value, as defined in [RFC3279](https://tools.ietf.org/html/rfc3279), before passing it to `verify()` or `verify_digest()` methods. If the signature is determined to not follow the DER or encode a different structure, the signature verification process should consider the signature to be invalid.\n\n### References\nhttps://en.bitcoinwiki.org/wiki/Transaction_Malleability\n\n### For more information\nIf you have any questions or comments about this advisory please open an issue in [python-ecdsa](https://github.com/warner/python-ecdsa/issues) project.\n","fixed_in":["0.13.3"],"id":"GHSA-pwfw-mgfj-7g3g","link":"https://osv.dev/vulnerability/GHSA-pwfw-mgfj-7g3g","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-23342"],"details":"python-ecdsa has been found to be subject to a Minerva timing attack on the P-256 curve. Using the `ecdsa.SigningKey.sign_digest()` API function and timing signatures an attacker can leak the internal nonce which may allow for private key discovery. Both ECDSA signatures, key generation, and ECDH operations are affected. ECDSA signature verification is unaffected. The python-ecdsa project considers side channel attacks out of scope for the project and there is no planned fix.","fixed_in":[],"id":"GHSA-wj6h-64fc-37mp","link":"https://osv.dev/vulnerability/GHSA-wj6h-64fc-37mp","source":"osv","summary":null,"withdrawn":null}]},"0.11":{"info":{"author":"Brian Warner","author_email":"warner-pyecdsa@lothar.com","bugtrack_url":null,"classifiers":["Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.2","Programming Language :: Python :: 3.3"],"description_content_type":null,"docs_url":null,"download_url":"UNKNOWN","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"http://github.com/warner/python-ecdsa","keywords":null,"license":"MIT","maintainer":null,"maintainer_email":null,"name":"ecdsa","package_url":"https://pypi.org/project/ecdsa/","platform":"UNKNOWN","project_url":"https://pypi.org/project/ecdsa/","project_urls":{"Download":"UNKNOWN","Homepage":"http://github.com/warner/python-ecdsa"},"provides_extra":null,"release_url":"https://pypi.org/project/ecdsa/0.11/","requires_dist":null,"requires_python":null,"summary":"ECDSA cryptographic signature library (pure python)","version":"0.11","yanked":false,"yanked_reason":null},"last_serial":22672179,"urls":[{"comment_text":"","digests":{"blake2b_256":"6c3f92fe5dcdcaa7bd117be21e5520c9a54375112b66ec000d209e9e9519fad1","md5":"8ef586fe4dbb156697d756900cb41d7c","sha256":"8e3b6c193f91dc94b2f3b0261e3eabbdc604f78ff99fdad324a56fdd0b5e958c"},"downloads":-1,"filename":"ecdsa-0.11.tar.gz","has_sig":false,"md5_digest":"8ef586fe4dbb156697d756900cb41d7c","packagetype":"sdist","python_version":"source","requires_python":null,"size":45689,"upload_time":"2014-03-10T22:54:27","upload_time_iso_8601":"2014-03-10T22:54:27.566378Z","url":"https://files.pythonhosted.org/packages/6c/3f/92fe5dcdcaa7bd117be21e5520c9a54375112b66ec000d209e9e9519fad1/ecdsa-0.11.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2019-14859","GHSA-8qxj-f9rh-9fg2"],"details":"A flaw was found in all python-ecdsa versions before 0.13.3, where it did not correctly verify whether signatures used DER encoding. Without this verification, a malformed signature could be accepted, making the signature malleable. Without proper verification, an attacker could use a malleable signature to create false transactions.","fixed_in":["0.13.3"],"id":"PYSEC-2020-163","link":"https://osv.dev/vulnerability/PYSEC-2020-163","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2019-14853","GHSA-2mrj-435v-c2cr","GHSA-pwfw-mgfj-7g3g"],"details":"An error-handling flaw was found in python-ecdsa before version 0.13.3. During signature decoding, malformed DER signatures could raise unexpected exceptions (or no exceptions at all), which could lead to a denial of service.","fixed_in":["0.13.3"],"id":"PYSEC-2019-177","link":"https://osv.dev/vulnerability/PYSEC-2019-177","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2019-14859"],"details":"A flaw was found in all python-ecdsa versions before 0.13.3, where it did not correctly verify whether signatures used DER encoding. Without this verification, a malformed signature could be accepted, making the signature malleable. Without proper verification, an attacker could use a malleable signature to create false transactions.","fixed_in":["0.13.3"],"id":"GHSA-8qxj-f9rh-9fg2","link":"https://osv.dev/vulnerability/GHSA-8qxj-f9rh-9fg2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2019-14853"],"details":"## possible DoS in signature verification and signature malleability \n\n### Impact\nCode using `VerifyingKey.verify()` and `VerifyingKey.verify_digest()` may receive exceptions other than the documented `BadSignatureError` when signatures are malformed. If those other exceptions are not caught, they may lead to program termination and thus Denial of Service\n\nCode using `VerifyingKey.verify()` and `VerifyingKey.verify_digest()` with `sigdecode` option using `ecdsa.util.sigdecode_der` will accept signatures even if they are not properly formatted DER. This makes the signatures malleable. It impacts only applications that later sign the signatures or verify signatures of signatures, e.g. Bitcoin.\n\nAll versions between 0.5 and 0.13.2 (inclusive) are thought to be vulnerable. Code before 0.5 may be vulnerable but didn't receive extended analysis to rule this issue out.\n\n### Patches\nThe patches have been merged to `master` branch in https://github.com/warner/python-ecdsa/pull/115.\nThe backported patches for a release in the 0.13 branch are in https://github.com/warner/python-ecdsa/pull/124\n\nThey are part of the 0.13.3 release.\n\nThere are no plans to backport them to earlier releases.\n\n### Workarounds\nIt may be possible to prevent the Denial of Service by catching also `UnexpectedDER`, `IndexError` and `AssertionError` exceptions. That list hasn't been verified to be complete though. If those exceptions are raised, the signature verification process should consider the signature to be invalid.\n\nTo remediate signature malleability and the Denial of Service vulnerability, it may be possible to first verify that the signature is properly DER formatted ECDSA-Sig-Value, as defined in [RFC3279](https://tools.ietf.org/html/rfc3279), before passing it to `verify()` or `verify_digest()` methods. If the signature is determined to not follow the DER or encode a different structure, the signature verification process should consider the signature to be invalid.\n\n### References\nhttps://en.bitcoinwiki.org/wiki/Transaction_Malleability\n\n### For more information\nIf you have any questions or comments about this advisory please open an issue in [python-ecdsa](https://github.com/warner/python-ecdsa/issues) project.\n","fixed_in":["0.13.3"],"id":"GHSA-pwfw-mgfj-7g3g","link":"https://osv.dev/vulnerability/GHSA-pwfw-mgfj-7g3g","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-23342"],"details":"python-ecdsa has been found to be subject to a Minerva timing attack on the P-256 curve. Using the `ecdsa.SigningKey.sign_digest()` API function and timing signatures an attacker can leak the internal nonce which may allow for private key discovery. Both ECDSA signatures, key generation, and ECDH operations are affected. ECDSA signature verification is unaffected. The python-ecdsa project considers side channel attacks out of scope for the project and there is no planned fix.","fixed_in":[],"id":"GHSA-wj6h-64fc-37mp","link":"https://osv.dev/vulnerability/GHSA-wj6h-64fc-37mp","source":"osv","summary":null,"withdrawn":null}]},"0.12":{"info":{"author":"Brian Warner","author_email":"warner-pyecdsa@lothar.com","bugtrack_url":null,"classifiers":["Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.2","Programming Language :: Python :: 3.3","Programming Language :: Python :: 3.4"],"description_content_type":null,"docs_url":null,"download_url":"UNKNOWN","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"http://github.com/warner/python-ecdsa","keywords":null,"license":"MIT","maintainer":null,"maintainer_email":null,"name":"ecdsa","package_url":"https://pypi.org/project/ecdsa/","platform":"UNKNOWN","project_url":"https://pypi.org/project/ecdsa/","project_urls":{"Download":"UNKNOWN","Homepage":"http://github.com/warner/python-ecdsa"},"provides_extra":null,"release_url":"https://pypi.org/project/ecdsa/0.12/","requires_dist":null,"requires_python":null,"summary":"ECDSA cryptographic signature library (pure python)","version":"0.12","yanked":false,"yanked_reason":null},"last_serial":22672179,"urls":[{"comment_text":"","digests":{"blake2b_256":"fb562d9097441b091c6ff1a7996cf1d47f1913924ee9cb756cc3c6665f220cb3","md5":"553233ea1ab15a601dbe7ab69f641375","sha256":"f52785ccb624a420dfee6d450c9fd043d03e3032a6ba650c97909bfd8a86ec73"},"downloads":-1,"filename":"ecdsa-0.12-py2.py3-none-any.whl","has_sig":false,"md5_digest":"553233ea1ab15a601dbe7ab69f641375","packagetype":"bdist_wheel","python_version":"2.7","requires_python":null,"size":86918,"upload_time":"2015-02-06T21:42:40","upload_time_iso_8601":"2015-02-06T21:42:40.872501Z","url":"https://files.pythonhosted.org/packages/fb/56/2d9097441b091c6ff1a7996cf1d47f1913924ee9cb756cc3c6665f220cb3/ecdsa-0.12-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"1b062d1896aa07c3fe0b5a46d02cb0b102abeb0453c92a50e58fbaf0b8b3313b","md5":"c3a4f41156392f71e0c790e497dae8b5","sha256":"226fd3deb98dc62e9dbe300eb88a6f4db5d765ffae97c71e39c12c3eb4d5f0d9"},"downloads":-1,"filename":"ecdsa-0.12.tar.gz","has_sig":false,"md5_digest":"c3a4f41156392f71e0c790e497dae8b5","packagetype":"sdist","python_version":"source","requires_python":null,"size":55487,"upload_time":"2015-02-06T21:42:48","upload_time_iso_8601":"2015-02-06T21:42:48.256569Z","url":"https://files.pythonhosted.org/packages/1b/06/2d1896aa07c3fe0b5a46d02cb0b102abeb0453c92a50e58fbaf0b8b3313b/ecdsa-0.12.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2019-14859","GHSA-8qxj-f9rh-9fg2"],"details":"A flaw was found in all python-ecdsa versions before 0.13.3, where it did not correctly verify whether signatures used DER encoding. Without this verification, a malformed signature could be accepted, making the signature malleable. Without proper verification, an attacker could use a malleable signature to create false transactions.","fixed_in":["0.13.3"],"id":"PYSEC-2020-163","link":"https://osv.dev/vulnerability/PYSEC-2020-163","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2019-14853","GHSA-2mrj-435v-c2cr","GHSA-pwfw-mgfj-7g3g"],"details":"An error-handling flaw was found in python-ecdsa before version 0.13.3. During signature decoding, malformed DER signatures could raise unexpected exceptions (or no exceptions at all), which could lead to a denial of service.","fixed_in":["0.13.3"],"id":"PYSEC-2019-177","link":"https://osv.dev/vulnerability/PYSEC-2019-177","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2019-14859"],"details":"A flaw was found in all python-ecdsa versions before 0.13.3, where it did not correctly verify whether signatures used DER encoding. Without this verification, a malformed signature could be accepted, making the signature malleable. Without proper verification, an attacker could use a malleable signature to create false transactions.","fixed_in":["0.13.3"],"id":"GHSA-8qxj-f9rh-9fg2","link":"https://osv.dev/vulnerability/GHSA-8qxj-f9rh-9fg2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2019-14853"],"details":"## possible DoS in signature verification and signature malleability \n\n### Impact\nCode using `VerifyingKey.verify()` and `VerifyingKey.verify_digest()` may receive exceptions other than the documented `BadSignatureError` when signatures are malformed. If those other exceptions are not caught, they may lead to program termination and thus Denial of Service\n\nCode using `VerifyingKey.verify()` and `VerifyingKey.verify_digest()` with `sigdecode` option using `ecdsa.util.sigdecode_der` will accept signatures even if they are not properly formatted DER. This makes the signatures malleable. It impacts only applications that later sign the signatures or verify signatures of signatures, e.g. Bitcoin.\n\nAll versions between 0.5 and 0.13.2 (inclusive) are thought to be vulnerable. Code before 0.5 may be vulnerable but didn't receive extended analysis to rule this issue out.\n\n### Patches\nThe patches have been merged to `master` branch in https://github.com/warner/python-ecdsa/pull/115.\nThe backported patches for a release in the 0.13 branch are in https://github.com/warner/python-ecdsa/pull/124\n\nThey are part of the 0.13.3 release.\n\nThere are no plans to backport them to earlier releases.\n\n### Workarounds\nIt may be possible to prevent the Denial of Service by catching also `UnexpectedDER`, `IndexError` and `AssertionError` exceptions. That list hasn't been verified to be complete though. If those exceptions are raised, the signature verification process should consider the signature to be invalid.\n\nTo remediate signature malleability and the Denial of Service vulnerability, it may be possible to first verify that the signature is properly DER formatted ECDSA-Sig-Value, as defined in [RFC3279](https://tools.ietf.org/html/rfc3279), before passing it to `verify()` or `verify_digest()` methods. If the signature is determined to not follow the DER or encode a different structure, the signature verification process should consider the signature to be invalid.\n\n### References\nhttps://en.bitcoinwiki.org/wiki/Transaction_Malleability\n\n### For more information\nIf you have any questions or comments about this advisory please open an issue in [python-ecdsa](https://github.com/warner/python-ecdsa/issues) project.\n","fixed_in":["0.13.3"],"id":"GHSA-pwfw-mgfj-7g3g","link":"https://osv.dev/vulnerability/GHSA-pwfw-mgfj-7g3g","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-23342"],"details":"python-ecdsa has been found to be subject to a Minerva timing attack on the P-256 curve. Using the `ecdsa.SigningKey.sign_digest()` API function and timing signatures an attacker can leak the internal nonce which may allow for private key discovery. Both ECDSA signatures, key generation, and ECDH operations are affected. ECDSA signature verification is unaffected. The python-ecdsa project considers side channel attacks out of scope for the project and there is no planned fix.","fixed_in":[],"id":"GHSA-wj6h-64fc-37mp","link":"https://osv.dev/vulnerability/GHSA-wj6h-64fc-37mp","source":"osv","summary":null,"withdrawn":null}]},"0.13":{"info":{"author":"Brian Warner","author_email":"warner-pyecdsa@lothar.com","bugtrack_url":null,"classifiers":["Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.2","Programming Language :: Python :: 3.3","Programming Language :: Python :: 3.4"],"description_content_type":null,"docs_url":null,"download_url":"UNKNOWN","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"http://github.com/warner/python-ecdsa","keywords":null,"license":"MIT","maintainer":null,"maintainer_email":null,"name":"ecdsa","package_url":"https://pypi.org/project/ecdsa/","platform":"UNKNOWN","project_url":"https://pypi.org/project/ecdsa/","project_urls":{"Download":"UNKNOWN","Homepage":"http://github.com/warner/python-ecdsa"},"provides_extra":null,"release_url":"https://pypi.org/project/ecdsa/0.13/","requires_dist":null,"requires_python":null,"summary":"ECDSA cryptographic signature library (pure python)","version":"0.13","yanked":false,"yanked_reason":null},"last_serial":22672179,"urls":[{"comment_text":"","digests":{"blake2b_256":"63f473669d51825516ce8c43b816c0a6b64cd6eb71d08b99820c00792cb42222","md5":"a325d50195d049599f9b578ec4417bc6","sha256":"40d002cf360d0e035cf2cb985e1308d41aaa087cbfc135b2dc2d844296ea546c"},"downloads":-1,"filename":"ecdsa-0.13-py2.py3-none-any.whl","has_sig":false,"md5_digest":"a325d50195d049599f9b578ec4417bc6","packagetype":"bdist_wheel","python_version":"2.7","requires_python":null,"size":86911,"upload_time":"2015-02-07T18:26:20","upload_time_iso_8601":"2015-02-07T18:26:20.328584Z","url":"https://files.pythonhosted.org/packages/63/f4/73669d51825516ce8c43b816c0a6b64cd6eb71d08b99820c00792cb42222/ecdsa-0.13-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f9e599ebb176e47f150ac115ffeda5fedb6a3dbb3c00c74a59fd84ddf12f5857","md5":"1f60eda9cb5c46722856db41a3ae6670","sha256":"64cf1ee26d1cde3c73c6d7d107f835fed7c6a2904aef9eac223d57ad800c43fa"},"downloads":-1,"filename":"ecdsa-0.13.tar.gz","has_sig":false,"md5_digest":"1f60eda9cb5c46722856db41a3ae6670","packagetype":"sdist","python_version":"source","requires_python":null,"size":55579,"upload_time":"2015-02-07T18:26:23","upload_time_iso_8601":"2015-02-07T18:26:23.030995Z","url":"https://files.pythonhosted.org/packages/f9/e5/99ebb176e47f150ac115ffeda5fedb6a3dbb3c00c74a59fd84ddf12f5857/ecdsa-0.13.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2019-14859","GHSA-8qxj-f9rh-9fg2"],"details":"A flaw was found in all python-ecdsa versions before 0.13.3, where it did not correctly verify whether signatures used DER encoding. Without this verification, a malformed signature could be accepted, making the signature malleable. Without proper verification, an attacker could use a malleable signature to create false transactions.","fixed_in":["0.13.3"],"id":"PYSEC-2020-163","link":"https://osv.dev/vulnerability/PYSEC-2020-163","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2019-14853","GHSA-2mrj-435v-c2cr","GHSA-pwfw-mgfj-7g3g"],"details":"An error-handling flaw was found in python-ecdsa before version 0.13.3. During signature decoding, malformed DER signatures could raise unexpected exceptions (or no exceptions at all), which could lead to a denial of service.","fixed_in":["0.13.3"],"id":"PYSEC-2019-177","link":"https://osv.dev/vulnerability/PYSEC-2019-177","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2019-14859"],"details":"A flaw was found in all python-ecdsa versions before 0.13.3, where it did not correctly verify whether signatures used DER encoding. Without this verification, a malformed signature could be accepted, making the signature malleable. Without proper verification, an attacker could use a malleable signature to create false transactions.","fixed_in":["0.13.3"],"id":"GHSA-8qxj-f9rh-9fg2","link":"https://osv.dev/vulnerability/GHSA-8qxj-f9rh-9fg2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2019-14853"],"details":"## possible DoS in signature verification and signature malleability \n\n### Impact\nCode using `VerifyingKey.verify()` and `VerifyingKey.verify_digest()` may receive exceptions other than the documented `BadSignatureError` when signatures are malformed. If those other exceptions are not caught, they may lead to program termination and thus Denial of Service\n\nCode using `VerifyingKey.verify()` and `VerifyingKey.verify_digest()` with `sigdecode` option using `ecdsa.util.sigdecode_der` will accept signatures even if they are not properly formatted DER. This makes the signatures malleable. It impacts only applications that later sign the signatures or verify signatures of signatures, e.g. Bitcoin.\n\nAll versions between 0.5 and 0.13.2 (inclusive) are thought to be vulnerable. Code before 0.5 may be vulnerable but didn't receive extended analysis to rule this issue out.\n\n### Patches\nThe patches have been merged to `master` branch in https://github.com/warner/python-ecdsa/pull/115.\nThe backported patches for a release in the 0.13 branch are in https://github.com/warner/python-ecdsa/pull/124\n\nThey are part of the 0.13.3 release.\n\nThere are no plans to backport them to earlier releases.\n\n### Workarounds\nIt may be possible to prevent the Denial of Service by catching also `UnexpectedDER`, `IndexError` and `AssertionError` exceptions. That list hasn't been verified to be complete though. If those exceptions are raised, the signature verification process should consider the signature to be invalid.\n\nTo remediate signature malleability and the Denial of Service vulnerability, it may be possible to first verify that the signature is properly DER formatted ECDSA-Sig-Value, as defined in [RFC3279](https://tools.ietf.org/html/rfc3279), before passing it to `verify()` or `verify_digest()` methods. If the signature is determined to not follow the DER or encode a different structure, the signature verification process should consider the signature to be invalid.\n\n### References\nhttps://en.bitcoinwiki.org/wiki/Transaction_Malleability\n\n### For more information\nIf you have any questions or comments about this advisory please open an issue in [python-ecdsa](https://github.com/warner/python-ecdsa/issues) project.\n","fixed_in":["0.13.3"],"id":"GHSA-pwfw-mgfj-7g3g","link":"https://osv.dev/vulnerability/GHSA-pwfw-mgfj-7g3g","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-23342"],"details":"python-ecdsa has been found to be subject to a Minerva timing attack on the P-256 curve. Using the `ecdsa.SigningKey.sign_digest()` API function and timing signatures an attacker can leak the internal nonce which may allow for private key discovery. Both ECDSA signatures, key generation, and ECDH operations are affected. ECDSA signature verification is unaffected. The python-ecdsa project considers side channel attacks out of scope for the project and there is no planned fix.","fixed_in":[],"id":"GHSA-wj6h-64fc-37mp","link":"https://osv.dev/vulnerability/GHSA-wj6h-64fc-37mp","source":"osv","summary":null,"withdrawn":null}]},"0.13.1":{"info":{"author":"Brian Warner","author_email":"warner-pyecdsa@lothar.com","bugtrack_url":null,"classifiers":["Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.2","Programming Language :: Python :: 3.3","Programming Language :: Python :: 3.4"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"http://github.com/warner/python-ecdsa","keywords":"","license":"MIT","maintainer":"","maintainer_email":"","name":"ecdsa","package_url":"https://pypi.org/project/ecdsa/","platform":"","project_url":"https://pypi.org/project/ecdsa/","project_urls":{"Homepage":"http://github.com/warner/python-ecdsa"},"provides_extra":null,"release_url":"https://pypi.org/project/ecdsa/0.13.1/","requires_dist":null,"requires_python":"","summary":"ECDSA cryptographic signature library (pure python)","version":"0.13.1","yanked":false,"yanked_reason":null},"last_serial":22672179,"urls":[{"comment_text":"","digests":{"blake2b_256":"f92aed9be4ad09ee37a75d68ee2d7bf535148de4546a875da42e1135bc84d51a","md5":"9f9fc9a654bf0743bc0a7b213324d244","sha256":"47d64429e90998846a141f5beadc1e4e8dc1d8a614e321a0609fef5df616a44a"},"downloads":-1,"filename":"ecdsa-0.13.1-py2.py3-none-any.whl","has_sig":false,"md5_digest":"9f9fc9a654bf0743bc0a7b213324d244","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":null,"size":59034,"upload_time":"2019-04-17T14:02:43","upload_time_iso_8601":"2019-04-17T14:02:43.375697Z","url":"https://files.pythonhosted.org/packages/f9/2a/ed9be4ad09ee37a75d68ee2d7bf535148de4546a875da42e1135bc84d51a/ecdsa-0.13.1-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"db2e843cf62fb8807e02acac95caa4bc8dba792b5068e68c16c043c7f903714c","md5":"9c77bcde4dc8e3b291d1362d406a5c43","sha256":"713271197ad6e5bdf69d0b74118d4632de01e235ac4bdecc9fa565451cbfb3df"},"downloads":-1,"filename":"ecdsa-0.13.1.tar.gz","has_sig":false,"md5_digest":"9c77bcde4dc8e3b291d1362d406a5c43","packagetype":"sdist","python_version":"source","requires_python":null,"size":61523,"upload_time":"2019-04-17T14:02:44","upload_time_iso_8601":"2019-04-17T14:02:44.996604Z","url":"https://files.pythonhosted.org/packages/db/2e/843cf62fb8807e02acac95caa4bc8dba792b5068e68c16c043c7f903714c/ecdsa-0.13.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2019-14859","GHSA-8qxj-f9rh-9fg2"],"details":"A flaw was found in all python-ecdsa versions before 0.13.3, where it did not correctly verify whether signatures used DER encoding. Without this verification, a malformed signature could be accepted, making the signature malleable. Without proper verification, an attacker could use a malleable signature to create false transactions.","fixed_in":["0.13.3"],"id":"PYSEC-2020-163","link":"https://osv.dev/vulnerability/PYSEC-2020-163","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2019-14853","GHSA-2mrj-435v-c2cr","GHSA-pwfw-mgfj-7g3g"],"details":"An error-handling flaw was found in python-ecdsa before version 0.13.3. During signature decoding, malformed DER signatures could raise unexpected exceptions (or no exceptions at all), which could lead to a denial of service.","fixed_in":["0.13.3"],"id":"PYSEC-2019-177","link":"https://osv.dev/vulnerability/PYSEC-2019-177","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2019-14859"],"details":"A flaw was found in all python-ecdsa versions before 0.13.3, where it did not correctly verify whether signatures used DER encoding. Without this verification, a malformed signature could be accepted, making the signature malleable. Without proper verification, an attacker could use a malleable signature to create false transactions.","fixed_in":["0.13.3"],"id":"GHSA-8qxj-f9rh-9fg2","link":"https://osv.dev/vulnerability/GHSA-8qxj-f9rh-9fg2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2019-14853"],"details":"## possible DoS in signature verification and signature malleability \n\n### Impact\nCode using `VerifyingKey.verify()` and `VerifyingKey.verify_digest()` may receive exceptions other than the documented `BadSignatureError` when signatures are malformed. If those other exceptions are not caught, they may lead to program termination and thus Denial of Service\n\nCode using `VerifyingKey.verify()` and `VerifyingKey.verify_digest()` with `sigdecode` option using `ecdsa.util.sigdecode_der` will accept signatures even if they are not properly formatted DER. This makes the signatures malleable. It impacts only applications that later sign the signatures or verify signatures of signatures, e.g. Bitcoin.\n\nAll versions between 0.5 and 0.13.2 (inclusive) are thought to be vulnerable. Code before 0.5 may be vulnerable but didn't receive extended analysis to rule this issue out.\n\n### Patches\nThe patches have been merged to `master` branch in https://github.com/warner/python-ecdsa/pull/115.\nThe backported patches for a release in the 0.13 branch are in https://github.com/warner/python-ecdsa/pull/124\n\nThey are part of the 0.13.3 release.\n\nThere are no plans to backport them to earlier releases.\n\n### Workarounds\nIt may be possible to prevent the Denial of Service by catching also `UnexpectedDER`, `IndexError` and `AssertionError` exceptions. That list hasn't been verified to be complete though. If those exceptions are raised, the signature verification process should consider the signature to be invalid.\n\nTo remediate signature malleability and the Denial of Service vulnerability, it may be possible to first verify that the signature is properly DER formatted ECDSA-Sig-Value, as defined in [RFC3279](https://tools.ietf.org/html/rfc3279), before passing it to `verify()` or `verify_digest()` methods. If the signature is determined to not follow the DER or encode a different structure, the signature verification process should consider the signature to be invalid.\n\n### References\nhttps://en.bitcoinwiki.org/wiki/Transaction_Malleability\n\n### For more information\nIf you have any questions or comments about this advisory please open an issue in [python-ecdsa](https://github.com/warner/python-ecdsa/issues) project.\n","fixed_in":["0.13.3"],"id":"GHSA-pwfw-mgfj-7g3g","link":"https://osv.dev/vulnerability/GHSA-pwfw-mgfj-7g3g","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-23342"],"details":"python-ecdsa has been found to be subject to a Minerva timing attack on the P-256 curve. Using the `ecdsa.SigningKey.sign_digest()` API function and timing signatures an attacker can leak the internal nonce which may allow for private key discovery. Both ECDSA signatures, key generation, and ECDH operations are affected. ECDSA signature verification is unaffected. The python-ecdsa project considers side channel attacks out of scope for the project and there is no planned fix.","fixed_in":[],"id":"GHSA-wj6h-64fc-37mp","link":"https://osv.dev/vulnerability/GHSA-wj6h-64fc-37mp","source":"osv","summary":null,"withdrawn":null}]},"0.13.2":{"info":{"author":"Brian Warner","author_email":"warner-pyecdsa@lothar.com","bugtrack_url":null,"classifiers":["Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.2","Programming Language :: Python :: 3.3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Topic :: Security :: Cryptography"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"http://github.com/warner/python-ecdsa","keywords":"","license":"MIT","maintainer":"","maintainer_email":"","name":"ecdsa","package_url":"https://pypi.org/project/ecdsa/","platform":"","project_url":"https://pypi.org/project/ecdsa/","project_urls":{"Homepage":"http://github.com/warner/python-ecdsa"},"provides_extra":null,"release_url":"https://pypi.org/project/ecdsa/0.13.2/","requires_dist":null,"requires_python":"","summary":"ECDSA cryptographic signature library (pure python)","version":"0.13.2","yanked":false,"yanked_reason":null},"last_serial":22672179,"urls":[{"comment_text":"","digests":{"blake2b_256":"23a88aa68e70959e1287da9154e5164bb8bd5dd7025e41ae54e8d177b8d165c9","md5":"07e6070e33de157448afc9f47b04e3a8","sha256":"20c17e527e75acad8f402290e158a6ac178b91b881f941fc6ea305bfdfb9657c"},"downloads":-1,"filename":"ecdsa-0.13.2-py2.py3-none-any.whl","has_sig":false,"md5_digest":"07e6070e33de157448afc9f47b04e3a8","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":null,"size":59060,"upload_time":"2019-04-17T19:34:16","upload_time_iso_8601":"2019-04-17T19:34:16.411689Z","url":"https://files.pythonhosted.org/packages/23/a8/8aa68e70959e1287da9154e5164bb8bd5dd7025e41ae54e8d177b8d165c9/ecdsa-0.13.2-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"5176139bf6e9b7b6684d5891212cdbd9e0739f2bfc03f380a1a6ffa700f392ac","md5":"0ce51d17c0751e5232be4eafd69b7f13","sha256":"5c034ffa23413ac923541ceb3ac14ec15a0d2530690413bff58c12b80e56d884"},"downloads":-1,"filename":"ecdsa-0.13.2.tar.gz","has_sig":false,"md5_digest":"0ce51d17c0751e5232be4eafd69b7f13","packagetype":"sdist","python_version":"source","requires_python":null,"size":61595,"upload_time":"2019-04-17T19:34:18","upload_time_iso_8601":"2019-04-17T19:34:18.134924Z","url":"https://files.pythonhosted.org/packages/51/76/139bf6e9b7b6684d5891212cdbd9e0739f2bfc03f380a1a6ffa700f392ac/ecdsa-0.13.2.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2019-14859","GHSA-8qxj-f9rh-9fg2"],"details":"A flaw was found in all python-ecdsa versions before 0.13.3, where it did not correctly verify whether signatures used DER encoding. Without this verification, a malformed signature could be accepted, making the signature malleable. Without proper verification, an attacker could use a malleable signature to create false transactions.","fixed_in":["0.13.3"],"id":"PYSEC-2020-163","link":"https://osv.dev/vulnerability/PYSEC-2020-163","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2019-14853","GHSA-2mrj-435v-c2cr","GHSA-pwfw-mgfj-7g3g"],"details":"An error-handling flaw was found in python-ecdsa before version 0.13.3. During signature decoding, malformed DER signatures could raise unexpected exceptions (or no exceptions at all), which could lead to a denial of service.","fixed_in":["0.13.3"],"id":"PYSEC-2019-177","link":"https://osv.dev/vulnerability/PYSEC-2019-177","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2019-14859"],"details":"A flaw was found in all python-ecdsa versions before 0.13.3, where it did not correctly verify whether signatures used DER encoding. Without this verification, a malformed signature could be accepted, making the signature malleable. Without proper verification, an attacker could use a malleable signature to create false transactions.","fixed_in":["0.13.3"],"id":"GHSA-8qxj-f9rh-9fg2","link":"https://osv.dev/vulnerability/GHSA-8qxj-f9rh-9fg2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2019-14853"],"details":"## possible DoS in signature verification and signature malleability \n\n### Impact\nCode using `VerifyingKey.verify()` and `VerifyingKey.verify_digest()` may receive exceptions other than the documented `BadSignatureError` when signatures are malformed. If those other exceptions are not caught, they may lead to program termination and thus Denial of Service\n\nCode using `VerifyingKey.verify()` and `VerifyingKey.verify_digest()` with `sigdecode` option using `ecdsa.util.sigdecode_der` will accept signatures even if they are not properly formatted DER. This makes the signatures malleable. It impacts only applications that later sign the signatures or verify signatures of signatures, e.g. Bitcoin.\n\nAll versions between 0.5 and 0.13.2 (inclusive) are thought to be vulnerable. Code before 0.5 may be vulnerable but didn't receive extended analysis to rule this issue out.\n\n### Patches\nThe patches have been merged to `master` branch in https://github.com/warner/python-ecdsa/pull/115.\nThe backported patches for a release in the 0.13 branch are in https://github.com/warner/python-ecdsa/pull/124\n\nThey are part of the 0.13.3 release.\n\nThere are no plans to backport them to earlier releases.\n\n### Workarounds\nIt may be possible to prevent the Denial of Service by catching also `UnexpectedDER`, `IndexError` and `AssertionError` exceptions. That list hasn't been verified to be complete though. If those exceptions are raised, the signature verification process should consider the signature to be invalid.\n\nTo remediate signature malleability and the Denial of Service vulnerability, it may be possible to first verify that the signature is properly DER formatted ECDSA-Sig-Value, as defined in [RFC3279](https://tools.ietf.org/html/rfc3279), before passing it to `verify()` or `verify_digest()` methods. If the signature is determined to not follow the DER or encode a different structure, the signature verification process should consider the signature to be invalid.\n\n### References\nhttps://en.bitcoinwiki.org/wiki/Transaction_Malleability\n\n### For more information\nIf you have any questions or comments about this advisory please open an issue in [python-ecdsa](https://github.com/warner/python-ecdsa/issues) project.\n","fixed_in":["0.13.3"],"id":"GHSA-pwfw-mgfj-7g3g","link":"https://osv.dev/vulnerability/GHSA-pwfw-mgfj-7g3g","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-23342"],"details":"python-ecdsa has been found to be subject to a Minerva timing attack on the P-256 curve. Using the `ecdsa.SigningKey.sign_digest()` API function and timing signatures an attacker can leak the internal nonce which may allow for private key discovery. Both ECDSA signatures, key generation, and ECDH operations are affected. ECDSA signature verification is unaffected. The python-ecdsa project considers side channel attacks out of scope for the project and there is no planned fix.","fixed_in":[],"id":"GHSA-wj6h-64fc-37mp","link":"https://osv.dev/vulnerability/GHSA-wj6h-64fc-37mp","source":"osv","summary":null,"withdrawn":null}]},"0.13.3":{"info":{"author":"Brian Warner","author_email":"warner-pyecdsa@lothar.com","bugtrack_url":null,"classifiers":["Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.2","Programming Language :: Python :: 3.3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Topic :: Security :: Cryptography"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"http://github.com/warner/python-ecdsa","keywords":"","license":"MIT","maintainer":"","maintainer_email":"","name":"ecdsa","package_url":"https://pypi.org/project/ecdsa/","platform":"","project_url":"https://pypi.org/project/ecdsa/","project_urls":{"Homepage":"http://github.com/warner/python-ecdsa"},"provides_extra":null,"release_url":"https://pypi.org/project/ecdsa/0.13.3/","requires_dist":null,"requires_python":"","summary":"ECDSA cryptographic signature library (pure python)","version":"0.13.3","yanked":false,"yanked_reason":null},"last_serial":22672179,"urls":[{"comment_text":"","digests":{"blake2b_256":"a6812b170b460c84fdc8700cf08aa077ac6a9ff41f4ad3f05d0b3a64ba9f8f2e","md5":"531b03c68145ac3629461fc451bd0426","sha256":"9814e700890991abeceeb2242586024d4758c8fc18445b194a49bd62d85861db"},"downloads":-1,"filename":"ecdsa-0.13.3-py2.py3-none-any.whl","has_sig":false,"md5_digest":"531b03c68145ac3629461fc451bd0426","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":null,"size":52113,"upload_time":"2019-10-07T14:05:22","upload_time_iso_8601":"2019-10-07T14:05:22.583372Z","url":"https://files.pythonhosted.org/packages/a6/81/2b170b460c84fdc8700cf08aa077ac6a9ff41f4ad3f05d0b3a64ba9f8f2e/ecdsa-0.13.3-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"8cd89c3596fd0f18ae0a76333492a119c00183323d8e64de1a4f4bd642856963","md5":"b1b33f7fe171eb1278de6f93eefc34f8","sha256":"163c80b064a763ea733870feb96f9dd9b92216cfcacd374837af18e4e8ec3d4d"},"downloads":-1,"filename":"ecdsa-0.13.3.tar.gz","has_sig":false,"md5_digest":"b1b33f7fe171eb1278de6f93eefc34f8","packagetype":"sdist","python_version":"source","requires_python":null,"size":60477,"upload_time":"2019-10-07T14:05:24","upload_time_iso_8601":"2019-10-07T14:05:24.318783Z","url":"https://files.pythonhosted.org/packages/8c/d8/9c3596fd0f18ae0a76333492a119c00183323d8e64de1a4f4bd642856963/ecdsa-0.13.3.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-23342"],"details":"python-ecdsa has been found to be subject to a Minerva timing attack on the P-256 curve. Using the `ecdsa.SigningKey.sign_digest()` API function and timing signatures an attacker can leak the internal nonce which may allow for private key discovery. Both ECDSA signatures, key generation, and ECDH operations are affected. ECDSA signature verification is unaffected. The python-ecdsa project considers side channel attacks out of scope for the project and there is no planned fix.","fixed_in":[],"id":"GHSA-wj6h-64fc-37mp","link":"https://osv.dev/vulnerability/GHSA-wj6h-64fc-37mp","source":"osv","summary":null,"withdrawn":null}]},"0.14":{"info":{"author":"Brian Warner","author_email":"warner@lothar.com","bugtrack_url":null,"classifiers":["Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"http://github.com/warner/python-ecdsa","keywords":"","license":"MIT","maintainer":"","maintainer_email":"","name":"ecdsa","package_url":"https://pypi.org/project/ecdsa/","platform":"","project_url":"https://pypi.org/project/ecdsa/","project_urls":{"Homepage":"http://github.com/warner/python-ecdsa"},"provides_extra":null,"release_url":"https://pypi.org/project/ecdsa/0.14/","requires_dist":["six"],"requires_python":">=2.6, !=3.0.*, !=3.1.*, !=3.2.*","summary":"ECDSA cryptographic signature library (pure python)","version":"0.14","yanked":false,"yanked_reason":null},"last_serial":22672179,"urls":[{"comment_text":"","digests":{"blake2b_256":"f967ee62e7c338e7385bdd04d2702499cb504927d1d6db48aeb2b5e595c42cdf","md5":"2f843c7399c5ceb46c6652fca64b04d2","sha256":"da25d37406a664e9e4bcf009834bddfd98ec8d334cf2000621486515c6d1bc58"},"downloads":-1,"filename":"ecdsa-0.14-py2.py3-none-any.whl","has_sig":false,"md5_digest":"2f843c7399c5ceb46c6652fca64b04d2","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.6, !=3.0.*, !=3.1.*, !=3.2.*","size":83204,"upload_time":"2019-11-06T19:06:52","upload_time_iso_8601":"2019-11-06T19:06:52.056993Z","url":"https://files.pythonhosted.org/packages/f9/67/ee62e7c338e7385bdd04d2702499cb504927d1d6db48aeb2b5e595c42cdf/ecdsa-0.14-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"2cc399eed2aa1215c6f771c64e798c948b09b56ffcd0d06731bb64f73b9d9e1f","md5":"9c16ceeeedce296f054aea35c1f7f1f7","sha256":"4c8367f83216f9185c9b500d700c494e593af62a7980bfdfad9bd41e7969d69a"},"downloads":-1,"filename":"ecdsa-0.14.tar.gz","has_sig":false,"md5_digest":"9c16ceeeedce296f054aea35c1f7f1f7","packagetype":"sdist","python_version":"source","requires_python":">=2.6, !=3.0.*, !=3.1.*, !=3.2.*","size":100260,"upload_time":"2019-11-06T19:06:54","upload_time_iso_8601":"2019-11-06T19:06:54.295416Z","url":"https://files.pythonhosted.org/packages/2c/c3/99eed2aa1215c6f771c64e798c948b09b56ffcd0d06731bb64f73b9d9e1f/ecdsa-0.14.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-23342"],"details":"python-ecdsa has been found to be subject to a Minerva timing attack on the P-256 curve. Using the `ecdsa.SigningKey.sign_digest()` API function and timing signatures an attacker can leak the internal nonce which may allow for private key discovery. Both ECDSA signatures, key generation, and ECDH operations are affected. ECDSA signature verification is unaffected. The python-ecdsa project considers side channel attacks out of scope for the project and there is no planned fix.","fixed_in":[],"id":"GHSA-wj6h-64fc-37mp","link":"https://osv.dev/vulnerability/GHSA-wj6h-64fc-37mp","source":"osv","summary":null,"withdrawn":null}]},"0.14.1":{"info":{"author":"Brian Warner","author_email":"warner@lothar.com","bugtrack_url":null,"classifiers":["Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"http://github.com/warner/python-ecdsa","keywords":"","license":"MIT","maintainer":"","maintainer_email":"","name":"ecdsa","package_url":"https://pypi.org/project/ecdsa/","platform":"","project_url":"https://pypi.org/project/ecdsa/","project_urls":{"Homepage":"http://github.com/warner/python-ecdsa"},"provides_extra":null,"release_url":"https://pypi.org/project/ecdsa/0.14.1/","requires_dist":["six"],"requires_python":">=2.6, !=3.0.*, !=3.1.*, !=3.2.*","summary":"ECDSA cryptographic signature library (pure python)","version":"0.14.1","yanked":false,"yanked_reason":null},"last_serial":22672179,"urls":[{"comment_text":"","digests":{"blake2b_256":"a2253bb32da623b39a27a07d194cd58e4540224421d924661de2e694304ae4fa","md5":"2984f3cde64e614bf37e7d7fe1b4c55f","sha256":"e108a5fe92c67639abae3260e43561af914e7fd0d27bae6d2ec1312ae7934dfe"},"downloads":-1,"filename":"ecdsa-0.14.1-py2.py3-none-any.whl","has_sig":false,"md5_digest":"2984f3cde64e614bf37e7d7fe1b4c55f","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.6, !=3.0.*, !=3.1.*, !=3.2.*","size":79359,"upload_time":"2019-11-06T21:49:15","upload_time_iso_8601":"2019-11-06T21:49:15.204402Z","url":"https://files.pythonhosted.org/packages/a2/25/3bb32da623b39a27a07d194cd58e4540224421d924661de2e694304ae4fa/ecdsa-0.14.1-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"b09edffa648ea8f2bc9e58e96a9fcb8702c4b4f520047071b257acfb41d6924f","md5":"e846959fcd69e4152e68dfaf8ba768b8","sha256":"64c613005f13efec6541bb0a33290d0d03c27abab5f15fbab20fb0ee162bdd8e"},"downloads":-1,"filename":"ecdsa-0.14.1.tar.gz","has_sig":false,"md5_digest":"e846959fcd69e4152e68dfaf8ba768b8","packagetype":"sdist","python_version":"source","requires_python":">=2.6, !=3.0.*, !=3.1.*, !=3.2.*","size":100303,"upload_time":"2019-11-06T21:49:17","upload_time_iso_8601":"2019-11-06T21:49:17.851876Z","url":"https://files.pythonhosted.org/packages/b0/9e/dffa648ea8f2bc9e58e96a9fcb8702c4b4f520047071b257acfb41d6924f/ecdsa-0.14.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-23342"],"details":"python-ecdsa has been found to be subject to a Minerva timing attack on the P-256 curve. Using the `ecdsa.SigningKey.sign_digest()` API function and timing signatures an attacker can leak the internal nonce which may allow for private key discovery. Both ECDSA signatures, key generation, and ECDH operations are affected. ECDSA signature verification is unaffected. The python-ecdsa project considers side channel attacks out of scope for the project and there is no planned fix.","fixed_in":[],"id":"GHSA-wj6h-64fc-37mp","link":"https://osv.dev/vulnerability/GHSA-wj6h-64fc-37mp","source":"osv","summary":null,"withdrawn":null}]},"0.15":{"info":{"author":"Brian Warner","author_email":"warner@lothar.com","bugtrack_url":null,"classifiers":["Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"http://github.com/warner/python-ecdsa","keywords":"","license":"MIT","maintainer":"","maintainer_email":"","name":"ecdsa","package_url":"https://pypi.org/project/ecdsa/","platform":"","project_url":"https://pypi.org/project/ecdsa/","project_urls":{"Homepage":"http://github.com/warner/python-ecdsa"},"provides_extra":null,"release_url":"https://pypi.org/project/ecdsa/0.15/","requires_dist":["six (>=1.9.0)","gmpy ; extra == 'gmpy'","gmpy2 ; extra == 'gmpy2'"],"requires_python":">=2.6, !=3.0.*, !=3.1.*, !=3.2.*","summary":"ECDSA cryptographic signature library (pure python)","version":"0.15","yanked":false,"yanked_reason":null},"last_serial":22672179,"urls":[{"comment_text":"","digests":{"blake2b_256":"b8114b4d30e4746584684c758d8f1ddc1fa5ab1470b6bf70bce4d9b235965e99","md5":"b975940fb31e0fff0ec0e95fda07db72","sha256":"867ec9cf6df0b03addc8ef66b56359643cb5d0c1dc329df76ba7ecfe256c8061"},"downloads":-1,"filename":"ecdsa-0.15-py2.py3-none-any.whl","has_sig":false,"md5_digest":"b975940fb31e0fff0ec0e95fda07db72","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.6, !=3.0.*, !=3.1.*, !=3.2.*","size":100181,"upload_time":"2020-01-02T16:06:42","upload_time_iso_8601":"2020-01-02T16:06:42.015376Z","url":"https://files.pythonhosted.org/packages/b8/11/4b4d30e4746584684c758d8f1ddc1fa5ab1470b6bf70bce4d9b235965e99/ecdsa-0.15-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"e37cb508ade1feb47cd79222e06d85e477f5cfc4fb0455ad3c70eb6330fc49aa","md5":"821d543047941dd26f543f62912230d4","sha256":"8f12ac317f8a1318efa75757ef0a651abe12e51fc1af8838fb91079445227277"},"downloads":-1,"filename":"ecdsa-0.15.tar.gz","has_sig":false,"md5_digest":"821d543047941dd26f543f62912230d4","packagetype":"sdist","python_version":"source","requires_python":">=2.6, !=3.0.*, !=3.1.*, !=3.2.*","size":122119,"upload_time":"2020-01-02T16:06:44","upload_time_iso_8601":"2020-01-02T16:06:44.098254Z","url":"https://files.pythonhosted.org/packages/e3/7c/b508ade1feb47cd79222e06d85e477f5cfc4fb0455ad3c70eb6330fc49aa/ecdsa-0.15.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-23342"],"details":"python-ecdsa has been found to be subject to a Minerva timing attack on the P-256 curve. Using the `ecdsa.SigningKey.sign_digest()` API function and timing signatures an attacker can leak the internal nonce which may allow for private key discovery. Both ECDSA signatures, key generation, and ECDH operations are affected. ECDSA signature verification is unaffected. The python-ecdsa project considers side channel attacks out of scope for the project and there is no planned fix.","fixed_in":[],"id":"GHSA-wj6h-64fc-37mp","link":"https://osv.dev/vulnerability/GHSA-wj6h-64fc-37mp","source":"osv","summary":null,"withdrawn":null}]},"0.16.0":{"info":{"author":"Brian Warner","author_email":"warner@lothar.com","bugtrack_url":null,"classifiers":["Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"http://github.com/warner/python-ecdsa","keywords":"","license":"MIT","maintainer":"","maintainer_email":"","name":"ecdsa","package_url":"https://pypi.org/project/ecdsa/","platform":"","project_url":"https://pypi.org/project/ecdsa/","project_urls":{"Homepage":"http://github.com/warner/python-ecdsa"},"provides_extra":null,"release_url":"https://pypi.org/project/ecdsa/0.16.0/","requires_dist":["six (>=1.9.0)","gmpy ; extra == 'gmpy'","gmpy2 ; extra == 'gmpy2'"],"requires_python":">=2.6, !=3.0.*, !=3.1.*, !=3.2.*","summary":"ECDSA cryptographic signature library (pure python)","version":"0.16.0","yanked":false,"yanked_reason":null},"last_serial":22672179,"urls":[{"comment_text":"","digests":{"blake2b_256":"5d8bc6ea939f70b3356e10e771a8d5ef27fd8ecc74d9e49ec8116d94f83b9673","md5":"d94c2f675f5bfdba0725d164ebcc0205","sha256":"ca359c971594dceebf334f3d623dae43163ab161c7d09f28cae70a86df26eb7a"},"downloads":-1,"filename":"ecdsa-0.16.0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"d94c2f675f5bfdba0725d164ebcc0205","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.6, !=3.0.*, !=3.1.*, !=3.2.*","size":103262,"upload_time":"2020-08-27T14:49:02","upload_time_iso_8601":"2020-08-27T14:49:02.354158Z","url":"https://files.pythonhosted.org/packages/5d/8b/c6ea939f70b3356e10e771a8d5ef27fd8ecc74d9e49ec8116d94f83b9673/ecdsa-0.16.0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"23c381b0040f2976775d6685c3bb3748355bb2b725a9210a4ea50afc5a90e7d9","md5":"d593df1ab57da611dca76f7328c47b21","sha256":"494c6a853e9ed2e9be33d160b41d47afc50a6629b993d2b9c5ad7bb226add892"},"downloads":-1,"filename":"ecdsa-0.16.0.tar.gz","has_sig":false,"md5_digest":"d593df1ab57da611dca76f7328c47b21","packagetype":"sdist","python_version":"source","requires_python":">=2.6, !=3.0.*, !=3.1.*, !=3.2.*","size":125851,"upload_time":"2020-08-27T14:49:04","upload_time_iso_8601":"2020-08-27T14:49:04.538577Z","url":"https://files.pythonhosted.org/packages/23/c3/81b0040f2976775d6685c3bb3748355bb2b725a9210a4ea50afc5a90e7d9/ecdsa-0.16.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-23342"],"details":"python-ecdsa has been found to be subject to a Minerva timing attack on the P-256 curve. Using the `ecdsa.SigningKey.sign_digest()` API function and timing signatures an attacker can leak the internal nonce which may allow for private key discovery. Both ECDSA signatures, key generation, and ECDH operations are affected. ECDSA signature verification is unaffected. The python-ecdsa project considers side channel attacks out of scope for the project and there is no planned fix.","fixed_in":[],"id":"GHSA-wj6h-64fc-37mp","link":"https://osv.dev/vulnerability/GHSA-wj6h-64fc-37mp","source":"osv","summary":null,"withdrawn":null}]},"0.16.1":{"info":{"author":"Brian Warner","author_email":"warner@lothar.com","bugtrack_url":null,"classifiers":["Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"http://github.com/warner/python-ecdsa","keywords":"","license":"MIT","maintainer":"","maintainer_email":"","name":"ecdsa","package_url":"https://pypi.org/project/ecdsa/","platform":"","project_url":"https://pypi.org/project/ecdsa/","project_urls":{"Homepage":"http://github.com/warner/python-ecdsa"},"provides_extra":null,"release_url":"https://pypi.org/project/ecdsa/0.16.1/","requires_dist":["six (>=1.9.0)","gmpy ; extra == 'gmpy'","gmpy2 ; extra == 'gmpy2'"],"requires_python":">=2.6, !=3.0.*, !=3.1.*, !=3.2.*","summary":"ECDSA cryptographic signature library (pure python)","version":"0.16.1","yanked":false,"yanked_reason":null},"last_serial":22672179,"urls":[{"comment_text":"","digests":{"blake2b_256":"981670be2716e24eaf5d81074bb3c05429d60292c2a96613a78ac3d69526ad2a","md5":"cedd271195e1876b6725944a95fba39a","sha256":"881fa5e12bb992972d3d1b3d4dfbe149ab76a89f13da02daa5ea1ec7dea6e747"},"downloads":-1,"filename":"ecdsa-0.16.1-py2.py3-none-any.whl","has_sig":false,"md5_digest":"cedd271195e1876b6725944a95fba39a","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.6, !=3.0.*, !=3.1.*, !=3.2.*","size":104195,"upload_time":"2020-11-12T19:15:49","upload_time_iso_8601":"2020-11-12T19:15:49.563744Z","url":"https://files.pythonhosted.org/packages/98/16/70be2716e24eaf5d81074bb3c05429d60292c2a96613a78ac3d69526ad2a/ecdsa-0.16.1-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"1dd40684a83b3c16a9d1446ace27a506cef1db9b23984ac7ed6aaf764fdd56e8","md5":"98c0da4c046286e892fdba727f93edea","sha256":"cfc046a2ddd425adbd1a78b3c46f0d1325c657811c0f45ecc3a0a6236c1e50ff"},"downloads":-1,"filename":"ecdsa-0.16.1.tar.gz","has_sig":false,"md5_digest":"98c0da4c046286e892fdba727f93edea","packagetype":"sdist","python_version":"source","requires_python":">=2.6, !=3.0.*, !=3.1.*, !=3.2.*","size":126935,"upload_time":"2020-11-12T19:15:51","upload_time_iso_8601":"2020-11-12T19:15:51.714335Z","url":"https://files.pythonhosted.org/packages/1d/d4/0684a83b3c16a9d1446ace27a506cef1db9b23984ac7ed6aaf764fdd56e8/ecdsa-0.16.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-23342"],"details":"python-ecdsa has been found to be subject to a Minerva timing attack on the P-256 curve. Using the `ecdsa.SigningKey.sign_digest()` API function and timing signatures an attacker can leak the internal nonce which may allow for private key discovery. Both ECDSA signatures, key generation, and ECDH operations are affected. ECDSA signature verification is unaffected. The python-ecdsa project considers side channel attacks out of scope for the project and there is no planned fix.","fixed_in":[],"id":"GHSA-wj6h-64fc-37mp","link":"https://osv.dev/vulnerability/GHSA-wj6h-64fc-37mp","source":"osv","summary":null,"withdrawn":null}]},"0.17.0":{"info":{"author":"Brian Warner","author_email":"warner@lothar.com","bugtrack_url":null,"classifiers":["Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"http://github.com/tlsfuzzer/python-ecdsa","keywords":"","license":"MIT","maintainer":"","maintainer_email":"","name":"ecdsa","package_url":"https://pypi.org/project/ecdsa/","platform":"","project_url":"https://pypi.org/project/ecdsa/","project_urls":{"Homepage":"http://github.com/tlsfuzzer/python-ecdsa"},"provides_extra":null,"release_url":"https://pypi.org/project/ecdsa/0.17.0/","requires_dist":["six (>=1.9.0)","gmpy ; extra == 'gmpy'","gmpy2 ; extra == 'gmpy2'"],"requires_python":">=2.6, !=3.0.*, !=3.1.*, !=3.2.*","summary":"ECDSA cryptographic signature library (pure python)","version":"0.17.0","yanked":false,"yanked_reason":null},"last_serial":22672179,"urls":[{"comment_text":"","digests":{"blake2b_256":"4ab6b678b080967b2696e9a201c096dc076ad756fb35c87dca4e1d1a13496ff7","md5":"01d316a78d5bf9c3c044fec95b3420d5","sha256":"5cf31d5b33743abe0dfc28999036c849a69d548f994b535e527ee3cb7f3ef676"},"downloads":-1,"filename":"ecdsa-0.17.0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"01d316a78d5bf9c3c044fec95b3420d5","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.6, !=3.0.*, !=3.1.*, !=3.2.*","size":119336,"upload_time":"2021-05-27T18:19:56","upload_time_iso_8601":"2021-05-27T18:19:56.689939Z","url":"https://files.pythonhosted.org/packages/4a/b6/b678b080967b2696e9a201c096dc076ad756fb35c87dca4e1d1a13496ff7/ecdsa-0.17.0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"bf3d3d909532ad541651390bf1321e097404cbd39d1d89c2046f42a460220fb3","md5":"d0dd59c43af0f640a60599551529f5d0","sha256":"b9f500bb439e4153d0330610f5d26baaf18d17b8ced1bc54410d189385ea68aa"},"downloads":-1,"filename":"ecdsa-0.17.0.tar.gz","has_sig":false,"md5_digest":"d0dd59c43af0f640a60599551529f5d0","packagetype":"sdist","python_version":"source","requires_python":">=2.6, !=3.0.*, !=3.1.*, !=3.2.*","size":158486,"upload_time":"2021-05-27T18:19:58","upload_time_iso_8601":"2021-05-27T18:19:58.874356Z","url":"https://files.pythonhosted.org/packages/bf/3d/3d909532ad541651390bf1321e097404cbd39d1d89c2046f42a460220fb3/ecdsa-0.17.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-23342"],"details":"python-ecdsa has been found to be subject to a Minerva timing attack on the P-256 curve. Using the `ecdsa.SigningKey.sign_digest()` API function and timing signatures an attacker can leak the internal nonce which may allow for private key discovery. Both ECDSA signatures, key generation, and ECDH operations are affected. ECDSA signature verification is unaffected. The python-ecdsa project considers side channel attacks out of scope for the project and there is no planned fix.","fixed_in":[],"id":"GHSA-wj6h-64fc-37mp","link":"https://osv.dev/vulnerability/GHSA-wj6h-64fc-37mp","source":"osv","summary":null,"withdrawn":null}]},"0.18.0":{"info":{"author":"Brian Warner","author_email":"warner@lothar.com","bugtrack_url":null,"classifiers":["Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"http://github.com/tlsfuzzer/python-ecdsa","keywords":"","license":"MIT","maintainer":"","maintainer_email":"","name":"ecdsa","package_url":"https://pypi.org/project/ecdsa/","platform":null,"project_url":"https://pypi.org/project/ecdsa/","project_urls":{"Homepage":"http://github.com/tlsfuzzer/python-ecdsa"},"provides_extra":null,"release_url":"https://pypi.org/project/ecdsa/0.18.0/","requires_dist":["six (>=1.9.0)","gmpy ; extra == 'gmpy'","gmpy2 ; extra == 'gmpy2'"],"requires_python":">=2.6, !=3.0.*, !=3.1.*, !=3.2.*","summary":"ECDSA cryptographic signature library (pure python)","version":"0.18.0","yanked":false,"yanked_reason":null},"last_serial":22672179,"urls":[{"comment_text":"","digests":{"blake2b_256":"09d44f05f5d16a4863b30ba96c23b23e942da8889abfa1cdbabf2a0df12a4532","md5":"2c3c242c338cc6d9b213a1d5b46e0c04","sha256":"80600258e7ed2f16b9aa1d7c295bd70194109ad5a30fdee0eaeefef1d4c559dd"},"downloads":-1,"filename":"ecdsa-0.18.0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"2c3c242c338cc6d9b213a1d5b46e0c04","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.6, !=3.0.*, !=3.1.*, !=3.2.*","size":142915,"upload_time":"2022-07-09T13:02:46","upload_time_iso_8601":"2022-07-09T13:02:46.354910Z","url":"https://files.pythonhosted.org/packages/09/d4/4f05f5d16a4863b30ba96c23b23e942da8889abfa1cdbabf2a0df12a4532/ecdsa-0.18.0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"ff7bba6547a76c468a0d22de93e89ae60d9561ec911f59532907e72b0d8bc0f1","md5":"cbca26ec29cc50e32e8b070aa2ec0786","sha256":"190348041559e21b22a1d65cee485282ca11a6f81d503fddb84d5017e9ed1e49"},"downloads":-1,"filename":"ecdsa-0.18.0.tar.gz","has_sig":false,"md5_digest":"cbca26ec29cc50e32e8b070aa2ec0786","packagetype":"sdist","python_version":"source","requires_python":">=2.6, !=3.0.*, !=3.1.*, !=3.2.*","size":197938,"upload_time":"2022-07-09T13:02:49","upload_time_iso_8601":"2022-07-09T13:02:49.468187Z","url":"https://files.pythonhosted.org/packages/ff/7b/ba6547a76c468a0d22de93e89ae60d9561ec911f59532907e72b0d8bc0f1/ecdsa-0.18.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-23342"],"details":"python-ecdsa has been found to be subject to a Minerva timing attack on the P-256 curve. Using the `ecdsa.SigningKey.sign_digest()` API function and timing signatures an attacker can leak the internal nonce which may allow for private key discovery. Both ECDSA signatures, key generation, and ECDH operations are affected. ECDSA signature verification is unaffected. The python-ecdsa project considers side channel attacks out of scope for the project and there is no planned fix.","fixed_in":[],"id":"GHSA-wj6h-64fc-37mp","link":"https://osv.dev/vulnerability/GHSA-wj6h-64fc-37mp","source":"osv","summary":null,"withdrawn":null}]},"0.18.0b1":{"info":{"author":"Brian Warner","author_email":"warner@lothar.com","bugtrack_url":null,"classifiers":["Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"http://github.com/tlsfuzzer/python-ecdsa","keywords":"","license":"MIT","maintainer":"","maintainer_email":"","name":"ecdsa","package_url":"https://pypi.org/project/ecdsa/","platform":"","project_url":"https://pypi.org/project/ecdsa/","project_urls":{"Homepage":"http://github.com/tlsfuzzer/python-ecdsa"},"provides_extra":null,"release_url":"https://pypi.org/project/ecdsa/0.18.0b1/","requires_dist":["six (>=1.9.0)","gmpy ; extra == 'gmpy'","gmpy2 ; extra == 'gmpy2'"],"requires_python":">=2.6, !=3.0.*, !=3.1.*, !=3.2.*","summary":"ECDSA cryptographic signature library (pure python)","version":"0.18.0b1","yanked":false,"yanked_reason":null},"last_serial":22672179,"urls":[{"comment_text":"","digests":{"blake2b_256":"840b61a79cf7f50cdbb703112e903c1a4d3744afedca62220aabfd5a5b5a516d","md5":"e60fbc4d9e5bff593fa4b275d9184bae","sha256":"94417b418e7b5ff89256e1a3ff9b25adbd7c6169360d85bb75bb48e23c13ace2"},"downloads":-1,"filename":"ecdsa-0.18.0b1-py2.py3-none-any.whl","has_sig":false,"md5_digest":"e60fbc4d9e5bff593fa4b275d9184bae","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.6, !=3.0.*, !=3.1.*, !=3.2.*","size":141019,"upload_time":"2021-08-03T12:11:54","upload_time_iso_8601":"2021-08-03T12:11:54.602799Z","url":"https://files.pythonhosted.org/packages/84/0b/61a79cf7f50cdbb703112e903c1a4d3744afedca62220aabfd5a5b5a516d/ecdsa-0.18.0b1-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"3ccaf804e1cff12d1f828489f164c7c30cd84e3498f9431b9500cdd5db2a6082","md5":"092fe4ec711fdc15dd295ec2c7b28d06","sha256":"cde076cb472d2d95b93d96d398214b7dd7affe0e8238a458eb7bacb9380b5998"},"downloads":-1,"filename":"ecdsa-0.18.0b1.tar.gz","has_sig":false,"md5_digest":"092fe4ec711fdc15dd295ec2c7b28d06","packagetype":"sdist","python_version":"source","requires_python":">=2.6, !=3.0.*, !=3.1.*, !=3.2.*","size":180276,"upload_time":"2021-08-03T12:11:57","upload_time_iso_8601":"2021-08-03T12:11:57.001804Z","url":"https://files.pythonhosted.org/packages/3c/ca/f804e1cff12d1f828489f164c7c30cd84e3498f9431b9500cdd5db2a6082/ecdsa-0.18.0b1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-23342"],"details":"python-ecdsa has been found to be subject to a Minerva timing attack on the P-256 curve. Using the `ecdsa.SigningKey.sign_digest()` API function and timing signatures an attacker can leak the internal nonce which may allow for private key discovery. Both ECDSA signatures, key generation, and ECDH operations are affected. ECDSA signature verification is unaffected. The python-ecdsa project considers side channel attacks out of scope for the project and there is no planned fix.","fixed_in":[],"id":"GHSA-wj6h-64fc-37mp","link":"https://osv.dev/vulnerability/GHSA-wj6h-64fc-37mp","source":"osv","summary":null,"withdrawn":null}]},"0.18.0b2":{"info":{"author":"Brian Warner","author_email":"warner@lothar.com","bugtrack_url":null,"classifiers":["Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9"],"description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"http://github.com/tlsfuzzer/python-ecdsa","keywords":"","license":"MIT","maintainer":"","maintainer_email":"","name":"ecdsa","package_url":"https://pypi.org/project/ecdsa/","platform":"","project_url":"https://pypi.org/project/ecdsa/","project_urls":{"Homepage":"http://github.com/tlsfuzzer/python-ecdsa"},"provides_extra":null,"release_url":"https://pypi.org/project/ecdsa/0.18.0b2/","requires_dist":["six (>=1.9.0)","gmpy ; extra == 'gmpy'","gmpy2 ; extra == 'gmpy2'"],"requires_python":">=2.6, !=3.0.*, !=3.1.*, !=3.2.*","summary":"ECDSA cryptographic signature library (pure python)","version":"0.18.0b2","yanked":false,"yanked_reason":null},"last_serial":22672179,"urls":[{"comment_text":"","digests":{"blake2b_256":"b44cf8b4ed6c61dff52294f98aaf99053dd979c1b4233d953f371afb0a2977a1","md5":"a0a58d487999cf30822a2cf3ff0828e8","sha256":"87efdeb1380b50467681a8d82ed5d46af6b3b79765cf8e38f07f6a52d09b9196"},"downloads":-1,"filename":"ecdsa-0.18.0b2-py2.py3-none-any.whl","has_sig":false,"md5_digest":"a0a58d487999cf30822a2cf3ff0828e8","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.6, !=3.0.*, !=3.1.*, !=3.2.*","size":142122,"upload_time":"2022-01-05T17:35:56","upload_time_iso_8601":"2022-01-05T17:35:56.528887Z","url":"https://files.pythonhosted.org/packages/b4/4c/f8b4ed6c61dff52294f98aaf99053dd979c1b4233d953f371afb0a2977a1/ecdsa-0.18.0b2-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c11d0becb7363851a1c152be461e971592e2b985005d6883a95b210de3f2ee65","md5":"15bebaf02ba1a0e0efcfb53efa4ea0fc","sha256":"b7a29fde6d28f6817e413672ec1301dd07bddec6a4d608118fef1e32d4313c3a"},"downloads":-1,"filename":"ecdsa-0.18.0b2.tar.gz","has_sig":false,"md5_digest":"15bebaf02ba1a0e0efcfb53efa4ea0fc","packagetype":"sdist","python_version":"source","requires_python":">=2.6, !=3.0.*, !=3.1.*, !=3.2.*","size":184321,"upload_time":"2022-01-05T17:35:59","upload_time_iso_8601":"2022-01-05T17:35:59.735809Z","url":"https://files.pythonhosted.org/packages/c1/1d/0becb7363851a1c152be461e971592e2b985005d6883a95b210de3f2ee65/ecdsa-0.18.0b2.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2024-23342"],"details":"python-ecdsa has been found to be subject to a Minerva timing attack on the P-256 curve. Using the `ecdsa.SigningKey.sign_digest()` API function and timing signatures an attacker can leak the internal nonce which may allow for private key discovery. Both ECDSA signatures, key generation, and ECDH operations are affected. ECDSA signature verification is unaffected. The python-ecdsa project considers side channel attacks out of scope for the project and there is no planned fix.","fixed_in":[],"id":"GHSA-wj6h-64fc-37mp","link":"https://osv.dev/vulnerability/GHSA-wj6h-64fc-37mp","source":"osv","summary":null,"withdrawn":null}]},"0.19.0":{"info":{"author":"Brian Warner","author_email":"warner@lothar.com","bugtrack_url":null,"classifiers":["Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9"],"description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"http://github.com/tlsfuzzer/python-ecdsa","keywords":null,"license":"MIT","maintainer":null,"maintainer_email":null,"name":"ecdsa","package_url":"https://pypi.org/project/ecdsa/","platform":null,"project_url":"https://pypi.org/project/ecdsa/","project_urls":{"Homepage":"http://github.com/tlsfuzzer/python-ecdsa"},"provides_extra":null,"release_url":"https://pypi.org/project/ecdsa/0.19.0/","requires_dist":["six>=1.9.0","gmpy; extra == \"gmpy\"","gmpy2; extra == \"gmpy2\""],"requires_python":"!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.6","summary":"ECDSA cryptographic signature library (pure python)","version":"0.19.0","yanked":false,"yanked_reason":null},"last_serial":22672179,"urls":[{"comment_text":"","digests":{"blake2b_256":"00e7ed3243b30d1bec41675b6394a1daae46349dc2b855cb83be846a5a918238","md5":"ceb7b78bcb53e3dc4f96f89354011796","sha256":"2cea9b88407fdac7bbeca0833b189e4c9c53f2ef1e1eaa29f6224dbc809b707a"},"downloads":-1,"filename":"ecdsa-0.19.0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"ceb7b78bcb53e3dc4f96f89354011796","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":"!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.6","size":149266,"upload_time":"2024-04-08T19:01:00","upload_time_iso_8601":"2024-04-08T19:01:00.977377Z","url":"https://files.pythonhosted.org/packages/00/e7/ed3243b30d1bec41675b6394a1daae46349dc2b855cb83be846a5a918238/ecdsa-0.19.0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"5ed0ec8ac1de7accdcf18cfe468653ef00afd2f609faf67c423efbd02491051b","md5":"3c9234e8b57eea26d88093f18d2aa358","sha256":"60eaad1199659900dd0af521ed462b793bbdf867432b3948e87416ae4caf6bf8"},"downloads":-1,"filename":"ecdsa-0.19.0.tar.gz","has_sig":false,"md5_digest":"3c9234e8b57eea26d88093f18d2aa358","packagetype":"sdist","python_version":"source","requires_python":"!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.6","size":197791,"upload_time":"2024-04-08T19:01:03","upload_time_iso_8601":"2024-04-08T19:01:03.247500Z","url":"https://files.pythonhosted.org/packages/5e/d0/ec8ac1de7accdcf18cfe468653ef00afd2f609faf67c423efbd02491051b/ecdsa-0.19.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]},"0.6":{"info":{"author":"Brian Warner","author_email":"warner-pyecdsa@lothar.com","bugtrack_url":null,"classifiers":[],"description_content_type":null,"docs_url":null,"download_url":"UNKNOWN","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"http://github.com/warner/python-ecdsa","keywords":null,"license":"MIT","maintainer":null,"maintainer_email":null,"name":"ecdsa","package_url":"https://pypi.org/project/ecdsa/","platform":"UNKNOWN","project_url":"https://pypi.org/project/ecdsa/","project_urls":{"Download":"UNKNOWN","Homepage":"http://github.com/warner/python-ecdsa"},"provides_extra":null,"release_url":"https://pypi.org/project/ecdsa/0.6/","requires_dist":null,"requires_python":null,"summary":"ECDSA cryptographic signature library (pure python)","version":"0.6","yanked":false,"yanked_reason":null},"last_serial":22672179,"urls":[{"comment_text":"","digests":{"blake2b_256":"50ad2ac887c3773a770a396995f2f74cd0cc64942cdeaf2bcc243cd2355d072b","md5":"7a4750df7b7b5147a78a69ff92056ead","sha256":"f963025a4f6ced53ec63951aa4b1c1774b4d3ec7f008a5671abcf137c857aa00"},"downloads":-1,"filename":"ecdsa-0.6.tar.gz","has_sig":false,"md5_digest":"7a4750df7b7b5147a78a69ff92056ead","packagetype":"sdist","python_version":"source","requires_python":null,"size":35072,"upload_time":"2010-10-16T02:50:08","upload_time_iso_8601":"2010-10-16T02:50:08.090445Z","url":"https://files.pythonhosted.org/packages/50/ad/2ac887c3773a770a396995f2f74cd0cc64942cdeaf2bcc243cd2355d072b/ecdsa-0.6.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2019-14859","GHSA-8qxj-f9rh-9fg2"],"details":"A flaw was found in all python-ecdsa versions before 0.13.3, where it did not correctly verify whether signatures used DER encoding. Without this verification, a malformed signature could be accepted, making the signature malleable. Without proper verification, an attacker could use a malleable signature to create false transactions.","fixed_in":["0.13.3"],"id":"PYSEC-2020-163","link":"https://osv.dev/vulnerability/PYSEC-2020-163","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2019-14853","GHSA-2mrj-435v-c2cr","GHSA-pwfw-mgfj-7g3g"],"details":"An error-handling flaw was found in python-ecdsa before version 0.13.3. During signature decoding, malformed DER signatures could raise unexpected exceptions (or no exceptions at all), which could lead to a denial of service.","fixed_in":["0.13.3"],"id":"PYSEC-2019-177","link":"https://osv.dev/vulnerability/PYSEC-2019-177","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2019-14859"],"details":"A flaw was found in all python-ecdsa versions before 0.13.3, where it did not correctly verify whether signatures used DER encoding. Without this verification, a malformed signature could be accepted, making the signature malleable. Without proper verification, an attacker could use a malleable signature to create false transactions.","fixed_in":["0.13.3"],"id":"GHSA-8qxj-f9rh-9fg2","link":"https://osv.dev/vulnerability/GHSA-8qxj-f9rh-9fg2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2019-14853"],"details":"## possible DoS in signature verification and signature malleability \n\n### Impact\nCode using `VerifyingKey.verify()` and `VerifyingKey.verify_digest()` may receive exceptions other than the documented `BadSignatureError` when signatures are malformed. If those other exceptions are not caught, they may lead to program termination and thus Denial of Service\n\nCode using `VerifyingKey.verify()` and `VerifyingKey.verify_digest()` with `sigdecode` option using `ecdsa.util.sigdecode_der` will accept signatures even if they are not properly formatted DER. This makes the signatures malleable. It impacts only applications that later sign the signatures or verify signatures of signatures, e.g. Bitcoin.\n\nAll versions between 0.5 and 0.13.2 (inclusive) are thought to be vulnerable. Code before 0.5 may be vulnerable but didn't receive extended analysis to rule this issue out.\n\n### Patches\nThe patches have been merged to `master` branch in https://github.com/warner/python-ecdsa/pull/115.\nThe backported patches for a release in the 0.13 branch are in https://github.com/warner/python-ecdsa/pull/124\n\nThey are part of the 0.13.3 release.\n\nThere are no plans to backport them to earlier releases.\n\n### Workarounds\nIt may be possible to prevent the Denial of Service by catching also `UnexpectedDER`, `IndexError` and `AssertionError` exceptions. That list hasn't been verified to be complete though. If those exceptions are raised, the signature verification process should consider the signature to be invalid.\n\nTo remediate signature malleability and the Denial of Service vulnerability, it may be possible to first verify that the signature is properly DER formatted ECDSA-Sig-Value, as defined in [RFC3279](https://tools.ietf.org/html/rfc3279), before passing it to `verify()` or `verify_digest()` methods. If the signature is determined to not follow the DER or encode a different structure, the signature verification process should consider the signature to be invalid.\n\n### References\nhttps://en.bitcoinwiki.org/wiki/Transaction_Malleability\n\n### For more information\nIf you have any questions or comments about this advisory please open an issue in [python-ecdsa](https://github.com/warner/python-ecdsa/issues) project.\n","fixed_in":["0.13.3"],"id":"GHSA-pwfw-mgfj-7g3g","link":"https://osv.dev/vulnerability/GHSA-pwfw-mgfj-7g3g","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-23342"],"details":"python-ecdsa has been found to be subject to a Minerva timing attack on the P-256 curve. Using the `ecdsa.SigningKey.sign_digest()` API function and timing signatures an attacker can leak the internal nonce which may allow for private key discovery. Both ECDSA signatures, key generation, and ECDH operations are affected. ECDSA signature verification is unaffected. The python-ecdsa project considers side channel attacks out of scope for the project and there is no planned fix.","fixed_in":[],"id":"GHSA-wj6h-64fc-37mp","link":"https://osv.dev/vulnerability/GHSA-wj6h-64fc-37mp","source":"osv","summary":null,"withdrawn":null}]},"0.7":{"info":{"author":"Brian Warner","author_email":"warner-pyecdsa@lothar.com","bugtrack_url":null,"classifiers":[],"description_content_type":null,"docs_url":null,"download_url":"UNKNOWN","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"http://github.com/warner/python-ecdsa","keywords":null,"license":"MIT","maintainer":null,"maintainer_email":null,"name":"ecdsa","package_url":"https://pypi.org/project/ecdsa/","platform":"UNKNOWN","project_url":"https://pypi.org/project/ecdsa/","project_urls":{"Download":"UNKNOWN","Homepage":"http://github.com/warner/python-ecdsa"},"provides_extra":null,"release_url":"https://pypi.org/project/ecdsa/0.7/","requires_dist":null,"requires_python":null,"summary":"ECDSA cryptographic signature library (pure python)","version":"0.7","yanked":false,"yanked_reason":null},"last_serial":22672179,"urls":[{"comment_text":"","digests":{"blake2b_256":"fbc549e23d246bda83e37a6a99ca0e2f6455d0b78f3a6c43b3d939a1f0dd02cf","md5":"cdf12b87e2f3cd96bac221b87a8eee52","sha256":"3fe6ec84b6efadc5523e1549cec1cbd3f19f83bab28163802d024a717a7671cd"},"downloads":-1,"filename":"ecdsa-0.7.tar.gz","has_sig":false,"md5_digest":"cdf12b87e2f3cd96bac221b87a8eee52","packagetype":"sdist","python_version":"source","requires_python":null,"size":35375,"upload_time":"2010-12-28T20:07:56","upload_time_iso_8601":"2010-12-28T20:07:56.288499Z","url":"https://files.pythonhosted.org/packages/fb/c5/49e23d246bda83e37a6a99ca0e2f6455d0b78f3a6c43b3d939a1f0dd02cf/ecdsa-0.7.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2019-14859","GHSA-8qxj-f9rh-9fg2"],"details":"A flaw was found in all python-ecdsa versions before 0.13.3, where it did not correctly verify whether signatures used DER encoding. Without this verification, a malformed signature could be accepted, making the signature malleable. Without proper verification, an attacker could use a malleable signature to create false transactions.","fixed_in":["0.13.3"],"id":"PYSEC-2020-163","link":"https://osv.dev/vulnerability/PYSEC-2020-163","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2019-14853","GHSA-2mrj-435v-c2cr","GHSA-pwfw-mgfj-7g3g"],"details":"An error-handling flaw was found in python-ecdsa before version 0.13.3. During signature decoding, malformed DER signatures could raise unexpected exceptions (or no exceptions at all), which could lead to a denial of service.","fixed_in":["0.13.3"],"id":"PYSEC-2019-177","link":"https://osv.dev/vulnerability/PYSEC-2019-177","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2019-14859"],"details":"A flaw was found in all python-ecdsa versions before 0.13.3, where it did not correctly verify whether signatures used DER encoding. Without this verification, a malformed signature could be accepted, making the signature malleable. Without proper verification, an attacker could use a malleable signature to create false transactions.","fixed_in":["0.13.3"],"id":"GHSA-8qxj-f9rh-9fg2","link":"https://osv.dev/vulnerability/GHSA-8qxj-f9rh-9fg2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2019-14853"],"details":"## possible DoS in signature verification and signature malleability \n\n### Impact\nCode using `VerifyingKey.verify()` and `VerifyingKey.verify_digest()` may receive exceptions other than the documented `BadSignatureError` when signatures are malformed. If those other exceptions are not caught, they may lead to program termination and thus Denial of Service\n\nCode using `VerifyingKey.verify()` and `VerifyingKey.verify_digest()` with `sigdecode` option using `ecdsa.util.sigdecode_der` will accept signatures even if they are not properly formatted DER. This makes the signatures malleable. It impacts only applications that later sign the signatures or verify signatures of signatures, e.g. Bitcoin.\n\nAll versions between 0.5 and 0.13.2 (inclusive) are thought to be vulnerable. Code before 0.5 may be vulnerable but didn't receive extended analysis to rule this issue out.\n\n### Patches\nThe patches have been merged to `master` branch in https://github.com/warner/python-ecdsa/pull/115.\nThe backported patches for a release in the 0.13 branch are in https://github.com/warner/python-ecdsa/pull/124\n\nThey are part of the 0.13.3 release.\n\nThere are no plans to backport them to earlier releases.\n\n### Workarounds\nIt may be possible to prevent the Denial of Service by catching also `UnexpectedDER`, `IndexError` and `AssertionError` exceptions. That list hasn't been verified to be complete though. If those exceptions are raised, the signature verification process should consider the signature to be invalid.\n\nTo remediate signature malleability and the Denial of Service vulnerability, it may be possible to first verify that the signature is properly DER formatted ECDSA-Sig-Value, as defined in [RFC3279](https://tools.ietf.org/html/rfc3279), before passing it to `verify()` or `verify_digest()` methods. If the signature is determined to not follow the DER or encode a different structure, the signature verification process should consider the signature to be invalid.\n\n### References\nhttps://en.bitcoinwiki.org/wiki/Transaction_Malleability\n\n### For more information\nIf you have any questions or comments about this advisory please open an issue in [python-ecdsa](https://github.com/warner/python-ecdsa/issues) project.\n","fixed_in":["0.13.3"],"id":"GHSA-pwfw-mgfj-7g3g","link":"https://osv.dev/vulnerability/GHSA-pwfw-mgfj-7g3g","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-23342"],"details":"python-ecdsa has been found to be subject to a Minerva timing attack on the P-256 curve. Using the `ecdsa.SigningKey.sign_digest()` API function and timing signatures an attacker can leak the internal nonce which may allow for private key discovery. Both ECDSA signatures, key generation, and ECDH operations are affected. ECDSA signature verification is unaffected. The python-ecdsa project considers side channel attacks out of scope for the project and there is no planned fix.","fixed_in":[],"id":"GHSA-wj6h-64fc-37mp","link":"https://osv.dev/vulnerability/GHSA-wj6h-64fc-37mp","source":"osv","summary":null,"withdrawn":null}]},"0.8":{"info":{"author":"Brian Warner","author_email":"warner-pyecdsa@lothar.com","bugtrack_url":null,"classifiers":[],"description_content_type":null,"docs_url":null,"download_url":"UNKNOWN","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"http://github.com/warner/python-ecdsa","keywords":null,"license":"MIT","maintainer":null,"maintainer_email":null,"name":"ecdsa","package_url":"https://pypi.org/project/ecdsa/","platform":"UNKNOWN","project_url":"https://pypi.org/project/ecdsa/","project_urls":{"Download":"UNKNOWN","Homepage":"http://github.com/warner/python-ecdsa"},"provides_extra":null,"release_url":"https://pypi.org/project/ecdsa/0.8/","requires_dist":null,"requires_python":null,"summary":"ECDSA cryptographic signature library (pure python)","version":"0.8","yanked":false,"yanked_reason":null},"last_serial":22672179,"urls":[{"comment_text":"","digests":{"blake2b_256":"92deb4299eab4b538170c089c2b1c4e75c031b6c3d71c29540fe15861cd178e3","md5":"a3575705afb24d7cbc1694960d3965b1","sha256":"926dbc7f31f5e099079884e1ae8121d25c43b17f1db48d77c9540cd1e40acc1a"},"downloads":-1,"filename":"ecdsa-0.8.tar.gz","has_sig":false,"md5_digest":"a3575705afb24d7cbc1694960d3965b1","packagetype":"sdist","python_version":"source","requires_python":null,"size":35754,"upload_time":"2012-07-13T21:13:19","upload_time_iso_8601":"2012-07-13T21:13:19.133900Z","url":"https://files.pythonhosted.org/packages/92/de/b4299eab4b538170c089c2b1c4e75c031b6c3d71c29540fe15861cd178e3/ecdsa-0.8.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2019-14859","GHSA-8qxj-f9rh-9fg2"],"details":"A flaw was found in all python-ecdsa versions before 0.13.3, where it did not correctly verify whether signatures used DER encoding. Without this verification, a malformed signature could be accepted, making the signature malleable. Without proper verification, an attacker could use a malleable signature to create false transactions.","fixed_in":["0.13.3"],"id":"PYSEC-2020-163","link":"https://osv.dev/vulnerability/PYSEC-2020-163","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2019-14853","GHSA-2mrj-435v-c2cr","GHSA-pwfw-mgfj-7g3g"],"details":"An error-handling flaw was found in python-ecdsa before version 0.13.3. During signature decoding, malformed DER signatures could raise unexpected exceptions (or no exceptions at all), which could lead to a denial of service.","fixed_in":["0.13.3"],"id":"PYSEC-2019-177","link":"https://osv.dev/vulnerability/PYSEC-2019-177","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2019-14859"],"details":"A flaw was found in all python-ecdsa versions before 0.13.3, where it did not correctly verify whether signatures used DER encoding. Without this verification, a malformed signature could be accepted, making the signature malleable. Without proper verification, an attacker could use a malleable signature to create false transactions.","fixed_in":["0.13.3"],"id":"GHSA-8qxj-f9rh-9fg2","link":"https://osv.dev/vulnerability/GHSA-8qxj-f9rh-9fg2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2019-14853"],"details":"## possible DoS in signature verification and signature malleability \n\n### Impact\nCode using `VerifyingKey.verify()` and `VerifyingKey.verify_digest()` may receive exceptions other than the documented `BadSignatureError` when signatures are malformed. If those other exceptions are not caught, they may lead to program termination and thus Denial of Service\n\nCode using `VerifyingKey.verify()` and `VerifyingKey.verify_digest()` with `sigdecode` option using `ecdsa.util.sigdecode_der` will accept signatures even if they are not properly formatted DER. This makes the signatures malleable. It impacts only applications that later sign the signatures or verify signatures of signatures, e.g. Bitcoin.\n\nAll versions between 0.5 and 0.13.2 (inclusive) are thought to be vulnerable. Code before 0.5 may be vulnerable but didn't receive extended analysis to rule this issue out.\n\n### Patches\nThe patches have been merged to `master` branch in https://github.com/warner/python-ecdsa/pull/115.\nThe backported patches for a release in the 0.13 branch are in https://github.com/warner/python-ecdsa/pull/124\n\nThey are part of the 0.13.3 release.\n\nThere are no plans to backport them to earlier releases.\n\n### Workarounds\nIt may be possible to prevent the Denial of Service by catching also `UnexpectedDER`, `IndexError` and `AssertionError` exceptions. That list hasn't been verified to be complete though. If those exceptions are raised, the signature verification process should consider the signature to be invalid.\n\nTo remediate signature malleability and the Denial of Service vulnerability, it may be possible to first verify that the signature is properly DER formatted ECDSA-Sig-Value, as defined in [RFC3279](https://tools.ietf.org/html/rfc3279), before passing it to `verify()` or `verify_digest()` methods. If the signature is determined to not follow the DER or encode a different structure, the signature verification process should consider the signature to be invalid.\n\n### References\nhttps://en.bitcoinwiki.org/wiki/Transaction_Malleability\n\n### For more information\nIf you have any questions or comments about this advisory please open an issue in [python-ecdsa](https://github.com/warner/python-ecdsa/issues) project.\n","fixed_in":["0.13.3"],"id":"GHSA-pwfw-mgfj-7g3g","link":"https://osv.dev/vulnerability/GHSA-pwfw-mgfj-7g3g","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-23342"],"details":"python-ecdsa has been found to be subject to a Minerva timing attack on the P-256 curve. Using the `ecdsa.SigningKey.sign_digest()` API function and timing signatures an attacker can leak the internal nonce which may allow for private key discovery. Both ECDSA signatures, key generation, and ECDH operations are affected. ECDSA signature verification is unaffected. The python-ecdsa project considers side channel attacks out of scope for the project and there is no planned fix.","fixed_in":[],"id":"GHSA-wj6h-64fc-37mp","link":"https://osv.dev/vulnerability/GHSA-wj6h-64fc-37mp","source":"osv","summary":null,"withdrawn":null}]},"0.9":{"info":{"author":"Brian Warner","author_email":"warner-pyecdsa@lothar.com","bugtrack_url":null,"classifiers":[],"description_content_type":null,"docs_url":null,"download_url":"UNKNOWN","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"http://github.com/warner/python-ecdsa","keywords":null,"license":"MIT","maintainer":null,"maintainer_email":null,"name":"ecdsa","package_url":"https://pypi.org/project/ecdsa/","platform":"UNKNOWN","project_url":"https://pypi.org/project/ecdsa/","project_urls":{"Download":"UNKNOWN","Homepage":"http://github.com/warner/python-ecdsa"},"provides_extra":null,"release_url":"https://pypi.org/project/ecdsa/0.9/","requires_dist":null,"requires_python":null,"summary":"ECDSA cryptographic signature library (pure python)","version":"0.9","yanked":false,"yanked_reason":null},"last_serial":22672179,"urls":[{"comment_text":"","digests":{"blake2b_256":"8db54956a11caa082de8b1f54d4bf0bd7e90076154c1dba152db58f79f2b638c","md5":"2b9c35245ce391d6b7d8f991aad5c630","sha256":"3f283a4769220dc59587677d264c6687ecd0dc068d6ad792d891d53757735800"},"downloads":-1,"filename":"ecdsa-0.9.tar.gz","has_sig":false,"md5_digest":"2b9c35245ce391d6b7d8f991aad5c630","packagetype":"sdist","python_version":"source","requires_python":null,"size":45178,"upload_time":"2013-10-02T00:11:45","upload_time_iso_8601":"2013-10-02T00:11:45.804319Z","url":"https://files.pythonhosted.org/packages/8d/b5/4956a11caa082de8b1f54d4bf0bd7e90076154c1dba152db58f79f2b638c/ecdsa-0.9.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[{"aliases":["CVE-2019-14859","GHSA-8qxj-f9rh-9fg2"],"details":"A flaw was found in all python-ecdsa versions before 0.13.3, where it did not correctly verify whether signatures used DER encoding. Without this verification, a malformed signature could be accepted, making the signature malleable. Without proper verification, an attacker could use a malleable signature to create false transactions.","fixed_in":["0.13.3"],"id":"PYSEC-2020-163","link":"https://osv.dev/vulnerability/PYSEC-2020-163","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2019-14853","GHSA-2mrj-435v-c2cr","GHSA-pwfw-mgfj-7g3g"],"details":"An error-handling flaw was found in python-ecdsa before version 0.13.3. During signature decoding, malformed DER signatures could raise unexpected exceptions (or no exceptions at all), which could lead to a denial of service.","fixed_in":["0.13.3"],"id":"PYSEC-2019-177","link":"https://osv.dev/vulnerability/PYSEC-2019-177","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2019-14859"],"details":"A flaw was found in all python-ecdsa versions before 0.13.3, where it did not correctly verify whether signatures used DER encoding. Without this verification, a malformed signature could be accepted, making the signature malleable. Without proper verification, an attacker could use a malleable signature to create false transactions.","fixed_in":["0.13.3"],"id":"GHSA-8qxj-f9rh-9fg2","link":"https://osv.dev/vulnerability/GHSA-8qxj-f9rh-9fg2","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2019-14853"],"details":"## possible DoS in signature verification and signature malleability \n\n### Impact\nCode using `VerifyingKey.verify()` and `VerifyingKey.verify_digest()` may receive exceptions other than the documented `BadSignatureError` when signatures are malformed. If those other exceptions are not caught, they may lead to program termination and thus Denial of Service\n\nCode using `VerifyingKey.verify()` and `VerifyingKey.verify_digest()` with `sigdecode` option using `ecdsa.util.sigdecode_der` will accept signatures even if they are not properly formatted DER. This makes the signatures malleable. It impacts only applications that later sign the signatures or verify signatures of signatures, e.g. Bitcoin.\n\nAll versions between 0.5 and 0.13.2 (inclusive) are thought to be vulnerable. Code before 0.5 may be vulnerable but didn't receive extended analysis to rule this issue out.\n\n### Patches\nThe patches have been merged to `master` branch in https://github.com/warner/python-ecdsa/pull/115.\nThe backported patches for a release in the 0.13 branch are in https://github.com/warner/python-ecdsa/pull/124\n\nThey are part of the 0.13.3 release.\n\nThere are no plans to backport them to earlier releases.\n\n### Workarounds\nIt may be possible to prevent the Denial of Service by catching also `UnexpectedDER`, `IndexError` and `AssertionError` exceptions. That list hasn't been verified to be complete though. If those exceptions are raised, the signature verification process should consider the signature to be invalid.\n\nTo remediate signature malleability and the Denial of Service vulnerability, it may be possible to first verify that the signature is properly DER formatted ECDSA-Sig-Value, as defined in [RFC3279](https://tools.ietf.org/html/rfc3279), before passing it to `verify()` or `verify_digest()` methods. If the signature is determined to not follow the DER or encode a different structure, the signature verification process should consider the signature to be invalid.\n\n### References\nhttps://en.bitcoinwiki.org/wiki/Transaction_Malleability\n\n### For more information\nIf you have any questions or comments about this advisory please open an issue in [python-ecdsa](https://github.com/warner/python-ecdsa/issues) project.\n","fixed_in":["0.13.3"],"id":"GHSA-pwfw-mgfj-7g3g","link":"https://osv.dev/vulnerability/GHSA-pwfw-mgfj-7g3g","source":"osv","summary":null,"withdrawn":null},{"aliases":["CVE-2024-23342"],"details":"python-ecdsa has been found to be subject to a Minerva timing attack on the P-256 curve. Using the `ecdsa.SigningKey.sign_digest()` API function and timing signatures an attacker can leak the internal nonce which may allow for private key discovery. Both ECDSA signatures, key generation, and ECDH operations are affected. ECDSA signature verification is unaffected. The python-ecdsa project considers side channel attacks out of scope for the project and there is no planned fix.","fixed_in":[],"id":"GHSA-wj6h-64fc-37mp","link":"https://osv.dev/vulnerability/GHSA-wj6h-64fc-37mp","source":"osv","summary":null,"withdrawn":null}]}}